<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[1114 - 仪式感]]></title>
      <url>https://atjason.com/daily/2018-11-14.html</url>
      <content type="html"><![CDATA[<p>最近几天，接连把自己的 App 升级了一遍；今天，更是提交了 3 款 App…</p>
<p>等正式下架并做简单运营推广后，正式切换到另一个项目中。</p>
<p>不只是做事，需要一点仪式感，需要在不同事情间有明确的切割、转换，这样能更好地投入到新的事中。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1113 - 有的聊]]></title>
      <url>https://atjason.com/daily/2018-11-13.html</url>
      <content type="html"><![CDATA[<p>跟别人聊天，是越聊越起劲，还是把天聊天？</p>
<p>除了说话及倾听技巧，很重要的，是自己有没有可以说的东西。</p>
<p>如果总是觉得很干瘪、除了自己的工作就没什么可说的，说明自己的生活真的太无趣了。</p>
<p>把生活过的，有的聊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1112 - 为爱否打 Call]]></title>
      <url>https://atjason.com/daily/2018-11-12.html</url>
      <content type="html"><![CDATA[<p>今天看了爱否的发布会。一家评测机构，发布了评测软件，和养活自己的配件：无线充电底座。我很喜欢看他们的视频，所以最近的配件都是从他们商城买的，也算是一点支持。</p>
<p>能做自己认可的事，且能同时养活自己，这是多么幸运、多么艰难的事。即使我做不到，也愿成人之美。</p>
<p>如果你对手机、对数字生活感兴趣，如果你需要手机周边配件，如果你需要买卖二手电子产品，建议你了解下「<a href="http://www.aifou.cn" target="_blank" rel="external">爱否科技</a>」</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1111 - 适应变化]]></title>
      <url>https://atjason.com/daily/2018-11-11.html</url>
      <content type="html"><![CDATA[<p>这两天，突然家人有件紧急的事，我必须花大量时间来处理，完全打乱了自己原来的节奏。</p>
<p>遇到变化时，首先在判断，这事有多紧急、多重要，是否必须要做、能否延迟，是否要中断原来的计划。如果中断，那么这件事做到什么程度即可降低优先级，恢复中断前的计划，等等。</p>
<p>像程序调度一样，中断是不可避免的，所以必须要能够适应做事时被打断。但要有就对中断的步骤，而且心态要调整好。重要的是把事做完，做出成果。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1110 - 注释释放自己的情绪]]></title>
      <url>https://atjason.com/daily/2018-11-10.html</url>
      <content type="html"><![CDATA[<p>人总是会积压各种负面情绪，这些情绪总是需要释放的。</p>
<p>要有适合自己释放情绪的方式，不然会郁结。</p>
<p>要注意自己释放情绪的方式，尤其不能影响甚至伤害身边的人。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1109 - 人，真的很难跨越自己的阶层]]></title>
      <url>https://atjason.com/daily/2018-11-09.html</url>
      <content type="html"><![CDATA[<p>如果只是常规方式，即使非常努力，绝大多数人，不可能跨越自己所属阶层。最多是在自己阶层的前面或后面，稍稍调整下位置。</p>
<p>不同阶层的人，在竞争时，根本就不在一个赛道。即使在一个赛道，对手也可能早就抢跑、或者卡位了。当你努力追上对手原来的位置，对手可能早就不见踪迹。或者，对方用胳膊肘卡位，你根本就过不去。</p>
<p>随手举个例子，别人在几年前买了套房，你现在要数倍于别人的价格买相同的房，这根本就不是公平的竞争。你背上的沉重的包袱，而别人已经在用钱生钱。</p>
<p>要想跨越阶层，比努力更重要的，是极罕见的机遇，是放手一搏的勇气，是用尽一生的运气，是反人性的牺牲。</p>
<p>且不说自己的无数牵牵绊绊、各种包袱。虽前行已不易，何谈跨越。</p>
<p>虽悲观，但乐观能改变自己，却难撼动现实。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Klib 新版：全新黑色主题，阅读器体验更佳]]></title>
      <url>https://atjason.com/daily/2018-11-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/jxi12.png" alt=""></p>
<p><strong>Klib</strong> 是一款 <strong>读书笔记管理工具</strong>，目前已支持 <strong>Kindle</strong>、<strong>Apple Books</strong>、<strong>多看</strong>。</p>
<p>最近发布的新版 Klib，支持 Mojave 黑色模式，回顾笔记更加酷炫。</p>
<p><img src="http://p.toolinbox.net/2k9v9.png" alt=""></p>
<p>特别是优化后的 <strong>阅读器模式</strong>，可以更沉浸地阅读笔记。</p>
<p><img src="http://p.toolinbox.net/7eg6r.png" alt=""></p>
<p>咦？感觉我的 Klib 和你的不一样？简单：</p>
<ul>
<li>按下 <code>⇧⌘S</code> 即可隐藏书籍</li>
<li>按下 <code>⌘R</code> 即可切换为阅读器模式</li>
</ul>
<p>对 Klib 新版感兴趣？欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">了解更多</a></li>
<li><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12" target="_blank" rel="external">去 Mac App Store 下载 Klib</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1107 - 无感的 iPhone XS]]></title>
      <url>https://atjason.com/daily/2018-11-07.html</url>
      <content type="html"><![CDATA[<p>今天换了新手机：iPhone XS</p>
<p>即使是从 iPhone 6 跳跃到 iPhone XS，我还是几乎没有新鲜感。也许是通过 iTunes 备份还原手机数据的过程太顺滑了，新手机的 App 及内容跟之前几乎一样。</p>
<p>当然，可能因为我是从业者，对 iPhone 历代都比较了解。</p>
<p>也或许，这就是苹果的目标：可以让用户很容易地上手，而不是把过多的时间放在研究手机本身。</p>
<p>可，终究，这大几千块的手机，包括我在内的人们，自然对它是有高期望值的。这样的一个无感的结果，很可能就是内心的失落。</p>
<p>当一款新潮科技产品，变为大众化的家电，或许可以带来销量和利润上的最大化，可终究 <strong>丧失了引领时代的气势</strong>，沦为赚钱的平庸工具。</p>
<p>一声哀叹。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1106 - iText 新版：支持 Mojave 黑色模式]]></title>
      <url>https://atjason.com/daily/2018-11-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/m6ewo.png" alt=""></p>
<p>iText 新版：</p>
<ul>
<li>支持黑色模式</li>
<li>可自动隐藏识别结果</li>
</ul>
<h2 id="关于自动隐藏识别结果"><a href="#关于自动隐藏识别结果" class="headerlink" title="关于自动隐藏识别结果"></a>关于自动隐藏识别结果</h2><p>由于 iText 的识别结果已经非常准确，且已经复制到剪贴板，因此识别后并不需要编辑或复制文本。此时，你可以如上图所示，开启「自动隐藏」选项，识别结果窗口将会在 3s 后自动隐藏，非常方便。</p>
<p>并且，如果临时需要编辑某次识别结果，只要将鼠标移至结果窗口，则会暂时忽略自动隐藏功能。另外，开启「总在最前」选项后，窗口将不会自动隐藏。</p>
<ul>
<li><a href="https://toolinbox.net/iText" target="_blank" rel="external">了解 iText</a></li>
<li><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12" target="_blank" rel="external">立即下载或更新 iText</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1105 - 单元测试真是好东西]]></title>
      <url>https://atjason.com/daily/2018-11-05.html</url>
      <content type="html"><![CDATA[<p>这两天在出 Klib 新版，其中改了一个较底层的数据结构。如果要详细地测试 Klib，至少要跑完 700 条测试用例。放在我目前的心态和时间，绝对要疯。</p>
<p>幸好当时写了充分的单元测试，跑一把，修复暴露的问题，基本我就有信心发布了。</p>
<p>单元测试真是好东西，可以自下而上保证每个模块的正确性。再加上其它的测试手段，基本就可以保证程序的可靠性。</p>
<p>可能很多人觉得写测试很烦。其实，在开发新功能时，写测试用例和单元测试，也是分析、完善思路的过程；可以从不同维度思考问题，避免遗漏。即使是花了些时间，也好过花很长时间调试问题，或者做重复的人工测试。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1104 - 针对结果教育，无意义]]></title>
      <url>https://atjason.com/daily/2018-11-04.html</url>
      <content type="html"><![CDATA[<p>当小孩已经形成并发生不好的行为，当场教育、批评甚至打骂，其实收效甚微。</p>
<p>批评结果没有用，而是要知道他为什么这么做，这样的做法是从哪里学来的，他是情绪失控时的发泄、还是有意识地做坏事。多向前面想一想，才知道为什么，才知道怎么教育比较好。</p>
<p>打骂，只是发泄了自己当时的情绪，对教育无用。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1103 - 为家人，不纠结]]></title>
      <url>https://atjason.com/daily/2018-11-03.html</url>
      <content type="html"><![CDATA[<p>为家人做选择时，在能力范围内，选择最好的。</p>
<p>不然，各种努力，又为了啥呢？把钱花在这个地方，不是最有价值的吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1102 - 做事，选择简单还是难？]]></title>
      <url>https://atjason.com/daily/2018-11-02.html</url>
      <content type="html"><![CDATA[<p>Klib 中有个「分享」功能，就是把自己某本书的标注分享成网页，比如 <a href="http://s.klib.me/7Z9gj9.html" target="_blank" rel="external">这篇</a></p>
<p>从开发的角度，这个功能很复杂，有单独维护一个服务器，接收来自 Klib 的分享、取消分享、更新分享内容、权限管理，还要考虑 CDN 分发、分发内容的及时更新，等等。</p>
<p>截止目前，从性价比来看，这个功能并不高。收益一般，维护成本很高；只要有 1 位用户在使用，就要保持这个服务 100% 在线。时间长了，当对服务端的代码不熟悉时，一旦有问题，就要花很多时间来修复。</p>
<p>当初，自己是为了学习 Python 后端开发，并尝试下分享，才上的这个功能。从学习的角度，这是好的。而从产品的角度，则很难说。</p>
<p>不过，反过来，如果总是做很简单的功能，且不说长期对自己的成长不利，即便从产品、从商业角度，也缺乏必要的护城河，很容易「被致敬」。而如果分享功能正巧很多人在用、带来很多收益，这个相对复杂的功能，就一定程度充当护城河，不那么容易被抄袭。</p>
<p><strong>初期，可以「取巧」，用最小的代价，换取最大的收益。<br>而随着自己的成长，需要考虑壁垒，需要「守正」；用不断提高的门槛，保护自己的领地。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1101 - 给自己挖了个大坑]]></title>
      <url>https://atjason.com/daily/2018-11-01.html</url>
      <content type="html"><![CDATA[<p>本来，今天挺好的：新版 iText 审核通过，Klib 的暗色模式也实现完毕。可，无意间发现之前填下的一个大坑，心情顿时跌入谷底。</p>
<p>之前的代码中，用哈希值作为 key 值…</p>
<p>哎，我怎么会写出这样的代码…</p>
<p>哈希，主要是确定不同，而不是确定唯一性。换句话说，哈希主要是为了毕竟 2 个值是否不同（当然，极低概率下，哈希相同的 2 个值，可能也是不同的）；而同一个原始值的哈希值，是很有可能变动的。比如，操作系统升级、Swift 运行环境升级等等因素，都有可能让基于 Swift 编写的哈希值变更。</p>
<p>主要的麻烦是，产品已经发出去了。要升级，必须保证已有用户的已有数据不受影响，这个挑战是非常大的。还好当时自己在数据库中冗余保留了原始数据，还有机会根据原始数据重新生成有唯一性的值，比如 MD5 值。</p>
<p>哎，再骂一次当年的自己，怎么那么年轻…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1031 - 苹果什么时候开新产品线呢？]]></title>
      <url>https://atjason.com/daily/2018-10-31.html</url>
      <content type="html"><![CDATA[<p>昨晚，苹果更新了几乎除 iPhone 之外的产品线。</p>
<p>外界质疑苹果创新乏力，苹果用 Amazing 否认；<br>外界批评苹果赚取暴力，苹果笑而不语。</p>
<p>恩，公司是你的，你确实可以为所欲为。</p>
<p>可是，苹果什么时候开新产品线呢？</p>
<p>1995 年，乔布斯在接受采访时曾说：“毁灭苹果的不是增长，而是他们变得非常贪婪。”</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1030 - 坚决收窄技术面]]></title>
      <url>https://atjason.com/daily/2018-10-30.html</url>
      <content type="html"><![CDATA[<p>搞了很久的 js/node 开发后，现在开始更新基于 Swift 的项目，感觉很吃力；尤其 Swift 版本间差别很大。</p>
<p>很不喜欢这样的感觉。坚决收窄技术面，目前暂定为基于 js/node 的后端，并稍微涵盖前端。</p>
<p>最重要的是解决问题的能力。而解决问题，需要趁手的工具。工具无论好坏，重要的是趁手、效率高，拿起来就能干活，而不是边干活、边搜索工具怎么用，这太 Low 了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1029 - 拒绝舒适]]></title>
      <url>https://atjason.com/daily/2018-10-29.html</url>
      <content type="html"><![CDATA[<p>将来的一段时间，不能让自己舒适。</p>
<p>如果感觉舒服，拉响警报。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1028 - 生病真不爽]]></title>
      <url>https://atjason.com/daily/2018-10-28.html</url>
      <content type="html"><![CDATA[<p>生病时，我最想要 2 种东西：</p>
<ul>
<li>麻醉剂，瞬间睡觉，啥也不管；</li>
<li>兴奋剂，瞬间活力，啥也不怕。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1027 - 不适应被伺候]]></title>
      <url>https://atjason.com/daily/2018-10-27.html</url>
      <content type="html"><![CDATA[<p>家里要请位钟点工，做点打扫卫生之类的事。</p>
<p>说实话，有个人在家里干这些事，我还真是不习惯。不是富贵命，还真没体验过这些。</p>
<p>不过，也是没办法，至少这样可以释放家人和我的一些时间，可以做更多我想做、和能赚钱的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1026 - 许久没碰的代码，生疏了]]></title>
      <url>https://atjason.com/daily/2018-10-26.html</url>
      <content type="html"><![CDATA[<p>这几天开始准备升级 iText；许久未碰，自己一行行写的代码，现在竟看起来有些生疏了。</p>
<p>最好的，还是在一个坑里一直挖。若是像现在这种打一枪换一个地方，切换成本也太高了些。</p>
<p>先挑些简单的活干，找找感觉；然后再啃硬骨头。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1025 - 未到极致]]></title>
      <url>https://atjason.com/daily/2018-10-25.html</url>
      <content type="html"><![CDATA[<p>由于家里的事，现在的时间很零碎，也很少能学习或做的事情不多，感觉很难受。</p>
<p>不过，不也正是时间零碎也少，才更应该专注、高效？</p>
<p>专注，核心就是放弃。放弃不应该做的、可做可不做的；只剩下必须要做的、不做会死人的事。</p>
<p>高效，就是利用一切可利用的时间、精力。比如，在抱娃睡觉时，就想问题的解决方案。把娃放下后，奔向电脑实现之。</p>
<p>今天对于昨天的改变：</p>
<ul>
<li>61 新做的「<a href="https://sharecuts.cn/" target="_blank" rel="external">捷径社区</a>」基于 Vue/Nuxt/Egg.js 实现，而这个技术栈正好是我想学的。恩，有了样板，学起来更有方向了。</li>
<li>继续看吴军的《见识》、薛兆丰的《经济学讲义》</li>
<li>开始计划升级 iText 等 App</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1024 - 被结果绑架]]></title>
      <url>https://atjason.com/daily/2018-10-24.html</url>
      <content type="html"><![CDATA[<p>如果结果好，自己就开心；<br>如果结果不好，就开始感觉颓废。</p>
<p>感觉自己现在已经被结果绑架了。</p>
<p>尤其，这段时间一直在用存量 + 时间的打算，企图见效。不幸的是，貌似运气不佳，并没有堆出漂亮的结果。而自己本身又没太大的进步，就感觉很亏了。毕竟，要么赚钱要么爽，现在是两样都没有。</p>
<p>是时候做出改变了。</p>
<ul>
<li>放一放手上正在做的事；或者说，不过度受其结果影响；</li>
<li>开始积累，注重个人进步<ul>
<li>简单的说，是两方面：思考、代码。</li>
<li>思考，主要是多接触、理解不同的可能性，这样才有可能先出最适合自己的路。</li>
<li>代码，更多是指要有足够的能力和执行力。不然，然后见了金山也搬不走</li>
</ul>
</li>
</ul>
<p><strong>不问前程、不论成败，只管今天的自己和昨天比，有什么改变、有哪些进步</strong>。</p>
<p>机会，总是有的。随着自己的进步，自己想要的东西，也会随之而来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1023 - 恰当利用劣势]]></title>
      <url>https://atjason.com/daily/2018-10-23.html</url>
      <content type="html"><![CDATA[<p>聋哑，对人来说是劣势吧？</p>
<p>今天我去理发，理发师是聋哑人士。我感觉很好，因为他全程安静。你要知道，理发时被推销，是很讨厌的事。而且，因为安静，我会感觉他在很认真地理发，让我感觉很舒服。</p>
<p>利用好劣势，就是优势。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1022 - 需要效果来验证]]></title>
      <url>https://atjason.com/daily/2018-10-22.html</url>
      <content type="html"><![CDATA[<p>最近的思路和做法是对的，无奈总是没有好的结果，没有正向激励，难受。</p>
<p>暂时不准备调整思路，也不去想大方向的事，忽略长期压力，就是埋头苦干。期待能有好的结果；或者撞上南墙。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1021 - 纠结面前，只有放弃]]></title>
      <url>https://atjason.com/daily/2018-10-21.html</url>
      <content type="html"><![CDATA[<p>真正的纠结面前，我们能做的，其实并不是选择，而是放弃。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1020 - 进展来自小确定]]></title>
      <url>https://atjason.com/daily/2018-10-20.html</url>
      <content type="html"><![CDATA[<p>项目的进展，除了关键节点，更多的时间，来自一点点具体事情的完成。</p>
<p>顶层设计 &amp; 底层驱动，在实际项目中是穿插进行的。</p>
<p>当想法比较多时，就多想，想各种可能性，想各种实现方案；<br>当想法比较匮乏、状态一般时，就多干。而这前提是，要能把一件件可执行的事列出来。</p>
<p>对自己来说，有个可实施的方案，就是「链式工作」：<strong>每做完一件事，在休息之前，先列出下一步可以做的事</strong>。虽然，经过休息后，真正撸起袖子干的不一定是这件事，但至少这样可以保持思路的连续性。特别是两步的碎片时间多，如果在不同碎片时间之前顺畅地切换，是避免低效的关键；换句话说，一有时间，哪怕只是碎片，也能知道自己该做什么。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1019 - 适时放纵自己的兴趣]]></title>
      <url>https://atjason.com/daily/2018-10-19.html</url>
      <content type="html"><![CDATA[<p>有时候，自己最想做的事，并不是当时最应该做的事。怎么办？</p>
<p>大多时候，我们还是应该选择最应该做的事。不过，这样也未免显得冷血了些。</p>
<p>如果无伤大雅，不如放纵自己的兴趣，享受地做自己喜欢的事。这样，虽牺牲了当时的收益，但换来了自己的好状态、好心情，长远来看收益可能更高。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1018 - 不在疲惫时写代码]]></title>
      <url>https://atjason.com/daily/2018-10-18.html</url>
      <content type="html"><![CDATA[<p>写代码，既是完成功能，也是学习、熟练的过程。</p>
<p>疲惫时，既可能写出有 Bug 的代码，也几乎学不到什么东西。</p>
<p>如果不是泰山压顶，只在高效时干活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1017 - 与机器相伴相生]]></title>
      <url>https://atjason.com/daily/2018-10-17.html</url>
      <content type="html"><![CDATA[<p>这里说的机器，也可以理解为 AI、人工智能、软件、工具。</p>
<p>我制作机器，机器替我赚钱；<br>赚到钱后，我就有更多时间、精力来改进机器；<br>进而，机器可以赚更多钱。</p>
<p>如果跨过某个临界点，我就可以和机器相伴相生。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1016 - 约定大于配置]]></title>
      <url>https://atjason.com/daily/2018-10-16.html</url>
      <content type="html"><![CDATA[<p>比如，在团队里，大家共同约定，什么文档放在哪个文件夹中。这样，大家就可以形成统一的认识，直接去那个文件夹中寻找，而不是先看配置文件、或者问别人。</p>
<p>比如，在代码里，大家共同约定，用什么文件组织形式来管理源文件。这样，就不会出现每个人都各自创建一套规则，避免不必要的协作损耗。</p>
<p>比如，如果大家共同认识一个列表仅需要降序排列，就不需要增加切换排序的入口，也不需要记录上次排序是什么顺序。既简化了交互，也精简了配置项。</p>
<p><strong>约定大于配置</strong>，本质上在于：<strong>用最优解，取代不必要的多样性</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1015 - 积累与收获]]></title>
      <url>https://atjason.com/daily/2018-10-15.html</url>
      <content type="html"><![CDATA[<p>积累与收获，时间不同、心态也不同。</p>
<p>积累，过程长，且缺少结果激励，很容易耐不住性子，也会对正在做的事心生怀疑。</p>
<p>收获，很刺激。要把握时机，扩大战果。但也要避免花过多时间忙着摘果子；要知道，现在的果子，是之前积累的结果。拼命地摘，只能竭泽而渔。应适可而止，转向积累的过程。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1014 - 谨慎说话]]></title>
      <url>https://atjason.com/daily/2018-10-14.html</url>
      <content type="html"><![CDATA[<p>年纪越大，越觉得要谨慎说话。</p>
<p>话说，通常是在表达观点，尤其可能是对人的指点。而要说的对，前提是自己确实认识清楚，观点是对的。做到这一点，太难了。</p>
<p>世事那么复杂，岂是自己惊鸿一瞥就能洞悉的。自己看到的那一面，可能只是事情很不真眼的一面。且，事情、人又都是在变化中的。随便下的结论，要对，太难。</p>
<p>少言多行。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1013 - 不要停留在过去的美好]]></title>
      <url>https://atjason.com/daily/2018-10-13.html</url>
      <content type="html"><![CDATA[<p>娃周岁的时候，没有去照相馆照相，为此妈唠叨了好多次。我想了想，这里面还是有些可以说道的东西。</p>
<ul>
<li>老人生活的那个年代，照相都是很少见的。在重要的日子里照相，几乎是自然而然外加必然的事。结果，轮到自己孙辈的周岁，竟然不照相，简直难以理解。<ul>
<li>事实上，现在大家都习惯用手机拍照、每天拍很多张。</li>
</ul>
</li>
<li>老人觉得照片可以保存得久，而手机丢了，就什么都没有了。<ul>
<li>是，手机可能会丢，但如果保存至 Google Photos 等云上，丢的概率就小很多（姑且这么认为吧），外加有硬盘之类的备份，其实不用担心。</li>
</ul>
</li>
<li>还有一些细节的原因，比如我觉得照相馆照相麻烦，照片显得假，等等。</li>
</ul>
<p>其实，对我来说，更深层次的原因是：<strong>既然娃每天都鲜活地在身边，为什么要花时间去看过去照片呢？</strong>想象这样的场景：娃在身边玩耍，自己却捧着他周岁时的照片看，不觉得很奇怪吗？买椟还珠的感觉。</p>
<p>再往下说，是，过去可能很美好，可未来可能更美好。<strong>相同的时间，与其沉浸在过去，不如享受当下、或者追求未来的美好。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1012 - 奇怪的量子效应]]></title>
      <url>https://atjason.com/daily/2018-10-12.html</url>
      <content type="html"><![CDATA[<p>今天拿到一台电脑，登录时密码提示为「3-2」，我试了好一会，什么 123/321/222；最后，才试出来密码是：1</p>
<p>一旦知道了密码，是不是觉得很直接、很简单？对。但，在知道密码之前，或者说在知道确定解之前，有无数可能。思维，就在这无数可能间跳跃。突然，灵光一闪，想到某种可能。一试，果然正确。</p>
<p>这种感觉，让我想到量子效应。比如说电子，一个原子中的某个电子，是以光速在运动的。且，并不是在一个圆、或者球的轨迹中运动，而像一团缭绕的云。换句话说，<strong>电子可能出现在云中任何地方</strong>。那么，到底在云中的哪个地方呢？不确定，有万千可能。</p>
<p>可，<strong>一旦你通过某种方式观察到了它，电子就一下子从万千可能中，坍缩到某一个具体的点</strong>。</p>
<p>知道之前，万千可能；<br>知道之后，结果确定。</p>
<p><strong>你觉得你知道了？你可能只是扼杀了万千可能</strong>。薛定谔的猫，是被你杀死的。</p>
<p>习得，就是有这个性质。你觉得你学到了 1+1=2，可能你只是扼杀了 2 之外的所有可能。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1011 - 活着，就有机会]]></title>
      <url>https://atjason.com/daily/2018-10-11.html</url>
      <content type="html"><![CDATA[<p>错过一个机会，感觉再也没有这么好的机会了，捶胸顿足？<br>失败了，灰心丧气了，觉得再有没有翻身的机会了？</p>
<p>其实，投资、或者获得幸福的生活、或者任何事，最重要的是什么？<strong>不要早死</strong>。</p>
<p>只要不下牌桌，就有机会。<br>只要坚持，就有机会。<br>只要活着，就有机会。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1010 - 不要总在原地打转]]></title>
      <url>https://atjason.com/daily/2018-10-10.html</url>
      <content type="html"><![CDATA[<p>你现在纠结的问题，是否昨天也纠结过？如果是，既然今天还在纠结，昨天不是白纠结了？所花的时间和心力也都浪费了。</p>
<p>我们总是低估了纠结的成本。比如，你纠结买 A 还是买 B、是否「斥巨资」换最新款 iPhone，甚至，你纠结的机会成本，都够 2 个都买了。如果不纠结，释放的时间，够你做一些事。举个夸张的例子：这点时间，你可以买个彩票并中大奖。</p>
<p>如果想不通、或者已经想过了，那么，要么扔掉不要再想了，要么随便选个、撸起袖子就是干。人生苦短，莫纠结，不要总在原地打转。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1009 - 高效时干活、低效时积累]]></title>
      <url>https://atjason.com/daily/2018-10-09.html</url>
      <content type="html"><![CDATA[<p>如果你在币圈，估计听过这句话：<strong>牛市赚钱、熊市赚币</strong>。</p>
<p>对应到我想说的，就是：<strong>高效时干活、低效时积累</strong>。</p>
<p>人的状态有起伏。</p>
<ul>
<li>状态好时，埋头苦干，多出成果。</li>
<li>状态不好时，就磨刀霍霍，为之后状态好时做准备。</li>
</ul>
<p>比如，我今天就干些杂事：</p>
<ul>
<li>隐藏 macOS 菜单栏，最大化利用屏幕（我是 13 寸的）</li>
<li>使用 Box 同步 macOS &amp; iOS 端的 OmniFocus，速度飞起</li>
<li>使用 Manico，快速切换程序</li>
<li>研究 Anki 记录在看英文文章时的单词，并尝试建立背单词习惯</li>
<li>联系 Apple 更换电脑屏幕（涂层脱落）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1008 - 拥有核心技能]]></title>
      <url>https://atjason.com/daily/2018-10-08.html</url>
      <content type="html"><![CDATA[<p>你最擅长的是什么？<br>你真的擅长吗？</p>
<p>如果你能顺利地回答这 2 个问题、而不觉得尴尬，恭喜你。<br>如果不能，不妨停下来思考下；以及，怎么做才能顺利地回答这 2 个问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1007 - 干时不想，想时不干]]></title>
      <url>https://atjason.com/daily/2018-10-07.html</url>
      <content type="html"><![CDATA[<p>如果已经开始做了，就不要再去想这件事值不值得做、应不应该这样做，干了再说；不然，秀才造反，三年不成。</p>
<p>如果当前正在思考，就不要花太多时间做具体的事情。这样会打断思路，可以先记下来，具体执行时再操作。</p>
<p>思考和执行，很多时候思考的方式并不相同，甚至是相反的，不要互相影响了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1006 - 占便宜 PK 不给别人添麻烦]]></title>
      <url>https://atjason.com/daily/2018-10-06.html</url>
      <content type="html"><![CDATA[<p>我的 MacBook Pro 屏幕涂层脱落，可以在 4 年内免费更换屏幕。正巧之前在朋友圈里看到，MacBook Pro 可以在 3 年内免费更换一次电池（且当是真的吧），于是在去苹果授权店修电脑时，很自然地想：如果真的免费，就让苹果换电池吧。</p>
<p>其实，这只是贪便宜的心理。实际上，电脑的电池可能性能不如之前，可并没有给我带来什么困扰或麻烦，大可不必更换。而如果更换，则实实在在是给别人带来了麻烦。甚至，如果苹果不能 100% 回收电池的材料，这还会破坏环境。</p>
<p><strong>不给别人添麻烦，是种美德；这样的人，会有好运气的。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1005 - 要有主心骨]]></title>
      <url>https://atjason.com/daily/2018-10-05.html</url>
      <content type="html"><![CDATA[<p>当我有一件对自己很重要、自己又很有兴趣的事情做时，整个人会很精神，效率会很高。且，除了工作，也能很敏感地察觉到生活的方方面面（虽然不一定有时间真的去照顾）</p>
<p>而如果这样的事做完了，手上没有很急迫的事做时，整个人会变得涣散。甚至，平常生活中自己注意到、但没时间做的事，在真的有时间时，也会遗忘、或者并不想去做。</p>
<p>对我而言，被一件事牵着，会让整个人变得好一些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1004 - 好像我还是不适合在手机上看书]]></title>
      <url>https://atjason.com/daily/2018-10-04.html</url>
      <content type="html"><![CDATA[<p>最近微信读书搞活动，送了几天无限读书卡，我就试着在手机上看书。不想，2 星期都没看完一本书…</p>
<p>在手机上看书，缺点比较明显：</p>
<ul>
<li>手机屏幕上，一次看的内容少，需要频繁翻页，会影响思维的连续性。</li>
<li>手机给人的心理暗示就是个零碎的东西，很难保持长时间的专注，很容易看着看着思维就跳出来了。</li>
<li>缺少仪式感。比如翻开纸质书，气场就切换到读书的状态了，比较容易沉浸其中。而手机则不同，很难跟「玩手机」区分开来。</li>
</ul>
<p>当然，上面说的听起来比较矫情，但读书有时候差的就是那点 feeling…</p>
<p>自然，手机上看书也是有好处的，最大的自然是可以随时读，不用携带额外的设备。读书社交这种东西，我是不感冒的。读书是私人的事，并不想跟别人掺和在一起。让别人知道我在读什么书、在哪做了标注，就像是给别人看我穿了什么衣服、内裤是什么颜色一样。</p>
<p>实际经验来看，还是纸质书看的最快、效果最好，比较适合好书、需要精读的书。一般的，目前还是用 Kindle PaperWhite 吧。如果苹果出了 iPad mini 全面屏版，可以考虑入个用来看书。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1003 - 知道自己不喜欢什么]]></title>
      <url>https://atjason.com/daily/2018-10-03.html</url>
      <content type="html"><![CDATA[<p>最近跟朋友在讨论，要不要搞儿童编程教育。</p>
<p>从「事业」「赚钱」的角度，我觉得这是个好方向。刚起步，又过了草莽时代，不太需要和家长介绍基础概念，又还没到红海竞争的时期。再加上 AI、人工智能这样概念做背景，使得这个领域处于起步及上升期。</p>
<p>不过，对我我个人而言，这事除了赚钱，没别的吸引我的地方。主要有几点：</p>
<ul>
<li><strong>时间可复制性差</strong>。比如 1 对 1 教学，就相当于时间只复制了一份。而如果开发出一款 App，则可以给无数人用、复制无数份。</li>
<li><strong>时间灵活性差</strong>。比如到了给学员上课时间，我就必须去上课。而如果是自由职业，则可以自由支配时间，在自己效率最高的时候干活，临时有事就不干活。</li>
<li><strong>缺少成就感</strong>。教书育人貌似并不能给我带来成就感，我好像更喜欢创造出世上本没有的东西。</li>
</ul>
<p>恩，通过分析自己不喜欢的东西，会发现、明确自己喜欢的东西：<strong>感觉需求、思考解决方案、促成产品；创造出世上本没有的东西。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1002 - 面向需求学习]]></title>
      <url>https://atjason.com/daily/2018-10-02.html</url>
      <content type="html"><![CDATA[<p>最近明显感觉，单纯为了学习而学习，很容易失去兴趣，效率也不高。</p>
<p>而如果事先已经有了需求，是为了解决问题而去学习的，效果就会好很多。</p>
<p>啥？没问题、没需求？这就是另外的问题了…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1001 - 忍住迫不及待]]></title>
      <url>https://atjason.com/daily/2018-10-01.html</url>
      <content type="html"><![CDATA[<p>当迫不及待要做某事，感觉像是天上掉馅饼、再不捡就要被别人捡走时，做还是要做这件事，但还是要反过来想想，这会不会是陷阱呢？或者，就算真的是好事、好的方案，又可能会有哪些坑、或者有潜在的成本或损失？</p>
<p>因为，通常没有绝对的有利方案、放在地方等着被捡的钱，我们在特别兴奋、迫不及待要做某事时，通常是只看到了事情好的一面，并且夸大之；这也抑制了自己去注意事情必然存在的不好的一面。就像是，买彩票时，只想着如果中了 500 万要怎么花，却没有去想很可能这钱是打一水漂。</p>
<p>还是概率。我们所有的努力，只是让事情成功的概率大一些。别想着 100% 能成事的；要有这样的心态：能把成功概率提高到 51%，就是很不错的了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0930 - 学会风险控制]]></title>
      <url>https://atjason.com/daily/2018-09-30.html</url>
      <content type="html"><![CDATA[<p>实质上，是学会使用概率、博弈。</p>
<p>比如，对于程序员这个职业，人身意外险还是必须的（君不见动不动就是同行猝死的新闻，别觉得离自己很远）；花一点小钱，可以在小概率意外发生时，不至于让身边人的生活陷入困境。</p>
<p>另外，对冲也是控制风险的一种方式。要了解对冲，最好去了解下期货的由来。比如，</p>
<ul>
<li>你确定人民币对美元会贬值，想办法抢先把<strong>全部</strong>人民币资产换成美元，这叫投资。<ul>
<li>如果一切都是确定的，就没有风险，而全是机会。</li>
</ul>
</li>
<li>你不确定人民币对美元是涨还是跌，但又不想手上的人民币贬值，就把一部分（比如一半）人民币换成美元，这叫对冲。<ul>
<li>比如人民币跌了，你可以把之前美元换回更多的人民币，弥补人民币贬值带来的损失。</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0929 - 不能失去主动权]]></title>
      <url>https://atjason.com/daily/2018-09-29.html</url>
      <content type="html"><![CDATA[<p>但凡有机会，想办法增加自己做事的主动权。哪怕只有一点点，也能让自己在做事时多一些弹性，也多一份主动性（而不是觉得是在给别人做事）。</p>
<p>就算是输，也是自己主动要输；或者说，自己做事前已经预见到在某些情况下会输，不巧这样的情况发生了。总之，不能是稀里糊涂、毫无准备的输。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0928 - 赌成长，不赌运气]]></title>
      <url>https://atjason.com/daily/2018-09-28.html</url>
      <content type="html"><![CDATA[<p>能让自己不断成长的东西，才是真材实料的东西。</p>
<p>运气、投机、赌这样的东西，或许会有一时之利，但终难长久。又或者说，回报风险比太低。</p>
<p>相反，成长这种东西，通常在前期时进展很慢，甚至有投入无回报。但通常过了一定的临界点，就可以指数上扬，回报可观。或者没有赌博收益来得大，但毕竟稳定可期。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0927 - 做了个查询公交实时到站信息的小工具]]></title>
      <url>https://atjason.com/daily/2018-09-27.html</url>
      <content type="html"><![CDATA[<p>今天又用 JSBox 创建了个小工具：查询公交到站情况。比如，出门前，看一眼就知道所有能到家的公交车，离这个站还有多远。如果比较远，就再呆一会再出门。</p>
<p>做这个工具，其实最麻烦的在于数据源。也即，到哪去找实时公交查询。关于这一点，各个城市并不相同。不过，基本上都没有公开数据。我这次有点不好意思地抓了另一个程序的数据。</p>
<p>果然，数据才是最重要的；其次，就是 <strong>使用数据的能力</strong>。其中之一，就是 <strong>编程的能力</strong>。像我今天做的这个工具，你在市面上是不可能找到的。如果是要定制，找到有能力、又愿意开发、自己又付得起定制费的程序员，并不容易（这里另一个话题，就是我一直想做的一个：<strong>软件定制平台</strong>）。在这样的情况下，如果自己有一定的编程能力，可以极大地提高自己的效率，以及生活品质、幸福感。</p>
<p>所以，<strong>你想学习下编程吗？</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0926 - 新技能：Chrome 插件]]></title>
      <url>https://atjason.com/daily/2018-09-26.html</url>
      <content type="html"><![CDATA[<p>今天又花了 1 个多小时，终于搞定了 Chrome Extension 环境中的 AES 加密解密。恩，还是一篇博文上说的，AES 加密后的格式是一致的，不同平台的解密失败，主要还是参数设置不同，尤其是每个平台的默认参数不同引起的。</p>
<p>这个问题搞定后，后续的工作就容易多了，只是时间的堆积。终于，今天在服务器上部署成功了一个 Chrome 插件，可以默默地在后台干活。主要这个活必须依赖于完整的浏览器运行环境，故而不能直接使用 python/node 等环境。如果使用 headless browser，也会有各种奇怪的问题。</p>
<p>还是要多学习新东西。<strong>开始时很难，因为学习没有支点</strong>。而一旦开头就好办了，因为可以不断在已有的支点上累加东西，新学的东西又可以成为新的支点，这样慢慢就可以点线面地积累了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0925 - 开搞 Chrome 插件]]></title>
      <url>https://atjason.com/daily/2018-09-25.html</url>
      <content type="html"><![CDATA[<p>今天有时间，开始学习 Chrome 插件。</p>
<p>学习新东西，挑战还是很多的，比如：</p>
<ul>
<li>Chrome 插件的文件结构、运行原理；</li>
<li>Chrome 插件中的 js 库管理；</li>
</ul>
<p>只要了解了 Chrome 插件通用性的东西，进一步的开发，和 node 应该没有实质区别。</p>
<p>不过，今天比较郁闷地卡在了加密库。之前 node 是使用 crypto 库，这是 node 专用的；挪到 Chrome 插件环境，只能找替代的。找了通用的 CryptoJS，却发现加密结果无法与 crypto 互通。主要是之前发布出现的版本无法修改，所以不能全新来搞，必须要能适配之前加密的结果。花费了 N 个小时，还是没搞定，郁闷… </p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0924 - 亲近大自然？]]></title>
      <url>https://atjason.com/daily/2018-09-24.html</url>
      <content type="html"><![CDATA[<p>我们常说，亲近大自然。</p>
<p>但，如果把你一人扔到荒岛上，没吃没喝，什么都要自己去「亲近」大自然，你喜欢吗？或者说，你能活下来吗？</p>
<p>厌倦了都市生活，想回归田园。可真的面对网络信号差、时而停水停电、苍蝇虫子满天、到处灰尘泥巴，你还喜欢吗？</p>
<p>没有改造过的大自然，比你厌烦的城市，更可怕。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0923 - 与世无争不存在]]></title>
      <url>https://atjason.com/daily/2018-09-23.html</url>
      <content type="html"><![CDATA[<p>争，是一定存在的。</p>
<p>和谐相处，基本是屁话。一个东西的存在，势必要消耗资源。同类之间消耗相同的资源就不用说了，即使是不同类的物种，也会消耗类似的资源，比如空间。</p>
<p>除了实质性的东西，人这种物种还在争心理这种不实质的东西。比如，可以不如别人，但不能不如自己看不上的人、或者是所有周边的人。</p>
<p>博弈与平衡。争到自己的能力边界，也即停止争的时刻。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0922 - 快乐的心态]]></title>
      <url>https://atjason.com/daily/2018-09-22.html</url>
      <content type="html"><![CDATA[<p>今天遇上一位出租车性格内向，他言谈举止那种快乐的心态，让人很是触动。</p>
<p>比如，主动帮我将大的行李箱放车上；<br>比如，我给他 50，他找我 2 张 20（恩，小城市），说：恩，你给我一张，我还给你两张。这种小小的幽默，让人很放松。</p>
<p>用这样的心态开出租，不管赚钱多少，总是感觉很舒服的。而感觉舒服，不是很重要的吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0921 - 假期前生病]]></title>
      <url>https://atjason.com/daily/2018-09-21.html</url>
      <content type="html"><![CDATA[<p>哎，我也是郁闷，玩过好几次了：即将开始长假时，生病了…</p>
<p>假期说是休息，但在假期开始时是很忙碌了。尤其是长途旅行 + 带娃，要准备的东西很多。偏偏这个时候不舒服，真郁闷。</p>
<p>真的是上年纪了，饮食（已经不喝酒了）、睡觉、锻炼，一个都不能疏忽。中年危机，不能轻易倒下啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0920 - 给生活多点耐心]]></title>
      <url>https://atjason.com/daily/2018-09-20.html</url>
      <content type="html"><![CDATA[<p>在工作时，除非是打算离职，否则在领导、团队等压力下，即使是不顺心的事，也能压下心里的火，面子上过得去，耐着性子做下去。</p>
<p>而在生活中，如果遇到不顺心的事，通常没有像工作一样的压力压着，很容易就爆发，说些不该说的话，做些马上就后悔的事。</p>
<p>而，我们口口声声说，工作是为了赚钱，为了更好的生活。<br>而，钱还没赚钱、或者即便已经赚够了，生活却已经一团糟，亏不？</p>
<p><strong>像对工作的忍耐力一样，对待家人和生活。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0919 - 我们永远也无法知道事情的真相]]></title>
      <url>https://atjason.com/daily/2018-09-19.html</url>
      <content type="html"><![CDATA[<p>我们没有时间去了解真相；<br>我们偏向于相信自己看到听到的；<br>我们通常先有结论，然后挑选事实往上靠；<br>我们通常通过看到自己想看到的，来强化自己已有的认知；<br>…</p>
<p>我们永远也无法知道事情的真相；能做的，只是让自己原本的立场不那么极端。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0918 - 切换思路，很难]]></title>
      <url>https://atjason.com/daily/2018-09-18.html</url>
      <content type="html"><![CDATA[<p>当要放弃一个旧东西时，总会不断念念它的好；<br>当要开始一个新东西时，总会不断惴惴它的坏。</p>
<p>要想切换思路，反着来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0917 - 逃避不如面对]]></title>
      <url>https://atjason.com/daily/2018-09-17.html</url>
      <content type="html"><![CDATA[<p>逃避，只会让已有的问题不断发酵；<br>面对，至少可以慢慢卸下心里的负担。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0916 - 什么也不选，也是种选择]]></title>
      <url>https://atjason.com/daily/2018-09-16.html</url>
      <content type="html"><![CDATA[<p>逃避，会暂时麻痹神经，却会累积心理压力。</p>
<p>什么也不选，也是种选择；而且，可能是最差的选择。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0915 - 设置门槛，过滤用户]]></title>
      <url>https://atjason.com/daily/2018-09-15.html</url>
      <content type="html"><![CDATA[<p>今天去龙井深处的一个酒店吃饭。恩，真的是在深处，开车绕啊绕才到。</p>
<p>问题是，酒店开在交通这么不便的地方，生意能好吗？</p>
<p>确实，我感觉他们生意一般，看不到太多人。</p>
<p>不过，有利有弊。有人喜欢热闹，有人喜欢僻静，喜欢在晚上能听到虫鸣的地方睡觉。同时，偏僻也可以说是门槛，比如，至少你得有车才会来这里；比如，你不会嫌周围没有成熟的商业配套。</p>
<p>只伺候某一类用户，虽然获客成本高，但也降低了伺候不好不是自己目标用户的成本。举个不太恰当的例子，中国移动的主要利润来源肯定不是大爷大妈，但营业厅里来的最多的就是大爷大妈，比如来充话费。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0914 - 状态不好时，多睡觉]]></title>
      <url>https://atjason.com/daily/2018-09-14.html</url>
      <content type="html"><![CDATA[<p>今天看了 3 部电影，但状态并没有变好。</p>
<p>状态不好时，多睡觉</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0913 - iPhone Xs 发布]]></title>
      <url>https://atjason.com/daily/2018-09-13.html</url>
      <content type="html"><![CDATA[<p>又一次，苹果发布新品，股价下跌。</p>
<p>怎么说呢，外观不变，确实很难吸引人。尤其高昂的价格，更打击普通消费者的积极性。尤其是国内普遍「消费降级」的背景下，不是个好消息（当然，我知道，有钱人多的是）</p>
<p>本打算发布就入手了，现在纠结下。立个 Flag: 再努力一个月，如果赚到钱了，就入 Xs；否则入 Xr.</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0912 - 戒贪]]></title>
      <url>https://atjason.com/daily/2018-09-12.html</url>
      <content type="html"><![CDATA[<p>今天手动下单做期货短线交易，本可以有所收益，结果因为贪多没及时平仓，反而亏损。</p>
<p>虽是投机，但投机也是长期的事。赌一把大的，并不是投机，而是赌博。</p>
<p>期货投机，是用概率上的优势（如 51% 的赢面），去赢得负和游戏。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0911 - 专注与放弃]]></title>
      <url>https://atjason.com/daily/2018-09-11.html</url>
      <content type="html"><![CDATA[<p>时不时会听到这样的消息：</p>
<ul>
<li>谁谁谁最近做了个騒操作，一下子赚了好多；</li>
<li>最近某个项目比较火，可以关注下；</li>
<li>要不我们一起搞这个吧，肯定有的赚；</li>
</ul>
<p>我肯定相信，如果把时间精力投入到这些事情上，肯定有收益。问题在于，继续坚持自己目前正在做的事，可能收益更大。</p>
<p>不要轻易受外界刺激影响，不要轻易动摇之前下的决心。坚守并专注，才是成功的捷径。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0910 - 医院啊医院]]></title>
      <url>https://atjason.com/daily/2018-09-10.html</url>
      <content type="html"><![CDATA[<p>今天去儿童医院给娃看病，就是晚上睡觉时鼻子会有点堵。结果，80 元挂了专家号，看了 3 分钟，开了瓶 288 元的「盐水」医院的毛病还真不少：</p>
<ul>
<li>不论是大病小病，都要去挤医院，这点不合理：有大病的患者，时间被病患者耽误了；只是病的患者，也花了很多不必要的时间。甚至，有可能在医院被传染大病。</li>
<li>药开的明显太狠了。只是清理鼻腔的生理盐水、海盐水，为什么医院的药房里没有，而必须去社会性、却又和医院「合作」的药房？无法用医保，全额自费。</li>
<li>医生服务（如果他们真的认为自己是在服务的话）态度差，有什么可以监督举报的渠道？有效吗？会被滥用吗？</li>
<li>作为患者，如何才能知道医生的治疗、开药是否合理？除了不得不相信，还有别的选择吗？</li>
<li>新建的院区，建筑设计在我这个外行看起来，都挺差：采光差、通风差、导引差、院区没有一把供患者休息的椅子。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0909 - 犯懒犯懒]]></title>
      <url>https://atjason.com/daily/2018-09-09.html</url>
      <content type="html"><![CDATA[<p>今天本打算看书学习的，可却犯懒了，竟然看了 2 部电影，哎…</p>
<p>不过话说，徐峥主演的《幕后玩家》还是不错的，可能是金融题材的，而我恰好最近在研究这个。一个启发是：赚钱，是为了更好的生活。如果自己突然有了一大笔钱，却发现并不能真正地让生活变好，就会发现自己缺少的不止是钱，还是过好生活的能力。</p>
<p>知道自己要什么，也要知道家人要什么。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0908 - 4K 外接显示器]]></title>
      <url>https://atjason.com/daily/2018-09-08.html</url>
      <content type="html"><![CDATA[<p>最近几年，都是直接使用 13 寸 MBP 办公，并没有使用外接显示器。今天有机会试用了几小时 DELL U2718Q，感觉有点点种草。</p>
<ul>
<li>作为 4K 显示器，显示内容大概有 4 个笔记本屏幕的内容。如果是要同时看多条 K 线，绝对是利器。</li>
<li>屏幕是全贴合，边框也比较窄，看上去比较舒服。</li>
<li>显示器比较稳，不会出现随桌子轻微晃动的问题。</li>
</ul>
<p>问题：</p>
<ul>
<li>目前的 2015 款 MBP，带 4K 显示器有些吃力，最多是 30 Hz 刷新率。在使用过程，有明显感觉刷新率低带来的抖动。比较，在打字时，文字候选框在出现时有明显的跳动；而完全相同的操作，自带屏幕则没有问题。</li>
<li>大屏幕看电影、视频，体验还是不错的，哈哈；只是，带 4K 电影吃力，老问题。</li>
<li>27 寸的屏幕感觉已经有些大了。实际使用感觉有些烧脸；且，头上下左右移动的幅度，明显比直接使用电脑屏幕要大，时间长应该会觉得累。</li>
<li>不能自动调节亮度，手动调节也有些麻烦，远没有直接按键盘上的调节键方便。</li>
</ul>
<p>总的来说，因为性能的问题，在换笔记本之前，因为不会买；而如果换了 15 寸笔记本，买外接显示器的概率就又降低了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0907 - 首次尝试共享汽车]]></title>
      <url>https://atjason.com/daily/2018-09-07.html</url>
      <content type="html"><![CDATA[<p>今天去滨江，因为地铁不是太方便，就尝试了一下滴滴共享汽车，整体还是比较满意的：</p>
<ul>
<li>在家附近就有个租车点，这个很重要。</li>
<li>价格不贵，最低一分钟四毛钱，比专车便宜（因为省了司机）</li>
<li>电动车，不限行；</li>
<li>相当于自动档，还算好开。</li>
<li>车型一般不大，也更好开。</li>
</ul>
<p>可改进的地方：</p>
<ul>
<li>最好能有车载充电器</li>
<li>还车的标识不明确，不确定自己是否停到正确的位置</li>
</ul>
<p>一个有意思的点：在快到目的地的时候，车的续航还有 20 公里。这里，滴滴共享汽车的工作人员就打电话过来了：友情提示，车的续航不多了，请就近还车。恩，这点还是挺不错的。不过，对滴滴来说，也就意味着要养活更多的工作人员，也是个重运营的项目。</p>
<p><strong>安全提示</strong>：如果你路上碰到共享汽车，最好让一让；里面很可能不是老司机，比如我。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0906 - Kindle + Android]]></title>
      <url>https://atjason.com/daily/2018-09-06.html</url>
      <content type="html"><![CDATA[<p>微信读书之前出过这样的功能：19 元包月，书随便看；对于经常看书的朋友，确实是挺优惠的。</p>
<p>另一方面，在 Kindle 上看书的体验，还是要好过在手机上看。</p>
<p>那么，能不能在 Kindle 上看微信读书上的书源呢？</p>
<p>还真有人这么干：给 Kindle 刷上 Android 安卓系统，然后安装微信读书。</p>
<p>当然，这是很麻烦的。不过，既然思路打开了，还能怎么办呢？果然，国产的类 Kindle 设备，不少都是基于 Android 的，也支持安装微信读书、网易蜗牛阅读等阅读器，就厉害了。</p>
<p>思路打开 + 杂交，可以有不一样的思路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0905 - 电商的佣金模式]]></title>
      <url>https://atjason.com/daily/2018-09-05.html</url>
      <content type="html"><![CDATA[<p>最近京东有个 99 元买 10 本书的活动，正好我最近想读纸质书，就顺势挑了些，感觉还是划算的。</p>
<p>同时，我也知道，这样的活动是有返佣的，一般在 2% 左右。考虑到活动本身还算划算，于是，我就在朋友圈发了链接；同时，也有几个朋友转发了。</p>
<p>没想到，2 天的时间，竟然有 100 元之多的佣金。我本来也就是玩玩，确实没想到效果有这么好。试想，如果有巨大、稳定的流量来源，仅靠佣金，就能有不错的收益。</p>
<p>当然，这只是好的方面，不好的方面也有，比如：</p>
<ul>
<li>佣金的账期和提现问题，比如本月的通常要到下月才能到账，且提现有门槛。</li>
<li>流量也是有成本的。</li>
<li>现在大家都很反感微商，即使确实是有优惠的活动，也是天然的抵触。</li>
<li>如果说成是薅用户的羊毛，总不能把羊毛拔光吧？</li>
</ul>
<p>估计我不会搞这么事，不过了解一下，也是挺有趣的。电商依然可以获利巨大，而返佣则会和电商保持相同的生命周期。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0904 - 我们有可能从别人身上学到什么吗？]]></title>
      <url>https://atjason.com/daily/2018-09-04.html</url>
      <content type="html"><![CDATA[<p>如果一个人在某方面很有造诣，他有什么动力将自己的真经，毫无保留地介绍出来？就算是有动机，从知道到可介绍（类似于，从高材生到好老师），还有很长的路。并且，输出是很花时间的，想想让你写本书，要用多久？</p>
<p>就算一个品德高尚的人这么做了，写了一部真经，我们就能有所收获吗？且不说「必先自宫」这样的前提，人类天然是排斥他人意见的。就算是虚心学习，实际上也常常是自己固有思维中打转。真正能放下自己的思维惯性，开放性地接受跟自己思想差异极大的思想，也不是件容易的事。更别说，学习是件苦差事，有太多的事情让自己分心、放下。</p>
<p>我总是觉得，很难从别人身上学到东西。更主要的，还是要靠自我进化。当然，真的能从别人身上学到东西的人，是少数的优秀者。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0903 - 心境]]></title>
      <url>https://atjason.com/daily/2018-09-03.html</url>
      <content type="html"><![CDATA[<p>连续在家里呆了 2 个星期，感觉自己都长毛了。</p>
<p>终于，今天出去干活了，顿觉有了自己的空间，感觉很舒服。晚上看了《谍中谍 6》，直感觉好奢侈：家人带娃，自己可以享受独处。</p>
<p>人不是机器，也不是动物，除了吃好、喝好、身体好，还需要心情好、状态好，才能高效地干活。有时的一些放纵、玩游戏、刷无聊的新闻、等等，看似浪费时间，却是调节心境的必需。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0902 - 拒绝一些机会]]></title>
      <url>https://atjason.com/daily/2018-09-02.html</url>
      <content type="html"><![CDATA[<p>如果能明确地知道应该拒绝一些机会，说明自己对自己的了解比较明确。知道自己想要什么、最应该做什么、不擅长什么、不应该把时间精力浪费在哪些地方、等等。</p>
<p>反过来，如果看到机会就心动、看到别人赚钱就心痒，只能说明自己还是太糊涂，其实也赚不到什么钱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0901 - 看纸质书的感觉]]></title>
      <url>https://atjason.com/daily/2018-09-01.html</url>
      <content type="html"><![CDATA[<p>好久没看纸质书了。</p>
<p>最近看《期货市场的技术分析》，是纸质的。看书时写写划划，瞬间有了看课本的感觉。</p>
<p>纸质书还是有很多好处的：</p>
<ul>
<li>开始时，可以快速地翻一遍，对书的内容有大体的了解。</li>
<li>对于图表比较多的书，电子书还无法达到很好的体验。可能在 iPad 上看 PDF 可能可以，但毕竟很多书并没有 PDF 版本，而在 Kindle 上看图表则很糟糕。</li>
<li>如果是作为工具书，在需要时，可以较快地定位到原来的位置，方便回顾。</li>
<li>那种放在手上的感觉、翻页的手感、书的气息，都是 Kindle 无法比拟的。</li>
</ul>
<p>当然，纸书也有不少问题：</p>
<ul>
<li>最大的问题就是：看完后收纳是麻烦。</li>
<li>如果要基于笔记再加工，几乎是不可能的。</li>
<li>不方便携带。</li>
</ul>
<p>估计，之后还是纸书 + Kindle 结合的方式。对于很棒的书、尤其是工具书，还是要买纸书研读；而小说等偏休闲类的，还是 Kindle 合适些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0831 - 放空]]></title>
      <url>https://atjason.com/daily/2018-08-31.html</url>
      <content type="html"><![CDATA[<p>做了好一段时间期货套利了，也只是上周见了点钱，但依然没个稳定可靠的方案。</p>
<p>是时候换个思路了。</p>
<p>接下来一段时间，放空思想，不设限，什么东西都看看、都听听，可能的话，多和行业内的人多交流（虽然我觉得真正厉害的人，是不会出来交流的），找找思路，然后再前行。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0830 - 茅台不是好东西]]></title>
      <url>https://atjason.com/daily/2018-08-30.html</url>
      <content type="html"><![CDATA[<p>今天最初的几个小时，是在医院急诊睡的。</p>
<p>好吧，平时不怎么喝白酒。昨晚跟朋友了喝了一瓶茅台，当时感觉不好，凌晨就不行了，红的、绿的都吐了。没办法，直接杀去医院了。挂水直接到天亮，结果还是头晕恶心，屁股上又挨了止晕针，现在走路还是跛的。</p>
<p>哎，就这，茅台股价竟然还在涨。</p>
<p>身体是自己的，春节之前，滴酒不沾。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0829 - 与朋友小酌]]></title>
      <url>https://atjason.com/daily/2018-08-29.html</url>
      <content type="html"><![CDATA[<p>今天，跟一位好友聊了、喝了。</p>
<p>其实，他身上有很多标签，也有很多值得说道：</p>
<ul>
<li>家庭企业，但又不是唯一继承人，这里面就有意思了。</li>
<li>做实业，却又介于家庭作坊与正规企业之间。</li>
<li>销售为主、渠道为王，产品本身的生产并没什么花头，只要能卖出东西就行。</li>
</ul>
<p>与他做的实业相比，我做的自然是「虚」的、「轻」的。不过，我们也很难进入对方的状态，比如我做不来与地方政府大小头目的人情往来，他对互联网也只是用户水平。</p>
<p>但大家都有相同的问题：发展、新机遇。都要发展、进步、赚更多钱。而已经的坑，基本已经挖差不多了。要扩张，最好的就是发现新机遇；或者说，用别人不擅长的姿势，抢别人的饭碗。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0828 - 外为己用]]></title>
      <url>https://atjason.com/daily/2018-08-28.html</url>
      <content type="html"><![CDATA[<p>最近在看书；相同的主题，不同的人有不同的视角、甚至不同的观点，那书还怎么看？</p>
<p>其实，直接在书中照抄答案，是没有的。更可靠的，是从书中得到启发，进而完善自己的认知体系。对于相左的观点，正好可以从反面重新考验下自己的认识，说不定可以纠正自己的偏见。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0827 - 一物降一物]]></title>
      <url>https://atjason.com/daily/2018-08-27.html</url>
      <content type="html"><![CDATA[<p>今年夏天，不知道为什么，卫生间里总是有像果蝇那样小的虫子，生生不息，我试着「血洗」了几次，却总清不干净，貌似它们繁殖能力很强。</p>
<p>让我想起《三体》中，三体文明嘲笑人类是虫子，人类普遍情绪低落。而「大史」带「罗辑」去郊区看蝗灾。是的，人类对于蝗虫而言，是很强大的；可，数千年来，人类却无法消灭蝗灾。</p>
<p>忽略，卫生间又有了只小壁虎（我同样不知道它是怎么来的，可能是从通风孔爬起来的），就感觉小虫子少了很多；毕竟，壁虎是吃虫子的。我没时间跟虫子耗，可壁虎有，非常有：这可是能填饱肚子的美味啊。</p>
<p>果然，一物降一物。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0826 - 需要新鲜刺激]]></title>
      <url>https://atjason.com/daily/2018-08-26.html</url>
      <content type="html"><![CDATA[<p>最近家里有事，一直窝在家里，实在是有些长毛了，需要点新鲜东西刺激。</p>
<p>既来之则安之；既然要呆在家里，就把该做的事做好，比如给宝宝做好吃的。等有自由时间了，再好好干活赚钱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0825 - 自信从何处来]]></title>
      <url>https://atjason.com/daily/2018-08-25.html</url>
      <content type="html"><![CDATA[<p>成功了，才自信；还是自信，才能成功？</p>
<p>腹有诗书气自华；钱包鼓了，说话自然就有底气。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0824 - 自知]]></title>
      <url>https://atjason.com/daily/2018-08-24.html</url>
      <content type="html"><![CDATA[<p>这两天，博士坐高铁时，像泼妇一样占座不让的事，很热闹；<br>今天，一朵奇葩加到我的用户群，说些让人啼笑皆非的言论。</p>
<p>不自知，就容易成为自己眼中的牛逼、众人眼中的奇葩。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0823 - 又搞了个小工具]]></title>
      <url>https://atjason.com/daily/2018-08-23.html</url>
      <content type="html"><![CDATA[<p>借助 JSBox 平台，搞了个小工具，可以方便地查看机器人的状态。</p>
<p>喜欢创造工具的感觉，可以提高效率；关键还是那种掌握的感觉，很棒。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0822 - 不能太贪]]></title>
      <url>https://atjason.com/daily/2018-08-22.html</url>
      <content type="html"><![CDATA[<p>「利润最大化」，这是扯淡。</p>
<p>如果没有目标、没有标准，根本就无法界定收手的时机，反而会错过时机，虽然在事前根本就无法确定最佳时机。</p>
<p>只赚自己能赚的、该赚的。如果错过了更大的赢利，让它去吧。一步步的，属于自己的、更多的利润，总会来的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0821 - 创新的好朋友]]></title>
      <url>https://atjason.com/daily/2018-08-21.html</url>
      <content type="html"><![CDATA[<p>昨晚锤子发布新手机，想起几件跟创新相关的东西：</p>
<ul>
<li>Pin 作者指责锤子涉嫌抄袭其分词。</li>
<li>锤子指责友商无下限抄袭。</li>
<li>TNT 在网友被造出各种段子。</li>
<li>锤子自己特别标榜创新，又新发布了无限屏等功能。又说，会全新开发底层，让「他妈的」想抄也没法抄。</li>
</ul>
<p>好像，创新与抄袭，总是如影随形。之前，老罗好像说过：让他们抄去吧。但现实面前，在利益被侵害时，也无法保持当初的洒脱，发布会上也忍不住骂娘。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0820 - 如果前提有诡异]]></title>
      <url>https://atjason.com/daily/2018-08-20.html</url>
      <content type="html"><![CDATA[<p>明朝时，凡是外番进贡，皇帝会赏(反)赐(还)数倍价值的物品；而，国内的税赋很重。</p>
<p>某国某时，大爱无疆医疗援远助非洲（CCVV1 在播放纪录片），而，国内…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0819 - 情感的价值]]></title>
      <url>https://atjason.com/daily/2018-08-19.html</url>
      <content type="html"><![CDATA[<p>今天带娃出去玩，偶遇同小区的、跟娃差不多大、跟娃小名相同的一个娃，备感亲切，两个娃开心地玩了好一会。目测，之后很可能是幼儿园同学、小学同学、初中同学…</p>
<p>反过来，如果本来没有这个宝宝，要花多少钱，才能构织出完全相同的现状呢？恐怕很难，就说你让一个本不打算生娃的人生娃，要花多少钱？你让他使用你取的名字，要花多少钱？</p>
<p>这样的机缘巧合，实在不是钱能衡量的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0818 - 弹性真的很重要]]></title>
      <url>https://atjason.com/daily/2018-08-18.html</url>
      <content type="html"><![CDATA[<p>昨晚到今天，家里出了点急事。于是，我放下工作，全力在家里扑火。</p>
<p>幸运的是，由于我是自由职业，时间和空间上没有太多限制，因而这样的突发事件，还足以应付。相反，如果依然是在上班，就很被动了。</p>
<p>恩，还是弹性和自由好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0817 - 要有耐心]]></title>
      <url>https://atjason.com/daily/2018-08-17.html</url>
      <content type="html"><![CDATA[<p>事情不顺利时，在怀疑做事的方式是否正确之前，可以稍微考虑下：是否方法是对的、而仅仅是运气不佳？或者再等等就好了？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0816 - 多一些发散]]></title>
      <url>https://atjason.com/daily/2018-08-16.html</url>
      <content type="html"><![CDATA[<p>今天被问要不要去深圳加入 Snapchat；虽说薪资诱人，但毕竟在深圳，还是婉拒了。</p>
<p>关键在于，自己平时要多一些露出，多和不同的人接触，多一些方式展示自己的价值，算是广结善缘。这样，在未来不经意间，之前的这些铺垫，就会有意外的收获。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0815 - 寻找刺激]]></title>
      <url>https://atjason.com/daily/2018-08-15.html</url>
      <content type="html"><![CDATA[<p>当状态变化麻木、散淡时，需要寻找一个刺激。不能是短期的、一次性的，而需要是那种强烈、且可重复式的刺激。</p>
<p>比如，拿真金白银去币市交易。当然，既然只是寻找刺激，别下太大赌注，小赌怡情。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0814 - 生存，不下牌桌]]></title>
      <url>https://atjason.com/daily/2018-08-14.html</url>
      <content type="html"><![CDATA[<p>时局不顺时，要尤其关注生存问题。谨慎决定，避免快速消耗资源和储备，不下牌桌。只有这样，之后才可能在可能的机会中翻身。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0813 - 非专业无以成功]]></title>
      <url>https://atjason.com/daily/2018-08-13.html</url>
      <content type="html"><![CDATA[<p>草台班子想要成功，基本是不可能的。</p>
<p>如果发生了，多半是运气，或者说整体是牛市，随便搞搞都能成的那种。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0812 - 消极休息没有意义]]></title>
      <url>https://atjason.com/daily/2018-08-12.html</url>
      <content type="html"><![CDATA[<p>「现在状态不好，玩会游戏再开始干活吧」<br>「这会真不想干活，先看会新闻再说吧」</p>
<p>基本上，这样的休息是没有效果的，只是以更低、更隐蔽的方式，消耗着心力。关键的，甚至会引发负罪感。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0811 - 国家怎么会喜欢你炒币呢？]]></title>
      <url>https://atjason.com/daily/2018-08-11.html</url>
      <content type="html"><![CDATA[<p>赚了，你会给国家交税吗？<br>赔了，你还有钱消费吗？</p>
<p>国家怎么会喜欢你炒币呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0810 - 消费降级]]></title>
      <url>https://atjason.com/daily/2018-08-10.html</url>
      <content type="html"><![CDATA[<p>拼多多，五环以内的人看不起，却又大热；说明国内五环以内的还是少数，更多的还是拼多多级别，这才是我们的国情，在朋友圈、微博、头条看不到的国情。</p>
<p>好，就说五环内，有房子吗？有房贷吗？房贷占每月支出的几成？据说平均值是 14%，我一定是拖后腿了。</p>
<p>两级分化、房地产的挤出效应，使得更多的人囊中羞涩，只能消费降级。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0809 - 在不确定的情况下，战胜不确定]]></title>
      <url>https://atjason.com/daily/2018-08-09.html</url>
      <content type="html"><![CDATA[<p>恩，说的是股市、币市。</p>
<p>这可能吗？最近研究了好一段时间，各种策略都试了，各种不得姐…</p>
<p>或者，这是概率问题，有可能有 50.01% 这样的赢面吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0808 - 你们这些年轻人啊]]></title>
      <url>https://atjason.com/daily/2018-08-08.html</url>
      <content type="html"><![CDATA[<p>你们这些年轻人啊，国家把你们造出来，是要你们干活、交税、填养老金亏空、养活国家机器的。</p>
<p>你们可好，活还没干，先欠一屁股校园贷、现金贷，又不买房。</p>
<p>你们这么闹，你让 zf 怎么玩的转？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0807 - 所谓版权]]></title>
      <url>https://atjason.com/daily/2018-08-07.html</url>
      <content type="html"><![CDATA[<p>确实，现在人们还不能完全抛弃盗版、侵权，比如拼夕夕上的各种神仙货、盗版电影、破解软件、等等。</p>
<p>可，至少，心里要知道这是不对的；将来有机会，一定要「还星爷一张电影票」</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0806 - 不能太舒服]]></title>
      <url>https://atjason.com/daily/2018-08-06.html</url>
      <content type="html"><![CDATA[<p>生活上有很大压力和潜在风险。而在工作时，为了高效和专注，必须暂时放下这些东西去干活。</p>
<p>可时间久了，却好像忘记这些压力，人变得「舒服」起来。可，生活是客观的，当你不把它打理好时，它就开始露出冷酷的一面。</p>
<p>别太舒服了，时不时想想自己的压力，再想想该不该偷懒、该不该干活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0805 - 《中央帝国的财政密码》]]></title>
      <url>https://atjason.com/daily/2018-08-05.html</url>
      <content type="html"><![CDATA[<p>最近在看这本书，还没看完，不过觉得已经很值得推荐了。</p>
<p>作者从财政、经济的角度，推演、分析了中国的历朝历代，分析它们兴衰背后的经济原理。特别是对国有企业、土地公有制、金融垄断等几天主题的论述，大有影射当下之意。</p>
<p>比如，隋文帝时期，国库充盈，东西都没地方放。而其后的隋炀帝则很快灭国，没道理不是？其中，「国库充盈」是真，民生凋敝也是真。因为隋朝实现了强大的税收体系，可以很方便地从几乎每个人身上开始收税，自然国富而民穷。恩，「国富民穷」这个词听起来是不是很耳熟？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0804 - 忌：按部就班、一成不变]]></title>
      <url>https://atjason.com/daily/2018-08-04.html</url>
      <content type="html"><![CDATA[<p>至少，这样好没意思啊。</p>
<p>不过是生活、还是工作，如果今天总是和昨天一样，那人是会厌倦的。心里不乐意，行动上自然效率低。</p>
<p>需要一个循环。刚到一个新环境，什么都是新的，需要一个适应过程。这个过程可能会降低原来的效率，没关系，等稳定下来后，就可以维持一段高效时间。可，一旦时间久了，效率就又开始下降了。这样，就需要再换个环境、或者引入一些新的变量，来刺激麻木的心。</p>
<p>人，不就是这么喜新厌旧嘛。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0803 - 我的第一性原理：自由]]></title>
      <url>https://atjason.com/daily/2018-08-03.html</url>
      <content type="html"><![CDATA[<p>这两天看混沌大学的课件，讲第一性原理、非连续性、第二曲线，就在想，对应于我，这三者分别是什么呢？</p>
<p><strong>第一性原理：自由</strong></p>
<p>追求自由，不受束缚。比如，时间上的自由、空间上的自由、财务上的自由。</p>
<p><strong>第二曲线：科技金融</strong></p>
<p>之前的经历是程序员、产品经理、独立开发者，算是科技一边的；现在开始接触金融。两者结合，应该会有比较有意思的结果。</p>
<p><strong>非连续性</strong></p>
<p>很明显，从代码到金融，这两者差别很大、完全不连续。怎么跨越呢？本着追求自由的心，比之前更加努力、深入。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0802 - 死结]]></title>
      <url>https://atjason.com/daily/2018-08-02.html</url>
      <content type="html"><![CDATA[<p>搞到资源，才能成功；<br>成功了，才能搞到资源。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0801 - 数字货币与沪深股市比较]]></title>
      <url>https://atjason.com/daily/2018-08-01.html</url>
      <content type="html"><![CDATA[<p>2018-07-31，数字货币总市值 1.8 万亿，24小时交易 0.1 万亿；</p>
<p>2018-07-31，上证总市值 30.5 万亿，成交量 0.12 万亿；</p>
<p>2018-06，深交总市值 20.4 万亿，平均每日成交量 0.29 万亿；</p>
<p>单位 RMB/CNY，数据来源：<br><a href="http://www.sse.com.cn/market/stockdata/overview/day/" target="_blank" rel="external">http://www.sse.com.cn/market/stockdata/overview/day/</a><br><a href="http://docs.static.szse.cn/www/market/periodical/month/W020180706531546781929.html" target="_blank" rel="external">http://docs.static.szse.cn/www/market/periodical/month/W020180706531546781929.html</a><br><a href="https://coinmarketcap.com/zh/currencies/bitcoin/" target="_blank" rel="external">https://coinmarketcap.com/zh/currencies/bitcoin/</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0731 - 这个世界很多样]]></title>
      <url>https://atjason.com/daily/2018-07-31.html</url>
      <content type="html"><![CDATA[<p>比如，有人拥有 2 栋楼，改装为公寓出租，各有 138 和 184 个房间，每年收租 300 万。</p>
<p>而当初买房成本，约 2000 万；每年收租收入 15%.</p>
<p>这个人，和我生活在同一个城市：杭州。</p>
<p>这个人，和我在同一个群里。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0730 - 金融，世界的核心]]></title>
      <url>https://atjason.com/daily/2018-07-30.html</url>
      <content type="html"><![CDATA[<p>这两天看国际金融史，真是惊心动魄。</p>
<p>金融，是人们活动的高度抽象和集中。</p>
<p>金融的影响力，可以是高屋建瓴，大大促进生产，提高整体生活水平；<br>对金融的打击，可能是扒皮抽筋，让一个经济体彻底生成活动，沦为别人的经济奴隶。</p>
<p>在贪婪和欲望的本性之下，金融的弊端被急剧放大，在为人类谋福利的同时，也在吞噬着一切。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0729 - 不怕慢，就怕站]]></title>
      <url>https://atjason.com/daily/2018-07-29.html</url>
      <content type="html"><![CDATA[<p>今天没做太多事，不过还是改进了一点逻辑。</p>
<p>不怕慢，就怕站。</p>
<p>马上就 8 月了；下周很关键，一定要有突破。迷茫、困难时，幻想下美好的未来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0728 - 时不时接触点新鲜的东西]]></title>
      <url>https://atjason.com/daily/2018-07-28.html</url>
      <content type="html"><![CDATA[<p>今天空闲时翻了一本 Kotlin 的书，简单学习了下。对于编译型语言，可以作为学习的候选。</p>
<p>关键在于，即使是专注于一个领域，也要时不时了解下新鲜的东西。成为一个领域的专家，并不意味着必须是其他领域的白痴。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0727 - 商业的，才是靠谱的]]></title>
      <url>https://atjason.com/daily/2018-07-27.html</url>
      <content type="html"><![CDATA[<p>最近又上了人人网；且不说网站目前的设计如何，关键的，发现之前的一些照片都打不开了…</p>
<p>对于一个曾经那么辉煌的网站，这几乎是难以想象的。可，现在却真实发生了。为什么？简单，人人网在商业上不成立了，自己没有动力去维护、更新。</p>
<p>想要一个东西长久，根本的动力：这件事可以让别人有利可图。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0726 - 爱最伟大]]></title>
      <url>https://atjason.com/daily/2018-07-26.html</url>
      <content type="html"><![CDATA[<p>无论什么，爱的长度，仅次于时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0725 - 虚无与有]]></title>
      <url>https://atjason.com/daily/2018-07-25.html</url>
      <content type="html"><![CDATA[<p>放空、虚无，所有都是有。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0724 - 宏观指导微观]]></title>
      <url>https://atjason.com/daily/2018-07-24.html</url>
      <content type="html"><![CDATA[<p>对于一个具体的问题，可能很难分清楚其方向。</p>
<p>如果跳出来，站在一个更高的视角、考虑更多长的时间维度，可能就更容易发现规律和出路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0723 - 死磕现在]]></title>
      <url>https://atjason.com/daily/2018-07-23.html</url>
      <content type="html"><![CDATA[<p>如果尚没有更好的选择，死磕现在的；但，一定不要静止不动。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0722 - 用户体验]]></title>
      <url>https://atjason.com/daily/2018-07-22.html</url>
      <content type="html"><![CDATA[<p>当大谈特谈用户体验时，可能意味着发展的停滞。</p>
<p>比如，当你的产品有 2 个值得宣传的点：1 个革命性的创新和 1 个用户体验的极大改进，宣传时，你会把哪个点放在第一位？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0721 - 该不该打疫苗]]></title>
      <url>https://atjason.com/daily/2018-07-21.html</url>
      <content type="html"><![CDATA[<p>这次，舆论热点终于发生到自己身上了。</p>
<p>下周，娃就要打疫苗了。<br>那么，该不该打疫苗呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0720 - 不在重复中爆发，就在重复中灭亡]]></title>
      <url>https://atjason.com/daily/2018-07-20.html</url>
      <content type="html"><![CDATA[<p>熟能生巧；<br>原地踏步。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0719 - 千方百计向目标努力]]></title>
      <url>https://atjason.com/daily/2018-07-19.html</url>
      <content type="html"><![CDATA[<p>随时琐事变多，大块时间变少；而即使是零碎时间，又很容易被手机消耗。</p>
<p>那，还有多少时间干活呢？</p>
<p>明确目标，调配大部分时间、精力，花在与目标相关的地方。比如，坐公交时，可以想想大致的技术方案。等到了公司，打开电脑就可以开始干活。而如果是在公交上刷新闻、打游戏，到了公司还需要切换状态，然后开始想技术方案，这时间就差进去了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0718 - 如果没得选，就不选]]></title>
      <url>https://atjason.com/daily/2018-07-18.html</url>
      <content type="html"><![CDATA[<p>有选择，有时并不见得是好事；尤其是选择很多的时候。</p>
<p>既然没得选择，则 All In 正在做的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0717 - All In]]></title>
      <url>https://atjason.com/daily/2018-07-17.html</url>
      <content type="html"><![CDATA[<p>投资，慎 All In；要平衡风险与收益；</p>
<p>创业，必 All In；不疯魔，无成功。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0716 - 最近怎样？]]></title>
      <url>https://atjason.com/daily/2018-07-16.html</url>
      <content type="html"><![CDATA[<p>Q: 最近怎样？<br>A: 还行，你呢？<br>Q: 还可以。</p>
<p>基本上，这是非常经典的开场白了。</p>
<p>但如果真要严格、仔细地回答「最近怎样」，该怎样回答呢？什么样的状态才是好、或是不好呢？是绝对的好、还是自我感觉良好？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0715 - 决断力]]></title>
      <url>https://atjason.com/daily/2018-07-15.html</url>
      <content type="html"><![CDATA[<p>这是自己一直缺乏的能力。</p>
<p>相对而言，自己更喜欢死磕一个有明确边界的问题。而对快速变化、需要在不完备信息下、快速做出决断的情形，则是自己不太擅长的。</p>
<p>怎么办呢？只能扬长避短，同时尽量多做决定喽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0714 - 既能上天、又能下海]]></title>
      <url>https://atjason.com/daily/2018-07-14.html</url>
      <content type="html"><![CDATA[<p>生活在海边的鸟类，很多都有此项技能：在海面掠过，寻找鱼比较多的地方。然后一头扎入大海，潜水抓鱼。然后浮出海面，振翅高飞。</p>
<p>看问题时，可以在像在海面搞过一样纵览全局。但真要解决问题，还是要深入研究。想想，一只鸟都能在水中闭气几分钟，还能在水面起飞。作为人，又有什么不能的呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0713 - 珍惜个人信誉]]></title>
      <url>https://atjason.com/daily/2018-07-13.html</url>
      <content type="html"><![CDATA[<p>人设建立很难，崩塌却很容易。</p>
<p>难道有值得托付的朋友，更别说交心的知己。别为了一点小利破坏了这个宝贵的东西，不然会非常后悔。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0712 - 找对节奏，并假以时日]]></title>
      <url>https://atjason.com/daily/2018-07-12.html</url>
      <content type="html"><![CDATA[<p>不管有多大的压力、多么急迫，只要是做事，就得找到自己的节奏；剩下的，交给时间去发酵。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0711 - 把希望寄托在自己身上]]></title>
      <url>https://atjason.com/daily/2018-07-11.html</url>
      <content type="html"><![CDATA[<p>外力只能是助力，必须把希望寄托在自己身上。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0710 - 容易犯困，是年纪大了吗？]]></title>
      <url>https://atjason.com/daily/2018-07-10.html</url>
      <content type="html"><![CDATA[<p>上午看会书，困了，睡一会~<br>中午吃过饭，困了，睡一会~<br>晚上吃过饭，困了，睡一会~</p>
<p>看来，老了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0709 - 团队与系统性风险]]></title>
      <url>https://atjason.com/daily/2018-07-09.html</url>
      <content type="html"><![CDATA[<p>套用股票里的概念：系统性风险与非系统性风险。</p>
<p>比如，整个行业起伏，这是系统性风险。<br>比如，个人状态起伏，这是非系统性风险。</p>
<p>购买多支不相关的股票，可以大大降低非系统性风险，尤其是在初期。</p>
<p>对于团队而言，增加人员，可以大大降低非系统性风险，尤其是在初期。</p>
<p>不过，系统性的风险，就不是这么容易控制的了。于是，一群聪明人一起，也可能干不成事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0708 - 世内桃源]]></title>
      <url>https://atjason.com/daily/2018-07-08.html</url>
      <content type="html"><![CDATA[<p>去看了钱江新城的夜景灯展。</p>
<p>可能是我封闭太久了，很少「见这种世面」；虽是形式主义，但那种开阔的影音，足以给人宽广的刺激。</p>
<p>娃这个阶段是真爱水，看到河就是「鹅、鹅、鹅…」，不肯走。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0707 - 生活中的小确幸]]></title>
      <url>https://atjason.com/daily/2018-07-07.html</url>
      <content type="html"><![CDATA[<p>周末，和家人一起漫步。看着娃做布朗运动，东张西望的好奇与小小害怕，小确幸。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0706 - 难免会逃避]]></title>
      <url>https://atjason.com/daily/2018-07-06.html</url>
      <content type="html"><![CDATA[<p>今天有个坏消息，坏到我想把头埋到沙子里，就当不知道这个事。</p>
<p>想逃避，至少是拖延。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0705 - 于绝望处，见希望]]></title>
      <url>https://atjason.com/daily/2018-07-05.html</url>
      <content type="html"><![CDATA[<p>试了好多种办法解决一个问题，却总找不到最终的办法，有些绝望。</p>
<p>不过，至少在这个过程中，从不同的角度理解了问题、加深了认识。</p>
<p>只要坚持、再进一步，总能于绝望处见希望。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0704 - 菜鸟与韭菜]]></title>
      <url>https://atjason.com/daily/2018-07-04.html</url>
      <content type="html"><![CDATA[<p>韭菜一定是菜鸟，菜鸟很可能是韭菜。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0703 - 做得好，是不行的]]></title>
      <url>https://atjason.com/daily/2018-07-03.html</url>
      <content type="html"><![CDATA[<p>做得好，是不行的；</p>
<p>要做到优秀。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0702 - 买不到知识]]></title>
      <url>https://atjason.com/daily/2018-07-02.html</url>
      <content type="html"><![CDATA[<p>买书、知识付费时，很容易有错觉。</p>
<p>就比如我买了 Kindle Unlimited，就好像我读了很多书一样。</p>
<p>知识，是买不来的。不下苦功，是不行的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0701 - 下半年了]]></title>
      <url>https://atjason.com/daily/2018-07-01.html</url>
      <content type="html"><![CDATA[<p>2018，没有加时赛，抓住下半场。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0630 - 如何报志愿]]></title>
      <url>https://atjason.com/daily/2018-06-30.html</url>
      <content type="html"><![CDATA[<p>又到了一年一度帮人高考填志愿的时候了。</p>
<p>对方要求很明确：好城市、好学校、好专业。</p>
<p>如此开放的条件，等于没有没有任何约束条件，你说怎么选？😂</p>
<p>不过，我个人的倾向是：城市 &gt; 学校 &gt; 专业；当然，前提是对方的分数够不上一本院校。城市确实挺重要，比如西藏大学和北上广深排名靠后一些的大学，你选哪个？</p>
<p>资源聚集，是个「越来越」的过程：资源越聚集，越容易出成果（比如深圳的深圳大学）；越出成果，资源就越聚集。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0629 - 有张有弛]]></title>
      <url>https://atjason.com/daily/2018-06-29.html</url>
      <content type="html"><![CDATA[<p>一周忙碌的工作结束了。虽说结果不甚理解，不过周末也要休息下，换个节奏，做点不一样的事；比如看看闲书、陪陪家人。</p>
<p>下周，再拼。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0628 - 准确了解自己的财务状况]]></title>
      <url>https://atjason.com/daily/2018-06-28.html</url>
      <content type="html"><![CDATA[<p>最近一段时间没有认真关注自己的财务状况，今天认真梳理了一遍，发现了一个吓人的问题。</p>
<p>定期检查自己的财务状况，这个一定不能偷懒。</p>
<p>不过，这次也警醒了我，财务状况不容乐观，必须得加倍努力了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0627 - 梦想与钱，谁先谁后]]></title>
      <url>https://atjason.com/daily/2018-06-27.html</url>
      <content type="html"><![CDATA[<p>可以你也认同：追求梦想，钱自然会来。</p>
<p>可是，迫于现实，你不得不暂时放下梦想，去追求钱；总想着，有钱了，重拾梦想。可，这样赚得到钱吗？赚钱后，梦想还拾得起来吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0626 - 书真是便宜]]></title>
      <url>https://atjason.com/daily/2018-06-26.html</url>
      <content type="html"><![CDATA[<p>吃顿饭，几十块；<br>买本书，几十块。</p>
<p>其实，看书最大的成本，是消磨了消磨时间的时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0625 - 趁热，干]]></title>
      <url>https://atjason.com/daily/2018-06-25.html</url>
      <content type="html"><![CDATA[<p>今天杭州温度飙升，一下子进入酷暑模式。</p>
<p>可怜我这边的进展还处于冷冰冰的时期。趁热，干，一定要在伏天结束前，有个热腾腾的结果。</p>
<p>感觉每天都在给自己打鸡血…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0624 - 明确自己想要的，就是力量]]></title>
      <url>https://atjason.com/daily/2018-06-24.html</url>
      <content type="html"><![CDATA[<p>这两天看完了《海龟交易法》，觉得挺好。其实书中的一些思想（比如 R 乘数），已经在其他书中读过了，这次算是得到的印证。</p>
<p>重要的是，自己是否要走上量化交易就条路，这是一个比较深层次的问题。只有这个明确了，才能确定下一步的行为。</p>
<p>有时，选择不是最重要的；重要的是，选择之后始终如一的坚持。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0623 - 开卷有益多读书]]></title>
      <url>https://atjason.com/daily/2018-06-23.html</url>
      <content type="html"><![CDATA[<p>这周的状态不太好，周末索性不干活了，读书。</p>
<p>果然，有收获。</p>
<p>书这种东西，主要的好处是：对于基础知识有系统性的介绍。相比于网上零碎的知识，书更适合于对一个东西有完整的理解。</p>
<p>对于快速变化的现在，我们的知识体系在快速的扩张。这就像是盖摩天大楼，我们可以很快地把房子盖高。但如果新出现的层不够宽、不够厚，是无法支撑上面更多新的层的。所以，一旦进入一个新的领域，在经历开始时的突飞猛进后，需要停下来做横向的学习，扎实基础。而书，则非常适合这一过程。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0622 - 今天真 2]]></title>
      <url>https://atjason.com/daily/2018-06-22.html</url>
      <content type="html"><![CDATA[<p>币圈今天真 2，没啥说的，回家睡觉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0621 - 需要成果的激励]]></title>
      <url>https://atjason.com/daily/2018-06-21.html</url>
      <content type="html"><![CDATA[<p>做了这么久，一直没有成果的激励，确实有些倦了、累了。</p>
<p>内生动力，也是需要外部刺激才能维持的。既需要反向压力，也需要正向激励。现在的压力也是够了，麻烦 God 给点正向激励吧，不然你觉得好意思吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0620 - 幸福，源自内心的安宁]]></title>
      <url>https://atjason.com/daily/2018-06-20.html</url>
      <content type="html"><![CDATA[<p>激情澎湃，可以；<br>跌宕起伏；可以；</p>
<p>可，更持久的幸福，源自内心的安宁。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0619 - 放弃总是难的]]></title>
      <url>https://atjason.com/daily/2018-06-19.html</url>
      <content type="html"><![CDATA[<p>做着做着，就忘记做之前的想法了：只是快速验证，还是已经明确、一定要做出来？</p>
<p>尤其是已经花了时间和心力的东西，总是感觉：只差一步了、再努力下，就会有结果了。殊不知，也许停下来，向后站一站，考虑下全局，就会发现：其实已经没必要继续投入了。</p>
<p>开新坑容易，放弃很难。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0618 - 放松也是需要体力的]]></title>
      <url>https://atjason.com/daily/2018-06-18.html</url>
      <content type="html"><![CDATA[<p>下午，娃睡了，老婆说：要不去看电影？一拍即合，立马订单出发。</p>
<p>爽是爽了，问题是：回来的时候，好困好累啊。因为其实出发前正是要睡觉的时候，结果午觉没睡，晚上困得要死。</p>
<p>看来，放松也是需要体力的；精力管理很重要啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0617 - 《黑镜》]]></title>
      <url>https://atjason.com/daily/2018-06-17.html</url>
      <content type="html"><![CDATA[<p>黑镜的第一集，果然都是看完要好几天才能恢复。</p>
<p>今天看的是 S04E06《黑色博物馆》，黑色二字确实是是妙。</p>
<p>科技这东西，本身是中性的，如同白色的雕塑。至于具体是好是坏，全靠人如何染色。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0616 - 生活]]></title>
      <url>https://atjason.com/daily/2018-06-16.html</url>
      <content type="html"><![CDATA[<p>今天，陪家人一起在运河边走。</p>
<p>夏日凉风吹着，家人在侧，小孩开心地对着运河指指点点。有蚊子叮咬，有看到飞鸟水中抓鱼的惊喜。</p>
<p>感觉，这就是生活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0615 - 达到预期目标]]></title>
      <url>https://atjason.com/daily/2018-06-15.html</url>
      <content type="html"><![CDATA[<p>本周，用一周的时间、在周五 23:00，实现了一个自己想的策略。当然，只是实现了个底子。接下来，还有很多的修改、改进。</p>
<p>走的时候，发现同一众创空间的人，点了很多小龙虾之类的夜宵。原来，现在已是世界杯期间了，大家都开始看球了。可惜自己不是足球迷，生生少了个乐趣。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0614 - 先紧后松]]></title>
      <url>https://atjason.com/daily/2018-06-14.html</url>
      <content type="html"><![CDATA[<p>做事情时，很容易陷入这样的困境：<strong>先松后紧</strong>。</p>
<p>刚开始时，感觉时间很多、要做的事情也很多，就几乎随便抓起一件事就开始搞。</p>
<p>做着做着，感觉时间不够用了，开始着急了。尤其是到了后期，开始拼命搞（其实是瞎搞）</p>
<p>与其如此，不如开始时先通盘考虑，然后再动手。最关键的：<strong>每一步都做当下最重要的事</strong>。前面紧了，后面自然轻松些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0613 - 通力合作]]></title>
      <url>https://atjason.com/daily/2018-06-13.html</url>
      <content type="html"><![CDATA[<p>一个人干活，有时会烦闷；有朋友一起干活，尤其是关键节点给力，感觉特别爽。</p>
<p>加油，现在是黎明前的黑暗，光明不远啦。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0612 - 思路不清晰]]></title>
      <url>https://atjason.com/daily/2018-06-12.html</url>
      <content type="html"><![CDATA[<p>今天又写了一天代码；比较遗憾的是，到晚上时，依然没有把新代码完整调通一遍。</p>
<p>回想一下，主要还是开始时没有清晰的设计，导致一方面写代码时有反复：写了又删；另一方面只能硬着头皮向前啃，速度自然慢。</p>
<p>下次，应该分层设计、分层实现。</p>
<ul>
<li>先考虑顶层逻辑，然后尝试用代码（也即接口层次）实现出来。这样，也可以发现设计上问题。</li>
<li>接下来，思考更细一层的东西，然后尝试代码实现。</li>
<li>逐层向下，直至完全实现。</li>
</ul>
<p>另外，也应该先实现最小功能集的东西，然后再慢慢加功能、完善。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0611 - 不多说，就是干]]></title>
      <url>https://atjason.com/daily/2018-06-11.html</url>
      <content type="html"><![CDATA[<p>今天有个地方做的不好：明明已经有明确的思路，却没有集中精力去实现；导致只是想法在脑子里空转，没有多少实际产出。</p>
<p>如果思路已经明确，不多说，就是干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0610 - 没地方缺爹]]></title>
      <url>https://atjason.com/daily/2018-06-10.html</url>
      <content type="html"><![CDATA[<p>大部分时候，我们都想找更牛的人合作，同时出让最少的权利、利益。没地方缺爹，没人想找个祖宗供着。</p>
<p>从待合作者的角度，都想干最少的活，拿最多的权利、利益。</p>
<p>要想合作成功，自然是居中取值。</p>
<p>最重要的，自己要有核心能力，要有能被人利用的价值。</p>
<p>有价值，一切好谈；<br>没价值，一切免谈。</p>
<p>目前的自己，好像拿不出这样的东西。同时，我也很不喜欢拼命向别人展示自己的价值。没办法，只能自己趟出一条路。这是最适合自己目前状态的出路了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0609 - 又给自己造了工具]]></title>
      <url>https://atjason.com/daily/2018-06-09.html</url>
      <content type="html"><![CDATA[<p>今天周末，没有碰项目上的代码，而是花几个小时，配置了 2 个服务器，算是又给自己造了个工具。</p>
<p>其实我还挺喜欢做配置服务器这种事。不过我也很清楚，到现在了还做这样的事，实在是太不应该了，除非我是专门做这个的。还好的是，我操作的每一步都有记录。下次再配置服务器，我也只是照着自己的记录，一步步重做而已，不需要费脑子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0608 - 不能难为自己]]></title>
      <url>https://atjason.com/daily/2018-06-08.html</url>
      <content type="html"><![CDATA[<p>这几天，一直强迫自己去看朋友的代码、理解他的思路。看了几天，也确实了解了一些，但明显感觉很难受、效率不高。</p>
<p>实在受不了了，今天决定搁置，自己开新坑，立马感觉神清气爽！</p>
<p>人啊，还是不能太难为自己，还是要做自己感兴趣的事，效率才可能高。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0607 - 市场的力量]]></title>
      <url>https://atjason.com/daily/2018-06-07.html</url>
      <content type="html"><![CDATA[<p>曾经，锤子系统检测到跑分软件后，会主动「负优化」，劣化跑分结果。</p>
<p>现在，老罗在发布会上展示高跑分结果。</p>
<p>市场，就是这么霸气。不论你多么骄傲，它更加傲骄。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0606 - 选择有累积属性的项目]]></title>
      <url>https://atjason.com/daily/2018-06-06.html</url>
      <content type="html"><![CDATA[<p>随时间累积<br>比如，开发一个 App，只要软件的运行环境（如 iOS 版本）没有大的变化，就可以在没有任何投入的情况下，持续销售。</p>
<p>随规模累积<br>比如网约车，车的数量越大，用户越容易叫到车，企业就越有竞争优势，越容易存活、赢利。<br>比如微信、Facebook 等社交软件，用的人越多，用户选择其他社交软件的可能性就越少。</p>
<p>相反的，没有累积属性的项目，一个明显的特征是：一旦投入停止，收入也立即停止。比如饭店。</p>
<p>我们的时间精力有限，且一定是处于不断下降的趋势。选择有累积属性的项目，一定程度可以抵消这一下降，保持收益。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0605 - 没感觉的 WWDC]]></title>
      <url>https://atjason.com/daily/2018-06-05.html</url>
      <content type="html"><![CDATA[<p>和一些小伙伴一直熬夜看了 WWDC，却感觉 WWDC 没感觉。</p>
<p>可能是我最近对 macOS/iOS 开发淡了很多，但更多的，确实是此次发布会这点不多。</p>
<p>正好，当天微软宣布收购 GitHub.</p>
<p>两件事放在一起，就很有意思：2 家近万亿美元市值的公司，到了这样的体量，下一步，该怎么走？这绝对是能把 2 家 CEO 头痛死的问题。</p>
<p>一个观感是：苹果依然在保持封闭，自己精雕细琢打磨产品，用高溢价的 iPhone 等产品，支撑着公司；相比之下，微软在继续依赖 Office 等传统金牛项目的同时，变得更多开放。这种开放，是在 GitHub 上最多的 commit 次数，是 VSCode 这样的编辑器，是在 iOS/macOS 系统发布 Office，等等。</p>
<p>到底哪个更好？不知道，我又不是 CEO… 😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0604 - 定个小目标]]></title>
      <url>https://atjason.com/daily/2018-06-04.html</url>
      <content type="html"><![CDATA[<p>今天，跟朋友一起聊了之后，「又」给自己定了个小目标。为期半年，定不负期望。</p>
<p>有了目标，果然就比较有动力了。为了实现自己的价值，为了家人过上更舒适的生活，努力。</p>
<hr>
<p>你对去年的选择、今年的现状不满？OK，希望明年此时不要依然有类似的想法。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0603 - 绝对优势]]></title>
      <url>https://atjason.com/daily/2018-06-03.html</url>
      <content type="html"><![CDATA[<p>走到现在，发现自己并没有绝对优势，没有护城河。</p>
<p>过去做的事，基本就是用基本知识 + 时间 + 体力，去和别人拼。在初级玩家的服务器中，还可以继续下去。可随着年龄的增长，总要被动着进入高级玩家的服务器，之前的打法，完全不入流了，基本成了别人练级的韭菜。</p>
<p>可能没这么惨，但理是这么个理。一刻不能回首往事，要 100% 向前看。用新的角度、新的方式，去面对高级玩家。如果发现一个东西自己很「擅长」，一旦要非常警惕：这个东西是否真的有战斗力、自己是不是仅仅手熟而已；莫陷入舒适区，默默地死去。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0602 - 《肖申克的救赎》]]></title>
      <url>https://atjason.com/daily/2018-06-02.html</url>
      <content type="html"><![CDATA[<p>今天，又看了一遍《肖申克的救赎》，好像是第 3 遍了。</p>
<p>感想就不再说了，只引用一句话：</p>
<p>《肖申克的救赎》，电影史上永远的第一。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0601 - 谁人不爱占便宜]]></title>
      <url>https://atjason.com/daily/2018-06-01.html</url>
      <content type="html"><![CDATA[<p>今天去看一个所谓「未来生活展」；说实话，挺无趣，连马桶（非智能的）、盆花的都来凑数。</p>
<p>印象比较深的，倒是在某品牌电脑上关注公众号、然后抽奖，我挺开心地拿走一直鼠标垫（然后取消关注…），因为我刚好需要一个鼠标垫。</p>
<p>妈很开心的一点时，排了大队，体验一个人脸识别打开「丰巢」快递柜，得到其中一包棉花糖礼品。</p>
<p>一点点甜头，就可以让人暂时放下理性，轻松被俘虏。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0531 - 打动我的细节]]></title>
      <url>https://atjason.com/daily/2018-05-31.html</url>
      <content type="html"><![CDATA[<p>今天去影院看《复联》，主角们长篇累牍的表演，好像并没给我留下太多印象，却是影片靠后的一个细节记得很清楚：雷神在造雷斧时，没有斧柄。于是，满场「我是格鲁特」的小家伙，砍下自己的手臂当作斧柄。</p>
<p>有时我们做的大部分事情，只是定个基调。真正打动人心的，可能是不经意的细节。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0530 - 相互扶持，结伙同行]]></title>
      <url>https://atjason.com/daily/2018-05-30.html</url>
      <content type="html"><![CDATA[<p>一个人，总是孤单；时间长了，总想找人说说话。</p>
<p>一位朋友说过：「我想找人一起干活，不是为了他能帮我什么，而是我想说话的时候，有人可以说话」</p>
<p>确实，很多时候，自己想，很累。跟人说话时，自己脑子同时想，好像就很容易想出新点子、新思路；这很神奇，我也时不时遇到过。</p>
<p>更重要的，总是一个人干，是不会有什么出息的。要办大事，还是要找牛人、抱大腿。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0529 - 银行的心机，总是比我们深]]></title>
      <url>https://atjason.com/daily/2018-05-29.html</url>
      <content type="html"><![CDATA[<p>之前被招行百般多次骚扰，推销其 e 招贷；出现一些原因，办了这个业务。</p>
<p>今天准备还款时，发现被「<strong>借款提前结清了</strong>」，一脸蒙逼，啥意思？</p>
<p>搜索了一下，大概明白了：我借了一年，目前刚好是半年。<strong>银行要提前收回借款，并同时下半年的利息照收不误。</strong>这不是坑吗？</p>
<p>于是，给银行打电话，得到的解释是：<strong>这笔钱只能用于个人消费，不能用于投资等业务</strong>。问题是，我根本没去投资啊？思来想去，最可能的是：<strong>我用这张卡买了币</strong>，于是被 zf 盯了，进而采取了这个措施。</p>
<p>同时，业务员轻车熟路地说：「我也想最大化地解决您的问题，多余的利息不收了，您看行吗？」果然，应该挺多人有类似问题。我也不想难为同样是打工的业务员，此事就此了解。</p>
<p>感叹：<strong>银(国)行(家)对金额的把控，实在是有些强到可怕</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0528 - 留点时间思考]]></title>
      <url>https://atjason.com/daily/2018-05-28.html</url>
      <content type="html"><![CDATA[<p>总是很忙，不一定是好事。没有大块时间代码时，心里也别急，正好用这个时间想想：</p>
<ul>
<li>具体层面，下一步做什么。</li>
<li>如果能实现预期目标，下一步做什么。</li>
<li>如果实在无法实现，又要怎么做。</li>
<li>等等。</li>
</ul>
<p>缺少时间做具体的事情，正好给了我们思考的契机，不至于 too busy to think.</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0527 - 生活不会自己变好]]></title>
      <url>https://atjason.com/daily/2018-05-27.html</url>
      <content type="html"><![CDATA[<p>家务事真是头大。</p>
<p>不过，要知道，生活不会自己变好。要解决问题，还是要花时间、花心思，去想、去找解决办法、去试。</p>
<p>我们习惯于工作，也擅长自己的工作，能在自己的工作中找到安全感、满足感。而同时，我们几乎都不擅长于家务事的处理。于是，遇到问题、一有时间，宁愿加班，也不愿回家、或解决家里的问题。</p>
<p>但，越忽视，问题可能越积越大，越来越难处理。至少要拿出对待工作的认真，花时间，才能慢慢改善，并一直维持在好的状态。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0526 - 改善工作环境]]></title>
      <url>https://atjason.com/daily/2018-05-26.html</url>
      <content type="html"><![CDATA[<p>今天有 2 件事值得说下：</p>
<ul>
<li>简单了解使用 node 输出纯文本的表格。有了这项技术，可以延缓项目中对前端的需求，因为对于表格，哪怕是纯文本的，基本的展示也足够了。</li>
<li>用了 BetterTouchTool；其实之前有用的，后来其改为收费后，就没再用了。现在又用上了，主要是配置快捷键。<ul>
<li>比如，我现在配置的 Command + Shift + 鼠标左击后，就可以在 VSCode 中返回上次编辑的位置，这还是非常方便的。尤其是在搭配键鼠时，右手不用离开鼠标，即可快速返回。</li>
</ul>
</li>
</ul>
<p>改善工作环境、改进工作能力，都是性价比非常高的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0525 - 多交流、多接触核心资源]]></title>
      <url>https://atjason.com/daily/2018-05-25.html</url>
      <content type="html"><![CDATA[<p>目前的时代，自己一个人躺在小黑屋里，是很难出成绩的。</p>
<p>要更多的走出去，多和不同的人交流，尽量接触核心资源。这样，才能找到更有价值的合作机会，找到最适合自己发挥的环境。</p>
<p>当然，首先自己还是得有值得别人合作（利用）的资本。只是自我学习、与人合作，要滚动着进行。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0524 - 别用极端的方式解决问题]]></title>
      <url>https://atjason.com/daily/2018-05-24.html</url>
      <content type="html"><![CDATA[<p>不能让情绪失控；情绪失控时造成的损失，需要很多的时间和代价来弥补。</p>
<p>如果不知道怎么做好，就什么都不做。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0523 - 沉浸与疲惫]]></title>
      <url>https://atjason.com/daily/2018-05-23.html</url>
      <content type="html"><![CDATA[<p>大脑真是个神奇的东西。</p>
<p>一方面，长久地沉浸在一个领域，才能深刻理解其间，才能有更深的作为。</p>
<p>但另一方面，如果总在做同一件事，大脑又很容易疲惫、效率降低。如果切换不同的事做，既可以在新的事上保持高效，又可以在大脑潜意识里继续思考原来的问题。</p>
<p>所以，到底闹哪样？</p>
<p>以我目前的感觉：</p>
<ul>
<li>60% 专注在一个领域</li>
<li>30% 学习研究相关的领域</li>
<li>10% 做完全不相干的东西，换换脑子</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0522 - 币圈人士]]></title>
      <url>https://atjason.com/daily/2018-05-22.html</url>
      <content type="html"><![CDATA[<p>今天又接触到一位币圈人士，主要帮助国外的币在国内包装、上市、推广。</p>
<p>基本上，我们还是有共识的：</p>
<ul>
<li>目前，币圈基本是泡沫，没有落地的东西，至少没有可以支撑目前市值的东西。</li>
<li>不过，目前泡沫还在变大。像几乎所有人一样，我们相信可以在这个泡沫变大过程中，赚点什么。</li>
<li>不过，现在币圈基本是头部在控制。小虾米想赚钱很难，基本都成了韭菜。</li>
<li>未来会怎样，还不好说。最明确的，便是币在金融领域的应用。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0521 - 今日不宜代码]]></title>
      <url>https://atjason.com/daily/2018-05-21.html</url>
      <content type="html"><![CDATA[<p>半休息了个周末，还明确了本周计划，本打算今天大干一场的，结果今天明显状态不佳，出不了什么活。再加上网络问题也来捣乱。哎，收推子回家。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0520 - 本周计划：3 个 5]]></title>
      <url>https://atjason.com/daily/2018-05-20.html</url>
      <content type="html"><![CDATA[<p>晚上，定了本周计划。</p>
<p>计划定完后，感觉人轻松了很多，瞬间不想干活了。于是，真的不干活了 😂</p>
<p>在楼下听科幻小说；恩，这好像是我一贯的习惯，让自己有个独立的空间，思绪也切换到另一个世界。这样，原来的自己，就能得到很好的放松。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0519 - 赶在 12 点前睡觉]]></title>
      <url>https://atjason.com/daily/2018-05-19.html</url>
      <content type="html"><![CDATA[<p>劳碌命啊。今天完成了 FIX 实现，项目的执行效率大大提高了，再观察一段时间。</p>
<p>经过一周的高温闷热后，今天的雨让天气凉快下来了。晚上下去走走，感觉很爽。恩，要在合适的时候做合适的事，不能对不起这么好的天气。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0518 - 今天感觉不错]]></title>
      <url>https://atjason.com/daily/2018-05-18.html</url>
      <content type="html"><![CDATA[<p>昨天实现的策略跑了一天后，今天数据表现不错。这样，就有信心、也有兴趣，继续优化这个策略了。</p>
<p>终于要有能拿得出手的东西了。</p>
<p>连续高强度工作一周了，带着安心的心，周末好好休息下，陪陪家人。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0517 - 看到一点曙光了]]></title>
      <url>https://atjason.com/daily/2018-05-17.html</url>
      <content type="html"><![CDATA[<p>这周原计划用 3~5 天实现一个新策略。经过几天疲惫的工作后，终于在今天（周四）基本完成了这个策略。</p>
<p>虽然，目前看起来还是有些问题，不过总体感觉还是有戏的。明天再好好想想，确定没有问题后，再在这个方向投入几天时间看看。如果还是有戏，就大量投入时间了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0516 - 需要跳出来思考]]></title>
      <url>https://atjason.com/daily/2018-05-16.html</url>
      <content type="html"><![CDATA[<p>已经持续目前的项目有做时间了。虽说程序方面一直在进步、完善，无奈从业务角度，迟迟没有进展，有些难受。</p>
<p>需要暂停代码的开发，跳出来好好想想，看目前的策略到底问题在哪、路在何方？</p>
<hr>
<p>昨天锤子 TNT 工作站发布，确实有些对我来说比较新奇的东西，可也有很多还不太完善的地方。发布会只讲了一会，但很明显：台上一分钟、台下十年功。批评这东西不成熟很容易，但要把它从无到有设计、实现出来，很难。</p>
<p>多给创新者一些理解和支持，他们会给你回馈更多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0515 - 堆了一天逻辑]]></title>
      <url>https://atjason.com/daily/2018-05-15.html</url>
      <content type="html"><![CDATA[<p>写了一天代码，堆了一天逻辑，总算是把流程走通了。</p>
<p>问题是，项目的良好运行，需要良好的外部环境。换句话说，靠天吃饭。恰好这段时间外部环境并不好，项目一直处于空转，不爽啊。</p>
<p>明天找更好的环境试试代码。这把刀应该还是锋利的，只是还没找到用武之地。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0514 - 以自己的节奏，为自己做事]]></title>
      <url>https://atjason.com/daily/2018-05-14.html</url>
      <content type="html"><![CDATA[<p>这才是最有效率、最有动力的做事方式。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0513 - 精力管理很重要]]></title>
      <url>https://atjason.com/daily/2018-05-13.html</url>
      <content type="html"><![CDATA[<p>昨晚想到一个点子，很兴奋，一直在前前后后地想，直到凌晨 1 点才睡；而且，睡觉时貌似也在想…</p>
<p>结果就是，没睡好。今天一天都不怎么有精神，反倒没做太多事。</p>
<p>回过头来看，还不如晚上早睡、白天早起，时晨边在楼下散步边想，效果可能会好些，至少白天还是干更多活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0512 - 社会达尔文主义]]></title>
      <url>https://atjason.com/daily/2018-05-12.html</url>
      <content type="html"><![CDATA[<p>老弱病残的狼，会脱离狼群、不成为大家的负担。这样，狼群可以没有重负，保持机动性和战斗力，不断延续。</p>
<p>听上去是不是很有道理？这就是「达尔文主义」：物竞天择、适者生存。</p>
<hr>
<p>老弱病残的人，当家人都不在家时，默默关上窗户、打开煤气…这样…</p>
<p>听上去是不是有些恐怖？这就是「社会达尔文主义」：物竞天择、适者生存。</p>
<hr>
<p>事分两面。想象一下，随意医疗水平的进步，未来某一天，当你推开家门，日复一日地看到几十位 100、200 岁的长辈、躺在床上、身上插满各种管子、靠人工器官和机器延续生命（见刘慈欣《中国 2185》）脑补一下这个画面，你会做何感想？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0511 - 谁在创新]]></title>
      <url>https://atjason.com/daily/2018-05-11.html</url>
      <content type="html"><![CDATA[<p>《创新者的窘境》介绍了，当公司规模越来越大时，会更倾向于用改良的方式，固守已有利润。</p>
<p>最近的《腾讯没有梦想》一文，也说了「腾讯正在丧失产品能力和创业精神，变成一家投资公司」</p>
<p>那么，谁在创新？谁最适合创新？我的感觉：</p>
<p><strong>创新，发于小处，应用于大平台。</strong></p>
<p>在一个有兴趣、有能力、没有 KPI、没有资方压力的环境里，容易创新。这样的环境，必不是成熟、壮大的环境。</p>
<p>而从创新走向应用，则是另一番景象。有 KPI、有资方压力、成熟壮大的环境，才有利于最大化地应用新技术。</p>
<p>如此循环。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0510 - 不贴标签，勿论长短]]></title>
      <url>https://atjason.com/daily/2018-05-10.html</url>
      <content type="html"><![CDATA[<p>不知道你身边有没有这样的人：聊着聊着，就开始给你贴标签、扣帽子。你解释吧，要半天，也觉得无聊、累；不解释吧，明明他贴的标签又不对，难受。</p>
<p>既然我们自己不愿意被随意贴标签，那么，也别随意给别人贴标签。凡事，就事论事、务实，不要动不动就形而上地拔高，非得抽象出个结论、生出一个标签。且不说你总结的能力如何，简化的标签，无论如何也不能 100% 反应真实情况，只是大脑的一种保护机制：因为它不能凡事都处理所有细节，只能大事化小、往自己已知的知识上靠。但通常，我们所知是如何匮乏，又如何能靠得上，结果更多是歪曲事实。</p>
<p>另外，何必说服别人？如果你觉得对方不对，最多亮出自己的观点、点出对方缺陷，即可。对方如能醒悟，自然最好。如果对方根本就不愿意接受别人的观点、调整自己，你又何必够强。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0509 - 打了鸡血]]></title>
      <url>https://atjason.com/daily/2018-05-09.html</url>
      <content type="html"><![CDATA[<p>今晚和朋友吃饭，又打了鸡血。</p>
<p>就是，我们又不笨、又不懒，凭什么赚不到钱呢？也许是我们太善良、太放不下架子、太没有胆子，一些来钱的路子，不想、不愿、不敢去做。但只要稍加调整，控制好风险，又有什么不能做的呢？</p>
<p>大家都在努力，都在接触越来越高的圈子。自己也要加油，不然可能叫吃饭都叫不出来了，那就真的是不堪了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0508 - 只做最重要的事]]></title>
      <url>https://atjason.com/daily/2018-05-08.html</url>
      <content type="html"><![CDATA[<p>本来今天带娃，时间就不多，结果还在服务器上浪费了几乎一天的零散时间，实在是太不应该了。</p>
<p>明天的目标只有一个，只围绕这个目标思考、做事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0507 - 努力努力再努力]]></title>
      <url>https://atjason.com/daily/2018-05-07.html</url>
      <content type="html"><![CDATA[<p>为了更多的余量，为了更多的可能性，为了家庭多一位成员，为了家人过上更好的生活，努力努力再努力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0506 - 有拿得出手的东西]]></title>
      <url>https://atjason.com/daily/2018-05-06.html</url>
      <content type="html"><![CDATA[<p>如果有拿得出手的东西，自然有话语权、谈判的乱码。</p>
<p>反之，那就闭嘴、夹起尾巴、别人让你做什么就做什么、老实点。</p>
<p>觉得这样不爽？那就努力让自己有拿得出手的东西。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0505 - Family 新解]]></title>
      <url>https://atjason.com/daily/2018-05-05.html</url>
      <content type="html"><![CDATA[<p>Family = <strong>F</strong>ather <strong>A</strong>nd <strong>M</strong>other, <strong>I</strong> <strong>L</strong>ove <strong>Y</strong>ou.</p>
<p>今天看到一个新解，感觉挺有意思、有意义。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0504 - 耐受性，不一定是好事]]></title>
      <url>https://atjason.com/daily/2018-05-04.html</url>
      <content type="html"><![CDATA[<p>人的耐受性很高，环境很差时，也能顽强生存。</p>
<p>这是好事，却也可能是坏事。当环境变差时，由于我们能慢慢适应这种差的环境，就不会去思考：为什么我要忍受这种差的环境？也就不会去尝试突破、改善、或者换个环境。</p>
<p>让环境适应自己。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0503 - app 域名真贵]]></title>
      <url>https://atjason.com/daily/2018-05-03.html</url>
      <content type="html"><![CDATA[<p>Google 开放了 .app 域名，我第一个想到的就是 tool.app；查了下，要 10 万人民币。哎，搞不起…</p>
<p>其实关注 .app 域名很久了，奇怪为什么 Google 磨叽这么久才上线。要是 2 年前上线，价格加个 0 估计都没问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0502 - 当政府无能时]]></title>
      <url>https://atjason.com/daily/2018-05-02.html</url>
      <content type="html"><![CDATA[<p>去景点游玩，由于人多分两辆出租车。相同的上下车时间、相同的路线、都在打表，结果：一辆车计价 38，另一辆计价 43.8；什么意思，就不用我解释了吧。</p>
<p>如果是滴滴入驻这一城市，比较滴滴显示的价格，与出租车计价器上的价格，你的第一反应：你更愿意信任哪个是更准确的？在公信力和管理能力上，也许政府已经输给了企业。</p>
<p>政府总说：有些市场不能完全放开（比如出租车），一放开就乱了。可就是出租车这个政府严格管理的领域，问题依然颇多，计价器只是最普通的一个而已。</p>
<p>别再埋头当瞎子，当别人叫不醒装睡的你，就不会继续叫你，而是不带你玩。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0501 - 非理性决策]]></title>
      <url>https://atjason.com/daily/2018-05-01.html</url>
      <content type="html"><![CDATA[<p>今天帮家人在网上买东西。挑了半天挑好了，结果下单时，原本写着包邮的东西，卖家要收 20 元运费。</p>
<p>这时，该怎么办呢？</p>
<p>想来，最正常的反应是气不过，索引取消订单、甚至投诉卖家虚假宣传。我也是这么干的，只是没投拆。</p>
<p>不过，事实上，由于要买的东西比较小众，淘宝上的卖家并不多。询价了几家，也只有这家是通过微信联系上的，可能因为今天是五一假期。取消订单后，一时间还真没找到合适的第二家。</p>
<p>关键的，就在知道要额外收邮费的当时，人肯定是会感情占据大脑的，不会想上述那些后果，也就很难跳出来从理性的角度考虑。</p>
<p>反过来，当自己是卖家的身份，需要考虑这种非理性因素。即，要清楚的知道买家是非理性的，不要因为一些细小的因素，激起买家的感性冲动，导致原本可以成交的订单打了水漂。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0430 - 工业可靠性]]></title>
      <url>https://atjason.com/daily/2018-04-30.html</url>
      <content type="html"><![CDATA[<p>在实验室条件下完美、在试验环境下正常的策略，在工业生产环境下，可能并不行。</p>
<p>比如，设计精巧的外卖 App，在真正户外强光、大雨等环境下，可能非常难点击、非常容易出错。</p>
<p>比如，小批量生产没有问题的生产线，在大批量、长时间工作时，可能会遇到粉尘、发热、静电、风等正常又细微的现象，带来严重的问题。</p>
<p>如果是在做技术可行性研究，可以选取最新的、性能强劲的技术。但要真正用于生产，最好选择可靠性更高、维护成本更低的方案。想想，如果你一年前开发的产品，在一年后出了问题，你还有能力、有意愿去解决吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0429 - 通过交易实现财务自由]]></title>
      <url>https://atjason.com/daily/2018-04-29.html</url>
      <content type="html"><![CDATA[<p>最近在看《通向财务自由之路》这本书，虽是刚刚开始，却也开始有了些思考。</p>
<p>首先，财务自由并不是说有花不完的钱，而是自己不用花时间、或者花很少的时间，所取得的收入，已大于自己的支出。</p>
<p>这里所谓的交易，在书中主要是指股票、期货等交易。放在现在，自然也一定要包含币圈的交易。</p>
<p>在币圈，有一点非常不同于股票市场：币可能有无数币的涨幅。相对于股票市场，操作上就多了一重成本：现在卖出，等将来币价大涨时，自己现在如果不卖出会得到的收益。因为，通常股票并不会、或者说在较短时间内，并不会有 10 倍及更多的收益。</p>
<p>而这一点，在币圈，又是如此常见。因为，不能直接简单套用股票市场的操作方式，还需要考虑币涨跌幅惊人的实际情况。当然，实际差异还有很多，比如 24 小时交易，不规范，无监管，等等。</p>
<p>回到文章主题：是否有可能通过交易实现财务自由？有，而且比较有可能。更重要的问题：是否有必要、或者说这么做是否值得？<strong>将自己宝贵的时间全部投入到这些数字的增加上，以后真的不会后悔吗？</strong>其实，真的很难说。待到银发时回首，<strong>一生富贵，可能并不如用一生去做好一件普通的事。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0428 - 准备度假]]></title>
      <url>https://atjason.com/daily/2018-04-28.html</url>
      <content type="html"><![CDATA[<p>连日来紧赶慢赶，终于在五一前发布一个可以工作的版本，可以安心休假了。</p>
<p>休假期间，不准备干项目相关的事，准备学习技术和交易两部分。</p>
<ul>
<li>看完交易相关的一本书</li>
<li>消化之前积累的 node 相关的知识点</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0427 - 乙方的心态]]></title>
      <url>https://atjason.com/daily/2018-04-27.html</url>
      <content type="html"><![CDATA[<p>虽说甲方（看起来）很爽，但工作或生活中，我们难免会做乙方；既然是乙方，就要有乙方的心态：钱是甲方给的，活是自己干的。</p>
<p>怎么说呢？</p>
<p>既然甲方给钱，自己有资本提要求，介入自己干活的细节。这过程中，很可能会让自己不爽。首先，如果你有能力摆脱甲方、不做乙方，当然最好。可既然已经是乙方了，就只能想办法把事情做好。</p>
<p>既然事情是自己做的，就一定要有自己的节奏。不论甲方如何说、如何要求，也要清楚自己以什么的节奏、步骤，才能把事情做好。甲方的「指手划脚」，很有可能是「心里怕」，因为他很可能并不理解实现技术，但又担心你使坏、偷懒、做不好，于是无法控制自己，一定要多说上几句。这时候，很重要的一点：管理甲方心里预期，并满足之。不能让甲方有过高、过急的期望；同时，自己又能及时、甚至超预期地满足其预期，事情自然就好办了。</p>
<p>你做乙方时，有多不爽？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0426 - 大家都喜欢独当一面]]></title>
      <url>https://atjason.com/daily/2018-04-26.html</url>
      <content type="html"><![CDATA[<p>工作中，我们希望把事情交待给一个人后，既不担心他来烦我、问琐碎的问题，又不担心他完不成，只等他把满意的结果拿过来。</p>
<p>代码中，我们希望把事情给这样一个模块：既没有什么依赖，又能保证把事情做好。</p>
<p>大家都喜欢有人能独当一面，享受别人的劳动成果。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0425 - 意外之喜，争得缓冲时间]]></title>
      <url>https://atjason.com/daily/2018-04-25.html</url>
      <content type="html"><![CDATA[<p>今天，项目上有点意外之后，金主很开心，于是对进度的容忍度也高了很多。</p>
<p>本打算发布一个新功能的，结果还是没上成。为什么呢？想想：</p>
<ul>
<li>js 的 await/async 使用不熟悉，漏掉了 await，导致花了不少时间</li>
<li>之前遗漏的一些小问题，单个解决并不复杂。但关键是都挡在解决大问题的主路上，不解决不行，解决又花了时间</li>
<li>到了晚上，脑子已经昏沉，对于逻辑复杂的代码，只能发现问题、解决问题、解决问题的时候引入新问题、继续解决问题…而不能在一开始就写出正确的代码</li>
</ul>
<p>休息，明天搞定之。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0424 - 选用标准组件]]></title>
      <url>https://atjason.com/daily/2018-04-24.html</url>
      <content type="html"><![CDATA[<p>今天在做一个功能时，需要使用到队列。其实代码里已经有一个队列的实现，但我觉得有些麻烦，于是自己简单实现了一个队列。</p>
<p>现在看来，虽说整体不复杂，看起来也正常运行了。但对于队列这种东西，出问题其实很难排查。可能一个细小的问题，可能要过很久、被一个奇怪的 Bug 纠结不清时，才能发现。</p>
<p>这次既然已经实现了，就先用着吧。下次遇到类似的问题，一定要先好好学习标准、常用组件，不要在这种事上重复造轮子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0423 - 「晚上不要太晚回来」]]></title>
      <url>https://atjason.com/daily/2018-04-23.html</url>
      <content type="html"><![CDATA[<p>今天其实有点累，状态不是太好；一天脑子里都回荡着出门时，妈说的这句话：晚上不要太晚回来。</p>
<p>做父母的，都是心疼儿女的。</p>
<p>小时候，爸妈宠着我们，随我们作；<br>爸妈大了，我们宠着他们，随他们作。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0422 - 为用户解决问题]]></title>
      <url>https://atjason.com/daily/2018-04-22.html</url>
      <content type="html"><![CDATA[<p>这两天苹果服务器应该是有问题了，好几位用户报 Bug，说无法从 App Store 下载安装应用。这绝对是苹果的锅了，可用户却不一定这么认为。</p>
<p>关键的，影响了用户解决问题。其中，一位用户比较关键使用 iText 识别文本，是位律师朋友，需要识别拍照中的卷宗。怎么办呢？实在没办法，我临时出了个无限制的版本，让他应急。他表示非常感谢，帮了他大忙。</p>
<p>恩，为用户解决问题，我也很开心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0421 - 不带手机出门]]></title>
      <url>https://atjason.com/daily/2018-04-21.html</url>
      <content type="html"><![CDATA[<p>上午跟家人一起出去玩，可是，国外的团队一直在手机上讨论问题，可怜我还得在手机上用英文打字回复，基本都在干这事。不仅自己没休息好，还严重影响家人的心情。</p>
<p>下午的时候，我干脆把手机放家里，然后再出门。果然，虽然我脑子里还是在想项目的事，但至少这是我自己主动想的，不会觉得有被迫的感觉，也比较自由。而且，回家的时候检查手机，其实也没什么大不了的事。毕竟不是国家元首，地球离了我照样转。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0420 - 享受创造的快乐]]></title>
      <url>https://atjason.com/daily/2018-04-20.html</url>
      <content type="html"><![CDATA[<p>我挺喜欢这种感觉：创造出世上本没有的东西。</p>
<p>这两天准备再创造个东西；虽是周末，但自己还是很愿意花时间来思考、代码。期待这个新工具诞生的时刻。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0419 - 保持兴趣]]></title>
      <url>https://atjason.com/daily/2018-04-19.html</url>
      <content type="html"><![CDATA[<p>兴趣总是把事情做好的前提之一。</p>
<p>比如，做事遇到麻烦了，很难进行下去了，或者就是觉得累了、枯燥了…都会使兴趣极速下降，总想着尽快了结了。在这样的心态下，事情肯定做不好；而且，也很难了解。</p>
<p>如果没兴趣了、或者不想做下去了，不做，可能比硬着头皮做，更好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0418 - 当断则断]]></title>
      <url>https://atjason.com/daily/2018-04-18.html</url>
      <content type="html"><![CDATA[<p>不在自己不认可的事情上花时间；哪怕一分钟，也是对生命的亵渎。</p>
<p>如果当下环境让自己有太多的 <strong>不得不</strong>，那不应该因为 <strong>不得不</strong> 而做，而是 <strong>不得不</strong> 换个环境。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0417 - 尊重自己的时间]]></title>
      <url>https://atjason.com/daily/2018-04-17.html</url>
      <content type="html"><![CDATA[<p>这两天自己在做的事情，自己不是非常认同。虽然我已经从逻辑推理上知道了，这样做的效果并不好。但由于无法仅从理论上说服对方，我必须把东西先实现了，然后再来说服对方。</p>
<p>这相当于：我已经知道这是一坨屎了，但对方认为不是。我必须把这坨屎仔细地堆成屎的样子，这样他才会说：哦，这真的是一坨屎。</p>
<p>这事，真跟屎一样。</p>
<p>这样是不对的，我太不尊重自己的时间了。Anyway，忙完这段，我要好好反省下了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0416 - 开放自己的接口]]></title>
      <url>https://atjason.com/daily/2018-04-16.html</url>
      <content type="html"><![CDATA[<p>像程序一样，开放自己的接口，这样才能吸引到更多的人跟自己合作。</p>
<p>开放什么？以什么形式开放？怎么让别人知道？</p>
<p>恩，需要再想想。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0415 - 可能性与拥有，哪个更重要？]]></title>
      <url>https://atjason.com/daily/2018-04-15.html</url>
      <content type="html"><![CDATA[<p>不用你现在会的语言（如中文、英文），你能「说」上一段话吗？</p>
<p>你会发现，被语言驯化之后，你已经发不出几个音了。</p>
<p><strong>所谓习得，可能只是于万千可能中，固化其一，然后抛却万千可能。</strong>值不值？看你怎么看了。得到的同时，就是在放弃。</p>
<p>类似的，爱因斯坦说过：</p>
<ul>
<li>想象力比知识更重要，因为知识是有限的，而想象力概括着世界的一切，推动着进步。</li>
<li>Imagination is more important than knowledge, because knowledge is limited, but imagination summarize everything in the world, driving the progress.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0414 - 发现并构建业务的能力]]></title>
      <url>https://atjason.com/daily/2018-04-14.html</url>
      <content type="html"><![CDATA[<p>今天跟朋友吃饭，聊起了较长期规划的问题。聊着聊着，我发现自己对这个领域感兴趣：发现并构建业务的能力。</p>
<p>简单的说，就是能发现商机、什么能赚钱，哪些人，有什么问题，需要什么解决方案，是否有支付意愿和支付能力，市场环境如何，等等。诸如此类的问题，其实我在做自己 App 的时候，其实每个环节都多次历练过，但就是盘子太小了。我需要考虑更大的项目，在更多资源的加持上，试验组更大的局。</p>
<p>恩，这个有意思，今年会在这个方向上努力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0413 - 阶段性划个句号]]></title>
      <url>https://atjason.com/daily/2018-04-13.html</url>
      <content type="html"><![CDATA[<p>果然，今天顺利地完成了预计的任务，项目可以阶段性地划个句号。</p>
<p>这周真累啊！</p>
<p>连续干到半夜，到家时全家都睡了。不过，看着床上酣睡的萌宝，心里真是很舒服，一点都不觉得累。</p>
<p>周末休整下，下周继续，争取让项目有更大、更稳定的收益。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0412 - 改善工作环境]]></title>
      <url>https://atjason.com/daily/2018-04-12.html</url>
      <content type="html"><![CDATA[<p>今天把一个比较大的任务提交了，心里轻松了。不过人比较累，晚上就没再做难度大的开发，就做了点让自己舒服的事：</p>
<ul>
<li>整理了工位（如果可以算是工位的话…），把电脑架起来，又用上了鼠标。</li>
<li>优化了 VSCode 配置，比如添加 Bookmarks 插件，调整快捷键。</li>
<li>做了一个工具工程，替换平时需要人肉做的事。</li>
</ul>
<p>晚上好好休息、收拾心情，明天好好再干掉另外一个大的任务。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0411 - 堆栈溢出了]]></title>
      <url>https://atjason.com/daily/2018-04-11.html</url>
      <content type="html"><![CDATA[<p>今天搞了一件很大的事，结果搞得很晚、很累。</p>
<p>是这样的，本来就是件全新的、很复杂的事。在做的过程中，不断有新发现的要做的事，相当于一个叉路。结果，叉路又分出叉路。</p>
<ul>
<li>有的叉路，可以先搁置；</li>
<li>可有的叉路问题不解决，主路就无法继续。</li>
</ul>
<p>叉路太多，反而不能充分考虑主路上的问题，堆栈就溢出了。</p>
<p>下次一定要尽可能地把大事情分解，在可预见的时间内，充分搞定一件小事。然后，再继续下一件小事。最后，小事拼起来就完成了大事。这样的节奏是比较可靠的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0410 - 指出问题时，别给解决方案]]></title>
      <url>https://atjason.com/daily/2018-04-10.html</url>
      <content type="html"><![CDATA[<p>在与人协作时，我们在指出别人的问题时，通常会「善意」地给出自己的解决方案。这虽是善意的，但强烈不建议这么做，有诸多问题：</p>
<ul>
<li>这是别人的猴子，别急着背自己身上。</li>
<li>你的方案可能很蹩脚，别拿出来丢人了。</li>
<li>真正做事的人，通常考虑更全面。你虽能指出问题，但并不意味着你比对方了解更深入。贸然提方案、甚至是假定问题的源头，甚至会误导对方。</li>
<li>感情上，没有人愿意被别人指出问题，更别说用所谓「解决方案」来加深刺激了。尤其对于主动性很强的人，你只要稍加点拨，他自会明白。放手让对方解决，效果通常比你预想的更好。</li>
<li>如果是下属，你需要锻炼他的主动性，而不是踢一脚动一步。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0409 - 生活需要润滑剂]]></title>
      <url>https://atjason.com/daily/2018-04-09.html</url>
      <content type="html"><![CDATA[<p>工作不顺心可以换，而亲情却不能割舍。亲人间的相片，比同事更需要智慧，因为你无法放弃，只能继续下去。</p>
<p>生活，不只是生涩的逻辑，还需要情感的滋润。这些滋润，让生活多了一些弹性，更能适应那些磕磕绊绊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0408 - 《三体》真是经典]]></title>
      <url>https://atjason.com/daily/2018-04-08.html</url>
      <content type="html"><![CDATA[<p>今天又快速看了一遍《三体》；不是书，还是一部动画。</p>
<p>动画？对，是一部动画，但却是三体迷必看的动画，不信你看：</p>
<ul>
<li><a href="https://www.bilibili.com/video/av4950805?spm_id_from=333.338.v_desc.1" target="_blank" rel="external">【我的三体第一季】合集</a></li>
<li><a href="https://www.bilibili.com/video/av4912442?spm_id_from=333.338.v_desc.2" target="_blank" rel="external">【我的三体第二季】罗辑传</a></li>
</ul>
<p>如果看完后悔，找我。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0407 - 感受了一把假日游]]></title>
      <url>https://atjason.com/daily/2018-04-07.html</url>
      <content type="html"><![CDATA[<p>忍不住媚俗了一下，在清明节最后一天，去了趟 50 公里外的景点游玩。去的路上，意外发现高速免费，还挺开心。不过，当时就发现反向车道车流很大，心里就担心晚上回来堵。</p>
<p>果不其然，4 点左右回来，就已经开始堵了。去时 90 分钟车程，回来开了 3 小时。还好是自动档，不然左脚肯定废了。</p>
<p>其实，来回路上 5 个小时，在景点加吃饭才玩了 4 小时…这么看下来，确实不太划算。能错峰出行最好了，不至于在路上花太多时间。</p>
<p>回来的路上，意外发现富春江边真是美，依山伴水，风水绝佳。遗憾的是，妈特别想去住宅那边走走，可惜娃睡觉，妈在车里抱着，且怕回来路上堵，没看成。下次一定弥补妈这个遗憾。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0406 - 接受异见，有多难]]></title>
      <url>https://atjason.com/daily/2018-04-06.html</url>
      <content type="html"><![CDATA[<p>真的，接受和自己不同的意见，太难了。</p>
<p>总觉得自己是对的，总觉得自己已经考虑很全面了，当别人提出不同意见、甚至是更好的意见时，其实都是很难接受的。也许是自信，亦或是人性的缘故，人更愿意呆在自己的小世界里。</p>
<p>不过，这明显是不对的，太容易固步自封了。下次，遇到不同意见时，首先想的不是反驳，而是要想他的思维角度是否独特，是否确实有自己未考虑到的地方。</p>
<p><strong>驳倒对方不是上的，目的是提高自己。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0405 - 自由是宝贵的]]></title>
      <url>https://atjason.com/daily/2018-04-05.html</url>
      <content type="html"><![CDATA[<p>这里的自由，不只是说人身自由，而是更宽泛的，比如：</p>
<ul>
<li>想做什么、不做什么</li>
<li>什么时候做、怎么做、做成什么样子</li>
</ul>
<p>自由，更多的时候，不是可以选择做什么，而是可以拒绝不做什么。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0404 - 以后不在节前发版本了]]></title>
      <url>https://atjason.com/daily/2018-04-04.html</url>
      <content type="html"><![CDATA[<p>明天就是清明小长假了，今天胆肥发了个改动较大的版本。果然，出问题了…</p>
<p>于是，大半夜的加紧修改。</p>
<p>哎，郁闷，以后不在节前发版本了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0403 - 今天爽了点]]></title>
      <url>https://atjason.com/daily/2018-04-03.html</url>
      <content type="html"><![CDATA[<p>今天不仅完成了预计的 2 件事，而且项目上还有一个意外之喜，很开心 😀</p>
<p>好吧，我也是成就激励型动物，做事情有好的结果，自然很开心，也就更有动力做下去。</p>
<p>不过，得意不能忘形，还是要审慎一点，尤其要想想为什么之前没有考虑到、导致这个本该早些到来「意外之喜」，被自己遗漏掉了。以及，会不会还有别的遗漏的细节。恩，要反思下。目前看来，主要还是自己对业务理解不够透彻。并且，在一知半解的情况下，反而以为自己已经完全掌握了；汗颜。</p>
<p>明天再坚持一下，把项目可预见的一些细节优化下，然后开开心心地过个清明假期。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0402 - 有点不爽了]]></title>
      <url>https://atjason.com/daily/2018-04-02.html</url>
      <content type="html"><![CDATA[<p>今天几件事不爽：</p>
<ul>
<li>到深夜的时候，mongo 的一个查询没搞定。搞了很久，都没搞定，难受。关键的，并不是系统学习 mongo 查询后去应用，而是面向 Google 解决。如果问题解决还好，如果没解决，纯粹是浪费时间。</li>
<li>在项目中的位置和起的作用，不能让我满意。</li>
<li>带小孩的事，还不能很好的安置，娃大了，妈带开始有些吃力了。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0401 - 清除鞋里的沙子]]></title>
      <url>https://atjason.com/daily/2018-04-01.html</url>
      <content type="html"><![CDATA[<p>今天项目本身没做什么，不过做了些周边的事情。比如，在忙项目时，一些周边的事情来不及做被压下来了。而在项目不忙的现在，就是可以拿出来干掉。比如：</p>
<ul>
<li>清理桌子</li>
<li>iTerm 中按 Alt + 方向键移动一个单词</li>
<li>退淘宝卖家消费者保障计划押金</li>
<li>…</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0331 - 放松也是门技术活]]></title>
      <url>https://atjason.com/daily/2018-03-31.html</url>
      <content type="html"><![CDATA[<p>什么都不做、挥霍，并不是放松，因为完了之后，反而会有内疚、负罪感之类的东西。</p>
<p>去做，去淋漓尽致的做，然后那短暂的虚空，便是放松。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0330 - 该休息了]]></title>
      <url>https://atjason.com/daily/2018-03-30.html</url>
      <content type="html"><![CDATA[<p>今天有些昏沉，晚上的时候，因为一个低级失误，调试了 2 个小时，没解决问题。到最后才想起来，是因为服务器的环境没有更新，导致运行结果不对。哎，当时那个郁闷啊。</p>
<p>睡觉，明日再战。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[新版 iText 集成腾讯、百度、Google 三引擎]]></title>
      <url>https://atjason.com/daily/2018-03-29.html</url>
      <content type="html"><![CDATA[<p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&mt=12&at=1000lv4R&ct=iText_me" target="_blank"><img src="https://ps.toolinbox.net/jfyjb.png" width="256"></a></p>
<p><a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> <strong>是一款从图片中识别文字的 OCR 工具。</strong></p>
<p>之前，iText 使用 <strong>腾讯、Google</strong> 双引擎进行文字识别，一直工作的好好的。可是，最近接连有用户反馈，使用腾讯识别时时不时会出错，换用 Google 则完全正常。奇怪，怎么回事呢？</p>
<p>我特意联系了腾讯 AI 开放平台产品经理，得到的反馈是：确实有这个问题。原因应该就是用户访问量大，腾讯预设的服务器承受不了，就出现了上述超时所引发的错误。对此，他们已经计划增加服务器，届时问题会有所缓解。</p>
<p>可，iText 的用户等不了啊，已经习惯了用 iText 识别图片中的文字，一旦不能用了，还真是有些难受。于是，我加紧集成了 <strong>百度 OCR</strong> 服务，就有了今天发布的新版。</p>
<p><img src="https://ps.toolinbox.net/qnwk5.jpg" alt=""></p>
<p>至此，iText 已集成 <strong>腾讯、百度、Google 三引擎</strong>，世界大厂为你识别文本，准确可靠。</p>
<p>欢迎 <a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">去 App Store 更新 iText</a>，有任何问题建议，欢迎与我联系：</p>
<ul>
<li>发邮件至：<a href="mailto:iToolinbox@gmail.com" target="_blank" rel="external">iToolinbox@gmail.com</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0328 - 一日三更]]></title>
      <url>https://atjason.com/daily/2018-03-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hwcpq.jpg" alt=""></p>
<p>今天一口气给 iPaste、iTimer、iPic 都更新了一把。主要是之前积压了一些事，最近有时间，就突击更新一下。</p>
<p>不过这样并不好，毕竟在不同的 App 之间切换，脑子还是有些乱的。最多也就适合改些 Bug，根本不适合增加新功能、或做大的变动。</p>
<p>希望明天全部通过。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0327 - 结果让过程有意义]]></title>
      <url>https://atjason.com/daily/2018-03-27.html</url>
      <content type="html"><![CDATA[<p>不管是做产品、还是做项目，中间过程肯定有很多挫折、烦闷、抓狂。驱动我们克服这些困难的，很大程度是好的结果这个大饼。</p>
<p>如果没有大饼，我们会少了很多动力；<br>如果做好了没有大饼，我们会很郁闷。</p>
<p><strong>做什么，不重要；重要的，是能把什么做成。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0326 - 寺庙与互联网+]]></title>
      <url>https://atjason.com/daily/2018-03-26.html</url>
      <content type="html"><![CDATA[<p>今天跟朋友聊天吃饭，说到一个有意思的话题：<strong>寺庙与互联网+</strong></p>
<p>寺庙其实有很多痛点，举个例子：<strong>功德箱</strong>，也就是烧香时往里扔钱的那个箱子。一个很头大的问题：<strong>有人偷</strong>。比如，拿钩子进去钩、拿胶水进去粘、<strong>甚至直接把箱子搬走…</strong></p>
<p>怎么办呢？最基础的，就是加装监控，但其实效果不佳。也有寺庙直接粘支付宝二维码（好吧…），但好像又少了扔钱（好吧，我总感觉是扔钱，不是捐钱）的仪式感。</p>
<p><strong>怎么既解决收钱方便、不怕被偷，又不影响扔钱人的心情呢？</strong>这其实是个问题。具体的方案我就不展开说了，大家可以自己发挥。</p>
<p>这，仅仅是寺庙的一个痛点，其他还有很多（好吧，说实话，在听朋友介绍之前，我都不知道…）</p>
<p>另外，从信徒的角度，也有不少需求。比如，<strong>想求子，哪家寺庙灵验？</strong>（感觉很像想看病，哪家医院、哪位医生医术高明）</p>
<p>可见，<strong>无论是 B 端（寺庙）还是 C 端（信徒），这里面都有很多可做的事。尤其，这是个小众、未被发掘的蓝海，很值得玩味。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0325 - 明天真的要切回主战场了]]></title>
      <url>https://atjason.com/daily/2018-03-25.html</url>
      <content type="html"><![CDATA[<p>今天又搞了一天项目。</p>
<p>现在整个人感觉昏天黑地的。一方面是持续工作时间太长了，没有彻底地休息一下，脑子一直是紧绷的状态。另一方面是项目虽然做的差不多了，但结果却不是太满意，让人提不起劲。</p>
<p>Anyway，明天一定要回来了，好好伺候我的上帝们。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0324 - 切回主战场]]></title>
      <url>https://atjason.com/daily/2018-03-24.html</url>
      <content type="html"><![CDATA[<p>今天，手上的项目告一段落，终于可以切回改动自己的 App 了。</p>
<p>这些天真是难受，总是被用户报问题，说白了就两个问题：</p>
<ul>
<li>腾讯 OCR 服务并发太差了，时不时出现无法识别的情况，严重影响 iText 用户体验。</li>
<li>自己国外的服务器莫名被那个了，无法访问。进而导致 iPic 无法上传图片至微博图床。</li>
</ul>
<p>庆幸的是，还好有 iPaste，可以快速回复这些完全类似的问题，不然总复制粘贴，更加痛苦。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0323 - 做自己能掌控的事]]></title>
      <url>https://atjason.com/daily/2018-03-23.html</url>
      <content type="html"><![CDATA[<p>不喜欢跟着别人走的感觉。</p>
<p>做事，就要做自己能掌控的事。就算不能掌控，也至少有一定的影响力，而不只是别人想法的实施者。</p>
<p>要掌控，一方面要有想法，既自己知道要做什么。也要有能力，既把它做出来；或是把会做事的人聚集起来，把它做出来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0322 - 事情越做越多]]></title>
      <url>https://atjason.com/daily/2018-03-22.html</url>
      <content type="html"><![CDATA[<p>本想着这两天把事情收网的，没想到越做越多。</p>
<p>事情的复杂度和随机性超出了之前的预期，不断遇到新问题。当然，这和之前写的代码适应性不高也有关系。</p>
<p>事到如今，也只能硬着头皮，一个问题一个问题去解决了。争取早日结束这个事情。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0321 - 最近不太专注]]></title>
      <url>https://atjason.com/daily/2018-03-21.html</url>
      <content type="html"><![CDATA[<p>本来呢，我是独立开发者，做自己的产品。<br>近来，跟一个朋友做项目。虽不是外包，但也差不太多。<br>最近，又一个朋友想拉我一起做外贸。</p>
<p>这三个事情并行着做，感觉都做不好，最多做到凑合的程度。</p>
<p>接下来一两个星期再好好想想，至少要减少到 2 件事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0320 - 该收获时就收获]]></title>
      <url>https://atjason.com/daily/2018-03-20.html</url>
      <content type="html"><![CDATA[<p>忙了这么些天，这个项目终于要告一段落了。这两天收收尾，出个结果，对自己的时间有个交待。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0319 - 勾搭产生价值]]></title>
      <url>https://atjason.com/daily/2018-03-19.html</url>
      <content type="html"><![CDATA[<p>今天干了皮条生意，把一个想做外贸和一个在国外做生意的人勾搭在了一起。</p>
<p>另外，请专业的人做专业的事，是性价比最高的事。比如在项目前期，要考查项目的可行性，与其自己亲自去调查、甚至直接上马项目，不如找专业的人做调研，出个分析报告。花了小钱，避免了可能的、未来大的损失。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0318 - 又叹时间快]]></title>
      <url>https://atjason.com/daily/2018-03-18.html</url>
      <content type="html"><![CDATA[<p>一不小心，三月都过一半了；<br>一不小心，路边的玉兰花都谢了；</p>
<p>前段时间醉心项目，不问前程。现在项目有阶段性的成果，是时候边做边看了。除了具体的做事，还要时不时跳出来看看。另外，也得开始接触一些新的人和事，加入新的思路。</p>
<p>这个过渡阶段很重要，既要收尾上个阶段的事，有收获；更重要的，要明确下阶段的事，不迷茫。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0317 - 流水账写不下去了…]]></title>
      <url>https://atjason.com/daily/2018-03-17.html</url>
      <content type="html"><![CDATA[<p>其实最近这一周我很忙，做了很多事，但暂时不想在博客里说，等成了再说吧。</p>
<p>不过，自身的成长好像并不多，因为大部分时间都花在了堆业务上。这其实是很有风险的事：如果业务做成了，还好；如果做不成，基本等于这段时间全浪费了。</p>
<p>不管做什么，都不能忘了自身的提高。业务不行总是可以做新的，但自身的能力，是无可替换的，是最宝贵的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0316 - 不错不错]]></title>
      <url>https://atjason.com/daily/2018-03-16.html</url>
      <content type="html"><![CDATA[<p>今天任务进展不错，核心部分已经推进的差不多了，接下来就是优化了。</p>
<p>比较遗憾的是，今天本打算和家人一块出去看郁金香呢，结果下雨、天也阴冷，只能作罢。要知道，杭州的春天美且短暂，再不出去，可能就得等明年了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0315 - 出成果、出成果]]></title>
      <url>https://atjason.com/daily/2018-03-15.html</url>
      <content type="html"><![CDATA[<p>今天虽然有进展，但依然只是进展，没有太多可看到的成果，感觉依然很不安心。</p>
<p>明天上午陪家人出去玩，下午好好核对下业务的一个核心部分。只做好这一件事，就可以很开心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0314 - 今天真的进入正轨了]]></title>
      <url>https://atjason.com/daily/2018-03-14.html</url>
      <content type="html"><![CDATA[<p>今天去朋友公司，和朋友坐在一起干活，效率明显高了很多，完美完成了今天预计的任务，爽。</p>
<p>明天继续，争取项目早日上线！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0313 - 有点进入正轨]]></title>
      <url>https://atjason.com/daily/2018-03-13.html</url>
      <content type="html"><![CDATA[<p>一边经历网管的调戏，一边深入思考项目的业务逻辑，开始有些感觉了。</p>
<p>今天有了些实质性的进展，把正向的逻辑做差不多的了。明天开始做反向的，也即验证正向逻辑是否正确的部分。</p>
<p>跟朋友一起做项目，有一点好处：遇到变态的事，可以互相吐槽、倾泻压力，感觉好多了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0312 - 继续被网管坑]]></title>
      <url>https://atjason.com/daily/2018-03-12.html</url>
      <content type="html"><![CDATA[<p>哎，不想说话。</p>
<p>本打算大干一场，结果被干了。</p>
<p>国内网络实在无法干活，于是在国外开了个虚拟机，打算远程工作，却发现无论如何无法访问国内网站…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0311 - 事缓则圆]]></title>
      <url>https://atjason.com/daily/2018-03-11.html</url>
      <content type="html"><![CDATA[<p>尤其对于自己不熟悉、不擅长的事，别心急、别冒进。</p>
<p>看似少赚了，事实却可能是避免了更大的损失。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0310 - 时不时站起来看看]]></title>
      <url>https://atjason.com/daily/2018-03-10.html</url>
      <content type="html"><![CDATA[<p>最近埋头赶项目，今天又遇到些问题，无奈只能停下来。</p>
<p>停下来后，倒是可以跳出问题本身来看看项目的前景、主要问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0309 - 预计美好却糟糕的一天]]></title>
      <url>https://atjason.com/daily/2018-03-09.html</url>
      <content type="html"><![CDATA[<p>本打算今天大干一场的，结果因为「网管」的原因，所有跟网络相关的事都不能做了，基本也就没什么可以做了。</p>
<p>暂不打算折腾了，休息，明日再战。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0308 - 问题清楚了，心就不慌了]]></title>
      <url>https://atjason.com/daily/2018-03-08.html</url>
      <content type="html"><![CDATA[<p>今天跟朋友聊了下，把问题的边界和时间限定义清楚了，心里就不慌了。</p>
<p>接下来，只是梳理好思路，一步步来，慢慢推进、慢慢改进即可。</p>
<p>本月有了新的目标，开干！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0307 - 恢复了一点节奏]]></title>
      <url>https://atjason.com/daily/2018-03-07.html</url>
      <content type="html"><![CDATA[<p>今天恢复了一点节奏，不再是盲目地抓到事就做，而是先理清楚要做哪些事，然后依次去做。除了做项目，自身还能有所收获和进步。</p>
<p>另外，今天拒绝了另外一个机会。有所舍，才能更专注于目前的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0306 - 别让忙碌消磨了兴趣]]></title>
      <url>https://atjason.com/daily/2018-03-05.html</url>
      <content type="html"><![CDATA[<p>这两天持续做一个项目，遇到不少问题，工作时间也很长，导致很疲惫，效率也不高。</p>
<p>恩，今天好好休息下，明天再继续；毕竟状态不好，活也不会好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0304 - 踏实，不侥幸]]></title>
      <url>https://atjason.com/daily/2018-03-04.html</url>
      <content type="html"><![CDATA[<p>本打算今天做成某事，有投机的成份。结果没做成，还亏了点东西。哎。</p>
<p>看来不能抱侥幸心理，还是要踏踏实实做事。面对稍稍专业的人时，专业一些，才能获胜。</p>
<p>尝试和赌最大的区别就是，尝试时，用你可承担的代价，即使失败了也输得起。而赌，基本就是用自己输不起的代价在输。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0303 - 有点爽的感觉了]]></title>
      <url>https://atjason.com/daily/2018-03-03.html</url>
      <content type="html"><![CDATA[<p>在做目前这个项目，开始时很痛苦，现在终于开始有点爽的感觉了，爽！</p>
<p>明天继续加油，争取有更大的收益。</p>
<p>为啥不早点开始干这个项目呢？有点后悔了，哈哈。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0302 - 有攻有守]]></title>
      <url>https://atjason.com/daily/2018-03-02.html</url>
      <content type="html"><![CDATA[<p>在做项目时，遇到自己不太会的点，如果能用别的方法绕过去，或者在网上快速找到哪怕自己不完全懂、却能解决问题的方案，就先用这些方案，继续把工作做完。</p>
<p>等工作告一段落时，最好回过头来，找到当初「敷衍」过去的点，稍微深入地学习下，最好能有输出、有积累。这样，下次遇到同样的问题，就不再是问题了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0301 - 撸起袖子就是干]]></title>
      <url>https://atjason.com/daily/2018-03-01.html</url>
      <content type="html"><![CDATA[<p>这两天状态不佳，一个项目处于停滞状态。一方面是因为我对接下来要做什么，有些困惑；另一方面，技术上遇到一些我不懂的问题，感觉很难，就放了一放，结果，一放再放，变成拖延了。</p>
<p>今天又梳理了接下来到底做什么，无论如何，确实了 3 月份要做的事，除非遇到天大的变化，坚决按照目前既定的计划走。</p>
<p>另一方面，技术上，不管多难，硬着头皮上。</p>
<p>撸起袖子就是干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0228 - 努力增加弹性]]></title>
      <url>https://atjason.com/daily/2018-02-28.html</url>
      <content type="html"><![CDATA[<p>比如时间，上班就很没有弹性，遇到小孩生病、想要较长时间旅游等，协调时间比较困难。</p>
<p>比如钱，有钱，就可以有更多选择。</p>
<p>比如健康，身体健康，可以承担小病的骚扰，关键时间可以长时间干活、硬抗。</p>
<p>我们的努力，很多都是在努力增加生活的弹性，增加自由和可能性。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0227 - 简单了解了 ETH 挖矿]]></title>
      <url>https://atjason.com/daily/2018-02-27.html</url>
      <content type="html"><![CDATA[<p>之前有挖矿的兴趣，今天正好在群里碰到有人要出矿机，就了解了下。</p>
<p>先说结论：不挖。</p>
<p>为什么呢？主要还是投入与收益的问题。在 <a href="https://www.smzdw.org/calculate/Ethereum" target="_blank" rel="external">这里</a> 可以进行估算，结合算力、功耗、电费、设备成本、当前币价等因素，估计回本周期。当然，只能是「估算」，因为有太多可变因素：</p>
<ul>
<li>新设备进入导致总算力增加</li>
<li>挖矿算法难度增加</li>
<li>币价波动</li>
<li>设备本身故障及寿命</li>
</ul>
<p>目前的情况，回本周期已经到了 10 个月左右，确实很长了。</p>
<p>那么，什么情况下适合挖矿呢？</p>
<ul>
<li>坚信币价会暴涨</li>
<li>有便宜甚至免费的电（比如放到公司或单位机房）</li>
</ul>
<p>你在挖吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0226 - 看代码，比写代码还累]]></title>
      <url>https://atjason.com/daily/2018-02-26.html</url>
      <content type="html"><![CDATA[<p>这两天在看朋友写的代码，感觉好累。</p>
<p>一方面有自己不懂的技术；另一方面，更关键的是，不太理解他的思路，业务逻辑是隐藏在代码里的，边看代码、边理解业务逻辑，感觉很分裂。</p>
<p>如果是自己从头开始写代码，反而容易些，因为自己想的东西，毕竟自己理解。根据理解来堆砌代码，还是相对容易的。</p>
<p>不过没办法，总不能自己写所有代码吧，还是得硬着头皮看下去…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0225 - 国际汇款手续费真高啊]]></title>
      <url>https://atjason.com/daily/2018-02-25.html</url>
      <content type="html"><![CDATA[<p>搞了个香港的银行卡，从内地向香港汇款时，收了 200 RMB 手续费，真高啊。</p>
<p>也许是我太年轻，可这都什么年代了，纯数字的交易，还要这么高的手续费？如果说是技术限制，我还真不太相信；我更愿意相信，是各个国家外汇管制比较严，为了限制外汇流动，有意抬高了手续费。</p>
<p>换个角度，就不是代币们天然的优势吗？国内法币 &gt; 比特币 &gt; 比特币转账给对方 &gt; 比特币提币至当地法币。直接把国家外汇管制给架空了，国家能不怕吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0224 - 带娃真累]]></title>
      <url>https://atjason.com/daily/2018-02-24.html</url>
      <content type="html"><![CDATA[<p>今天在家带了一天娃，感觉真累。</p>
<p>关键的，太占时间，自己啥活都没干。就算有点时间，也是很零碎的，随时都会被娃打断。闲书都看不了，顶多看看新闻啥的。</p>
<p>这样下去不是事了，今年都快过去 1/6 了，都还没什么进展呢，有些着急了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0223 - 关于春联的好奇]]></title>
      <url>https://atjason.com/daily/2018-02-23.html</url>
      <content type="html"><![CDATA[<p>好像从很小的时候，我就有这个好奇：为什么大家的春联都不一样？</p>
<p>其实是这样的，很小的时候，我就跟着家人在集市上买春联，一直感觉卖春联的本来就不多，每家春联的样式就那么几种，按道理应该很容易在每家每户看到重样的春联才对，但实际上我几乎从未见过重样的。</p>
<p>从概率的角度大致推算下，假设大门的春联样式有 100 种，相邻两家挑中相同春联的概率是 1%，而这个概率基本可以认定为小概率事件。</p>
<p>你，见过重样的春联吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0222 - 有车确实方便]]></title>
      <url>https://atjason.com/daily/2018-02-22.html</url>
      <content type="html"><![CDATA[<p>之前从家里去郑州要坐大巴，中间环节很多，比如去汽车站、买票、候车、转车等等，时间也行。</p>
<p>这次直接开车去，确实很方便。省去了很多中间环节，时间也很自由，想什么时候出发就什么时候出发，整体时间还少很多。当然，前提是有位老司机、一路顺利。</p>
<p>稍微有些动心买车了，虽然还是很头大于养车、停车等琐事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0221 - 满天繁星]]></title>
      <url>https://atjason.com/daily/2018-02-21.html</url>
      <content type="html"><![CDATA[<p>马上就要离开老家了，深深看几眼满天繁星，今年怕是都没什么机会看到这个景象了。</p>
<p>多寡的不是星辰，而是眼前的迷雾。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0220 - 给人留条路，自己多条路]]></title>
      <url>https://atjason.com/daily/2018-02-20.html</url>
      <content type="html"><![CDATA[<p>我其实真的很奇怪，为什么有人总是想占便宜、强势占上风、一点亏都不能吃？当对方傻吗？</p>
<p>谁都不傻，谁也别想轻易地、持续地占别人便宜。</p>
<p>得理饶人，遇事让人。给别人留条路，也是给自己多条路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0219 - 中年危机]]></title>
      <url>https://atjason.com/daily/2018-02-19.html</url>
      <content type="html"><![CDATA[<p>过年了，和同学朋友聚会，频频能感受到大家的焦虑、不确定、危机感。</p>
<ul>
<li>比如，做生意的，生意有下滑、或者看不到足够大的增长空间；</li>
<li>比如，职场上班的，看不到老板分钱的希望，或者公司整体危机，不得不选择跳槽；</li>
<li>比如，因为各种原因长期分居两地，至今还没有生小孩；</li>
<li>比如，老婆及娘家与自己父母及亲人间的矛盾，极难协调；</li>
<li>比如，小孩子特别调皮，又为其教育发愁；</li>
<li>…</li>
</ul>
<p>这样的问题，尤其集中于我们这个年龄层次，随便哪一个都够喝一壶，要是几个一起来、而且长期的来，那真的有些难以招架。</p>
<p>如何呢？</p>
<p>最重要的，还是增强自己，比如能赚更多的钱、身体没有问题、等等，这是解决后续问题的基础。然后就是增加情商，增强解决技术之外问题的能力，能在方方面面居中协调，维持微妙的平衡。</p>
<p>你有类似的危机吗？你又是如何解决的呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0218 - 别忘记沉默的部分]]></title>
      <url>https://atjason.com/daily/2018-02-18.html</url>
      <content type="html"><![CDATA[<p>在讨论问题时，很容易只关注眼前的、当下的问题，而忽视问题的基本面、重要部分。</p>
<p>例子呢，是家里的私事，这里不便说。抽象一点，拿国家的情况来举例吧。确实，社会上有很多这样、那样的问题，当然应该批评。但是，在讨论这些已经具体问题的时候，不能忘记社会整体是在向前、向上发展这个基本面。</p>
<p>这样的基本面本身不会发声，很沉默，也很容易被忽视；但我一旦说出来，你肯定也会认同这是比具体问题更重要的部分。</p>
<p>平时，我们在思考具体问题的时候，也可以时不时跳出来，从基本面的层面，审视下全局，然后再具体看具体的问题，会更清晰些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0217 - 买断可能性]]></title>
      <url>https://atjason.com/daily/2018-02-17.html</url>
      <content type="html"><![CDATA[<p>今天走亲戚，听到一件事，感觉挺有感触。抽象来说，有一块地，五年后可能会因为被征用而获得 100 万的收益，而现在盘下这块地需要 40 万。</p>
<p>要赚这个钱，需要这几个因素：</p>
<ul>
<li><strong>信息</strong><ul>
<li>也即，首先要知道这块地即将流转，知道将来可能被征用。</li>
<li>获取这些信息，才是接下来的基础。</li>
</ul>
</li>
<li><strong>判断</strong><ul>
<li>这其中有很多不确定性，尤其是被征用与否，非常不确定。在这样的前提，如何分析这个确定性到底有多大，是否值得冒险，是否有其他增值的可能性，等等。</li>
<li><strong>挖掘所有可能性，分析其中的确定性，需要的就是判断力。</strong></li>
</ul>
</li>
<li><strong>资金</strong><ul>
<li>这个很直接，你得能拿出 40 万盘下这块地。</li>
<li>有资金，才可能有更多玩法。</li>
</ul>
</li>
</ul>
<p>有这些因素，才能面向未来，买断可能性，<strong>坐享他人辛勤劳动所创造的收益</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0216 - 新年快乐]]></title>
      <url>https://atjason.com/daily/2018-02-16.html</url>
      <content type="html"><![CDATA[<p>今天是狗年第一天，祝家人新年快乐！</p>
<p>家里亲戚聚在一起，说话就是亲切，什么都说，随意的聊，很舒服。</p>
<p>天气也很给面子，之前说是预报有雨，却依然暖阳高照，舒坦。</p>
<p>代码上有些耽搁了，今天只能看点简单的了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0215 - 除旧迎新]]></title>
      <url>https://atjason.com/daily/2018-02-15.html</url>
      <content type="html"><![CDATA[<p>今天是鸡年最后一天啦！</p>
<p>今天在家里窝了一天，好像家门都没出（除了给大门贴春联），干了一天家务活，杀鱼、扫地、贴春联什么的，晚上再放个鞭炮，完整的除旧迎新，齐活！</p>
<p>流程还是以前的流程，不过今年有点不同：有了这个小娃，忙了些，也好玩了些。他第一次听到这么密集的鞭炮，还是有点怕怕，会抓住大人衣服住怀里钻，哈哈。</p>
<p>祝大家新春快乐！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0214 - 用力过猛]]></title>
      <url>https://atjason.com/daily/2018-02-14.html</url>
      <content type="html"><![CDATA[<p>之前给自己立了 flag: 春节期间，每天写代码。</p>
<p>于是，每天晚睡早起。</p>
<p>结果，今天发烧病倒了 😂</p>
<p>感觉用力过猛了啊，害得家人担心，反倒没能到节前很忙时帮上忙，却帮了倒忙。</p>
<p>不过，今天依然写了代码。恩，要死磕。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0213 - 分清主次]]></title>
      <url>https://atjason.com/daily/2018-02-13.html</url>
      <content type="html"><![CDATA[<p>比如，过年回家了，把多少时间分给爸妈，多少时间分给同学朋友？</p>
<p>目测，大部分人都是把大部分时间分给同学朋友，各种聚会之类的，好不热闹。尤其，朋友之间，联系方式很多、互相聚在一起的理由很多，随便一个微信，人就叫出去了。总觉得家人总是有时间陪的，这就出去了。</p>
<p>这是常态，却不一定是应该的。这是符合功利的，毕竟同学朋友能在生意、利益等方面，带给自己更多帮助。而爸妈，就显得润物无声、甚至默默无闻。</p>
<p>其实，这事真的可以仔细想想。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0212 - 进城啦]]></title>
      <url>https://atjason.com/daily/2018-02-12.html</url>
      <content type="html"><![CDATA[<p>今天天气不错，下午带着老婆和娃进城啦。</p>
<p>好吧，就是老家的小县城。河南是人口大省，果然名不虚传，人真多啊。路上各种电动车、汽车，各种穿插，神奇的是，大家也都平安到家，没什么交通事故，真是佩服大家辗转腾挪的技术。在这种路况下，骑个电动车带着老婆和娃，真是考验技术啊。</p>
<p>到了商场，依然是人多。去了新开的商场，感觉物价和调性方面，都在和「大城市」的商场靠拢。比如，在这个土土的县城，工作人员用的全是普通话。当然，差距还是有的。</p>
<p>2 年没回来，重新进城，变化肯定是有，但感觉没有本质的进步，只是修修补补、排列组合层面的变化，精神面貌、人心奔头方面，还没感觉到，我再感受感受。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0211 - 刚回到家，感觉慌张]]></title>
      <url>https://atjason.com/daily/2018-02-11.html</url>
      <content type="html"><![CDATA[<p>奔波了半天，终于回到了家。今天的感觉就一个字：慌张。</p>
<p>路上慌张，回家收拾东西、适应环境，还是慌张。</p>
<p>最大的庆幸是，家里没预想的冷。可能是今天闰月的缘故，虽是要过年，气温已经没那么低了。再加上取暖设备加持，基本可以干活了。</p>
<p>说到干活，今天毕竟喝了点酒，晚上看书时，脑子感觉晃晃的。系统的东西是学不了了，随便学点零散的东西吧。但，一定要坚持。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0210 - 过年远离电子产品，多陪家人]]></title>
      <url>https://atjason.com/daily/2018-02-10.html</url>
      <content type="html"><![CDATA[<p>过年期间，希望我的 App 销量为 0</p>
<p>过年了，难得回家，难得和亲友相聚，多陪家人，多聊聊天，远离电子产品。</p>
<p>不过，我得对自己狠点：春节期间，坚持每天写代码。死磕自己，愉悦大家。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0209 - 即将开启春节模式]]></title>
      <url>https://atjason.com/daily/2018-02-09.html</url>
      <content type="html"><![CDATA[<p>明天就要回老家了，即将开启春节模式。</p>
<p>已经有 2 年没回老家了，不知道家乡都有哪些变化，还是有些期待、或者说好奇的。太过熟悉自己目前居住的城市，对家乡反而陌生了。</p>
<p>春节悬疑：会有多少亲友跟我讨论币相关的东西呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0208 - 我还是不太理解开源世界]]></title>
      <url>https://atjason.com/daily/2018-02-08.html</url>
      <content type="html"><![CDATA[<p>最近在了解币圈的东西，了解到 <a href="https://github.com/ccxt/ccxt" target="_blank" rel="external">ccxt</a> 这个库，看起来很不错。</p>
<p>从 README 来看，这个库在不同的币圈交易所之上，抽象了一层通用接口，不仅封装了各个交易所不同的 API 接口，还统一出了一致的 API，目测用起来会很简单。不仅如此，其文档也很齐全。我看了一部分，扫清了自己的一些知识盲点。</p>
<p>这样一个优秀的库，是如何生长起来的？数据上看，目前有 1 万多次提交、127 位参与者、首个版本发布于 2017 年 8 月 1 日。是什么吸引了这么多优秀的人，花这么的时间，免费打造这样一个优秀的库？对于我这俗人来看，确实很难理解。</p>
<p>如果我确实会用到它、且它对我有用，我会捐赠的，立 flag; 以及类似的库我也会这样。虽不理解，但我依然很希望这样更美好的事，越多越持久越好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0207 - 靠什么赚钱？]]></title>
      <url>https://atjason.com/daily/2018-02-07.html</url>
      <content type="html"><![CDATA[<p>同样是赚钱，依靠的东西并不一样。</p>
<ul>
<li>靠体力<ul>
<li>比如工地工人；一些技术含量低的，也可以说是靠体力。</li>
</ul>
</li>
<li>靠技术<ul>
<li>比如程序员，本质上是靠技术，出卖自己的时间赚钱。</li>
</ul>
</li>
<li>靠资本<ul>
<li>比如投资家，基本是钱生钱的生意。</li>
</ul>
</li>
<li>靠品牌<ul>
<li>比如公司产品，即便不如竞品，但只要有品牌、存量用户，依然能活得不错。</li>
</ul>
</li>
</ul>
<p>你，靠什么？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0206 - 在没时间时准备，在有时间时干]]></title>
      <url>https://atjason.com/daily/2018-02-06.html</url>
      <content type="html"><![CDATA[<p>最近在家带娃，能干活的时间不多。而如果等有时间了再考虑做什么、怎么做，就太慢了，毕竟时间太少了。</p>
<p>应该在带娃的时候，就要在脑子里想问题。比如，接下来要做什么，准备怎么做，可能会遇到什么问题，等等。有了这些铺垫，等有时间时，就可以直接上手干活，不至于在想的过程中浪费时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0205 - Klib 救了一天火]]></title>
      <url>https://atjason.com/daily/2018-02-05.html</url>
      <content type="html"><![CDATA[<p>Klib 从 Amazon 导入标注，逆向了官方的一些接口。可最近，官方的接口有变化，导致 Klib 导入失败。</p>
<p>今天紧急救火，终于还是解决了。其实还是挺麻烦的：</p>
<ul>
<li>逆向本身有些麻烦，要用抓包工具、看 html/js 等源文件等方式，甚至还要加上猜测与运气的成分，才能跑通。</li>
<li>更关键的，这样只能覆盖自己本身的情况。而用户的数据不同，程序流程上可能会进入不同的分支；很可能逆向时并未覆盖这一分支，就会导致失败。</li>
</ul>
<p>虽说目前算是解决问题了，但明显这样的感觉很不好：要是大年三十出问题了，我总不能不吃年夜饭吧。现在心里大体有更靠谱的方案了，不过需要大块时间来实现。考虑到马上要过年，就很不折腾了，下次出问题时再彻底替换吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0204 - 看别人的代码，真累]]></title>
      <url>https://atjason.com/daily/2018-02-04.html</url>
      <content type="html"><![CDATA[<p>自己的写的代码，不管好坏，都是自己写的，毕竟熟悉。即使是对于复杂的逻辑，通常是在简单的逻辑上慢慢生长的，所以也算容易理解。</p>
<p>而直接看别人的代码，尤其是复杂的、本身结构不太优的、夹杂着一些自己的不懂的技术的，看起来真是累啊。</p>
<p>现在只能这样尝试：</p>
<ul>
<li>硬着头皮看。看到不会的东西，做个标注。如果已经做的标注实在太多、看不下去了，就回过头来一个个搞定这些标注。</li>
<li>对于相同的功能，尝试自己设计，看自己会怎么做。然后对比别人的做法，更容易理解其这样做的目的，发现其中好的、不好的地方。</li>
</ul>
<p>但依然很累，催眠效果很棒…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0203 - 每位用户都值得尊重]]></title>
      <url>https://atjason.com/daily/2018-02-03.html</url>
      <content type="html"><![CDATA[<p>首先，用户选择我的产品，就是对我的信任，也有很多的期许。</p>
<p>如果不能好好地服务用户，比如反馈不及时，自然会让用户感觉失望，甚至为自己选择这个产品而感到失落。</p>
<p>而如果能服务好，甚至超出预期，比如快速响应用户的问题，用户的满意度自然会很高。而这样的用户，通常愿意提供帮助，比如出问题时提供详细的步骤、帮助介绍给周围需要的朋友，等等。</p>
<p>且不说衣食父母，尊重用户，不仅应该，而且很值得。<strong>用户的反向尊重，通常会超出预期</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0202 - 往深了研究，还是需要专业知识]]></title>
      <url>https://atjason.com/daily/2018-02-02.html</url>
      <content type="html"><![CDATA[<p>这两天在搞一个新领域的东西。开始只是简单尝试时，是可以凭自己的经验和粗浅的认识，进行简单的尝试。而随着研究的深入，缺乏专业知识支撑，「尝试」变成了「瞎搞」，东一榔头、西一棒子，很没有效率，也很难出成果。</p>
<p>要想有效率地搞，还是得停下来，补一补专业知识，才能更有效地推进。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0201 - 有业务，有意思]]></title>
      <url>https://atjason.com/daily/2018-02-01.html</url>
      <content type="html"><![CDATA[<p>这两天单纯地学习 node/js，时不时就会出戏。</p>
<p>今天开始接触业务，发现变得有意思了。技术果然只是技术，能解决实际问题，才真的有用，也更有成就感。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0131 - 先压腿、还是先跑步]]></title>
      <url>https://atjason.com/daily/2018-01-31.html</url>
      <content type="html"><![CDATA[<p>有人说，跑步前先压腿；<br>有人说，跑步后再压腿。</p>
<p>用新技术解决新问题，也有这个问题。</p>
<p>到底是先研究新问题，比如业务逻辑、可行性等，还是先花较多时间学新技术（比如新的编程语言）？亦或是蒙头上，直接尝试解决问题，碰到实际的技术问题，再去研究？</p>
<p>时不时就遇到这个问题。最近打算学习 node &amp; js，顺便解决一个问题。结果花了 3 天学习 js，node 还没碰，问题就更别说了。时间过得太快，有些关键了。最多再纯学习 2 天，必须得扑到业务上了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0130 - 构建业务的能力]]></title>
      <url>https://atjason.com/daily/2018-01-30.html</url>
      <content type="html"><![CDATA[<p><strong>发现商机，并构建出能赢利的业务，是种能力。</strong></p>
<p>这种能力，或者说商业头脑，是需要持续锻炼的。</p>
<p>一方面，可以多进行思想实验，看到什么，就在脑子里想一想，这个东西能赚钱吗、怎么赚？</p>
<p>另一方面，更重要的是，要真正的实操。在实战的刺激下，更加真实地发散思维，不仅改进已有模式，更要想有没有什么新的模式。</p>
<p>至于把这种业务做出来，自然也是能力，但这明显是在构建业务能力之后、之下了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0129 - 思想假设]]></title>
      <url>https://atjason.com/daily/2018-01-29.html</url>
      <content type="html"><![CDATA[<p>比如，我们制定了计划、做了决定，是不是最优的、自己能坚持的？可以试试思想假设。例如：</p>
<ul>
<li>突然你有了很多钱，还会做之前想做的事吗？</li>
<li>如果你从中得到的收益会大幅下降，还做吗？</li>
<li>如果时间减半，还会这么做吗？</li>
<li>5 年后，还会这么做吗？</li>
<li>…</li>
</ul>
<p>注：以上的假设，是我随意列举的，并不能代表什么，只是要表意。</p>
<p>具体到你自己和具体的事，假设的具体内容可能不同。其实这样假设的想达到的目的是，用具象的方式表示，自己是否充分考虑了条件的变化、不同的可能性。<strong>如果你轻易就会放弃之前的计划，说明这本身并不是你特别想要的。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0128 - 碎片化的学习，可能真的会是常态]]></title>
      <url>https://atjason.com/daily/2018-01-28.html</url>
      <content type="html"><![CDATA[<p>截止到现在，今天唯一花在学习上的时间，在几个碎片时间。</p>
<p>这两天在了解 node 及 js；编程语言的学习，最好是有大块集中的时间，专注地学习。可无奈，除非是当初在学校，年纪越大，各种琐事越多，所谓的这些大块时间，将变得非常稀少。不得不，必须利用好碎片时间，即使是在效率不那么高的情况下，学习编程。比如，今天就是在医院抱着娃等叫号的时候，看完了 js 的基础语法。</p>
<p>大块时间好，可惜越来越少；<br>碎片时间不好，可惜可能是唯一选项。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0127 - 别轻易否定现状]]></title>
      <url>https://atjason.com/daily/2018-01-27.html</url>
      <content type="html"><![CDATA[<p>当对现状不满意的时候，很容易有全部推倒重来的想法。</p>
<p>这可能是对的，也可能是错的。</p>
<p>一方面，确实要警惕沉没成本对自己的影响。考虑到已经花了很多时间在某个事情上，总想着再花点时间就能出结果。这样，反而让我们一直陷入这个泥潭。</p>
<p>另一方面，也要想想，走到目前这一步，是因为哪些原因引起的。如果这个原因不找到、不解决，即使再换个方向，这些原因也会以新的形式再次骚扰我们。更何况，毕竟自己在这个领域投入很多，也积累了很多能力、人脉、资源等等。一旦切换，这些可能全部要归零，转而去和已经有很多积累的人直接竞争，听着就很亏。</p>
<p>上面正反两种思想都有道理，没有谁对谁错。既可以说是破釜沉舟、壮士断腕，也可以说是守得云开见月明。关键，还是要看自己对具体问题的分析，理解自己深层次需求，找到除了钱之外最根本的动力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0126 - 不能总让自己太舒适]]></title>
      <url>https://atjason.com/daily/2018-01-26.html</url>
      <content type="html"><![CDATA[<p>总让自己呆在舒适圈中，不去了解自己看不懂的东西，不去尝试新鲜的东西，不增强自己现在不会的能力…</p>
<p>现实，会让一切变得明确、极端，甚至冷酷。短暂的舒适，会让自己加速退化，越来越没有竞争力，沦落到社会的边缘。</p>
<p>明确自己的方向，坚毅地前行。有时，一时的低效、绕弯，可能不那么重要，或者说不那么可怕，但坚持、持续地做，更重要。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0125 - EOS 编程学习日志（2）]]></title>
      <url>https://atjason.com/daily/2018-01-25.html</url>
      <content type="html"><![CDATA[<p>关于 EOS 学习，今天还是有些收获的。</p>
<h2 id="关于去中心化的理解"><a href="#关于去中心化的理解" class="headerlink" title="关于去中心化的理解"></a>关于去中心化的理解</h2><p>首先，我对去中心化的理解也在不断学习中，以下表述不一定正确，君且一听。</p>
<p><strong>要理解去中心化，首先来对比看看中心化。</strong></p>
<p>比如，我们要实现一个在线五子棋的游戏（只是我随便举的例子，方便理解），需要这些元素：</p>
<ul>
<li>定义游戏的规则<ul>
<li>比如，如果已经在某个点上下了一个子，就不能重复在相同的点上下子</li>
<li>比如，满足连续五子，即可以赢了比赛</li>
</ul>
</li>
<li>记录游戏的状态<ul>
<li>比如，谁在哪些点上下了子</li>
</ul>
</li>
<li>执行游戏的规则<ul>
<li>比如，当一方出现连续五子时，判定其赢，且结束比赛</li>
</ul>
</li>
<li>权限<ul>
<li>比如，谁有权加入比赛</li>
</ul>
</li>
</ul>
<p>在中性化的设计中，很明显上述元素都是在中心服务器中完成的。那对于区块链、也即 EOS 中，是如何对应的呢？</p>
<ul>
<li>记录游戏的状态<ul>
<li>这是记录在区块中的</li>
</ul>
</li>
<li>定义、执行游戏的规则<ul>
<li>这是包含在智能合约（contract）中的，也即 .hpp/.cpp 所转换的 .abi/.wast 中的代码</li>
</ul>
</li>
<li>权限<ul>
<li>这是记录在 account 及 wallet 中的</li>
</ul>
</li>
</ul>
<p>可以看出，<strong>去中心化并不能减少这个程序中的任一环节，只是用自己的方式来实现</strong>。在初入区块链领域时，可以借助中心化的思路来帮助理解。但如果真的要彻底进入区块链的世界，还是要慢慢切换为去中心化的思维模式。</p>
<a id="more"></a>
<h2 id="创建钱包、账户"><a href="#创建钱包、账户" class="headerlink" title="创建钱包、账户"></a>创建钱包、账户</h2><p>不论在概念上、还是操作上，钱包（wallet）、账户（account）这 2 个概念都是非常关联的，你基本上不能离开一方去使用另一方。</p>
<p>关于这部分，<a href="https://github.com/EOSIO/eos/wiki/Tutorials#1-accounts--wallets" target="_blank" rel="external">官方文档</a> 介绍的还是挺清楚的，建议去看一遍。</p>
<h2 id="学习智能合约（smart-contract）"><a href="#学习智能合约（smart-contract）" class="headerlink" title="学习智能合约（smart contract）"></a>学习智能合约（smart contract）</h2><p>从上面的介绍可以看出，尤其在 EOS 提供基础框架后，<strong>基于 EOS 的开发，代码上主要是实现智能合约（smart contract）</strong></p>
<p>关于这部分，建议跟着 <a href="https://github.com/EOSIO/eos/wiki/Smart%20Contract" target="_blank" rel="external">官方文档</a> 走一遍，就能有基本的理解。</p>
<p>不过，这其中有些概念比较拗，我还没完全理解。尤其，我基本已经不会 cpp 代码了，只能照着例子运行，还不能全新地编辑自己的合约，所以理解上只能是个大概。</p>
<h2 id="使用-REST-接口与-EOS-交互"><a href="#使用-REST-接口与-EOS-交互" class="headerlink" title="使用 REST 接口与 EOS 交互"></a>使用 REST 接口与 EOS 交互</h2><p>目前，EOS 的合约是使用 hpp/cpp 开发的。而一旦将合约布置到 EOS 上，就可以通过 EOS 所暴露的 REST 接口来使用这些合约。</p>
<p>注：在教程和练习中，我们大量使用 eosc 命令。其实，根据 <a href="https://github.com/EOSIO/eos/wiki/Programs-&amp;-Tools#eosc" target="_blank" rel="external">官方文档</a>，eosc is a command line tool that interfaces with the REST api exposed by eosd. 也即，eosc 就是方便你调用 eosd 所暴露出来的 REST 接口的工具。</p>
<p>自然，除了使用 eosc，你可以使用自己喜欢的语言编写程序，调用这些 REST 接口。</p>
<p>那么，eosd 目前提供了哪些 REST 接口呢？参见 <a href="https://eosio.github.io/eos/group__eosiorpc.html" target="_blank" rel="external">官方文档</a></p>
<p>需要注意的是，目前 REST 接口还不全、不完善，期待官方能加快这一进度。</p>
<h2 id="EOS-需要-21-个生产者，才能产生区块"><a href="#EOS-需要-21-个生产者，才能产生区块" class="headerlink" title="EOS 需要 21 个生产者，才能产生区块"></a>EOS 需要 21 个生产者，才能产生区块</h2><p><code>eosd</code> 有个坑：EOS 是需要 21 个生产者中的 15 个及以上确认的，但默认的 <code>data-dir/config.ini</code> 中仅有 2 个生产者：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">producer-name = inita</div><div class="line">producer-name = initb</div></pre></td></tr></table></figure>
<p>需要手动增加至 21 个，即 a-u：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">producer-name = inita</div><div class="line">producer-name = initb</div><div class="line">producer-name = initc</div><div class="line">producer-name = initd</div><div class="line">producer-name = inite</div><div class="line">producer-name = initf</div><div class="line">producer-name = initg</div><div class="line">producer-name = inith</div><div class="line">producer-name = initi</div><div class="line">producer-name = initj</div><div class="line">producer-name = initk</div><div class="line">producer-name = initl</div><div class="line">producer-name = initm</div><div class="line">producer-name = initn</div><div class="line">producer-name = inito</div><div class="line">producer-name = initp</div><div class="line">producer-name = initq</div><div class="line">producer-name = initr</div><div class="line">producer-name = inits</div><div class="line">producer-name = initt</div><div class="line">producer-name = initu</div></pre></td></tr></table></figure>
<p>如果不这样做，会有什么问题呢？会导致区块无法产生，类似这样的错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chain_controller.cpp:1046     validate_block_heade ] head_block_time 2018-01-25T12:40:15, next_block 2018-01-25T12:40:35, block_interval 1</div><div class="line">chain_controller.cpp:1048     validate_block_heade ] Did not produce block within block_interval 1, took 20000ms)</div></pre></td></tr></table></figure>
<p>进而，因为区块无法产生，你在当前 eosd 环境中的所有操作，都无法记录，如创建账户、创建合约、等等；也即，关闭 eosd 再次运行时，你会发现之前创建的数据全没了。不过，和 wallet 相关的操作都是记录的，因为这是由 eos-walletd 完成的，和 eosd 无关。</p>
<p>这个坑，我踩了很久；最后，还是 <a href="www.eosfans.xyz">eosfans.xyz</a> 君帮我出坑，在此谢过。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0124 - 心绪不好，状态不佳]]></title>
      <url>https://atjason.com/daily/2018-01-24.html</url>
      <content type="html"><![CDATA[<p>今天有几件不顺的事，让心情很差，干活也没什么状态。</p>
<p>关于 EOS 的学习，由于 EOS 本身还不完善，这样的学习有非常大的开放性；换句话说，不知道该怎么学。官方虽然有文档，看目测不是很够。即使在官方的文档，在学的过程也遇到各种问题，比如环境的配置等。还是一个很重要的：EOS 最佳开发语言是 C++，而我几乎已经忘了。非常纠结是学习 C++，还是坐等 REST API 接口完善。</p>
<p>明天确定目标：完全照着官方文档走一遍，用 C++ 的代码，去理解智能合约及 EOS 的实现。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0123 - 抓住青春的尾巴，享受技术的快乐]]></title>
      <url>https://atjason.com/daily/2018-01-23.html</url>
      <content type="html"><![CDATA[<p><strong>在最合适的时间，做最合适的事。</strong></p>
<p>比如，你现在可以写代码、也可以去投资；<br>十年后，你可以去投资，但几乎写不了代码。</p>
<p><strong>抓住青春的尾巴，享受技术的快乐。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0122 - EOS 编程学习日志（1）]]></title>
      <url>https://atjason.com/daily/2018-01-22.html</url>
      <content type="html"><![CDATA[<p><strong>EOS 编程到底是什么呢、学什么呢？</strong></p>
<p>抱歉，我现在也不无法回答。不过，我可以告诉你我做了哪些尝试、目前的理解，以及下一步还要做什么。</p>
<p>首先，<strong>EOS 开发最重要的文档自然是在 GitHub</strong>: <a href="https://github.com/EOSIO/eos" target="_blank" rel="external">https://github.com/EOSIO/eos</a>，比如：</p>
<ul>
<li>介绍了如何在本机编译、运行 EOS</li>
<li>其中的 contracts 目录，提供了一些智能合约的范例。</li>
</ul>
<p>其中 <strong>一些基础概念</strong>：</p>
<ul>
<li><code>eosd</code> - server-side blockchain node component<ul>
<li>可理解为运行在本机的 EOS Daemon/服务器</li>
</ul>
</li>
<li><code>eosc</code> - command line interface to interact with the blockchain<ul>
<li>可理解为方便与 EOS 服务器进行交互的命令行工具，不用写代码就可以通过这个工具执行命令，进行一些测试</li>
</ul>
</li>
<li><code>eos-walletd</code> - EOS wallet<ul>
<li>可以理解为 EOS 钱包的命令行工具</li>
</ul>
</li>
</ul>
<p>然后，<strong>主要开发文档在此</strong>：<a href="https://eosio.github.io/eos/" target="_blank" rel="external">https://eosio.github.io/eos/</a>，主要分为 2 种形式的接口及文档：</p>
<ol>
<li><strong>REST RPC 接口</strong><ul>
<li>也即，不是直接使用 C/C++/WebAssembly 编写代码，而且封装为 REST RPC 接口。<strong>有了这个接口，对编程语言就没有限制了，你可以用任何你喜欢的语言</strong>，比如 Swift/Python/etc</li>
<li>不过，<strong>可惜的是，目前已经封装的接口并不多，你并不能通过 REST RPC 干所有事情</strong>。希望 EOS 能尽快完善 REST RPC 接口，这是目前我最期待的</li>
<li>我把其中的接口都测试了一遍，可惜就是太少了</li>
</ul>
</li>
<li><strong>C/C++/WebAssembly 源码</strong><ul>
<li><strong>EOS 本身就是基于 C/C++/WebAssembly 编写的</strong>，基于这些语言的文档自然最全。</li>
<li>自然的，<strong>目前如果你想充分基于 EOS 开发，只能使用 C/C++/WebAssembly</strong>；如果不会，要么学习，要么等 REST RPC 接口早日完善</li>
</ul>
</li>
</ol>
<p>你可能知道，EOS 在 17 年 12 月 4 日发布了 pre-release 2.0，同时也发布了 <strong>公测版的 EOS 区块链网络</strong>（不是主链，主链预计 18 年 6 月发布），以下是这部分的介绍：</p>
<ul>
<li><a href="https://github.com/EOSIO/eos/wiki/Testnet:-Public#public-testnet-endpoints" target="_blank" rel="external">Testnet: Public</a><ul>
<li>这个就是关于此次公测链的根文档</li>
</ul>
</li>
<li>你需要先在 <a href="https://docs.google.com/forms/d/e/1FAIpQLSel3HVFb22zYaAJfUtu_IzFgIJ4OATb0jQ3H2FV-HbwnJ090g/viewform" target="_blank" rel="external">这里</a> 申请测试账户</li>
<li>测试链的 <a href="https://t1api.eos.io/v1/docs/" target="_blank" rel="external">REST API 接口文档</a><ul>
<li>包含了认证、区块、交易(Transaction)、账户等部分的介绍</li>
<li>我简单试了一遍，貌似 <code>v1/blocks</code> 接口有问题，其它正常</li>
</ul>
</li>
</ul>
<p><strong>下一步怎么学呢？</strong>其实我也还不清楚，有这么几个可选项：</p>
<ul>
<li><strong>学习 Docker</strong><ul>
<li>为什么呢？因为我暂时不想在 macOS 主系统中编译 EOS 项目，目前是在虚拟机中编译的，但多少有些方便</li>
<li>EOS 支持在 Docker 中运行，这样既不会把我的主系统搞乱，也不必忍受虚拟机的性能和麻烦</li>
</ul>
</li>
<li><strong>学习 C/C++/WebAssembly</strong><ul>
<li>只有这样，才能在 EOS 目前的状态下，深入的测试、学习</li>
<li>这其实是成本、风险非常高的选择，我非常犹豫；我会再去了解下 EOS 团队有没有关于 REST 接口开发计划</li>
</ul>
</li>
<li><strong>学习区块链通用开发技术</strong><ul>
<li>EOS 只是区块链的一种形态，而区块链本身还有很多通用型的开发技术，这个也要先行了解</li>
</ul>
</li>
</ul>
<p>你也对 EOS 感兴趣吗？希望这篇文章能帮你揭开 EOS 开发的神秘面纱，也欢迎一起啃这块骨头。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0121 - 开始学习 EOS 编程]]></title>
      <url>https://atjason.com/daily/2018-01-21.html</url>
      <content type="html"><![CDATA[<p>首先，这里不是讨论 EOS 币的买卖，而是 EOS 编程、基于 EOS 的应用。</p>
<p>今天从 GitHub 上下载了 EOS 的应用，也花了半天编译了，按照操作演示创建了钱包、进行了交易。但，依然是云里雾里。</p>
<p>EOS 编程方面的资料确实太少了，只能一点点摸过。编程语言上，看起来是 C/C++/JS 栈的，也有些吃力。不过，看起来是有 REST 接口的，比如首个公开测试网络就有 REST 接口的文档：<a href="https://t1api.eos.io/v1/docs/" target="_blank" rel="external">https://t1api.eos.io/v1/docs/</a></p>
<p>另外，一个人学习，确实很吃力，遇到问题也没人讨论。我拉了个 Telegram 群，不过暂时不打算公开。如果你感兴趣，可以留言或其他方式告诉我你的 Telegram 账户。强调：这里只讨论 EOS 编程，不讨论币价、买卖。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0120 - Kindle 导出标注时，如何破除 <您已达到本内容的剪贴上限> 这一限制？]]></title>
      <url>https://atjason.com/daily/2018-01-20.html</url>
      <content type="html"><![CDATA[<p>使用 Kindle 的重度用户会知道，在 Kindle 上读书时可以任性标注，但在导出标注时则有限制：<strong>Kindle 限制能导出的标注的文字总数</strong>。这个比例没有明文规定，各本书也有不同，通常理解是一本书所有内容的 10%；一旦超出这一限制，导出时则会看到恼人的 <code>&lt;您已达到本内容的剪贴上限&gt;</code>。</p>
<p><img src="https://ps.toolinbox.net/r0f3c.png" alt=""></p>
<p>如果大家遇到这个问题，又实在想导出所有的标注，<strong>怎么办呢？可以这样操作</strong>：</p>
<ul>
<li>先使用 <a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a> 导入 Kindle 中的标注。</li>
<li>使用 Kindle for macOS 继续下面的操作（因为效率高）<ul>
<li><a href="https://www.amazon.cn/kindleformac" target="_blank" rel="external">点击这里，从亚马逊下载最新版 Kindle for macOS</a></li>
</ul>
</li>
<li>在 Kindle for macOS 中删除已经导入的标注。<ul>
<li>可以在 Klib 中查看最后一条标注的内容，在 Kindle for macOS 中搜索这条标注，然后删除这条标注前面所有的标注。</li>
<li>同时，在 Klib 中多选 <code>&lt;您已达到本内容的剪贴上限&gt;</code> 对应的标注，右击并删除。</li>
</ul>
</li>
<li>将剩下的标注导出为 html 文件，操作示意：<ul>
<li><img src="https://ps.toolinbox.net/vo0ua.jpg" alt=""></li>
</ul>
</li>
<li>使用 Klib 导入 html 文件<ul>
<li>点击 Klib <code>文件</code> 菜单，选择 <code>从 Kindle 导入…</code>，然后选择刚才导出的 html 文件。</li>
</ul>
</li>
<li>如果 Klib 依然有 <code>&lt;您已达到本内容的剪贴上限&gt;</code>，重复上面的步骤：删除已导入的、重新导出、然后导入。</li>
</ul>
<p>我测试过，这个办法是有效的。技术上，是 Kindle 在导出标注时，会机械地判断导出的内容是否过多。而一旦删除已经导入的标注，自然能向后延伸，导出后面更多的标注。</p>
<p>这个方法有 2 个潜在的问题需要注意：</p>
<ol>
<li>标注一旦导出，就无法在 Kindle 中展现了。</li>
<li>一旦删除，Amazon 是不会替你恢复的。<ul>
<li>你要自己保存标注（比如使用 Klib 管理，并定期备份）</li>
</ul>
</li>
</ol>
<p>这 2 点请大家知会。如果理解了，就可以放心地使用上述方法，<strong>完整导出你自己花时间做出的读书笔记</strong>。</p>
<p>祝，阅读愉快。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0119 - 别拿假设当事实]]></title>
      <url>https://atjason.com/daily/2018-01-19.html</url>
      <content type="html"><![CDATA[<p>你有没有类似的感觉：</p>
<ul>
<li>比如，年会没中奖，感觉就像别人把自己的奖品抢走了，就好像这奖品本来就是自己的一样。</li>
<li>比如，没在比特币价格很低时抄底，感觉错过了几个亿，就好像自己事先就有能力判断出比特币的底一样。</li>
</ul>
<p><strong>把假设、推论当事实</strong>，进而推断出让自己郁闷的结论、做出错误的决策，是在外人看来浅显易懂，而当局者却浑然不觉的问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0118 - 币圈好刺激]]></title>
      <url>https://atjason.com/daily/2018-01-18.html</url>
      <content type="html"><![CDATA[<p>这两天虽然在忙着 Klib 新版，不过也还是关注着币圈。昨天几乎所有的币都跌，今天几乎所有的都涨。什么原因呢？估计谁也说不清楚。</p>
<p>不过，从结果上看，被操控、或者说被影响的可能性很大。毕竟币都掌握在相对少的人手里，容易被操控。</p>
<p>另一方面，由于大量散户其实对数字货币并不了解，更没有信仰。看到普跌，自然想抛。看到普涨，自然想进。而这样的心理，非常容易被影响。越跌越抛，结果更跌。</p>
<p>于我而言，目前我还是信数字货币，但价格实在是无从理解。其实我几乎没有持有数字货币，近期倒是考虑抄底进一些。希望不要抄到山腰上，哈。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0117 - 深耕 iBooks 标注导入]]></title>
      <url>https://atjason.com/daily/2018-01-17.html</url>
      <content type="html"><![CDATA[<p>Klib 已经可以从 iBooks 中导入标注和笔记了，不过还有一些进阶的工作可以做：</p>
<ul>
<li>解析 ePub 数据结构，识别页码，使得排序准确。</li>
<li>iBooks 会将大段标注拆分存储，目前 Klib 导入时也是拆分着导入。计划将相关的标注合并起来导入，还得适配已经导入的标注，有点麻烦。</li>
<li>在 iBooks 中打开原文、跳转至原来的位置。</li>
</ul>
<p>今天已经开始了，看本周能否再提交个版本。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Klib 新版炫技来袭：从多看导入读书笔记、在笔记中插入图片]]></title>
      <url>https://atjason.com/daily/2018-01-16.html</url>
      <content type="html"><![CDATA[<p>时间真快，距离 <a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a> 上次发布已经快半年了。这段时间忙着 <a href="https://toolinbox.net/iPaste/" target="_blank" rel="external">iPaste</a>、<a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> 等其他产品，倒是把 Klib 给耽搁了，抱歉抱歉。</p>
<p>不过，<strong>好饭不怕晚</strong>；<br>这不，<strong>新版 Klib 来啦</strong> 😀</p>
<h2 id="Klib-学了新本领：从「多看」导入笔记"><a href="#Klib-学了新本领：从「多看」导入笔记" class="headerlink" title="Klib 学了新本领：从「多看」导入笔记"></a>Klib 学了新本领：从「多看」导入笔记</h2><p>这位说：<strong>咦，之前 Klib 不就可以从多看导入了吗？</strong>别急，此「多看」非彼「多看」</p>
<p>之前，Klib 支持从「刷了多看系统的 Kindle」中导入笔记，这一方式有诸多限制，比如新款的 Kindle 已经不支持刷多看系统了。</p>
<p>而今，<strong>Klib 直接从「多看服务器」导入笔记</strong>，就打破了之前 Kindle 设备的限制。<strong>比如，你在多看手机客户端上阅读时所作的标注，现在也可以使用 Klib 导入。</strong></p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flhesb2n59g30e60em7gg.gif" alt=""></p>
<p>导入过程非常简单，无需连接手机或其他任何设备，只需在 Klib 中选择菜单 <code>文件 &gt; 从多看导入…</code> 即可。首次导入时，需要使用多看（也即小米）账户进行授权。</p>
<p>将笔记导入 Klib 后，便可以轻松地以 Markdown 格式复制笔记，以网页形式预览，或者导出至印象笔记。<strong>自己辛辛苦苦做的读书笔记，再也不用眼巴巴地看着，却无法导出、更无法使用了。</strong></p>
<a id="more"></a>
<h2 id="Klib-想秀秀技：在笔记中插入图片"><a href="#Klib-想秀秀技：在笔记中插入图片" class="headerlink" title="Klib 想秀秀技：在笔记中插入图片"></a>Klib 想秀秀技：在笔记中插入图片</h2><p>此版中，Klib 还创造性地 <strong>支持显示 Markdown 格式的图片</strong>。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fncxm6v1v1g30gg0cmtje.gif" alt=""></p>
<p>其实，这不止是秀技，也是挺有用的。</p>
<p><strong>使用场景：</strong>比如，在使用 Kindle 阅读时，如果想对图片、表格等复杂格式的内容做笔记时，不妨使用 Kindle 截图、或手机拍照，然后使用 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> 等工具将图片上传至图床，然后插入笔记中。这样，<strong>再也不用担心做笔记时，无法引用图表的尴尬了</strong>。</p>
<p>确实，目前这套操作流程有些复杂。不过，技术上可以做到这样：<strong>在 Kindle 上截图，然后做标注，Klib 自动上传图片并插入对应的标注中</strong>。这一功能发布后，如果需要的朋友比较多，我会考虑这样改进的。</p>
<p>咦，说了半天，你还没用过 <strong>Klib 的阅读器模式</strong>？赶快在 Klib 中按下 <code>⌘R</code> 快捷键试试。如果只是像列表一样一条条列出笔记，未免乏味。Klib 的阅读器提供沉浸式的体验，帮你专注地回顾笔记。</p>
<h2 id="Klib-不忘苦练内功"><a href="#Klib-不忘苦练内功" class="headerlink" title="Klib 不忘苦练内功"></a>Klib 不忘苦练内功</h2><p>在用新本领秀技后，Klib 这位同学不骄不躁，依然潜心苦练内功，在各方面都有所改进。</p>
<h3 id="优化导出至印象笔记时的排版"><a href="#优化导出至印象笔记时的排版" class="headerlink" title="优化导出至印象笔记时的排版"></a>优化导出至印象笔记时的排版</h3><p>之前，在导出至印象笔记时，使用的是 Markdown 格式。为了增加阅读体验，这次调整为和阅读器类似的格式。<strong>使用印象笔记手机端回顾笔记，效果更佳。</strong></p>
<p><img src="https://ps.toolinbox.net/x97ny.png" alt=""></p>
<p>顺便说一句，在 Klib 阅读器中插入的图片，也可以在印象笔记中显示哦。</p>
<h3 id="加快从-Kindle-导入标注的速度"><a href="#加快从-Kindle-导入标注的速度" class="headerlink" title="加快从 Kindle 导入标注的速度"></a>加快从 Kindle 导入标注的速度</h3><p>阅读笔记是只增不减的。随时时间的推移，阅读笔记肯定会越来越多，导入速度就变得很重要的。这次 Klib 不仅优化了首次导入速度，更大大加速了后续的增量导入。试试吧，你会有明显的感觉。</p>
<h3 id="优化标注排重算法"><a href="#优化标注排重算法" class="headerlink" title="优化标注排重算法"></a>优化标注排重算法</h3><p>目前的 Kindle 系统，选中文本即为标注。虽说大大增加了标注的便携性，但也很容易因为 <code>标注误操作 &gt; 取消标注 &gt; 重新标注</code> 这一流程，产生一些重复标注。</p>
<p>此版的 Klib 在之前的基础上，进一步优化了排重算法，<strong>几乎不会出现重复标注</strong>。如果你依然神奇地遇到排重不干净的情况，欢迎告诉我，我会据此进一步优化算法。</p>
<h3 id="支持通过搜索来筛选书"><a href="#支持通过搜索来筛选书" class="headerlink" title="支持通过搜索来筛选书"></a>支持通过搜索来筛选书</h3><p>之前，一些用户希望对书增加多种排序方式，如按作者、标签等。其实，这些大部分是可以通过搜索来完成的：<strong>只展示满足搜索条件的书</strong>。本次更新已支持此功能。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">从 Mac App Store 下载 Klib</a></p>
<p><a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p>默认可管理 10 本书，升级 Klib 高级版即可管理无限书籍；高级版限时 7 折：￥68</p>
<p>这里主要介绍了 Klib 新版的变化。如需了解更多，可以参考 <strong><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib 详细介绍</a></strong></p>
<p>如果你觉得 Klib 还不错，还请帮忙 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">在 App Store 评论</a>；如果你觉得 Klib 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=Klib" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0115 - 币圈装逼小程序]]></title>
      <url>https://atjason.com/daily/2018-01-15.html</url>
      <content type="html"><![CDATA[<p>自动生成手机钱包截图，方便在朋友圈、币圈分享。</p>
<ul>
<li>比如，可以手动输入哪些币种、数量</li>
<li>可以伪装自己在多早、多低的价格入手了多少，现在涨了多少倍</li>
<li>可以伪装自己恰巧买了今天涨幅最高的山寨币，涨的好爽</li>
<li>当然，除了显示涨，也可以自黑：跌得从会所到吃土</li>
</ul>
<p>除了晒，还有哪些动力呢？</p>
<ul>
<li>比如，截图使用某钱包的样式、带 Logo，可以给该手机钱包带来流量</li>
<li>比如，截图显示某山寨币的惊人涨幅，借截图来营销，可以带来更多韭菜，圈更多钱</li>
</ul>
<p>你，意下如何？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0114 - 投资一点时间去投资]]></title>
      <url>https://atjason.com/daily/2018-01-14.html</url>
      <content type="html"><![CDATA[<p>说人话就是，花点时间，研究下投资领域的东西。</p>
<p><strong>如果不投资会怎样？</strong></p>
<ul>
<li>我们确实是可以在自己的领域不断积累、成长。</li>
<li>但事实上，通常情况下，我们的努力，只能让我们得到线性的增长。</li>
<li>如果我们有幸处于一个行业的上升期，那这种增长短期甚至是指数级的。</li>
<li>如果我们不幸处于一个行业的衰退期，那即便我们很努力，也无法摆脱规律的宿命。</li>
<li>现在行业的周期，相比于之前，已经大大缩短了。比如当年热门的互联网，现在已被称为「传统互联网」，也就不过十年。而我们风华正茂的时间，可能也就十年。<strong>十年一过，行业衰退了，我们的能力也衰退了，怎么办？</strong></li>
</ul>
<p><strong>投资，可以让我们跳出自己所处行业的宿命。</strong></p>
<p>也许我们处于一个衰退的行业，但投资（比如股票），可以享受处于上升期行业的红利，以对冲自己行业的衰退。这种做法，有占尽优势的嫌疑、有自负轻狂的成分，但这社会，本就不公。已经拥有的，给你更多。</p>
<p>以上思考，启发于亦仁线下活动另一位 Jason 大牛的分享。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0113 - 体验，真是个奇妙的东西]]></title>
      <url>https://atjason.com/daily/2018-01-13.html</url>
      <content type="html"><![CDATA[<p>比如，手机里给你推送 1 张一年前的经典照片，多半你会很惊喜、觉得很开心、照片看半天。</p>
<p>可，如果一下子推送了 100 张照片呢？多半你会觉得是负担、不想看、不看又觉得好像错过了什么。</p>
<p><strong>好东西，却不是越多越好。</strong>惊不惊喜、意不意外？</p>
<p>如果非得套用原理的话，多半就是「边际效用」了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0112 - 借用纸币发行门票]]></title>
      <url>https://atjason.com/daily/2018-01-12.html</url>
      <content type="html"><![CDATA[<p>今天看到一个很有意思的东西，跟大家分享下。</p>
<p>比如，票务公司要发行演唱会门票，传统的都是要自己制作门票，其中很大一部分就是门票要做防伪，这部分投入非常大。</p>
<p><strong>怎么才能避免掉防伪成本？甚至是免除建立这种基础信任的成本呢？</strong></p>
<p>一种方法是：<strong>借用纸币</strong>。</p>
<p><strong>简单描述下过程：</strong>假设要发行 100 张门票，可以先收集 100 张纸币（比如人民币，暂不考虑法律问题）。首先，<strong>纸币本身具备防伪功能</strong>。进而，<strong>每个纸币上都有编号</strong>，这个编号可以起几个作用：</p>
<ul>
<li>识别是否是用于门票的特殊纸币</li>
<li>可以和场内座位号关联</li>
</ul>
<p><strong>怎么使用呢？</strong>如果有人买演唱会的门票，就把对应的纸币发给他。进场时，核对纸币真伪；验证通过后，根据纸币上的编号，找到对应的座位号。搞定。</p>
<p>是不是很机智？</p>
<p>当然，也可以使用时下热门的区块链技术，我就是在区块链的书中看到这个例子的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0111 - 自己种的果，怎么都要吃]]></title>
      <url>https://atjason.com/daily/2018-01-11.html</url>
      <content type="html"><![CDATA[<p>今天接连两件事让我很郁闷：</p>
<ul>
<li>关门的一瞬间，发现没带钥匙</li>
<li>带妈去医院看牙，没听见叫号，结果多等了半小时</li>
</ul>
<p>当时，郁闷的直想把地上踩个坑、把墙上踹个洞。</p>
<p>不过没办法，自己做的事，不论结果再怎么难以接受，只能接受。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0110 - 给 iPhone 6 换了电池]]></title>
      <url>https://atjason.com/daily/2018-01-10.html</url>
      <content type="html"><![CDATA[<p>苹果电池、降频门，相信大家多少都知道一些。我犹豫之后，还是打算给手上的 iPhone 6 换电池。</p>
<p>由于官方直营店离我有些远，于是选择了授权维修店。当时店里没货，需要我先付￥218，等了 4 天，店里通知我今天去换了电池。</p>
<p><img src="https://ps.toolinbox.net/26k2x.png" alt=""></p>
<p>关键的，换电池后有什么效果吗？</p>
<ul>
<li>变快吗？几乎感觉不出来，可能是心理作用，可能稍稍快了一丢丢</li>
<li>待机时间长了吗？我之前是一天两充。这次满电用了 5 小时（不是一直用），剩余 67%；查看系统数据，微信用了 39%…百度输入法用了 11%…都是允许后台运行的。我再观察一段时间，然后再来给大家汇报</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0109 - 走出低谷的最佳办法：走]]></title>
      <url>https://atjason.com/daily/2018-01-09.html</url>
      <content type="html"><![CDATA[<p>前些天犯了拖延，总感觉 Klib 搁置时间长了、代码生疏了，头有些大，不想碰，就拖着。</p>
<p>其实，拖的时候，心里也是有压力了，并不轻松。但没办法，人就是这样。</p>
<p>真的开始干了，发现其实也没想象的那么难。尤其，先找点简单的事做，慢慢找回熟悉的感觉。接下来，即便做难的部分，也会变得自然。</p>
<p>依然，对我而言，超出低谷的最佳办法：撸起袖子干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0108 - 重启 Klib 项目]]></title>
      <url>https://atjason.com/daily/2018-01-08.html</url>
      <content type="html"><![CDATA[<p>想当初，<strong>Klib 这个产品是在去年元旦时启动的</strong>。起初只想做个小 Demo 即可，没想到用了近半年的时间，一版一版地改进。一晃一年过去了，现在又开始出新版，感觉有点奇妙。</p>
<p>今天主要改进了从 Kindle 设备中导入标注的问题：</p>
<ul>
<li>加速导入</li>
<li>优化排重算法</li>
<li>一些细节改进</li>
</ul>
<p>其中，技术上有一点：<strong>计算两个字符串的最大公共字符串</strong>。我没有直接研究算法，直接找的网上现成的方法。可惜的是，性能非常差。后来，考虑到 Kindle 标注文本的特殊性，忽略部分情况，直接使用 Swift 中的 String.commonPrefix(with:)，性能提高 1000 倍！这感觉，爽。</p>
<ul>
<li>尽量使用系统原生的函数</li>
<li>针对实际情况进行改进</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0107 - 首听交响乐]]></title>
      <url>https://atjason.com/daily/2018-01-07.html</url>
      <content type="html"><![CDATA[<p>今天高雅了一把，去听了：《意大利那不勒斯皇家爱尔乐团访华新年音乐会》</p>
<p><img src="https://ps.toolinbox.net/thmwm.jpg" alt=""></p>
<p>我这木头耳朵，也听不出什么来…</p>
<p>不过，现场听演奏，跟在音响里听还是不一样的。而且，就像在影院看电影一样，由于只能坐在那里，又不能玩手机，迫使整个人投入到电影、音乐中，自然容易投入其中，有更多的体会。</p>
<p>老婆喜欢听，对这样体验很满意，这就足够了，不是吗？😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0106 - 既往不记]]></title>
      <url>https://atjason.com/daily/2018-01-06.html</url>
      <content type="html"><![CDATA[<p>今天去一家苹果授权店换电池，顺便检测下发现麦克风有问题，于是就被忽悠办了个延保，然后再以碎屏的名义换屏幕（因为她说麦克风是在屏幕上的）其实当初我也有些犹豫，但架不住店员推销式的热情，掏了 500 多。</p>
<p>其实感觉有些不值，主要是现在的 iPhone 6 已经是比较老的手机了，再投入 500，感觉并不划算。</p>
<p>不过算了，既然钱已经花出去了、事情也已经定了，就不再去计较了。把时间和精力，用在要做的事上，才是正道。</p>
<p>既往矣，就忘吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0105 - 撸了个字幕文字翻译的小工具]]></title>
      <url>https://atjason.com/daily/2018-01-05.html</url>
      <content type="html"><![CDATA[<p>二话不说先上图：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fn5yaqlvrtg30fe0dg7i1.gif" alt=""></p>
<p>用法很简单：<strong>把字幕文字拖拽到程序中，即可翻译、并保存翻译后的文件。</strong></p>
<h2 id="为什么会搞这个？"><a href="#为什么会搞这个？" class="headerlink" title="为什么会搞这个？"></a>为什么会搞这个？</h2><p>一个朋友用了增加翻译功能的新版 <a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> 后，想把他手上的德语字幕翻译下，我就顺手搞了这个小工具。</p>
<h2 id="说说这种方式的缺陷"><a href="#说说这种方式的缺陷" class="headerlink" title="说说这种方式的缺陷"></a>说说这种方式的缺陷</h2><p>这种方式的翻译质量不高，主要是：</p>
<ul>
<li>字幕是一句话拆分开的，分开翻译，是难以得到准确结果的。</li>
<li>而拼起来翻译，又很难把翻译后的文字映射到原来的时间轴。</li>
</ul>
<h2 id="但还不能公开发布…"><a href="#但还不能公开发布…" class="headerlink" title="但还不能公开发布…"></a>但还不能公开发布…</h2><p>除了翻译质量的问题，<strong>主要还是钱的事。</strong></p>
<p>目前用的是 Google 的翻译接口，<a href="https://cloud.google.com/translate/pricing" target="_blank" rel="external">Google 的价格</a> 还是挺高的：</p>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fn5y9or8ytj30dw02gq2u.jpg" alt=""></p>
<p>单看这个你可能没感觉，我给你算一算。</p>
<p>我翻译的朋友的德语的 28 分钟的视频，有 12663 个字符。即使不考虑检测语言，也需要：</p>
<p><code>12663/1000000*20 = $0.25 = ￥1.64</code></p>
<p>注：德语是个相当啰嗦冗长的语言，德语 10 个字符表达的意思，汉语可能 2 个就够了。</p>
<p>如果是电影，我看了下《王牌特工2》，英文字幕有 66417 个字符，那就是：</p>
<p><code>66417/1000000*20 = $1.33 = ￥8.72</code></p>
<p>这么一算，有没有觉得贵？</p>
<h2 id="巨头也在进入"><a href="#巨头也在进入" class="headerlink" title="巨头也在进入"></a>巨头也在进入</h2><p>这个工具做出来，才发现原来 Google 之前就发布过类似的产品：<a href="https://translate.google.com/toolkit/" target="_blank" rel="external">https://translate.google.com/toolkit/</a></p>
<p>另外，就在 2 天前，<a href="http://www.prnasia.com/story/198904-1.shtml" target="_blank" rel="external">网易见外联手人人影视，用AI视频翻译技术快速制作字幕</a></p>
<p>虽然花时间做的工具，看来要永久尘封了，郁闷…</p>
<p>不过，也说明，为视频配字幕这事，还挺有意思。关注之~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0104 - 继续粗旷学习区块链]]></title>
      <url>https://atjason.com/daily/2018-01-04.html</url>
      <content type="html"><![CDATA[<p>《区块链技术驱动金融》这书不错，是我看过的关于区块链、比特币中，最好的书。</p>
<p>我只看过 2 本…</p>
<p>继续野蛮看书、理解知识，争取早点进入精细推进的阶段。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0103 - App + 区块链 = ？]]></title>
      <url>https://atjason.com/daily/2018-01-03.html</url>
      <content type="html"><![CDATA[<p>最近开始学习区块链技术。</p>
<p>目前还谈不上学习，只能说是了解吧。昨天到今天，看完了《区块链：从数字货币到信任社会》这本书谈不上多好，但至少让我多了不少理解。最关键的，让我萌生的一个想法：<strong>如果 App 加上了区块链，能有什么效果？</strong></p>
<p>之所以会这么想，是因为 <strong>区块链一个重要的特质是：解决信任问题。而软件领域，有很多的信任问题</strong>，比如：</p>
<ul>
<li>激活机制（如序列号）</li>
<li>防盗版（反破解等）</li>
<li>不依赖于平台的软件众筹</li>
</ul>
<p>更别说一些其他的问题，如支付、量化计费、等等。</p>
<p>现在我还只是区块链的门外汉，并不知道区块链能不能解决这些问题、如何解决，但感觉挺有意思，准备再学习下。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[iText 新年新版：截图后不仅能识别文字，还能翻译为 100+ 种语言]]></title>
      <url>https://atjason.com/daily/2018-01-02.html</url>
      <content type="html"><![CDATA[<p><a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> 是一款从图片中识别文字的工具，解决了诸如扫描版 PDF 无法复制等问题。<strong>在保持简洁的同时</strong>，我也在不断 <strong>改进 iText 的功能和便利性</strong>。新年第一版，来看看有哪些变化吧。</p>
<h2 id="识别文字后自动翻译"><a href="#识别文字后自动翻译" class="headerlink" title="识别文字后自动翻译"></a>识别文字后自动翻译</h2><p><strong>使用场景</strong>：比如，对于英文版的 PDF、未翻译的字幕、未汉化的游戏，直接用 iText 截图，自动翻译为中文。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fmytn28rkwg30iw0ayb29.gif" alt=""></p>
<p>iText 集成 <strong>Google、百度双引擎</strong>：优先选用 Google，当无法访问 Google 时使用百度。</p>
<p>注：为保持程序的简洁，翻译功能默认是关闭的。可以在识别结果窗口点击翻译按钮、或按下 <code>⌘T</code> 快捷键，即可快速开启翻译。一旦开启，后续的识别也会自动翻译，直至手动关闭。</p>
<h3 id="关于体验的一点思考"><a href="#关于体验的一点思考" class="headerlink" title="关于体验的一点思考"></a>关于体验的一点思考</h3><p>做产品的，都要讲用户体验，这里我也提一点细节：Google 翻译支持 100+ 种语言。那么，<strong>如果在列表中展示这 100+ 种语言呢？</strong></p>
<ul>
<li>最简单粗暴，直接把语言列出来</li>
<li>进一步，对语言进行排序，方便查找<ul>
<li>排序，又会涉及到本地化排序。比如，对于汉字，一般是按拼音排序</li>
</ul>
</li>
<li>进一步，一般而言，我们是要翻译为自己的母语<ul>
<li>比如咱国人，多数是要翻译为中文</li>
<li>于是，可以单独列出和 macOS 系统相匹配的语言列表，默认选择最优先的语言</li>
</ul>
</li>
<li>上面描述的是默认的选择，还得考虑用户切换翻译语言后的动态更新<ul>
<li>通常，我们不太会同时掌握很多外语，要翻译的也只是少量语言。因此，iText 会保留用户最近手动选择的 3 种语言</li>
</ul>
</li>
</ul>
<p>于是，iText 的语言列表是这样的：</p>
<p><img src="https://ps.toolinbox.net/fbk0r.jpg" alt=""></p>
<p>其实，<strong>沿着这个思路，还有很多事可以做</strong>。比如： 如果从图片中识别出的语言是英文，翻译的目标语言自然不应该是英文，那就应该设置成什么呢？等等，诸如此类的问题，可以继续优化下去。<strong>对体验的追求，是无止境的。</strong></p>
<h2 id="支持连续识别"><a href="#支持连续识别" class="headerlink" title="支持连续识别"></a>支持连续识别</h2><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fmyv1ieza9g30h40c4npd.gif" alt=""></p>
<p><strong>使用场景</strong>：比如，对于双栏等排版复杂的图片，如果一次性识别，识别结果可能会有诸多杂音，效果不够理想。而如果分块截取对应区域，排版效果则会好很多。而 iText 可以在连接识别的模式下，自动拼接识别后的文本，很方便。</p>
<p><img src="https://ps.toolinbox.net/e19pv.jpg" alt=""></p>
<p>注：和翻译功能类似，此功能默认关闭。需要时，可以点击识别窗口底部的按钮开启。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">从 Mac App Store 下载 iText</a></p>
<p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p>每月可免费识别 20 次，订阅 iText 高级版即可无限次识别、无限次翻译。</p>
<p>如果你觉得 iText 还不错，还请帮忙 <a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">在 App Store 评论</a>；如果你觉得 iText 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=iText" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0101 - 2018，你好]]></title>
      <url>https://atjason.com/daily/2018-01-01.html</url>
      <content type="html"><![CDATA[<p><strong>2018，目标是：1·5·30</strong></p>
<p>至于是什么意思，待到年底、目标达成时，再来告诉大家。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1231 - 2017，再见]]></title>
      <url>https://atjason.com/daily/2017-12-31.html</url>
      <content type="html"><![CDATA[<p>今年最后一天，跟家人出去玩了一天。有些累，不过大家也都还挺开心的。</p>
<p>明天，就是新的一年。我的心态平和、计划明确，会继续努力的。</p>
<p>努力，2018 💪</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1230 - 别说用户没有消费能力]]></title>
      <url>https://atjason.com/daily/2017-12-30.html</url>
      <content type="html"><![CDATA[<p>先来看看这张图：</p>
<p><img src="https://ps.toolinbox.net/2ijwm.jpg" alt=""></p>
<p>这是一家商场开业的景象。</p>
<p>这是一家小县城商场开业的景象。</p>
<p><strong>别说用户没有消费能力，要问自己有没有能力让用户消费。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1229 - 朋友不在多，在于相交]]></title>
      <url>https://atjason.com/daily/2017-12-29.html</url>
      <content type="html"><![CDATA[<p>我一直不喜欢也不擅长和不熟的人称兄道弟。</p>
<p>跟相熟的人在一起，可以相互卸下防备，交心地聊。就算聊不出什么东西，单单是聊，也能让人心情愉悦。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1228 - 代码有考虑开源吗？]]></title>
      <url>https://atjason.com/daily/2017-12-28.html</url>
      <content type="html"><![CDATA[<p>碰到这种问题，你会怎么回答？</p>
<p>我是直接不想回答。</p>
<p>顺便，我也开源了自己产品中的部分代码，比如 <a href="https://github.com/atjason/IAPHelper" target="_blank" rel="external">IAPHelper</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1227 - iText 支持手动设置识别的源语言]]></title>
      <url>https://atjason.com/daily/2017-12-27.html</url>
      <content type="html"><![CDATA[<p>在大部分情况下，Google 都能准确地识别源语言。而俄罗斯的用户反馈，无法正确识别俄语。测试了下，还真是。今天加把劲，增加了手动设置源语言的功能。</p>
<p>其实，单纯这个功能倒没什么可说的。关键在于：<strong>如何既满足边缘情况、又不影响大多数的用户</strong>。目前，整体的逻辑是这样的：</p>
<ul>
<li>对于大部分用户，是不需要知道有 Google、腾讯等 OCR 服务的。<ul>
<li>因此，一般的交互界面，是看不到此类信息的。</li>
</ul>
</li>
<li>确实有部分用户需要使用 Google 服务。<ul>
<li>比如需要翻译小语种，或者有 Google 情节。</li>
<li>对此，可以 <strong>右击菜单栏图标</strong>，以选择 OCR 服务。</li>
<li>这一交互藏的比较深。但如果真有此需求，是会来问的。因为，可以在技术支持、或教程中，告知用户这一交互即可。</li>
</ul>
</li>
<li>又确实有更小比例的情况下，Google 无法准确识别源语言。<ul>
<li>对此，可以 <strong>在按 Option 键的情况下，右击菜单栏图标</strong>，以选择 Google 的源语言。</li>
</ul>
</li>
</ul>
<p><img src="https://ps.toolinbox.net/u8vnj.jpg" alt=""></p>
<p><strong>某个交互的权重、显眼程度，是和其本身的重要程度关联的。</strong></p>
<ul>
<li>越重要的交互，越要简单直接。</li>
<li>越不重要的，就越要不显眼。这样，才能避免喧宾夺主。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1226 - 搞定 iText 连续识别]]></title>
      <url>https://atjason.com/daily/2017-12-26.html</url>
      <content type="html"><![CDATA[<p>先上图：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fmul1pbvqrg30h40c4kiy.gif" alt=""></p>
<p>主要要解决的是此类问题：比如，有时会需要识别 PDF 这种排版复杂的「图片」，如果直接把整张图拿去识别，结果肯定会有很多杂音；手动去除这些杂音，也是挺花时间的。</p>
<p>现阶段，更好的办法是「人机配合」；即，自己挑着选中有意义的区域进行文字识别，然后把分别得到的结果拼接出来。而为了实现这一目的，iText 的连续识别、自动拼接识别结果，就会显得很方便。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1225 - 被 NSTextView 坑了]]></title>
      <url>https://atjason.com/daily/2017-12-25.html</url>
      <content type="html"><![CDATA[<p>今天在做 iText 的连续识别，遇到一个问题：追加内容到 NSTextView，并不能完全显示出来。</p>
<p>开始时，以为是追加的方式不对。后来再次确认：哪怕是直接设置字符串，如果太多，也无法显示。</p>
<p>以目前的理解，应该是 TextView 的 Bug；明天顺势好好学习下这个控件，消除一想到它就怕的心理恐惧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1224 - 搞定 iText 识别文字后翻译]]></title>
      <url>https://atjason.com/daily/2017-12-24.html</url>
      <content type="html"><![CDATA[<p>本来，打算在发布 iText 再介绍。不过，有点忍不住，先放出个介绍图吧：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fms96b72fog30iw0ayh4w.gif" alt=""></p>
<p>简单说几点：</p>
<ul>
<li>识别后自动翻译</li>
<li>技术上，使用 Google + 百度 双引擎，无法访问 Google 时，使用百度</li>
<li>Google 支持 100+ 种语言，百度支持 25+ 种语言</li>
</ul>
<p>感兴趣的，得先等等了，我尽快放出体验版。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1223 - 换个地方，效率好高]]></title>
      <url>https://atjason.com/daily/2017-12-23.html</url>
      <content type="html"><![CDATA[<p>之前一直都是在家写代码，今天去朋友公司呆了一天，效率变得好高。</p>
<p>关键还是他的公司就他一个人…安静，还挺暖和，很适合写代码这种事。</p>
<p>趁着这股劲，基本完成了 iText 识别文字后的翻译，只剩下一些边角的活，明天肯定能搞定。然后接着搞连续识别的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1222 - iText 开始集成翻译]]></title>
      <url>https://atjason.com/daily/2017-12-22.html</url>
      <content type="html"><![CDATA[<p>昨天问了群友关于翻译的需求，然后我基本定了：识别文字后翻译，对于 iText 而言，只是文本后处理的一种。其地位，和英文首字母大写等操作，一样。</p>
<p>有了这个定位，相关的交互等后续的工作就好做了。</p>
<p>先是调查了几个候选的翻译服务：Google、Bing、百度、有道。肉眼来看，看不出区别。其实，我主打使用的是 Google，仅当无法访问时，才使用国内的服务。所以，国内的服务选哪个，也就没那么重要。拍拍脑门，选了百度。</p>
<p>争取明天搞完这事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1221 - 像对待同事一样，对待家人]]></title>
      <url>https://atjason.com/daily/2017-12-21.html</url>
      <content type="html"><![CDATA[<p>越是亲近的人，越是容易把握不住情绪。而对于同事、或到陌生人，反而很是客气。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[iText - OCR 截图识字 - 新版小幅更新]]></title>
      <url>https://atjason.com/daily/2017-12-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/daxyv.jpg" alt=""></p>
<p>iText 新版上架 MAS：</p>
<ul>
<li>适配外接显示器</li>
<li>优化网址、邮箱等文本的格式</li>
<li>保留曲目：Bug 修复</li>
</ul>
<p>欢迎 <a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">升级品鉴</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1219 - 被病毒打败]]></title>
      <url>https://atjason.com/daily/2017-12-19.html</url>
      <content type="html"><![CDATA[<p>今天生病了。</p>
<p>昨晚起来吐了 2 次，喝水都吐。今天一天不敢、也不想吃什么东西，没什么力气，怕冷…哎，生病真难受。</p>
<p>晚上买了榨菜，配着粥、面条吃，感觉好些了，看来「吃盐有力气」不只是传说啊。趁着精力好些，抓紧提交了 iText 新版，希望明天能过审核，也不枉我这边执着。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1218 - 重新开始干活]]></title>
      <url>https://atjason.com/daily/2017-12-18.html</url>
      <content type="html"><![CDATA[<p>好像有超过 10 天没写代码了。</p>
<p>今天重新开始干活，在出 iText 新版。毕竟手生，只做了些简单的事。另外，考虑到圣诞节审核暂停，也不敢在这个版本中做大的修改，稳定点上个版本好了。</p>
<p>争取这周上架，然后多花点时间改进下 Klib，好像因为 iText 的半路杀出，这个产品已经挺久没更新了，可能代码都已经完全生疏了。</p>
<p>哎，又想起这个话题：什么时候可以搞个大点的产品，可以一直做这个产品，这样就不会有手生的问题，这可以避免切换成本。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1217 - 一天都交待给娃了]]></title>
      <url>https://atjason.com/daily/2017-12-17.html</url>
      <content type="html"><![CDATA[<p>本打算今天大干一场的，没想到娃又吐又拉。下午去了医院，排号等了将近 200 个号，吓死个人；从下午一直等到傍晚。抽血、大便结果，果然是轮状病毒感染。开药回家。</p>
<p>真感觉去医院挺麻烦的，而且医院的作用，没想象的中的大。主要是：</p>
<ul>
<li>心理安慰</li>
<li>知道是什么病、不是什么病</li>
<li>开药</li>
</ul>
<p>尤其感觉，很多病都是吃药 3 天好、不吃药半周好，最终还是靠自己的抵抗力搞定问题。另外，去医院也很担心交叉感染。本来是个小毛病，传染个大毛病，就亏大了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1216-Day 10 - 回杭]]></title>
      <url>https://atjason.com/daily/2017-12-16.html</url>
      <content type="html"><![CDATA[<p>快乐的日子总是短暂的，今天回杭州了。</p>
<p>又是折腾的一天：打车、飞机、打车，早上 7 点起床开始折腾，下午 4 点到家。</p>
<p>杭州真是冷啊，跟深圳差了 10 几度，一下子还真不适应。慌忙穿上厚衣服、开空调，稍微找到一点深圳的感觉。</p>
<p>不管怎么说，旅行已经结束，要开始常规生活了。已经过了一遍 iText 剩下的事情，争取圣诞节前再上一个版本。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1215-Day 9 - 闪离香港]]></title>
      <url>https://atjason.com/daily/2017-12-15.html</url>
      <content type="html"><![CDATA[<p>今天本打算游游香港的，什么太平山啥的。可惜，娃半夜咳的厉害了。之前也咳，但总希望自己好，没想到拖得历害了。</p>
<p>于是，早上 7 点起床、退房、赶地铁、转地铁、入关、再转地铁、狂奔，一路到了儿童医院，约 10 点。结果一挂号：397，吓死个人，前面还有 100 个号，这还是急诊。唯一的好消息是，中午不休息。就这样，下午快 2 点才开始看。还好问题不大，开点药吃着。</p>
<p>关键，今天没带推车，都是用背带，这一路折腾着，不是亲爹，我真不带啊。完了，赶快回去休息了。到住处，本打算看电影的，结果看着看着直接睡着了…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1214-Day 8 - 香港见闻]]></title>
      <url>https://atjason.com/daily/2017-12-14.html</url>
      <content type="html"><![CDATA[<p>今天去了香港，随便说点见闻吧：</p>
<ul>
<li>城市的观感，其实跟国内的大城市差不多，尤其是地铁里，甚至感觉不到差异；地铁的广播还有普通话</li>
<li>感觉香港的车速好快，一个一个都跟飙车一样，长的很破的巴士车也开得飞快；路上也是有不少司机按喇叭的；也见过目测 60 岁的的士司机，跟日本有的一拼</li>
<li>看广告，出租车也可以用支付宝微信</li>
<li>香港抽烟的人挺多的，尤其是女性抽烟的比例明显比大陆高很多</li>
<li>香港的住宿确实还是挺贵的，我们找了一个，比较一般的地方，都要700多一晚</li>
<li>香港富庶，但也有穷人，在天桥下面也有防止流浪者露宿的尖尖</li>
</ul>
<p><img src="https://ps.toolinbox.net/yeu7t.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1213-Day 7 - 休整]]></title>
      <url>https://atjason.com/daily/2017-12-13.html</url>
      <content type="html"><![CDATA[<p>早上本打算商量着找个景点逛逛，结果妈实在怕了晕车，今天改为休整了。</p>
<p>最开心的，还是去大梅沙海滩。老妈这身材，竟然跳起来了。再加上 iPhone 拍出来的慢镜头，真是珍贵的回忆啊。</p>
<p>慢镜头真是个好东西，拍了我把娃扔空中的过程，娃笑的真开心 😀</p>
<hr>
<p><strong>在最渴的时候，喝杯冰可乐。</strong></p>
<p>这几天在公寓的冰箱里放着一大桶可乐，每天出去玩回来，美美地喝上一杯，既解渴，又感觉非常爽。而如果是在外面买瓶可乐，却没有这般爽，甚至还会有负担：过不了多久就要上厕所。</p>
<p><strong>同样的产品，放在不同的场景下，就会有非常大的差异。</strong></p>
<p>做产品，除了实现产品本身的功能，还要考虑用户使用产品的场景、上下文，<strong>在用户最需要的时候，给其最需要的东西</strong>，才能达到事半功倍的效果。</p>
<p>另外就是，<strong>如果最痛的点被满足了，其他的不便，便没那么重要了。</strong>比如，冰可乐爽了，我就根本想不起来，拿一大桶可乐，倒入一个轻轻的纸杯时，很容易把纸杯冲跑、倒翻。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1212-Day 6 - 见网友]]></title>
      <url>https://atjason.com/daily/2017-12-12.html</url>
      <content type="html"><![CDATA[<p>玩的方面，今天没什么，就去了喜来登吃中饭。可能我对吃没太多要求吧，觉得也没什么。</p>
<p>吃完饭，就远赴 40 公里外的南山区，找朋友吃饭；感觉就像换个了城市，真是远啊。</p>
<p><img src="https://ps.toolinbox.net/eebw8.jpeg" alt=""></p>
<p>一个人在深圳湾走了很久，面对着开阔的大海，想了很多事，也想清楚了一些事：</p>
<ul>
<li><strong>我需要用很棒的产品来证明自己</strong></li>
<li><strong>我需要用更多的收入来让家人过上更轻松自由的生活</strong></li>
<li>在精力和时间都越来越有限的情况下，提高效率，只做最重要的事</li>
<li>做积累性的事，累积自己的品牌</li>
<li>在展望长远之前，先做好眼下的事</li>
</ul>
<p>在后海周围，高楼林立，我却没有太多感触。无论这里多繁华、变化多快，我要做的，依然是我要做的事。</p>
<p>跟大家吃饭，长了很多见识，比如上架 200 个应用的公司，比如研发却不需要上市的产品，等等。也聊了独立开发者这个屈指可数的群体，以及产品该如何寻找方向、功能取舍、运营推广，等等。可惜时间太短，还得赶 40 公里回去，不得不在未醉的情况下，回去了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[我是如何把 iText 带到这个世界的]]></title>
      <url>https://atjason.com/IndieDev/iText.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/9iygs.png" alt=""></p>
<h2 id="0-iText-点子的由来"><a href="#0-iText-点子的由来" class="headerlink" title="0) iText 点子的由来"></a>0) iText 点子的由来</h2><p>开始时，我打算在 <a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a> 中支持从 PDF 导入标注，发现很难；在这个过程中，一些用户提出（<strong>发现需求</strong>）：在看 PDF 文档时，有些扫描版不支持复制文字，不方便。于是，就从双 11 晚上开始，<a href="https://atjason.com/daily/2017-11-13.html">我花了一天，做了 iText 第一版</a>（<strong>最小原型</strong>），可以截图并从中识别文字。</p>
<p><img src="https://ps.toolinbox.net/hciqq.png" alt=""></p>
<p>之后，在微博等渠道做了简单推广，并限制 <strong>封闭内测</strong>（即，用户需要发邮件给我，才能收到 iText 的下载链接），发现还是有不少人对这个工具感兴趣。这也算是 <strong>验证了这个需求的真实性</strong>，于是就决定好好做成一款产品。</p>
<p>其实，在开发 iText 时，我已经有包括 <a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> 、<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>  在内的 7 款产品。要开一个新坑，还是很慎重的。毕竟，<strong>麻雀虽小、五脏俱全</strong>；再小的产品，也需要 Logo、产品首页、提交上架、运维等一系列事情。很容易分散精力，做出一款自己都不满意的产品。不过，感觉 iText 应该是可以做的，虽然我当然压根就没做所谓的竞品分析、市场容量分析等等。</p>
<h2 id="1-我主要做了什么事"><a href="#1-我主要做了什么事" class="headerlink" title="1) 我主要做了什么事"></a>1) 我主要做了什么事</h2><p>2017 年双 11 写下第一行代码，时月 29 号正式上架 Mac App Store，第一版花费将近 20 天的时间。</p>
<a id="more"></a>
<h3 id="1-0-开发最小原型，用了-1-天"><a href="#1-0-开发最小原型，用了-1-天" class="headerlink" title="1.0) 开发最小原型，用了 1 天"></a>1.0) 开发最小原型，用了 1 天</h3><p>虽说第一版最小原型，也已经包含了很多因素，主要是开发相关：</p>
<ul>
<li>Logo、图标</li>
<li>菜单栏图标基本程序</li>
<li>集成百度 OCR 服务</li>
<li>剪贴板操作</li>
<li>截图功能</li>
<li>拖拽</li>
<li>界面</li>
<li>日志</li>
<li>收集反馈</li>
<li>试用机制</li>
<li>检测更新</li>
<li>本地化</li>
<li>测试用例、测试</li>
<li>…</li>
</ul>
<h3 id="1-1-完成产品并发布，却用了-20-天"><a href="#1-1-完成产品并发布，却用了-20-天" class="headerlink" title="1.1) 完成产品并发布，却用了 20 天"></a>1.1) 完成产品并发布，却用了 20 天</h3><p><strong>最小原型距离成熟的产品，还有很远的距离</strong>，尤其有非常多开发之外的工作：</p>
<ul>
<li><strong>Logo 设计</strong></li>
<li><strong>集成多家 OCR 服务</strong><ul>
<li>目前，技术上实现了对接百度、腾讯、Google 的 OCR 服务，最终使用的是后两种。</li>
<li>其中，还要压缩图片以满足 OCR 服务对图片尺寸的限制。</li>
</ul>
</li>
<li><strong>优化识别结果</strong><ul>
<li>第一版只是把 OCR 服务返回的结果直接呈现给用户，但识别后的优化，还有大量的工作要做。</li>
</ul>
</li>
<li><strong>优化交互</strong><ul>
<li>第一版只是用 Popover 的方式呈现结果。但通常用户对识别结果有进一步的要求，比如拖拽至原始图片附近、显示原图方便校对等等。这就需要对识别窗口进行优化。</li>
<li>另外，用户识别的内容有多有少，固定的窗口大小就显得不合适，这就需要根据内容多少来调整窗口大小。</li>
</ul>
</li>
<li><strong>新用户引导</strong></li>
<li><strong>实现免费 + 内购（订阅）模式</strong><ul>
<li>单单是选择哪种付费模式，我就纠结了很久。</li>
<li>在限制免费版功能时，还要防止被破解，哎…</li>
</ul>
</li>
<li><strong>程序本地化</strong><ul>
<li>目前支持英文和简体中文。</li>
</ul>
</li>
<li><strong>错误处理和日志系统</strong></li>
<li><strong>适配不同操作系统</strong><ul>
<li>目前支持 macOS 10.10+；其中，10.10 的支持有些麻烦，因为有些 API 仅在 10.11 及更新的系统上都有。</li>
<li>还要适配 Dark 模式、菜单栏隐藏模式。</li>
</ul>
</li>
<li><strong>沙盒模式</strong><ul>
<li>这里提一点，我是调用系统 <code>/usr/sbin/screencapture</code> 进行截图的，而 Mac App Store 默认是不允许的。这时，需要在沙盒配置文件中加 <code>com.apple.security.temporary-exception.mach-register.global-name: com.apple.screencapture.interactive</code> 的规则。</li>
</ul>
</li>
<li><strong>上架 Mac App Store</strong><ul>
<li>应用描述、关键字、截图等。其中，截图的制作很花时间，既需要设计、又需要具体实现。</li>
<li>尤其是，与审核员斗智斗勇…</li>
</ul>
</li>
<li><strong>各种文案</strong><ul>
<li>尤其是设计教程中的操作动画，非常耗时。</li>
</ul>
</li>
</ul>
<p>下面，在这些环节中，<strong>我挑些重要的环节，掰开了、揉碎了说说</strong>。</p>
<h2 id="2-文字识别的核心：OCR"><a href="#2-文字识别的核心：OCR" class="headerlink" title="2) 文字识别的核心：OCR"></a>2) 文字识别的核心：OCR</h2><h3 id="2-0-OCR-是项活化石技术"><a href="#2-0-OCR-是项活化石技术" class="headerlink" title="2.0) OCR 是项活化石技术"></a>2.0) OCR 是项活化石技术</h3><p><strong>OCR</strong> (<strong>O</strong>ptical <strong>C</strong>haracter <strong>R</strong>ecognition) 其实是非常「久远」历史的话题。说久远，是相对于软件的发展速度，OCR 已经存在了好多年。而且，由于一直也都有这样的需求，对应的方案也在不断变化。</p>
<ul>
<li>没几年之前，基本都是 SDK、离线库，卖高昂的售价，通常都是卖给大企业。</li>
<li>后来，License 也变也了订阅式的。</li>
<li>直至今日，又变成了云端服务化，按使用量收费。</li>
<li>甚至，云端这个词都要过时了，慢慢套上了「深度学习」、「AI」这些闪耀的词汇。</li>
</ul>
<p>随着这些形态的演进，站在台前引领风骚的主，也在不断更迭。比如，之前一直被「百度更懂中文」「微软这种外企肯定更懂英文」这种思想紧紧套住。可后来一试腾讯的 OCR，发现某些图片的识别，中文比百度强、英文比微软强。以及，在技术方面生猛突进的 Google，都让 <strong>OCR这个领域不断发生变化</strong>。</p>
<h3 id="2-1-腾讯、Google-双引擎"><a href="#2-1-腾讯、Google-双引擎" class="headerlink" title="2.1) 腾讯、Google 双引擎"></a>2.1) 腾讯、Google 双引擎</h3><p>如何选择 OCR 的技术方案呢？</p>
<p><strong>首先，我排除了离线的识别库</strong>，因为离线注定了这些库的识别能力是死的，不会自己增强。</p>
<p>接下来，在一票在线 OCR 服务中，我对比了百度、腾讯、微软、Google 这些四家大厂的产品。最后，在少量测试和主观感受下（比如，Google 信仰的加持，使得即使不测试，我就相信 Google 的 OCR 是很牛的），<strong>我最终选择了腾讯、Google 的服务。</strong>简单的说，如果你在国内使用 iText，默认使用的是腾讯的服务；国外则使用 Google.</p>
<p>那么，到底识别准不准呢？这么说吧：</p>
<ul>
<li><strong>对于一般的自然语言</strong>，比如书中的一段话、新闻稿，<strong>识别效果是惊人的准确，甚至可以达到 100%</strong></li>
<li><strong>对于排版复杂、尤其有特殊字符的文字</strong>，比如程序代码、选择题，识别效果就不太理想，<strong>需要手动对识别后的结果进行修正</strong><ul>
<li>比如，单纯地给一个竖线，机器是无法区分到底是小写的 l、还是大写的 I（<strong>顺便问一下，你看出二者的区别了吗？</strong>）；相反，机器是需要根据上下文进行判断和优化的。而像程序代码这种非自然语言，目前机器是很难进行语义识别的。</li>
</ul>
</li>
<li><strong>手写识别？还很遥远</strong><ul>
<li>期间，还有件有意味的事：<strong>有个朋友拍了一张医院病历上的神仙字体，问 iText 能不能识别。</strong>看到那歪歪扭扭的线条，能称为是字吗？无奈，现在中文手写的 OCR 基本还处于不可用的状态。少量测试过微软英文的手写识别，够强可用，但也得看潦草的程度。</li>
</ul>
</li>
</ul>
<p>到底准不准？欢迎你来试试。</p>
<p>顺便说一句，在接入各大服务的 REST API 接口后，明显感觉 Google 的接口最合理：不限制图片分辨率、仅限制原图大小。百度则相对差一些：限制图片分辨率且有 Bug、根据 base64 编码来限定图片大小。</p>
<h3 id="2-2-永无止境的段落识别"><a href="#2-2-永无止境的段落识别" class="headerlink" title="2.2) 永无止境的段落识别"></a>2.2) 永无止境的段落识别</h3><p>OCR 服务识别后，可以得到这样的结果：<strong>各文字片断及其位置。</strong></p>
<p><img src="https://ps.toolinbox.net/rc32n.jpg" alt=""></p>
<p>但，<strong>如果根据这些信息还原出自然语境下的段落？这是很难的。</strong>我自己试着列出常见的段落分布，分析其中的位置规律，实现相应的识别段落的算法。并且，根据自己和用户测试的图片，根据识别结果对算法进行优化，还是有些效果的。</p>
<p><img src="https://ps.toolinbox.net/csewh.jpg" alt=""></p>
<p>不过，并不完美。主要是，一些场景下，除非结合语义识别，否则是无法仅根据位置信息来划分段落的。</p>
<p>期间，我还花了 1 天左右的时间 <strong>识别多栏</strong>。</p>
<p><img src="https://ps.toolinbox.net/b976s.jpg" alt=""></p>
<p>虽说最后也差不多实现了，但却增加了程序的复杂度，让其它一些原本很简单的问题，变得难以解决。<strong>经过一番思考后，我还是删除了这部分代码，仅保留了普通段落的识别。</strong>回过头来看，之前决定做多栏识别的决定并不正确。因为这明显优先级低，又需花费大量时间。毕竟，还有很多其他更基础、更重要的事要做。</p>
<h3 id="2-3-更加永无止境的文本优化"><a href="#2-3-更加永无止境的文本优化" class="headerlink" title="2.3) 更加永无止境的文本优化"></a>2.3) 更加永无止境的文本优化</h3><p>首先要知道 <strong>文本优化正确的规则</strong> 是什么，比如：</p>
<ul>
<li>空格<ul>
<li>中英文之间需要增加空格</li>
<li>中文与数字之间需要增加空格</li>
<li>数字与单位之间需要增加空格</li>
<li>全角标点与其他字符之间不加空格</li>
</ul>
</li>
<li>标点符号<ul>
<li>不重复使用标点符号</li>
<li>破折号前后需要增加一个空格</li>
</ul>
</li>
<li>全角和半角<ul>
<li>使用全角中文标点</li>
<li>数字使用半角字符</li>
<li>遇到完整的英文整句、特殊名词，其內容使用半角标点</li>
</ul>
</li>
</ul>
<p>这里主要参考的是 <a href="https://github.com/xitu/gold-miner/wiki/%E8%AF%91%E6%96%87%E6%8E%92%E7%89%88%E8%A7%84%E5%88%99%E6%8C%87%E5%8C%97" target="_blank" rel="external">稀土所翻译的文章排版的规则</a>，在此致谢。</p>
<p><strong>如果说段落识别很麻烦，文本优化则更多麻烦</strong>，根本的原因在于：<strong>需要对内容进行识别</strong>。比如：</p>
<ul>
<li>英文段落首字母大写，这规则没错吧，但对于 “iPhone is a good phone.” 这样的情况，iPhone 是特定词汇，i 不应该大写。</li>
<li>中文文字后的 ‘.’ 应该使用全角的 “。”，这规则也没错吧，但对于『今天天气真热啊…』，明显又不应该替换；亦或是 JSON 数据『”name”: “张飞”』中的 “ 也不应该被替换。</li>
<li>以及其他无数多的例子。</li>
</ul>
<p>没办法，只能有所取舍。目前，iText 主要完成了这些部分的优化：</p>
<ul>
<li><strong>自动识别段落</strong></li>
<li>中文环境使用全角标点符号</li>
<li>中文与英文字母、数字间增加空格</li>
<li>删除中文字符间、英文字符与标点符号间的多余空格</li>
<li>英文首字母大写</li>
</ul>
<p>技术方面，主要是使用 <strong>正则表达式</strong> 来识别并替换。不过，规则越多，正则表达式也越复杂，稍微改动下某条表达式，可能会破坏其他的。甚至，正则表达式之间的顺序，对优化结果也有影响。且表达式多了，也会降低执行效率。还得再想想如何优化。</p>
<p>这里要提一句 <strong>单元测试</strong> 了。我每实现一条规则的优化，就会补全对应的测试用例。接着再实现下一条则，这些单元测试可以忠实地保证新的规则没有破坏旧的规律，很是有用。</p>
<h2 id="3-开发过程中的一些感想"><a href="#3-开发过程中的一些感想" class="headerlink" title="3) 开发过程中的一些感想"></a>3) 开发过程中的一些感想</h2><p>下面是一些零散的、我觉得值得拿出来跟大家分享的一些点。</p>
<h3 id="3-0-名字与-Logo"><a href="#3-0-名字与-Logo" class="headerlink" title="3.0) 名字与 Logo"></a>3.0) 名字与 Logo</h3><p>一提 Logo 就扎心…</p>
<p>在我已发布的产品中，只有 Klib 的 Logo 是朋友 Allen 设计的，也只是这个没被骂过丑。其它均是我自己用设计，都被吐槽过…</p>
<p>这次，我找了位设计师帮忙，前后也设计了好几版：</p>
<p><img src="https://ps.toolinbox.net/ufw73.png" alt=""></p>
<p>不过，可能时间有限，没找到打动自己的那款，只能沿用 i 系列的风格。开始时，是这样的：</p>
<p><img src="https://ps.toolinbox.net/3r1ki.jpg" alt=""></p>
<p>后来，「精心」设计了颜色，便是文章开头的样子。先这样吧，之后会考虑 i 系列家族统一更新。</p>
<p>至于名字，你一看我之前的产品，应该也会很自然地想到：iText（顺便说一句：Klib 之前其实是叫 iKindle，可惜苹果不允许名字中包含 Kindle 这个商标，只能被迫改名 Klib）</p>
<h3 id="3-1-新用户引导"><a href="#3-1-新用户引导" class="headerlink" title="3.1) 新用户引导"></a>3.1) 新用户引导</h3><p>这事的矛盾之处在于：<strong>新用户和老用户的矛盾</strong>。</p>
<p>进一步说，我追求程序的简洁。尤其是在用户对 iText 熟悉之后，并不需要程序有过多的描述。比如，文字按钮可以被图标按钮取代，用界面上根本看不到的快捷键进行操作，等等。可问题是，<strong>熟悉是需要一个过程</strong>，新用户需要多次操作后，才能掌握这些甚至有些晦涩的技巧。<strong>没有新用户，又何来老用户？</strong></p>
<p>这二者的矛盾，怎么解决呢？</p>
<p>我能想到的办法是：<strong>保持界面的简洁（照顾老用户），同时在首次运行时增加提示（照顾新用户）</strong>。提示包括：</p>
<ul>
<li>首次通过菜单截图时，提示可以通过快捷键截图。</li>
<li>首次展示识别结果时，提示识别内容已复制到剪贴板。</li>
<li>首次通过菜单展示识别结果时，提示可通过快捷键展示。</li>
</ul>
<p>比如：</p>
<p><img src="https://ps.toolinbox.net/dj3jr.jpg" alt=""></p>
<h3 id="3-2-用户越多，公约数越少"><a href="#3-2-用户越多，公约数越少" class="headerlink" title="3.2) 用户越多，公约数越少"></a>3.2) 用户越多，公约数越少</h3><p>比如，对于工具型软件，<strong>有人偏好效率，有人喜欢美观</strong>。想要二者兼得，怕是很难的事，我自认为没有这样的能力。</p>
<p>可是，转念一想，<strong>何必二者兼得？</strong>如果我只找到偏好效率的用户，全心全意为他们服务，把他们伺候爽了，不就可以了？至于喜欢美观的用户，简单，让他们选择美观的同类产品不就可以了。<strong>弱水三千，只取一瓢饮。</strong></p>
<h3 id="3-3-要解决的，不是问题本身"><a href="#3-3-要解决的，不是问题本身" class="headerlink" title="3.3) 要解决的，不是问题本身"></a>3.3) 要解决的，不是问题本身</h3><p>在处理 macOS 兼容性时，遇到过一个头痛的问题。</p>
<p>目前，iText 支持 macOS 10.10+，我日常自然是在最新的 10.13 中开发的。发布前，在 10.10 环境下测试时，发现了识别结果窗口布局有严重的问题。定睛一看，原来 Xocde 中早有警告：我使用了只在 10.11+ 平台才支持的布局方式，在 10.10 中自然会有问题。</p>
<p>怎么解决呢？</p>
<p><strong>这个问题本身，是指界面布局有问题。</strong>OK，那我就解决布局问题呗。问题是，既然 10.11 引入了新的布局方式，自然是这种方式很有用、很方便。而我要在 10.10 模拟出这么布局，相当于开发了 10.11 的部分新功能，这并不是件容易的事。尤其，事实上 10.10 的支持在我这边优先级很低，只是希望顺带支持，并不希望就此花费大量时间。在已经有些复杂的布局基础上继续加补丁，不是好的办法。</p>
<p><strong>跳出问题本身一想，问题的本质是：为 10.10 的用户展现布局良好的窗口。</strong>那，为什么一定要在 10.11+ 已有的窗口基础上解决问题呢，为什么不新做一个窗口呢？既然 10.10 的优先级低，那我就做个简化版的窗口，仅保留最重要的展示结果、复制内容等功能，放弃展示图片预览、钉住窗口等高级功能。界面元素少了，布局就是件很简单的事了。</p>
<p>这就是我的感想：<strong>要解决的不是问题本身</strong>（布局的问题），<strong>而是问题的本质</strong>（为 10.10 的用户提供布局良好的界面）。<strong>跳出问题本身，往往能发现解决问题本质的更简便的方法。</strong></p>
<h2 id="4-iText-是要赚钱的"><a href="#4-iText-是要赚钱的" class="headerlink" title="4) iText 是要赚钱的"></a>4) iText 是要赚钱的</h2><p>iText 一定是款需要付费才能完全使用的产品：</p>
<ul>
<li><strong>在线 OCR 服务是需要付费的</strong>，通常是按次收费<ul>
<li>注：腾讯 OCR 服务目前在内测期，免费；不过收费只是时间问题。</li>
</ul>
</li>
<li><strong>iText 是商业产品</strong>，不是业余爱好<ul>
<li>作为独立开发者，开发 iText 使用的并不是业余时间，而是我全部的工作时间；不是业余爱好，而是想要养活自己的产品。我需要为花费的时间买单，并支撑自己继续做独立开发者。</li>
</ul>
</li>
</ul>
<h3 id="4-0-上架-Mac-App-Store-时遇到的坑"><a href="#4-0-上架-Mac-App-Store-时遇到的坑" class="headerlink" title="4.0) 上架 Mac App Store 时遇到的坑"></a>4.0) 上架 Mac App Store 时遇到的坑</h3><p>由于开发和推广方面的考虑，我并未构建自己的序列号及付费机制，目前的产品均未在 Mac App Store 外销售；iText 亦如此。</p>
<p>提交 iText 上架 Mac App Store 被拒了多次，最开始上架时的版本号是 1.0.1，最后成功上架的是 1.1.0…</p>
<p>下面是被拒的一些原因及解决方式：</p>
<ul>
<li><p><strong>没有在上传用户数据前提示用户</strong></p>
<ul>
<li>其实是这样的，iText 需要上传图片至腾讯、Google 服务器进行识别。而苹果认识这是在上传用户个人数据，需要充分告知用户</li>
<li><strong>解决方式</strong>：在用户首次上传图片前，简单粗暴地弹个对话框提示：<br><img src="https://ps.toolinbox.net/70zq2.jpg" alt=""></li>
</ul>
</li>
<li><p><strong>订阅后没有展示剩余有限期</strong></p>
<ul>
<li>恩，这听着也很有道理。可问题是，我之前 Klib、iPic 中的订阅，也并未提示，为什么审核就能过呢？并且，用户其实是可以在 Mac App Store 中查看这一信息的。哎，这道理没法讲，审核是大爷，想起一出是一出</li>
<li><strong>解决方式</strong>：显示剩余时间呗<br><img src="https://ps.toolinbox.net/auqza.png" alt=""></li>
</ul>
</li>
<li><p><strong>产品不适合「自动」续订的订阅</strong></p>
<ul>
<li>审核员说，「自动」续订的订阅适用于杂志等类型的应用，不适用于 iText 这种功能型的应用。可，同理，为什么之前 Klib、iPic 就可以？依然同理，不可说。</li>
<li><strong>解决方式</strong>：有点搞笑，我啥都没改。再次提交相同模式的订阅，通过了。也许是换了个审核员、或者审核员的心情变好了。</li>
</ul>
</li>
</ul>
<p>其实，审核前我还一直担心的一个问题，反而没有被卡：在程序描述及截图中，出现「Google」的字眼。印象中，之前因为出现「Android」被拒，这次倒是侥幸过关了。</p>
<p><img src="https://ps.toolinbox.net/40oya.jpg" alt=""></p>
<p>最郁闷的是，审核员不会一次告诉我所有问题，而是分批…</p>
<ul>
<li>先用问题 1 把我拒掉</li>
<li>OK，我改；然后提交新版</li>
<li>再用问题 2 把我拒掉</li>
<li>如此循环…</li>
</ul>
<p>另外就是，如果你说：<strong>别人家的 App 就是这么干的</strong>。没用，在审核员眼里，这并不是你也可以这么干的理由。</p>
<p>上架过程还 <strong>吃了几次暗亏</strong>，也说出来大伙听听：</p>
<ul>
<li><strong>程序和内购需要分别提交</strong><ul>
<li>也即，在首次上架时，在提交二进制应用进行审核的同时，也需要「手动」提交所包含的内购项目进行审核。而我遗漏了这一点，导致被拒一次。</li>
<li>虽然，我在道理上理解这一逻辑，可苹果明显在提示等方面做得不够好。想我之前也提交过，可这次依然忘了，说明这并没有很强的因果关系，确实是需要提示的。</li>
</ul>
</li>
<li><strong>订阅模式改价格，需要提交一天</strong><ul>
<li>本来，我在 29 号凌晨就审核通过、并自动上架了。可在我将价格改为 6 折时，却发现要到 30 号才能生效。这迫使我不能在 29 号开始宣传，而只能等到 30 号新的价格生效后才行（因为宣传中要提到「首发限时 6 折」这样的字眼），白白浪费了一天，也让首发时间从周三推迟到周四，效果上打了折扣。</li>
</ul>
</li>
</ul>
<p>另外有一点，大家可能要注意下：<strong>新上架、或新版发布、或价格变更时，App Store 的更新需要时间</strong>。如果一发布就立马开始推广，用户可能会遇到搜索不到、无法下载、价格未更新、无法升级等奇怪的问题。建议过段时间再推广，比如头天晚上发布，第二天早上开始推广。</p>
<h3 id="4-1-免费功能到底该如何限制"><a href="#4-1-免费功能到底该如何限制" class="headerlink" title="4.1) 免费功能到底该如何限制"></a>4.1) 免费功能到底该如何限制</h3><p>这是个艰难的决定。</p>
<p>简单的说，<strong>如果免费的功能多了，用户就没有付费的必要；如果免费的功能少了，用户可能就要开骂，甚至直接离开</strong>，也就谈不上付费了。要把握其中的平衡，着实不易。</p>
<p>另外，除了考虑到收入本身，还要考虑产品的影响力。比如，<strong>产品刚发布时，知名度比较小</strong>。这时候，用户数量相对更重要些，比较适合 <strong>放水养鱼</strong>：适当放弃些收入，通过放宽免费功能的限制，来增加用户数量、留住用户。等产品有足够的影响力，就有定价话语权了。</p>
<p>比如，微软对于盗版 Windows、Office 的做法就是典型案例。开始时睁只眼、闭只眼，等大家已经离不开时，就开始向政府、上市企业寄律师函了。</p>
<p>说回 iText，<strong>目前免费版未对功能有任何限制，仅限制识别次数</strong>。且，每月都有一定的免费额度，使得用户不会刚开始没用几次、一遇到付费就卸载的情况。之后看运行的情况再调整，比如可以调整为每天都有免费次数。</p>
<h3 id="4-2-说说付费模式"><a href="#4-2-说说付费模式" class="headerlink" title="4.2) 说说付费模式"></a>4.2) 说说付费模式</h3><p>接下来的问题，便是如何确定收费模式。有这几种方式可考虑：</p>
<ul>
<li><strong>买断式</strong><ul>
<li>也即，你付一次钱，就可终身使用。</li>
<li>考虑到 OCR 服务的按次收费，个人觉得这并不科学，至少不具可持续性。</li>
</ul>
</li>
<li><strong>流量包式</strong><ul>
<li>比如，￥12 元买 250 次识别次数。</li>
<li>对用户而言，这种方式 <strong>对低频使用的用户友好，但对于高频使用的用户，并不太划算。</strong></li>
<li>另外，最关键的是，<strong>这种方式会给使用上带来很大的心理压力</strong>。比如，我在截图时不小心区域没选对，结果白白浪费了一次识别次数，这会让我在每次截图时都会有不小的心理压力，生怕截错了。虽然，从理性的角度，一次真没多少钱。但没办法，这种心里上的事情是很难用理性压住的。</li>
</ul>
</li>
<li><strong>包月式</strong><ul>
<li><strong>也即订阅式</strong>，即一个月出固定费用，即可不限次识别。</li>
<li>对用户而言，优缺点几乎和流量包式相反：<strong>对低频用户不友好、对高频用户友好</strong></li>
<li><strong>最终，我选择的是这种模式</strong>：每月可免费识别 20 次，充分体验 iText 的功能；订阅高级版即可不限次识别；这样，可以 <strong>同时照顾到低频用户和高频用户</strong>。首发时 6 折优惠：￥3 每月、或￥30 每年，续费时恢复原价。</li>
</ul>
</li>
</ul>
<p>其实，这跟手机流量非常像：</p>
<ul>
<li>如果你用量很少，1 MB 流量 0.1 元的方式就很适合你。</li>
<li>如果你用是很大、或者就想用得爽，包月得到固定流量、甚至是不限量的套餐，更适合你。</li>
<li>不过，我还没见过付一次钱，就可终身不限量使用的套餐。</li>
</ul>
<h2 id="5-iText-上架后的宣传"><a href="#5-iText-上架后的宣传" class="headerlink" title="5) iText 上架后的宣传"></a>5) iText 上架后的宣传</h2><p>其实，这方面我也一直在学习，这里谈不上经验，只是把自己做的事罗列出来。</p>
<h3 id="5-0-宣传时涉及的渠道"><a href="#5-0-宣传时涉及的渠道" class="headerlink" title="5.0) 宣传时涉及的渠道"></a>5.0) 宣传时涉及的渠道</h3><p>从渠道的角度，大致有这样：</p>
<ul>
<li>用户群<ul>
<li>微信群</li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">Telegram 群</a></li>
<li>内测用户邮件列表</li>
</ul>
</li>
<li>自己的渠道<ul>
<li><a href="https://atjason.com/">博客</a></li>
<li>朋友圈</li>
<li><a href="https://weibo.com/atjasonzone/" target="_blank" rel="external">微博</a></li>
<li><a href="https://ps.toolinbox.net/nckv0.jpg" target="_blank" rel="external">公众号「自在开发」</a></li>
<li><a href="https://twitter.com/hereisjason" target="_blank" rel="external">Twitter</a></li>
<li><a href="https://www.facebook.com/jason.zheng.7773" target="_blank" rel="external">Facebook</a></li>
</ul>
</li>
<li>媒体及第三方<ul>
<li><a href="https://sspai.com/post/42059" target="_blank" rel="external">少数派</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/31546865" target="_blank" rel="external">知乎</a></li>
<li><a href="https://juejin.im/post/5a1f4f6551882555cc419fd6" target="_blank" rel="external">掘金</a></li>
<li><a href="https://www.v2ex.com/t/410689" target="_blank" rel="external">V2EX</a></li>
<li>Price Tag</li>
<li><a href="https://www.producthunt.com/posts/itext/" target="_blank" rel="external">Product Hunt</a></li>
</ul>
</li>
</ul>
<p>时间有限，我基本上是写通稿，然后针对各个渠道做简单的调整。上面有各渠道对应的文章链接，感兴趣可以点进去看看。其中可见，我做的海外推广很少，这方面求帮带。</p>
<p>其中有个玩法就是：<strong>送码</strong>。通过这种方式，增加与用户的互动，如留言区的评论、微博的转发等等。</p>
<p>另外，如果你的应用有自己的序列号体系，也可以上「数码荔枝」这样的平台分销，据说效果也不错。可惜我没有序列号，无法触及这些平台。</p>
<h3 id="5-1-写文案是体力活，也是技术活"><a href="#5-1-写文案是体力活，也是技术活" class="headerlink" title="5.1) 写文案是体力活，也是技术活"></a>5.1) 写文案是体力活，也是技术活</h3><p>上面的每个平台，都需要针对性地写文案。</p>
<p>虽说，<strong>好的产品自己会说话、简洁的程序不应该有说明书</strong>。可无奈，<strong>酒香也怕巷子深</strong>，大家在真正使用产品之前，总需要一些方式来了解到产品。而在目前的传播方式中，文案则是必须的了。</p>
<p>这里说的文案，包括：</p>
<ul>
<li>产品本身的说明书、教程</li>
<li>发布在媒体上的文章</li>
<li>发布在朋友圈等 SNS 上的信息</li>
<li>以及其他所有对外爆光的东西</li>
<li>除了中文，还有英文…</li>
</ul>
<p>当然，<strong>除了文字，也包括配图、甚至是视频</strong>。而这两者，通常比文字更花时间。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flx120m504g30la09qkin.gif" alt=""></p>
<p>比如，在做上面的图时，首先要明确表达什么、构思如何表达、确定涉及到的素材、录屏、制作 GIF，整个过程流程很多，非常耗时。且一旦需要修改，几乎是全部重来的成本。顺便说一句，如果你想知道上面的 Gif 如何制作，<a href="https://atjason.com/daily/2017-08-21.html">看这里</a></p>
<p>比如 <strong>标题</strong>，如果纯粹是反映文章内容，很可能不够吸引人；如果起个抓眼球的标题，又极容易被骂标题党。另外，<strong>除了考虑一时一地的点击量，还得从长线上考虑搜索引擎的收录</strong>。绝对是技术活。</p>
<h3 id="5-2-如何量化追踪每个渠道的推广效果"><a href="#5-2-如何量化追踪每个渠道的推广效果" class="headerlink" title="5.2) 如何量化追踪每个渠道的推广效果"></a>5.2) 如何量化追踪每个渠道的推广效果</h3><p>比如，发了一条微博，有多少用户因为这条微博下载安装 iText；进而，这些用户中有多少人付费购买。有了这些量化数据，才能反推出每个渠道的获客成本，进而决定是否要在一个渠道推广、制定推广预算。</p>
<p>可见，量化追踪每个渠道的推广效果，非常重要，因为直接跟钱相关。这里，<strong>推广效果最直接的考量是转化率</strong>，但又不仅于此。比如品牌的露出、品牌形象的建立，都是要考虑的因素。那么，如何量化转化率呢？可考虑使用 <strong>iTunes 联盟</strong>。</p>
<p>和其他淘宝客、亚马逊联盟等联盟一样，iTunes 联盟也是苹果为了推动第三方来替自己推广音乐、App 的下载付费，而推出的奖励机制。简单的说，就是你帮苹果销售其音乐、App，苹果会给你一定的的提成。具体到 App，提成比例大约是 0.4%</p>
<p>当然，如此低的提成比例，自然不是我们关心的；我们关心的是渠道转化。比如，在下面的链接中：</p>
<p><a href="https://itunes.apple.com/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv11&amp;ct=iText_Weibo" target="_blank" rel="external">https://itunes.apple.com/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv11&amp;ct=iText_Weibo</a></p>
<p>其中，1000lv11 是 <strong>iTunes 联盟 ID</strong>，iText_Weibo 是 <strong>需要追踪的事件</strong>，也即 iText 在微博上的推广；类似的，也可以有 iText_Twitter，iPic_Facebook 之类的事件。</p>
<p>如果用户通过这个链接安装付费，就可以得到类似这样的数据：<strong>1000 人点击微博中的链接、600 人真正安装、20 人付费内购</strong>。</p>
<p>授之以渔，我就不在这列 iText 具体的数据了。大家如果需要，可以到 <a href="https://itunes.phgconsole.performancehorizon.com/login/itunes/zh_cn?" target="_blank" rel="external">这里</a> 申请 iTunes 联盟。</p>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>终于，iText 还是顽强上架了（<a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">点此下载</a>）。至此，我已集齐七颗龙珠：</p>
<p><img src="https://ps.toolinbox.net/auuxw.png" alt=""></p>
<p><strong>iText 接下来会怎样？</strong>估计我会根据上架后用户的反馈，在短期内再出个版本。之后，会按住一段时间，直到对更远些的发展想清楚后，再出新版。</p>
<p><strong>我本人接下来会怎样？</strong>估计还是会坚持做独立开发者，开发自己的产品，开发世上本没有的产品，用自己的能力，改进大家的效率，哪怕只是一点点。</p>
<p>计划跟不上变化。<strong>你明天看到的我，已是不一样的我。</strong></p>
]]></content>
      
        <categories>
            
            <category> IndieDev </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1211-Day 5 - 华兴寺 & 海边栈道]]></title>
      <url>https://atjason.com/daily/2017-12-11.html</url>
      <content type="html"><![CDATA[<p>上午去了华兴寺，了了妈的一个心愿：爬山。在山顶俯瞰，景色还是不错的。可惜的是，不出意外，妈在山路上晕车了，回家直接躺床上休息了…</p>
<p><img src="https://ps.toolinbox.net/jmfxz.JPG" alt=""></p>
<p>下午去了大梅沙附近的海边栈道，近距离听海浪拍打在岸边的声音。不出意外，娃依然是一副呆萌的样子，拍照也不怎么合作。</p>
<p>晚上开了场 GitChat 的交流，主要是由 iText 引出的独立开发者相关的讨论。形式是基于微信群，用户问、我来答，非常考验打字速度啊。可惜，毕竟不如面对面交流，感觉不够深入。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1210-Day 4 - 有些郁闷的一天]]></title>
      <url>https://atjason.com/daily/2017-12-10.html</url>
      <content type="html"><![CDATA[<p>不写日记，都不知道今天已经是来深圳的第 4 天了。</p>
<p>今天有些郁闷。</p>
<p>因为快递的原因，网购本该今天到的奶粉，没到。于是：<strong>娃奶粉断顿了。</strong></p>
<p>这是个严重的问题。于是，今天的行程也调整为：给娃买奶粉去。由于目前吃的奶粉相对小众，不太好买。网上搜了下，「<strong>中英街</strong>」可能有，于是便打车过去。</p>
<p>一下车，便开始有熟悉又不对劲的感觉：<strong>人真多</strong>。今天是周日，本身旅游的人就很多。再加上后来了解到的，这里可以买所谓的「免税」、「便宜」、「正品」的行货，吸引无数多的人来。虽然进去就很麻烦：需要办一个所谓的边境证，但依然挡不住人潮。</p>
<p>进去之后，首先便遇到很郁闷的事：<strong>上厕所</strong>。本来是件很简的事，稍微找了下，找到一个公厕的指示牌。按着指示方向走了一个路口，厕所的毛都没看到。好不容易，在街角又找到了消失的公厕指示。好，又走了 2 个路口，终于看到了。却发现：丫在装修？！这也就不说了，问了工人，又走了比刚才更远的路，来到一个小公园边上的公厕，是那种仅有 2 个位置的 mini 型，外面有 10 个人在排队。登时一句标准的国骂。关键是，你要知道，从这个鬼地方出去排队的人，至少有 200 米。这么多人，就这种基础设施？</p>
<p><strong>其中的购物环境，跟菜市场无二</strong>。就算东西是真的，这种环境也让我不觉得是真的。最后，找到了奶粉，可不敢买。因为一旦买了，就要排 200 米的队，会死人的…灵机一动，把自带的无菌砖的奶倒到娃的奶瓶里，娃居然喝，真好养。干脆，就用这奶撑一天吧，不买东西回去。所幸，保安说带小孩的可以优先通过。这也唯一增加了我对此处的好感。</p>
<p><strong>我用人品担保，不推荐来「中英街」</strong></p>
<p>好在，晚上看的《<strong>恐怖直播</strong>》，挽救了这郁闷的一天。PS：有好看的电影，敬请推荐。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1209-Day 3 - 又是散淡的一天]]></title>
      <url>https://atjason.com/daily/2017-12-09.html</url>
      <content type="html"><![CDATA[<p>今天又是散淡的一天。</p>
<p>早上娃 6 点多醒了，等他告一段落，我硬是又睡到了 9 点。跟妈一起随意走着，绕到菜场，然后回来做饭。</p>
<p>下午又去沙滩听潮踩水，妈还来了兴致，准备明早刮风时，再来海边看看大浪。可惜娃不配合，总是一张淡漠脸，没拍出美照。</p>
<p>沙滩回来，又看了部电影；可惜，电影不是太好看。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1208-Day 2 - 散淡的一天]]></title>
      <url>https://atjason.com/daily/2017-12-08.html</url>
      <content type="html"><![CDATA[<p>今天一大早，就领略了深圳的大风。不，准确地说，是从半夜就开始了；刮了一晚上。</p>
<p>之后跟朋友提起，才知道这很正常：深圳，海边城市嘛。</p>
<p>今天的行程比较寡淡：上午买菜，中午做饭，下午大梅沙。妈和娃都是第一次看海，虽说严格来说只是海湾。可惜，毕竟是冬天，只看到一个人游泳，我们自然也没有下水，只是在沙滩上坐了会。娃没什么表情，但看得出来还是挺新奇的。我抱着他抓抓沙子、摸摸海水。不料，这家伙尿裤子了，只是急匆匆地赶回公寓。</p>
<p><img src="https://ps.toolinbox.net/rbiq9.JPG" alt=""></p>
<p>说到公寓，本来只打算住 2 天，再找地方。现在看起来还可以，就直接续租 7 天，1500 元，一天 200 出头，还划算的。</p>
<p>晚上，终于满足了一个心愿：娃安静地睡着，我抱着电脑非常连续、完整、未被打断地看了一部电影：英伦对决。且不说电影如何，这久违的安静、独处的大块时间，真是久违啊。</p>
<p>睡觉…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[iText - OCR 截图识字新版：重写算法，段落识别更精准]]></title>
      <url>https://atjason.com/daily/2017-12-07_2.html</url>
      <content type="html"><![CDATA[<p>在介绍新版前，稍稍解释下背景知识。</p>
<h2 id="OCR-服务已经识别出文字了，iText-还要做什么？"><a href="#OCR-服务已经识别出文字了，iText-还要做什么？" class="headerlink" title="OCR 服务已经识别出文字了，iText 还要做什么？"></a>OCR 服务已经识别出文字了，iText 还要做什么？</h2><p>iText 发布后，受到很多朋友的欢迎和好评，解决了诸如扫描版 PDF 无法复制等问题。</p>
<p><img src="https://ps.toolinbox.net/1j0ga.jpg" alt=""></p>
<p>不过，也有一些朋友有些误解，<strong>觉得 iText 仅仅是调用了 OCR 服务</strong>，是个壳而已。<strong>其实，并不尽然</strong>。</p>
<p>虽然，我觉得用户并不需要知道这些软件背后的故事，只要软件好用即可。不过看来，既然有误解、有好奇，我还是简单提及一些吧。</p>
<p><strong>OCR 服务识别</strong> 后，得到的是这样的结果：<strong>各文字片断及其位置。</strong></p>
<p><img src="https://ps.toolinbox.net/rc32n.jpg" alt=""></p>
<p>但，<strong>如果根据这些信息还原出自然语境下的段落？这是很难的。</strong></p>
<a id="more"></a>
<p>比如，对于下面这张图：</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fm6c9mt55zj30p007ltb1.jpg" alt=""></p>
<p>OCR 识别出来的结果是类似这样的（为了方便示意，我在各行间额外加了空行）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">3.1新用户引导</div><div class="line"></div><div class="line">这事的矛盾之处在于:新用户和老用户的矛盾。</div><div class="line"></div><div class="line">进一步说,我追求程序的简洁。尤其是在用户对 itext熟悉之后,并不需要程序有过多的描述。比如,文字按</div><div class="line"></div><div class="line">钮可以被图标按钮取代,用界面上根本看不到的快捷键进行操作,等等。可问题是,熟悉是需要一个过程,新</div><div class="line"></div><div class="line">用户需要多次操作后,才能掌握这些甚至有些晦涩的技巧。没有新用户,又何来老用户?</div><div class="line"></div><div class="line">这二者的矛盾,怎么解决呢?</div></pre></td></tr></table></figure>
<p>你可能觉得，这没什么呀，我自己手动把多余的换行符删掉不就可以了？你说的对。不过，这样的体验并不爽。</p>
<p><strong>为了让你用的爽</strong>、少了这步手动操作，我自己试着列出常见的段落分布，分析其中的位置规律，实现相应的识别段落的算法。</p>
<p><img src="https://ps.toolinbox.net/csewh.jpg" alt=""></p>
<p>目前来看，效果还是可以的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">3.1 新用户引导</div><div class="line"></div><div class="line">这事的矛盾之处在于：新用户和老用户的矛盾。</div><div class="line"></div><div class="line">进一步说，我追求程序的简洁。尤其是在用户对 iText 熟悉之后，并不需要程序有过多的描述。比如，文字按钮可以被图标按钮取代，用界面上根本看不到的快捷键进行操作，等等。可问题是，熟悉是需要一个过程，新用户需要多次操作后，才能掌握这些甚至有些晦涩的技巧。没有新用户，又何来老用户？</div><div class="line"></div><div class="line">这二者的矛盾，怎么解决呢？</div></pre></td></tr></table></figure>
<p><strong>注：以上是 iText 识别并优化后的结果，未加手工编辑；</strong>其中的标点符号也已修正。</p>
<p>iText 第一版发布后，收到用户反馈的一些图片，一些段落的识别有问题。于是，我花了不知道几个小时，重写了段落识别相关的算法。目前，<strong>对于中英文混排，在使用腾讯服务时，段落识别的效果已经很好了。</strong></p>
<p>不过，并不完美。主要是在一些场景下，除非结合语义识别，否则是无法仅根据位置信息来划分段落的。如果你发现有问题的图，欢迎发给我，我来优化算法。</p>
<p>下面给出一些典型的含段落的图，大家可以自己试试。</p>
<p>图 1：<a href="https://ws4.sinaimg.cn/large/006tKfTcgy1fm6c8xxge5j30mw0q67i2.jpg" target="_blank" rel="external">https://ws4.sinaimg.cn/large/006tKfTcgy1fm6c8xxge5j30mw0q67i2.jpg</a></p>
<p>图 2：<a href="https://ws1.sinaimg.cn/large/006tKfTcgy1fm6c99zhzij30te0wuahg.jpg" target="_blank" rel="external">https://ws1.sinaimg.cn/large/006tKfTcgy1fm6c99zhzij30te0wuahg.jpg</a></p>
<h2 id="识别后的文本优化"><a href="#识别后的文本优化" class="headerlink" title="识别后的文本优化"></a>识别后的文本优化</h2><p>另外，段落识别只是对 OCR 服务优化的一部分，还有文本的优化，比如中英文之间需要增加空格等等。</p>
<p><strong>如果说段落识别很麻烦，文本优化则更多麻烦</strong>，根本的原因在于：<strong>需要对内容进行识别</strong>。比如：</p>
<ul>
<li>英文段落首字母大写，这规则没错吧，但对于 “iPhone is a good phone.” 这样的情况，iPhone 是特定词汇，i 不应该大写。</li>
<li>中文文字后的 ‘.’ 应该使用全角的 “。”，这规则也没错吧，但对于『今天天气真热啊…』，明显又不应该替换；亦或是 JSON 数据『”name”: “张飞”』中的 “ 也不应该被替换。</li>
<li>以及其他无数多的例子。</li>
</ul>
<p>没办法，只能有所取舍。目前，iText 主要完成了这些部分的优化：</p>
<ul>
<li><strong>自动识别段落</strong></li>
<li>中文环境使用全角标点符号</li>
<li>中文与英文字母、数字间增加空格</li>
<li>删除中文字符间、英文字符与标点符号间的多余空格</li>
<li>英文首字母大写</li>
</ul>
<h2 id="手动选择-OCR-服务"><a href="#手动选择-OCR-服务" class="headerlink" title="手动选择 OCR 服务"></a>手动选择 OCR 服务</h2><p>目前，如果你在国内使用 iText，默认使用的是腾讯的服务；国外则使用 Google.</p>
<p>如果你有 Google 信仰、或者需要识别日文等其他语言，可以 <strong>右击 iText 菜单栏图标，手动选择使用腾讯或 Google OCR 服务</strong>。</p>
<p>不过，从实测和目前优化的情况来看，<strong>中文还是建议使用腾讯</strong>；大家可以自行测试。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>新版 iText 已上架 Mac App Store，<a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">点击下载</a></p>
<p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p>每月可免费识别 20 次，订阅 iText 高级版即可无限次识别。高级版限时 6 折优惠：<strong>￥3/月、￥30/年，持续至 12.12</strong></p>
<p>如果你觉得 iText 还不错，还请帮忙 <a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">在 App Store 评论</a>；如果你觉得 iText 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=iText" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深圳行：1207-Day 1 - 到达]]></title>
      <url>https://atjason.com/daily/2017-12-07.html</url>
      <content type="html"><![CDATA[<p>今天一天都在路上；<strong>前脚杭州，后脚深圳</strong>。</p>
<p>其实，首先要说的是 <strong>夜晚</strong>。由于新版 iText 要提交上架 App Store，于是，我在小米手环上 <strong>定了 3、4、5、6 点的闹钟</strong>，闹醒自己看看审核有没有被拒，然后再提交一个版本。</p>
<p>果然，在 4 点钟醒来，不详地收到「Dear Jason, We’ve sent you a new message about your app, iText.」<strong>审核被拒，原因是什么呢？</strong>是我在 App 描述里有这么一句话：”Your 5-star rating will be a great encouragement for me.”，被苹果认为涉嫌诱导用户评分。哎，iText 上个版本就有这句话，iPic 等其他应用也有这句话，都可以审核通过；偏偏这次就不行。哎，审核是大爷，于是 4 点多时提交。</p>
<p>等到了 8 点，审核才开始。一直等到 11 点才审核通过。要知道，<strong>此时我已经在机场，广播已经在提示登机了。我依然镇定 + 火速地拿出电脑，连接手机 4G 网络，在朋友圈、微博等渠道对该版本上架进行推广。然后抱着娃，跟着家人一直登机。</strong></p>
<p><img src="https://ps.toolinbox.net/2g970.jpg" alt=""></p>
<a id="more"></a>
<hr>
<p>是的，这次是带着娃，跟家人一起去深圳、香港旅游。说是旅游，更像是 <strong>换个城市小小地生活一下</strong>，准备呆 10 天。</p>
<p>说回飞机。这是 <strong>娃和妈第一次坐飞机，我挺希望给他们留下一段美好的回忆</strong>，当然主要是妈喽。遗憾的是，妈延续了晕车的习惯，一直觉得飞机上很闷。而且，有雾霾，即使坐在了靠窗的位置上，外面也看不到什么风景。最后，下机的时候，顾不上我们，必须先冲下飞机，踩在踏实的地面上，呼吸新鲜空气去了。</p>
<p><strong>娃还好，至少表现的比预期的要好</strong>：没有大哭大闹。要知道，飞机起飞降落时，耳朵会明显地不舒服。飞机上的空气干燥憋闷、空间小，很容易让娃不爽的。好玩的是，这娃觉得起飞时的越重、失重很好玩，竟然还自己笑 😀 一路上由于过度兴奋，该睡的时候不睡。最后，临下飞机前，留了一泡臭臭…比较庆幸的是，我们是倒数第二排，而最后一排没有人，所以就被我们霸占了，空间立马宽裕了。这应该也是娃没失控的重要原因吧。</p>
<p><img src="https://ps.toolinbox.net/epf5p.JPG" alt=""></p>
<p>坐深圳航空去深圳…</p>
<hr>
<p>下了飞机，找地方填肚子。然后，又是 1 个多小时的车程，才到目的地。车是滴滴专车，本田雅阁，车费￥260…好在空间还挺宽敞。加上一路都是高速，<strong>我们全家人，都在车上睡着了</strong>…</p>
<p>目的地是哪呢？大梅沙附近。在 AirBNB 上定了一间公寓，<strong>两居室，只要不到 300 元，和快捷酒店差不多</strong>，感觉还挺划算。毕竟拖家带口出来，有个能做饭的厨房，有个不小的客厅，还是很好的。</p>
<p>奔波了一天，晚上下楼买了饺子吃，还干了一瓶啤酒。接下来，伺候娃睡觉；再接下来，竟然闲得不知道要干什么了 😂 不干活的感觉也还不错，只是幸福来得太突然，我还得适应适用…</p>
<p>明天去哪玩呢？不知道、无计划，走哪算哪呗。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1206 - 长假之旅，即将开启]]></title>
      <url>https://atjason.com/daily/2017-12-06.html</url>
      <content type="html"><![CDATA[<p>今天 iText 上架被拒，改了几版后提交了，应该明天就能上架。终于，这事可以暂告一段落。</p>
<p>今天，把之前办的港澳通行证领回来了，小家伙身份证还没有，居然都有护照了。另外，去银行换了港币，当看到 1000 港币纸币时，差点以为是我这辈子见过的最大面额的钱（日元最大的是 10000，而见过最值钱的是 500 欧元）</p>
<p>接下来的十余天，我将和家人一起，去深圳、广州、香港玩一圈，犒劳下自己，也享受下天伦之乐。</p>
<p>深圳的小伙伴，也兴趣也可以约起。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1205 - 重写 iText 段落识别算法]]></title>
      <url>https://atjason.com/daily/2017-12-05.html</url>
      <content type="html"><![CDATA[<p>今天忙了一天，总算把 iText 段落识别算法重写了。已经提交 Mac App Store，希望明天能上架。</p>
<p>期间也发现，Google OCR 服务在识别中文时，有错序的问题：比如，先返回第 2 行的结果，再返回第 1 行；英文则未发现这一问题。为了适配这一问题，又费了半天劲，不过效果依然不理想，之后再想想办法。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1204 - 与人协作，喜欢异步]]></title>
      <url>https://atjason.com/daily/2017-12-04.html</url>
      <content type="html"><![CDATA[<p>今天中午 11 点就在 GitChat 上提交了文章，可是，直到晚上 7 左右才发布。</p>
<p>为什么呢？因为要确定发布的线上交流时间。不巧的是，本周我有空，可 GitChat 已经排满了；下周刚好相反。</p>
<p>期间，GitChat 的反应也并不算快。最后，还是我做了妥协，改在下周一线上交流了。</p>
<p>与人协作时，我喜欢异步、不喜欢同步。同步一个时间点，会把原来的计划都变得很紧张、不自由。在满足这件事时，挺大程度上影响了自己的其他事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1203 - 段落识别算法，推倒重来]]></title>
      <url>https://atjason.com/daily/2017-12-03.html</url>
      <content type="html"><![CDATA[<p>今天在改进 iText 中的段落识别。回顾了一下这几天大家反馈的关于段落识别的问题，发现在既有的算法上调整，还挺麻烦。另一方面，既然对段落识别有了更深的认识，索性推拿重来好了。</p>
<p>毕竟，对于同样调用在线 OCR 服务的产品而言，段落识别等优化，都是程序技术的核心。在这方面多花点时间钻研，是值得的。</p>
<p>不过，发现停顿开发做推广几天后，再来搞这部分，竟有些吃力了。看来，代码不能停啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1202 - 多与高人交流]]></title>
      <url>https://atjason.com/daily/2017-12-02.html</url>
      <content type="html"><![CDATA[<p>与高人交流，可以或明或暗地让自己提高，享受无数好处。</p>
<p>而与「低端人口」交流，则会不自觉地陷入秀下限的争执，或是花费时间证明自己是好人、是正确的这一本不需要花时间证明的事实，对自己并无益处。</p>
<hr>
<p>以人为镜，可以明得失。可要注意，朋友、志趣相投之人，可以交心、暖心，但未必是合适的镜子。即使你有问题，他们可出于对你的理解，或是碍于面子，或是他们本身也有同样的问题，或是其他原因，并不会指出你身上的问题，甚至会坚定地站在你这边。但这对你，并没有本质的好处。</p>
<p>多和不同的人交流很重要，但要是高人，至少和自己差不多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1201 - 没有最终的胜利，也没有致命的打击]]></title>
      <url>https://atjason.com/daily/2017-12-01.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>没有最终的胜利，也没有致命的打击，需要有持续前进的勇气。</p>
</blockquote>
<p>今天看《至暗时刻》，对电影最后一句印象很深（措词可能不完全对得上），与大家共勉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[有了 iText，你截图，腾讯、Google OCR 帮你识别文字]]></title>
      <url>https://atjason.com/daily/2017-11-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flxyi57311j30gz09ywfe.jpg" alt=""></p>
<p>比如，在看类似上面的扫描版 PDF 时，想要复制其中的文字，怎么办？手打？太累。试试我新开发的工具 <strong><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://ps.toolinbox.net/jfyjb.png" target="_blank" rel="external">iText</a></strong> 吧。</p>
<p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&mt=12&at=1000lv4R&ct=iText_me" target="_blank"><img src="https://ps.toolinbox.net/jfyjb.png" width="256"></a></p>
<p><strong><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://ps.toolinbox.net/jfyjb.png" target="_blank" rel="external">iText</a></strong> 是 macOS 平台的 OCR 工具，自带截图功能，<strong>选择屏幕任意区域，即可识别其中的文字</strong>，又爽又酷。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flx120m504g30la09qkin.gif" alt=""></p>
<p><strong>识别后的文字已经复制到系统剪贴板</strong>，直接粘贴即可。</p>
<p>配合 <code>⇧⌘1</code> 快捷键，使用体验更佳。当然，你也可以选择图片文件，或者将图片拖拽至 iText 的菜单栏图标进行识别。</p>
<h2 id="文字识别精准"><a href="#文字识别精准" class="headerlink" title="文字识别精准"></a>文字识别精准</h2><p>你有没有这种印象：OCR 识别出来的文字有很多问题，还不如自己打字来得快。可见，<strong>识别的准确性非常重要</strong>，也是我非常在意的一点。</p>
<h3 id="腾讯、Google-双引擎"><a href="#腾讯、Google-双引擎" class="headerlink" title="腾讯、Google 双引擎"></a>腾讯、Google 双引擎</h3><p><strong>首先，我排除了离线的识别库</strong>，因为离线注定了这些库的识别能力是死的，不会自己增强。接下来，在一票在线 OCR 服务中，我对比了百度、腾讯、微软、Google 等大厂的产品，<strong>最后选择了国内使用腾讯、国外使用 Google 的组合。</strong>判断依据是什么？少量测试 + 主观倾向，比如不测我就觉得 Google 比微软牛。</p>
<p><img src="https://ps.toolinbox.net/e80hp.png" alt=""></p>
<p>那么，到底识别准不准呢？这么说吧：</p>
<ul>
<li><strong>对于一般的自然语言</strong>，比如书中的一段话、新闻稿，<strong>识别效果是惊人的准确，甚至可以达到 100%</strong></li>
<li><strong>对于排版复杂、尤其有特殊字符的文字</strong>，比如程序代码、选择题，识别效果就不太理想，<strong>需要手动对识别后的结果进行修正</strong><ul>
<li>比如，单纯地给一个竖线，机器是无法区分到底是小写的 l、还是大写的 I（顺便问一下，你看出二者的区别了吗？）；与之相对，<strong>机器是需要根据上下文进行判断和优化的。</strong>而像程序代码这种非自然语言，机器目前是很难进行语义识别的</li>
</ul>
</li>
</ul>
<p>到底准不准？你不妨一试。</p>
<h3 id="独创算法，进一步优化识别结果"><a href="#独创算法，进一步优化识别结果" class="headerlink" title="独创算法，进一步优化识别结果"></a>独创算法，进一步优化识别结果</h3><p>OCR 服务还有一些欠缺，iText 针对性地做了这些优化：</p>
<ul>
<li><strong>自动识别段落</strong></li>
<li>中文环境使用全角标点符号</li>
<li>中文与英文字母、数字间增加空格</li>
<li>删除中文字符间、英文字符与标点符号间的多余空格</li>
<li>英文首字母大写</li>
</ul>
<p>如果你发现识别不好的地方，欢迎把图发给我，<strong>我会相应地优化算法</strong>，毕竟算法是需要数据喂养的，先谢。</p>
<h3 id="预览原图，方便校对"><a href="#预览原图，方便校对" class="headerlink" title="预览原图，方便校对"></a>预览原图，方便校对</h3><p>在目前 OCR 技术不能始终达到 100% 的情况下，预览原图、并进行修正，还是有必要的。在 iText 中，你可以这样：</p>
<ul>
<li>将识别后的窗口拖到图片附近</li>
<li>调用 iText 识别结果的 <strong>双栏模式</strong>：左侧展示图片、右侧展示识别后的文字</li>
</ul>
<p><img src="https://ps.toolinbox.net/buc14.png" alt=""></p>
<p>这样，就可以很方便地对照原图进行手动优化识别后的文字。</p>
<h2 id="下载与付费"><a href="#下载与付费" class="headerlink" title="下载与付费"></a>下载与付费</h2><p>其实，很多场景都会用到 iText，比如 <strong>识别快递单上的号码、图片中的联系人信息、需要登录才能复制的网页</strong> 等等，欢迎下载 iText 试试。</p>
<p><a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p>每月可免费识别 20 次，订阅 iText 高级版即可无限次识别。<strong>首发期间，高级版限时 6 折优惠：</strong>￥3/月、￥30/年。关于收费模式，我很是纠结了一番。如果你准备吐槽，<strong>请先看下这篇文章</strong>：<a href="https://atjason.com/daily/2017-11-28.html">再次纠结付费模式，这次是 iText</a></p>
<p>如果你觉得 iText 还不错，还请帮忙 <a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">在 App Store 评论</a>；如果你觉得 iText 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=iText" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1129 - 上架却不能宣传，真难受]]></title>
      <url>https://atjason.com/daily/2017-11-29.html</url>
      <content type="html"><![CDATA[<p>今天 iText 成功上架 Mac App Store 了！</p>
<p>可是，却不能大规模宣传，因为宣传时要提到首发特价，而订阅模式改价格，只能到明天才能生效。所以，只能等明天才宣传，难受。</p>
<hr>
<p>昨天在招行商城抢了双立人的锅，今天上午就收到了，效率真高啊。与之对比，在平安商场上用卷买东西，死活都提交不了订单。差距真是大啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1128 - 再次纠结付费模式，这次是 iText]]></title>
      <url>https://atjason.com/daily/2017-11-28.html</url>
      <content type="html"><![CDATA[<p>首先，<a href="https://toolinbox.net/iText/" target="_blank" rel="external">iText</a> 一定是款需要付费才能使用的产品：</p>
<ul>
<li><strong>在线 OCR 服务是需要付费的</strong>，通常是按次收费<ul>
<li>注：腾讯 OCR 服务目前在内测期，免费；不过收费只是时间问题</li>
</ul>
</li>
<li>我需要为花费的时间买单，并支撑自己继续做独立开发者</li>
</ul>
<p>接下来的问题，便是如何确定收费模式。有这几种可考虑：</p>
<ul>
<li><strong>买断式</strong><ul>
<li>也即，你付一次钱，就可终身使用</li>
<li>考虑到 OCR 服务的按次收费，个人觉得这并不科学，至少不具可持续性</li>
</ul>
</li>
<li><strong>流量包式</strong><ul>
<li>比如，￥12 元买 250 次识别次数</li>
<li>对用户而言，这种方式 <strong>对于低频使用的用户很友好，但对于高频使用的用户，可能不太划算</strong></li>
<li>另外，最关键的是，这种方式会给使用上 <strong>带来很大的心理压力</strong>。比如，我在截图时不小心区域没选对，结果白白浪费了一次识别次数，这会让我在每次截图时都会有不小的心理压力，生怕截错了。虽然，从理性的角度，一次真没多少钱。但没办法，这种心里上的事情是很难用理性压制的。</li>
</ul>
</li>
<li><strong>包月式</strong><ul>
<li>也即订阅式，即一个月出固定费用，即可不限次识别</li>
<li>对用户而言，优缺点几乎和流量包式相反：<strong>对低频用户不友好、对高频用户友好</strong></li>
<li><strong>最终，我选择的是这种模式：</strong>每月可免费识别 20 次，充分体验 iText 的功能；订阅高级版即可不限次识别</li>
</ul>
</li>
</ul>
<p>其实，这跟手机流量非常像：</p>
<ul>
<li>如果你用量很少，1 MB 流量 0.1 元的方式就很适合你</li>
<li>如果你用是很大、或者就想用得爽，包月得到固定流量、甚至是不限量的套餐，更适合你</li>
<li>不过，我还没见过付一次钱，就可终身不限量使用的套餐</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1127 - 今天做了并不太喜欢的事：写文案]]></title>
      <url>https://atjason.com/daily/2017-11-27.html</url>
      <content type="html"><![CDATA[<p>虽说，<strong>好的产品自己会说话、简洁的程序不应该有说明书</strong>。可无奈，<strong>酒香也怕巷子深</strong>，大家在真正使用产品之前，总需要一些方式来了解到产品。而在目前的传播方式中，文案则是必须的了。</p>
<p>这里说的文案，包括：</p>
<ul>
<li>产品本身的说明书、教程</li>
<li>发布在媒体上的文章</li>
<li>发布在朋友圈等 SNS 上的信息</li>
<li>以及其他所有对外爆光的东西</li>
<li>除了中文，还有英文…</li>
</ul>
<p>当然，除了文字，也包括配图、甚至是视频。而这两者，通常比文字更花时间。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flx120m504g30la09qkin.gif" alt=""></p>
<p>比如，在做上面的图时，首先要明确表达什么、构思如何表达、确定涉及到的素材、录屏、制作 GIF，整个过程流程很多，非常耗时。且一旦需要修改，几乎是全部重来的成本。</p>
<p>苦闷的是，好像才写了不知道几分之一；每次发布前，一想到要写这些文案，心理压力好大啊…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1126 - iText 已提交上架 Mac App Store]]></title>
      <url>https://atjason.com/daily/2017-11-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1flvwm48hqlj30740740tj.jpg" alt=""></p>
<p>双 11 写下第一行代码，到今天（26 号）刚好半个月，终于把 iText 提交上架 Mac App Store 了。个中滋味，自己体会。</p>
<p>双手合十，期待审核顺利。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1125 - 发布未遂]]></title>
      <url>https://atjason.com/daily/2017-11-25.html</url>
      <content type="html"><![CDATA[<p>本打算今天提交 iText 的，虽然已经比原计划晚了一天，可依然没搞定。</p>
<p>每个环节都有拖延，比如 Logo 的更新、不同 macOS 版本的测试、等等。最后还是合在了 10.10 的兼容上。想着还有截图、方案等一堆事，一口气松下来，整个人就松下来了，放弃提交的计划，再次推迟到明天。</p>
<p>希望还能赶上下周二上架的计划。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1124 - 等我发了，一起吃饭]]></title>
      <url>https://atjason.com/daily/2017-11-24.html</url>
      <content type="html"><![CDATA[<p>估计，也只有程序员才能理解，这句话的意思是：</p>
<p>「等我把这个版本发了，一起去吃饭」</p>
<hr>
<p>今天，依然在赶 iText 开发的进度；其中，大部分时间都花在和功能无关的功能上：新用户引导、免费+内购模式。其实，我挺不愿意把时间花在这些地方。无奈，这些也都是一个成熟产品必备的功能。</p>
<p>明天，如果能有 10 小时完整的时间可以工作，应该就可以提交 iText 到 Mac App Store；够呛，争取吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1123 - 进度落后，不开心]]></title>
      <url>https://atjason.com/daily/2017-11-23.html</url>
      <content type="html"><![CDATA[<p>原计划周五晚上提交 iText 到 App Store，不过，看目前这架势，至少落后了 1.5 天。</p>
<p>落后了，心里肯定着急。可越着急，越容易出错、效率下降。可是，又怎么能不急呢？矛盾。</p>
<p>不过，好在 iText 识别结果的对话框优化的差不多了，晚上发出去的版本，也受到了用户的好评，这点还是开心的。</p>
<p>今天早点睡，明天早点起床代码。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1122 - 搞了一天的窗口]]></title>
      <url>https://atjason.com/daily/2017-11-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1flrag054gnj30w80no3zx.jpg" alt=""></p>
<p>今天重新设计了 iText 识别文本后的窗口，基本上一天的工作都和窗口有关：</p>
<ul>
<li>不显示关闭等按钮</li>
<li>可设置窗口是否在最前</li>
<li>失去焦点、Esc、Command + W 关闭</li>
<li>截图后，结果出现在鼠标结束的位置</li>
<li>截图后，窗口根据内容多少自动调整（这个功能我做了很久很久…）</li>
<li>按住窗口空白处可拖动</li>
<li>支持黑色样式</li>
</ul>
<p>还有很多事没做：</p>
<ul>
<li>快捷键</li>
<li>Tooltip</li>
<li>鼠标移入移出时，自动显示、隐藏工具栏</li>
<li>…</li>
</ul>
<p>没想到，一个小小的程序、一个简单的窗口，有这么多事要做。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1121 - 从 API 的素质可以看出公司的气质]]></title>
      <url>https://atjason.com/daily/2017-11-21.html</url>
      <content type="html"><![CDATA[<p>今天在改进 iText 上传前压缩大图的功能。</p>
<p>其中，百度、腾讯、Google 等各家 OCR 服务对上传的图片尺寸都有要求、也都要求对图片进行 base64 压缩。<strong>可这要求跟要求可就不同了。</strong></p>
<table>
<thead>
<tr>
<th>服务</th>
<th>简易理解图片大小</th>
<th>实际可用大小</th>
<th>计算方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>百度</td>
<td>4 MB</td>
<td>1.5 MB</td>
<td>4 / 2 / 1.3 = 1.5 MB</td>
</tr>
<tr>
<td>腾讯</td>
<td>1 MB</td>
<td>0.5 MB</td>
<td>1 / 2 = 0.5 MB</td>
</tr>
<tr>
<td>Google</td>
<td>4 MB</td>
<td>4 MB</td>
<td>4 = 4 M</td>
</tr>
</tbody>
</table>
<p><strong>为什么实际大小与简易理解大小不一致呢？</strong></p>
<ul>
<li>首先，base64 压缩后，得到的大小会增加约 1/3</li>
<li>进一步，base64 是使用字符串表示的。那么，一个字符串如 ‘a’ 占几个字节呢？看起来百度是使用 2，腾讯是使用 1</li>
<li>综合起来，就是上面看到的缩水版大小</li>
<li>另外，百度要求图片最大分辨率为 4096 * 4096；而其他 2 家则无此要求</li>
</ul>
<p><strong>既然 base64 会带来计算上的麻烦，为什么不直接使用解压后的图片大小呢？没错，Google 就是这么干的。</strong>你无需考虑 base64 带来的尺寸增加，也无需考虑一个字符串到底占几个字节，只要原图是 4 MB 以下即可</p>
<p>从这一点上看，<strong>服务接口的素质（公司的节操）顺序为：</strong></p>
<p><code>Google</code> &gt; <code>腾讯</code> &gt; <code>百度</code></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1120 - 我也试试内容付费]]></title>
      <url>https://atjason.com/daily/2017-11-20.html</url>
      <content type="html"><![CDATA[<p>我自己有写文章的习惯；尤其，发布一款产品后，我会写些长文，记录产品诞生的整个过程。例如，我之前写的：</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s/2XIjC_QWPgpxcmztLaYodw" target="_blank" rel="external">《Mac 开发的神秘面纱》</a></li>
<li><a href="https://sspai.com/post/39855" target="_blank" rel="external">《Klib 到底赚了多少钱？》</a></li>
<li><a href="https://atjason.com/daily/2017-07-11.html">《在 iPic 周岁时，说说这款让我骄傲的产品》</a></li>
</ul>
<p>这次，有朋友提：干嘛不在 GitChat 等类似的平台，开个 Live 或者文章付费阅读？我想想也是，既能带来点收入，还能增加点曝光，对自己的品牌建设也有一定的好处。</p>
<p>于是，就有了<a href="http://gitbook.cn/gitchat/activity/5a119ad7c2d502358d73c009" target="_blank" rel="external">《如何独立开发一款 macOS 应用：从概念到上线》</a></p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1floy3lvg0qj308c0etaag.jpg" alt=""></p>
<p>在这场 Chat 中，我将详细为你介绍：</p>
<ul>
<li>这个点子是如何诞生的？</li>
<li>如何验证这个点子是否为真实需求？</li>
<li>如何获取第一批用户？</li>
<li>国内、国外的 OCR 服务各有何特色？</li>
<li>识别后的文本，应如何优化排版？</li>
<li>形成产品时，如何取名、如何设计 Logo？</li>
<li>截图应用要上架 Mac App Store，有哪些限制？</li>
<li>产品发布后，如何进行宣传？</li>
<li>…</li>
</ul>
<p><strong>第一手、最新鲜的细节，仅此一家；</strong><br>别的产品，你绝对无法了解这样的细节。</p>
<p>等你来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1119 - 「盒马生鲜」的流量真大]]></title>
      <url>https://atjason.com/daily/2017-11-19.html</url>
      <content type="html"><![CDATA[<p>听「盒马生鲜」已经很多次了，今天终于去了一次。</p>
<p>其中的环境是不错，但也没到非常棒的程度，可能是人多使得体验下降。东西怎么样我还真不敢说，因为要去别的地方，并没有在那里吃或者买。</p>
<p>关键，我最大的感触是，有了「马云开的」这个头衔，就使得这家店有了至高的信任背书、让人无比羡慕的流量，进而有无数的多的口口相传。</p>
<p>有品牌，之后的事就好做很多。可，品牌并不好做。不过，还是要做品牌，越难，才越能突显出价值。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1118 - 向开源致敬]]></title>
      <url>https://atjason.com/daily/2017-11-18.html</url>
      <content type="html"><![CDATA[<p>今天，找了一天如何优化 iText 识别文本的排版。其中，在 GitHub 上找到 2 个很有用的东西：</p>
<ul>
<li><a href="https://github.com/xitu/gold-miner/wiki/%E8%AF%91%E6%96%87%E6%8E%92%E7%89%88%E8%A7%84%E5%88%99%E6%8C%87%E5%8C%97" target="_blank" rel="external">译文排版规则指北</a><ul>
<li>这是稀土所翻译的文章排版的规则，比如「中英文之间需要增加空格」，方便自己知道，正确的排版应该是什么样。</li>
</ul>
</li>
<li><a href="https://github.com/martinwu42/typeset" target="_blank" rel="external">typeset</a><ul>
<li>一个基于 Python 的开源项目，自动修正中文、英文、代码混合排版中的全半角、空格等问题。</li>
</ul>
</li>
</ul>
<p>这两个分享，一个告诉我应该做成什么样，一个告诉我该怎么做。特此感谢。</p>
<p>正是这样的分享，让我们可以不再重复花时间研究别人已经研究过的东西，更快地做出更好的东西。特此致敬。</p>
<p>我也会在合适的时候，开源自己的产品、或者产品中的模块，比如我之前开源的 <a href="https://github.com/atjason/IAPHelper" target="_blank" rel="external">IAPHelper</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1117 - 段落识别无止境啊]]></title>
      <url>https://atjason.com/daily/2017-11-17.html</url>
      <content type="html"><![CDATA[<p>昨天，大体完成了 iText 识别文本后的段落识别。今天，本打算再稍微改进一下。没想到，又折腾了一天。</p>
<p>并且，还有不少已知的问题。哎，不打算改了，因为永远也改不完，还是先做其他事情的吧。</p>
<p>其中有一点，如果先写好单元测试的机制和案例，能省不少时间。</p>
<p>另外，今天还尝试着把应用提交到 App Store 了，主要是想验证下，当前截图的方式能否上架 App Store，先祝自己好运。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1116 - 时不时跳出来思考]]></title>
      <url>https://atjason.com/daily/2017-11-16.html</url>
      <content type="html"><![CDATA[<p>今天搞了一天的段落识别。</p>
<p>其中，比较大的一部分时间用于多栏的自动识别。虽说最后也差不多实现了，但却增加了程序的复杂度，让其它一些原本很简单的问题，变得难以解决。</p>
<p>经过一番思考后，我还是删除了这部分代码，仅保留了普通段落的识别。</p>
<p>回过头来看，之前决定做多栏识别的决定并不正确。因为这明显优先级低，又需花费大量时间。毕竟，还有很多其他更基础、更重要的事要做。不过，好在及时制止了花更多时间。</p>
<p>时不时跳出来思考下。也许现在正在苦闷的事，根本就不需要在意。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1115 - 世道在变化，服务云端化]]></title>
      <url>https://atjason.com/daily/2017-11-15.html</url>
      <content type="html"><![CDATA[<p>突然感觉，我之前好像写过这个话题…</p>
<p>最近几天，工作中涉及到 PDF 解析、OCR 识别这 2 个话题。其实，都是有非常「久远」历史的话题。说久远，是相对于软件的发展速度，二者已经是存在了好多年的东西。而且，由于一直以为也都有这样的需求，对应的方案也在不断变化。</p>
<ul>
<li>没几年之前，二者的方案基本都是 SDK、离线库，卖高昂的售价，通常都是卖给大企业。</li>
<li>后来，License 也变也了订阅式的。</li>
<li>直至今日，又变成了云端服务化，按使用量收费。</li>
<li>甚至，云端这个词都要过时了，慢慢套上了「深度学习」、「AI」这些闪耀的词汇。</li>
</ul>
<p>随着这些形态的演示，站在台前引领风骚的主，也在不断变化。比如，之前一直被「百度更懂中文」「微软这个外企肯定更懂英文」这种思想紧紧套住。可今天一试腾讯的 OCR，发现某些图片的识别，中文比百度强、英文比微软强。</p>
<p>世道，真的在变化。总拿老观点看世界，会出丑的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1114 - Klib 即将支持从「多看」导入标注]]></title>
      <url>https://atjason.com/daily/2017-11-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flhesb2n59g30e60em7gg.gif" alt=""></p>
<p>之前，Klib 已经支持从刷了多看系统的 Kindle 中导入标注。这次更进一步，是直接从多看系统中导入。比如，你在 iPhone 的多看中所作的标注，Klib 也能直接导入。</p>
<p>预计该版本月底前上架。抢先体验：<a href="https://s.toolinbox.net/Klib/d/" target="_blank" rel="external">https://s.toolinbox.net/Klib/d/</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1113 - 我花了一天，做了一款和「百度」比肩的 OCR 图片识字工具 iText]]></title>
      <url>https://atjason.com/daily/2017-11-13.html</url>
      <content type="html"><![CDATA[<p>这是我第 7 款 macOS 产品了：<strong>iText</strong></p>
<p><strong>iText</strong> 是一款 <strong>从图片中识别文字</strong> 的 OCR 工具。</p>
<ul>
<li><strong>集成百度深度学习算法</strong>（所以可以和百度 PK😂），<strong>识别结果惊人的准确</strong></li>
<li>配合截图、拖拽、选择图片文件等方式，<strong>操作非常便利</strong></li>
</ul>
<h2 id="通过截图识别"><a href="#通过截图识别" class="headerlink" title="通过截图识别"></a>通过截图识别</h2><p>选择屏幕任意区域，立即识别其中的文字。</p>
<p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1flfolsdootg30g20cwdrs.gif" alt=""></p>
<p>配合快捷键，截图更方便。默认快捷键为 <code>⇧⌘1</code>；当然，你可以在 iText 偏好设置中修改。</p>
<h2 id="通过拖拽识别"><a href="#通过拖拽识别" class="headerlink" title="通过拖拽识别"></a>通过拖拽识别</h2><p>比如，你在网上看到了一张图片、或者本地有个图片文件，都可以拖拽至 iText 菜单栏图标进行识别。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1flfolnx0v4g30g60cs4b4.gif" alt=""></p>
<h2 id="通过选择图片文件识别"><a href="#通过选择图片文件识别" class="headerlink" title="通过选择图片文件识别"></a>通过选择图片文件识别</h2><p>当然，你也可以在 iText 菜单中选择图片文件进行识别。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>你会发现，对于 <strong>看扫描版 PDF 文件</strong>、登录才能复制文字的网页、对方以手机截图的方式发电话号码、等场景，iText 快速识字的功能，很有用、也很好用。</p>
<p>目前，iText 已上架 Mac App Store，<a href="https://itunes.apple.com/cn/app/id1314980676?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iText_me" target="_blank" rel="external">点此下载</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1112 - 做自己喜欢的事，感觉真爽]]></title>
      <url>https://atjason.com/daily/2017-11-12.html</url>
      <content type="html"><![CDATA[<p>在大家都忙着双 11 的时候，我用了一天多的时候，做了一个小工具。虽然超级累，但还是很开心的。</p>
<p>作为一个独立的产品，要做的事还是很多的：</p>
<ul>
<li>Logo、图标</li>
<li>菜单栏图标基本程序</li>
<li>截图</li>
<li>网络服务对接</li>
<li>拖拽</li>
<li>界面</li>
<li>日志</li>
<li>剪贴板操作</li>
<li>收集反馈</li>
<li>试用机制</li>
<li>检测更新</li>
<li>本地化</li>
<li>测试用例、测试</li>
<li>…</li>
</ul>
<p>到底是什么小工具呢？先预告下：是一款可以和「百度」比肩的 OCR 截图识字工具。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1111 - 双 11 入手这些好 App，立减 128 元]]></title>
      <url>https://atjason.com/daily/2017-11-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/rci1g.png" alt=""></p>
<p>我精心打造了一系列好用的小工具：Klib、iPaste、iTimer、iHosts；<strong>双 11 入手</strong>，不仅能提高工作效率，还能 <strong>省下 128 块大洋</strong> 呢。</p>
<p><a href="https://toolinbox.net/" target="_blank" rel="external">点这里了解这些小工具</a></p>
<p>等不及？<a href="http://appstore.com/mac/JingsenZheng" target="_blank" rel="external">点这里直接去 App Store 下载</a></p>
<p>下载后，在应用的偏好设置里升级高级版，五折优惠价已经在那等着你啦，快来瞧瞧吧！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1110 - 好像事情没我想的那么糟]]></title>
      <url>https://atjason.com/daily/2017-11-10.html</url>
      <content type="html"><![CDATA[<p>之前很长时间一直陷入这样一种担忧：自己目前做的产品，用户增加比较慢，进而收入增加也比较慢。<strong>于是，就开始各种怀疑了</strong>：是不是产品定位有问题？运营没做好？等等。</p>
<p>现在，慢慢开始觉得，思考这样的事情，是好的；有些担忧，也是正常的。但如果因为这些，<strong>而以思考的名义，停止不前，一定是不对的。</strong></p>
<p>跳出现状想一想，<strong>发挥自己的特长，持续地寻找需求、实现产品，总会变得越来越好。</strong>毕竟，自己不是变态，自己需要的东西，通常也会有不少人需求。别人需要的东西，只要能做的比竞品好一些，就能获得用户的青睐。</p>
<p><strong>未来，不一定是绝对力量的对比，而是相对优势的比较。</strong>比如，不再是总分  100 分，看谁考的接近 100 分；而是大家一起赛跑，看能不能比别人跟得快。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1109 - PDF 标注导出，从入门到弃坑]]></title>
      <url>https://atjason.com/daily/2017-11-09.html</url>
      <content type="html"><![CDATA[<p>这两天，研究了如果导出 PDF 标注。没搞定，大致列一些关键的点，供大家参考：</p>
<ul>
<li>PDF 标准是 Adobe 牵头搞了，标准又老又长，一般还是别看了</li>
<li>Apple 提供了 PDFKit；不过，十几年没更新了，功能比较弱<ul>
<li>核心的，在解析标注文本时，会出现 Cmap 错误，但却没有任何可设置的地方</li>
<li>另外，WWDC 2017 新出了 PDFKit for iOS，没去研究，估计重点在于展示，不在于编辑</li>
</ul>
</li>
<li>对于第三方 PDF SDK：<ul>
<li>有少量免费、或开源的，最知名的是 Skim；可惜的是，Skim 也无法解析标注文本，尤其是英文之外的文字、字体</li>
<li>而更大部分，则是商业 SDK；效果我不好说，因为动不动 $1000 一年的授权，试不起</li>
</ul>
</li>
<li>PDF Expert 果然还是厉害，在试过的这些产品中，最强悍；当然，价格也最彪悍</li>
</ul>
<p>总的来看，PDF 还是一小撮玩家在玩的小游戏。既得利益者，牢牢把握着市场；后来者，不太可能进入并有所作为。标准本身，也缺乏与时俱进的动力。我并不看好。</p>
<p>不过，我还是基于 Apple 的 PDFKit 做了个简单的小工具，可以将 PDF 中的标注导出为 csv 文本。需要的朋友，可以单独联系我。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1108 - 预告：i 系列产品，双 11 全线半价]]></title>
      <url>https://atjason.com/daily/2017-11-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/21lky.jpg" alt=""></p>
<p>预告，双 11 当天，Klib、iPaste、iTimer、iHosts 高级版全线半价。</p>
<p><a href="http://appstore.com/mac/JingsenZheng" target="_blank" rel="external">去 App Store 瞧瞧</a></p>
<p>最近想出手的朋友，可以先等等；<br>之前在犹豫的朋友，可以出手了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1107 - 「读书笔记助手」公众号已上线]]></title>
      <url>https://atjason.com/daily/2017-11-07.html</url>
      <content type="html"><![CDATA[<p>目前，主要的功能是：将「微信读书」中的笔记生成网页，方便分享。操作步骤如下：</p>
<p><img src="https://ps.toolinbox.net/i0vy5.png" alt=""><br><img src="https://ps.toolinbox.net/twfif.png" alt=""><br><img src="https://ps.toolinbox.net/o45k4.png" alt=""></p>
<p>欢迎关注「读书笔记助手」公众号，试试分享你的微信读书笔记。</p>
<p><img src="https://ps.toolinbox.net/y1z17.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1106 - iPhone X 已退货]]></title>
      <url>https://atjason.com/daily/2017-11-06.html</url>
      <content type="html"><![CDATA[<p>今天，iPhone X 的手机壳到货了；可是，我已经把它退货了。</p>
<p>直接的原因，是明显感觉这台 iPhone X 的拍照有问题。尤其是拍人时，脸部有明显的过爆、偏黄。另外就是，跟 8 等手机相比，价格高出很多，体验却没有那么高的提升。</p>
<p>虽然苹果的股份和利润还在提升，但明显感觉 iPhone X 这款亮点不足的产品，并不足以支撑这些，苹果还得加油。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1105 - Klib 改进，诸事不顺]]></title>
      <url>https://atjason.com/daily/2017-11-05.html</url>
      <content type="html"><![CDATA[<p>这几天考虑为 Klib 增加新的数据源，却很不顺利。</p>
<p>首先是微信读书。<br>其不开放数据也就算了，打算通过微信读书复制笔记，然后导入、或创建分享。可没想到，微信读书在这方面有 Bug；具体的，复制后的数据格式，本质上应该是类似 html 的富文本，却标记类型为 ‘public-text’ 这种最泛泛的格式。进而，无法在公众号输入框中粘贴。只能通过少数能转换此格式的第三方程序中转，但这明显让已经麻烦的流程，更麻烦。</p>
<p>然后是从多看导入标注。<br>首先是授权。多看被小米收购后，自然使用了小米的账户体系。小米确实开放了账户系统，但无奈并未开放多看方面的权限。如果真要做，那也能拿到小米全站的账户权限。这虽然可行，但在理论上有很大的安全风险。<br>另外，就是多看并未开放接口，需要根据其网络请求，逆向解析其接口，这也有些麻烦。</p>
<p>关键的，有了上述这些困难之后，让我非常怀疑，花时间研究这些，到底值不值？这种深层次的怀疑，让困难变得更加难受了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1104 - iPhone X 的拍照，真不满意]]></title>
      <url>https://atjason.com/daily/2017-11-04.html</url>
      <content type="html"><![CDATA[<p>今天出去玩，用新到手的 iPhone X 拍照。结果回来一看，照片都不满意。</p>
<p>主要是，拍出来的人脸明显偏黄，且灯光照到的地方，明显过曝。</p>
<p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fl6gcmxyw1j30ko0juaau.jpg" alt=""></p>
<p>真郁闷。明天再试试，如果不行，就只能退货了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1103 - 并没有惊喜的 iPhone X]]></title>
      <url>https://atjason.com/daily/2017-11-03.html</url>
      <content type="html"><![CDATA[<p>今天收到了 iPhone X，并没什么惊喜。</p>
<p>其实，几次试着出手，却没有接盘侠；于是，只能自己开箱了。</p>
<p>用了几个小时，随便说说吧：</p>
<ul>
<li>跟现在用的 6 相比，厚了、重了，需要点时间适应</li>
<li>通过无线恢复之前的程序和数据，那速度想死</li>
<li>屏幕尺寸上比 iPhone Plus 大，但实际上，很多区域并没有被充分利用，比如底部常驻的一条</li>
<li>充电不快；用 5V2A 的充电头，依然感觉如此</li>
<li>玻璃后盖，容易手滑，还是得上套</li>
<li>摄像头算是符合预期，绝对没有超预期</li>
<li>解锁还要再次上滑，不方便</li>
</ul>
<p>总的来说，感觉有很多妥协的地方，是苹果仓促出手的作品。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1102 - 请叫我个体户]]></title>
      <url>https://atjason.com/daily/2017-11-02.html</url>
      <content type="html"><![CDATA[<p>「独匠网络工作室」</p>
<p>恩，这两天新注册了个体户，名字如上，我还挺喜欢的。独匠，「独」具「匠」心，孤「独」的工「匠」，契合我目前的状态。</p>
<p>又打了点鸡血，今天也规划了今年剩余 2 个月的计划。</p>
<p>战斗吧，独匠！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1101 - 不喜欢不专业的感觉]]></title>
      <url>https://atjason.com/daily/2017-11-01.html</url>
      <content type="html"><![CDATA[<p>今天在折腾微信读书笔记导出分享的事。</p>
<p>其中，后端部分，目前是打算重用 Klib 中的分享。这部分是当初边学 Python 边做的，Python 本身不太熟悉，再加上过了几个月，代码改起来好累。要知道，像字符串函数都要 Google 才知道怎么用，真是难受 + 丢人了。</p>
<p>十分不喜欢不专业、然后用时间堆结果的状态，喜欢高效 * 时间出结果的快感。</p>
<p>明天跳出微信读书，重新考虑下 Klib 的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1031 - 新见 10w+ 诞生]]></title>
      <url>https://atjason.com/daily/2017-10-31.html</url>
      <content type="html"><![CDATA[<p>这几天有件事，在麦当劳中国公司改名「金拱门」后，「<strong>三胖</strong>」迅速买入卖出 jingongmen.com 域名，赚了 15000 元；同时，在自己的公众号「<strong>成长</strong>」中，出了篇 <a href="http://mp.weixin.qq.com/s/nurJ2KGkHtX2GG009lf_sQ" target="_blank" rel="external">因为麦当劳改名金拱门，1个小时我赚了15000</a>，迅速获得 <strong>15w+</strong> 的点击，粉丝增长无数。</p>
<p>亲见 10w+ 诞生。</p>
<p>今天，亲见了三胖本人，聊了一天，收获良多。比如：</p>
<ul>
<li><strong>花开别处</strong>：对于这次炒作的域名本身，三胖是亏的，因为本可以赚更多却出手太早。可是，之后的 10w+ 的文章，却为自己带来收益无数</li>
<li><strong>广积人脉</strong>：不知道在什么时候、什么地方就能帮到自己</li>
<li><strong>以和为贵</strong>：对于自己不认同的人，不会主动批评、树敌，敬而远之也就可以了</li>
<li><strong>加大杠杆</strong>：逐级放大自己的影响力</li>
<li><strong>边做边说</strong>：这年代，埋头苦干已经不行了，或者说已经不够了，自己还得会营销产品、营销自己</li>
<li><strong>累积背书</strong>：每个人在认知别的人、物时，都需要一个锚定。进而，每个人都需要不断增强自己的锚定<ul>
<li>比如，别人在把你介绍给他人时，说的前几句话，基本就是你的锚定</li>
</ul>
</li>
</ul>
<p>晚上，还见了位在 <a href="http://www.8btc.com/" target="_blank" rel="external">巴比特</a> 做运营的朋友，其中他的一句话刺激到了我：<strong>感觉现在互联网对年轻人已经没什么机会了，所以我选择了币圈。</strong></p>
<p>确实，互联网到目前已经充分发展，对于新入行的人，感觉已经像是传统行业了。要在互联网这个新兴的传统行业中打出一片天地，变得越来越难。同时，也更加凸现选择的重要，<strong>选择一个本身就在快速成长的行业，自己哪怕静止不动，也会坐地日行八百里。</strong></p>
<hr>
<p>自己收获的，才是收获。别人分享的，带给自己的最多是思路；<strong>实操还是得自己</strong>。接下来，准备：</p>
<ul>
<li>试水「<strong>微信读书笔记分享</strong>」，感受下蹭热门应用是什么感觉</li>
<li><strong>左手开发、右手运营</strong>，看看能把 <a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> 的影响力和收入做到什么程度</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1030 - 搞搞微信读书]]></title>
      <url>https://atjason.com/daily/2017-10-30.html</url>
      <content type="html"><![CDATA[<p>今天在看接下来 Klib 准备做什么，发现有个好玩的点：管理微信读书笔记。</p>
<p>微信向来是很封闭的，目测并没有开放接口可以拿到此数据。大致搜了下，网上也有一点点做微信 API 逆向的，但明显会有大量工作，且很不稳定。</p>
<p>不过，倒是引出了另外一点需求：共享微信读书笔记。目前，微信读书里仅支持分享单条笔记，分享一本书的笔记？不可能。但有没有这个需求呢？大致问了下，不强，但还是有。准备先折腾下这个事情，看看效果再说。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1029 - 小城生活]]></title>
      <url>https://atjason.com/daily/2017-10-29.html</url>
      <content type="html"><![CDATA[<p>今天去了趟嘉兴，去朋友家蹭饭，也顺便感受了把小城生活。</p>
<p>挺爽的。</p>
<p>当然，嘉兴也并不算无名小城，只是相对于一线城市而言。感觉还是挺舒服的，比如：</p>
<ul>
<li>房价物价相对不高，生活压力骤降</li>
<li>基础设施不差，比如高铁直达</li>
<li>人车密度相对低，不会觉得很拥挤</li>
<li>生活节奏慢些，既不会因此失去什么，却赢利了悠闲惬意</li>
</ul>
<p>对我而言，并不太喜欢非常快的生活，也不太愿意为了城市的福利而牺牲很多，其实还挺想真的试试小城生活。</p>
<p>不过，既然目前还无法离开杭州这座相对更快、资源更集中的城市，那就充分利用这里的优势吧。如果总是被城市的负面包围、无法享受其便利，那就太亏了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1028 - 打算深度体验手机阅读]]></title>
      <url>https://atjason.com/daily/2017-10-28.html</url>
      <content type="html"><![CDATA[<p>之前一直在用 Kindle 看书，主要是觉得护眼。不过，Kindle 的软件生态实在是太…</p>
<p>于是，打算在微信读书上看几本书，深度体验下手机阅读的优劣势，然后看看 Klib 有没有什么可做的。</p>
<hr>
<p>另外，reMarkable 这款产品也已经上市，$599 的价格，基本等于 iPad Pro 的价格。优势是电子墨水，缺点便是没有其它优点。官网称已售出 35K，感觉是不错的销量了。</p>
<p>越来越觉得，一款产品的胜出，一两个点突出是不行的，生态一定要完善。比如 Kindle，其阅读体验未必胜出同类产品多少，但关键一点：背靠亚马逊，使得有巨量的书可以在 Kindle 上阅读，这便是同类产品无可比拟的。</p>
<p>同时来看 reMarkable，相信在「像在纸上手写标注」的体验上，一定是不错的。但如果仅凭这一点，感觉还是弱了些。尤其是 iPad Pro 能提供类似的功能，且有其他更多的扩展功能。对 reMarkable 的前景表示担忧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1027 - 没钱，不爽]]></title>
      <url>https://atjason.com/daily/2017-10-27.html</url>
      <content type="html"><![CDATA[<p>今天 iPhone X 预售，起步价￥8388，真是不便宜。我挺犹豫，最后还是抢了个。可由于抢的不够坚决，发货日期比较靠后。</p>
<p>既花了钱，又花得不爽、心里有负罪感，不爽。</p>
<p>早点赚钱，多赚钱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1026 - 今日空白]]></title>
      <url>https://atjason.com/daily/2017-10-26.html</url>
      <content type="html"><![CDATA[<p>没干活，听了很长时间的《间客》</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1025 - 花钱证明自己是好人]]></title>
      <url>https://atjason.com/daily/2017-10-25.html</url>
      <content type="html"><![CDATA[<p>这几天断断续续在思考软件抄袭的事。</p>
<p>Pin、时间块这些 App 相继被朴素级抄袭，有很多的共同点：</p>
<ul>
<li>本身都是很优秀的产品，被 App Store 首页多次推荐</li>
<li>开发者我都认识，至少是神交</li>
<li>抄袭都反应出奇的一样：我没有抄，至少名字不一样。不仅思维逻辑我跟不上，脸皮厚度我也无法理解</li>
</ul>
<p>一个让我感觉很不舒服的点是，大家在讨论这件事，<strong>很少讨论应该如何惩罚抄袭者，很多都在指点原创者应该如何保护自己。</strong>如使用免费+内购的模式，申请专利或著作权，等等。</p>
<p>这一点真是奇怪，让人很难受：<strong>好人，要花钱、花时间，证明自己是好人。</strong></p>
<p>但我感觉，如果总是从这个角度出发，后果很严重。</p>
<p>比如，街上有坏人，如何保护自己呢？最直接的，就是不出门。可如果大家都不出门了，<strong>坏人只好破门而入了</strong>。</p>
<p>一旦强调个体从个体的角度保护自己，从整体上看，<strong>非常可惜地增加了原创者的成本，非常可悲地在扼杀创新。</strong></p>
<p>比如，当我创建一个东西，还不知道能不能赚钱，要不要先花￥1000 去申请专利呢？</p>
<p>期待这样一天：原创者把不用花任何时间、金钱来证明自己是原创者这个事实；抄袭者在抄袭时感觉胆战心惊，一旦被发现则身败名裂。</p>
<hr>
<p>无奈在想，要不要给政府交保护费，给自己的 App 整个外观专利之类的？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1024 - 算清楚这笔账后，我决定不再追投比特币]]></title>
      <url>https://atjason.com/daily/2017-10-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/fnq64.jpg" alt=""></p>
<p>过去一年，比特币涨了将近 9 倍。</p>
<p>如果投入 $1000，收益约 $8000.</p>
<p>这收益高吗？高，但并不能真的改变什么。</p>
<p>如果想要增加收益，将投入增加到 $10,000 怎样？且不说有没有这么钱可以投，我还真承担不起这个风险。</p>
<p>既然投入少，得到的收益并不能改变什么，又不敢投入太多，比特币对我来言，就不是很好的投资模式（如果比特币回落到 $4000，我会投入 $1000）。</p>
<hr>
<p>反过来，如果是投资自己呢？</p>
<p>假设我一个月的收入是 $1000，投入 $1000，就意味着我一个月可以什么都不做。换句话说，用 $1000 来买我现在一个月绝对自由的时间，想做什么做什么。或者，做点能极大改变未来自己的事，比如媚俗的骑行 318，开车横穿美国，在国外某个海边城市生活一个月，做一个新 App，等等。</p>
<p>所以，<strong>对现阶段的我，最好的投资是，投资自己</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1023 - 我也是有币的人了 😂]]></title>
      <url>https://atjason.com/daily/2017-10-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/gy2it.jpg" alt=""></p>
<p>今天，花了点时间了解比特币。最后，在境外某市场中，通过支付宝，用￥100 购买了 0.00251216 个比特币。</p>
<p>我也是有币的人了 😂</p>
<p>目前暂不会买更多的，继续观望。跟一个加拿大的朋友聊，他们等回落到 3k USD 后他会再购入。我就参考他的意见吧。</p>
<p>比特币是个很大的领域，网上一搜，会有无数多的领域。自己作为门外汉，就算只是要粗浅地了解，也要花很多时间去接触。</p>
<p>感觉最直接有效的方式，还是去交易：买一点比特币，并且也卖一点。就算是吃亏上当，也能快速获取最真切的体验。</p>
<p>恩，体验很重要，至少表示已经入门了，进而才有可能把握这个领域的机会，比如做个比特币钱包、自动交易机器人、等等。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1022 - 做事，还是得有信念]]></title>
      <url>https://atjason.com/daily/2017-10-22.html</url>
      <content type="html"><![CDATA[<p>今天碰到 2 件事。</p>
<p>一是，去爬了宝石山。在下午准备出门的时候，天突然从晴转阴了。如果是平时，很可能就不去了。但由于昨天就决定今天要去的，于是根本不多想，直接出门了。</p>
<p>二是，今天又结识了一个 Kindle 资深爱好者，为 Klib 在海外的推广提供了非常多的建议，感谢。下一步，准备实操一个，增加 Klib 的海外用户量。关键的是，付费用户量 😂</p>
<p>本来今天打算完成 iPic 新版发布对应的运营准备工作，结果因为出门、以及和朋友聊 Klib 的事，可以开始干活时，已经晚上 10:30 了。这里就比较纠结，是加班执行原计划呢，还是推迟一天发布？其实二者都有道理。最后一咬牙，还是坚持原计划，一直搞到凌晨一点。</p>
<p><strong>如果没有决心、没有信念，那些可做可不做的事，基本就不会做了。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1021 - 想要爬山]]></title>
      <url>https://atjason.com/daily/2017-10-21.html</url>
      <content type="html"><![CDATA[<p>好久没爬山了。</p>
<p>总在城市的建筑群里呆着，总在这个房子里呆着，人也变得干瘪了。尤其有个小孩约束着，活动半径无比小，也很少有社交活动。</p>
<p>今天，提交了 iPic 新版，但却没有兴奋的感觉，只是像是例行公事一般。没有激情，又怎能做好事情、做好 App？</p>
<p>明天去爬个山，登到山顶，鸟瞰这个城市，心也别样一些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1020 - iPic 已支持腾讯云 COS]]></title>
      <url>https://atjason.com/daily/2017-10-20.html</url>
      <content type="html"><![CDATA[<p>预告：iPic 已支持腾讯云 COS，预计会在下周更新。</p>
<p><img src="https://ps.toolinbox.net/7zix6.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1019 - 在追求剪贴板效率的路上，iPaste 更进一步]]></title>
      <url>https://atjason.com/daily/2017-10-19.html</url>
      <content type="html"><![CDATA[<p>今天，iPaste 在 iOS &amp; macOS 双平台，同步更新。</p>
<p><strong>iPaste for macOS</strong></p>
<p>使用快捷键「Control-Command-A|B|C…」即可展示对应分组的历史，分组的使用变得更加高效。</p>
<p><img src="https://ps.toolinbox.net/ulrua.png" alt=""></p>
<p><strong>iPaste for iOS</strong></p>
<p>现在，你可以在「今天」小组件中同步剪贴板历史。</p>
<p>例如，在 Mac 端，运行 iPaste 并复制任意内容；在 iPhone/iPad 端，打开「今天」视图，你刚刚复制的内容已经同步至 iPaste 小组件中了。点击即可复制到手机的剪贴板中。</p>
<p><strong>下载 iPaste</strong></p>
<p><a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_home" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p><a href="https://itunes.apple.com/cn/app/id1277077036?mt=8&amp;at=1000lv4R&amp;ct=iPaste_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/ufzqr.png" alt=""></a></p>
<p>如果你觉得 iPaste 还不错，欢迎 <a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_home" target="_blank" rel="external">到 App Store 给个 5 星、写点评论</a> 或分享给周围也需要 iPaste 的朋友。</p>
<p>如果你觉得 iPaste 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=iPaste" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1018 - 不要在这里塞广告！]]></title>
      <url>https://atjason.com/daily/2017-10-18.html</url>
      <content type="html"><![CDATA[<p>今天在楼下报箱里取东西，一个年轻人大摇大摆地过来往报箱里塞广告。我一下子火了，跟他吼起来，吵了一架。</p>
<p>之后回想起来，跟这种人吵，真是不值当。</p>
<p>如果动粗，对于我这种「知识分子」，明显就落了下乘。应该动嘴皮子，让他臊上一天，心里种根刺，比打他一顿有效果多了。</p>
<p>关键的，时间成本差太多。如果耗起来，他的一个小时才值多少钱？我可耗不起。</p>
<hr>
<p>另外，如果是位中年大叔，干塞小广告这种事，也就算了。关键一个四肢健全的年轻人，竟然也做这样的事。真是愤恨，<strong>真想把他的时间，抢过来给自己用。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1017 - 不要乱发脾气]]></title>
      <url>https://atjason.com/daily/2017-10-17.html</url>
      <content type="html"><![CDATA[<p>发脾气、情绪失控，是情商比较低的表现。</p>
<p>比如，我们在想得到、却得不到的时候，在羡慕嫉妒恨的时候，很容易发脾气。</p>
<p>关键是，发脾气并不解决问题。</p>
<p>除了让自己一时爽一点，并不能解决问题，甚至可能会让问题更糟。</p>
<p>临渊羡鱼，不如退而结网。想清楚自己想要的、不得不做的，然后想办法去做、却达到目标，事情只是这么简单。生气、着急，无用。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1016 - 每个城市都说自己很堵]]></title>
      <url>https://atjason.com/daily/2017-10-16.html</url>
      <content type="html"><![CDATA[<p>国庆去了几个城市，每个城市的司机都说自己的城市是最堵的。今天在下雨、周一傍晚 5:30 出门，打不到车、挤不上公交车，真是痛苦的经历。</p>
<p>原因当然是很多的，其中一个比重较大的，就是车的绝对价格和相对价格都在不断下降，导致买车的人不断上升。而城市道路交通建设，远没有跟上车增长的速度。</p>
<p>怎么解决拥堵的问题呢？其实还得从需求说起。</p>
<p>比如，上下班高峰，是因为大家都要在相同的时间、却差不多相同的地方上班。那如果不需要到固定地方上班，自然就能减少出行流量。</p>
<p>比如，很多家庭买车，都是因为家里有小孩，需要经常往返各种补习班，周末去郊游。如果打车、租车很方便，就能一定程度满足家庭用车的需求。</p>
<hr>
<p>可以看出，未来几乎没有简单的问题，所有问题都是紧密联系在一起，形成一个复杂的问题体系。单点突破（比如自动驾驭提高车速、降低事故率），都不能解决问题。</p>
<p>深层次的矛盾就是：科技技术的速度，能否赶上问题复杂度增加的速度。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1015 - 要不要买点比特币？]]></title>
      <url>https://atjason.com/daily/2017-10-15.html</url>
      <content type="html"><![CDATA[<p>一位八杆子跟 IT 打不着的朋友，跟我打听怎么买比特币，让我感觉这个东西好像变得很真切了。</p>
<p>这让做程序员、本该对技术很敏感、却一直没有买过比特币的自己，好好考虑一下了。</p>
<p>另外，这两天在听得到王煜全的专栏，也增加了买币的理由。</p>
<p>还有，就像朋友之前说的，政府是很难管住自己手去印钱；而人民币又不是像美元一样是国际通用货币，央行印钱就直接等于从老百姓口袋里抢钱。</p>
<p>再有，手上有些美元，放着也是放着，不如整点币玩玩，毕竟今年比特币已经涨了 5 倍了，让人心痒痒。</p>
<p>一个技术点没有想明白：比特币的无限可分割属性，是否抹杀了其稀缺性？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1014 - 坚决砍掉枝枝蔓蔓]]></title>
      <url>https://atjason.com/daily/2017-10-14.html</url>
      <content type="html"><![CDATA[<p>时间真是太有限了，花在了外围的事情上，就没办法投入到主营业务上了。</p>
<p>坚决砍掉枝枝蔓蔓，专注、专注、专注。</p>
<p>尤其，要坚决抵制诱惑，尤其是能带来小利、小钱的事，很容易控制不住自己，投入时间去赚这点小钱。殊不知，如果考虑机会成本，实在是亏太多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1013 - 把握趋势]]></title>
      <url>https://atjason.com/daily/2017-10-13.html</url>
      <content type="html"><![CDATA[<p>如果早知道房价、比特币会涨成现在的样子，当初砸锅卖铁也要多屯点，少奋斗多少年，甚至一辈子都不用奋斗了。</p>
<p>这就是把握趋势的力量。</p>
<p>房价这种趋势我是把握不了，但比特币这种科技圈的趋势，身处科技圈的自己，如果都不能利用一二，那就真的是一辈子干苦力的命了。</p>
<p>好，开始有意识地学习、了解趋势。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1012 - 软件真是个可靠的朋友]]></title>
      <url>https://atjason.com/daily/2017-10-12.html</url>
      <content type="html"><![CDATA[<p>今天改了 iPaste 中的 Bug、新增快捷键直接打开分组，感觉软件真是个可靠的朋友：付出了、改进了，它就会变好，更好地为我工作。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1011 - 找了位好帮手]]></title>
      <url>https://atjason.com/daily/2017-10-11.html</url>
      <content type="html"><![CDATA[<p>今天，勾搭上一位对运营感兴趣的朋友。之后，我做产品，有人帮我吆喝了。</p>
<p>之前应该说过了，还是想再说下这个观点：国内的个人开发者、小团队，对于产品的运营有普遍需求：</p>
<ul>
<li>自己时间少</li>
<li>不擅长做运营</li>
</ul>
<p>类似这样的产品还是很多的，非常需要专业运营力量介入，比如：</p>
<ul>
<li>从运营的角度，产品处于早期，稍微优点运营，效果就很明显</li>
<li>如果只是基础的运营，通用的部分很多，一个走通了，很容易套到别的产品中</li>
</ul>
<p>不过，问题也很明显：</p>
<ul>
<li>运营必须产品的销售、收入等核心数据。而这一点，只会开放给非常信任的合作者</li>
<li>运营需要时间才能见效，产品所有者不一定有耐心</li>
<li>运营很难分成。产品销量增加了，到底是运营的功劳，不是因为产品本身变得更好用了？</li>
</ul>
<p>目前，我并没有接触到有专门做运营的团队，跟这位朋友也刚认识没几天，面也没见过，摸着石头过河吧，希望有好的结果，期待。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1010 - 自动驾驶赶快普及吧]]></title>
      <url>https://atjason.com/daily/2017-10-10.html</url>
      <content type="html"><![CDATA[<p>虽说我也是换过证的老司机，不过毕竟没有车，不经常开。今天突然开了 300 公里，有高速、国道、省道、县乡道，尤其是傍晚的城市道路，真不是什么愉快的体验。尤其是不怕死的大爷大妈，横穿马路左右连看都不看一眼，哎…</p>
<p>驾驶确实还是有乐趣的，尤其是左弯右弯的山路，有点点危险，也正好有点点刺激。车子在自己手中左转右转，那感觉，还是挺爽的。尤其是一家人在车里开开心心地聊天，顺利送达景点，然后被从未见过的景致开心到，还是挺愉悦的体验。</p>
<p>可是，开车过程中的麻烦事也不少。有安全风险，好几次差点闯红灯；还有倒车入库之类的。于是，非常期待自动驾驶。想要体验驾驶乐趣，就手动玩玩。其它时间，交给机器好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1009 - 人是社会动物]]></title>
      <url>https://atjason.com/daily/2017-10-09.html</url>
      <content type="html"><![CDATA[<p>总是一个人确实是不好，多跟不同的接触，能构建不同的支点。</p>
<p>尤其看到熟悉的人的成功事迹，是非常有效的鸡血。</p>
<p>停止猪一样的生活，开始看书、干活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1008 - 猪一样的生活]]></title>
      <url>https://atjason.com/daily/2017-10-08.html</url>
      <content type="html"><![CDATA[<p>好吧，我编不出来了，最近一直过猪一样的生活…只吃不干活…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1007 - 边做边想]]></title>
      <url>https://atjason.com/daily/2017-10-07.html</url>
      <content type="html"><![CDATA[<p>谋定而后动，并不适合我，因为我通常都谋不定 😂</p>
<p>更适合我的，是边做边想。</p>
<p>而过程中最应该警惕的，是沉迷于做，而忘记想。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1006 - 开阔眼界]]></title>
      <url>https://atjason.com/daily/2017-10-06.html</url>
      <content type="html"><![CDATA[<p>知道就是力量。</p>
<p>就像问题一样，如果问题能被提出来，其实已经意味着即将被解决。从上学开始，我们一直在练习如何解决问题。而随着成长，慢慢过渡到提出问题。</p>
<p>而要能提出问题，首先要开阔眼界、知道更多。比如，只有知道用户的需求，才有可能构想出用户需要的产品。</p>
<p>如何知道更多？不外乎是听人说、自己经历。而在实操过程中，很重要的一点是：值得为此花时间、花钱。</p>
<p>为知道花时间，为眼界花钱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1005 - 权力天生不爱被约束]]></title>
      <url>https://atjason.com/daily/2017-10-05.html</url>
      <content type="html"><![CDATA[<p>今天看了《出租车司机》，除了像《辩护人》一样感概，人家都可以拍这样的片子了，还有另外一点感触：权力天生不爱被约束。</p>
<p>为什么会发生这样的事？因为军统要独裁。为什么要独裁，因为可以享受不受约束的权力。一旦享受到了绝对权力，是不愿意放手的。</p>
<p>人都有欲望。这本没有问题，但问题在于，人人都有欲望，个人的欲望，并不能影响别人的欲望，不然就是独裁了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1004 - 虚拟共同体]]></title>
      <url>https://atjason.com/daily/2017-10-04.html</url>
      <content type="html"><![CDATA[<p>同班同学，意味着什么？只是有相同的班号？还是一起上同样的课？还是学类似的东西？还是做相同的宿舍？还是有相同的老师…如果是正向定义，好像很难定义清楚，尤其是同学间的情谊。但同学情谊确实存在。</p>
<p>类似的还有很多。比如，什么是祖国？民族？看起来都是很清晰，但真要深究，也很难说清楚。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1003 - 年纪真是大了]]></title>
      <url>https://atjason.com/daily/2017-10-03.html</url>
      <content type="html"><![CDATA[<p>昨晚是毕业聚会的最后一晚，大家在一起玩狼人杀，一直不舍得散去，直到凌晨 2 点多。早上要赶火车，6 点多起床。结果，一天都觉得没什么精神，果然年纪大了，不像当年去网吧通宵，稍微睡一觉就好。</p>
<p>而且，80 岁徐教授也说了，我们未来的路相对更长，要做的事更多。而从现在起保持良好的作息和适度的锻炼，会显得更重要、性价比更高。正好现在的地方环境还可以，至少比杭州的空气要好，恢复晨跑的习惯吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1002 - 战略懒惰]]></title>
      <url>https://atjason.com/daily/2017-10-02.html</url>
      <content type="html"><![CDATA[<p>导师狠狠批评了我。</p>
<p>直中要害地说出了我目前自由职业的风险：</p>
<ul>
<li>单打独斗，力量太小，风险很大</li>
<li>在国内的大环境下，写一辈子代码，问题颇多，整体是个走下坡路的领域<ul>
<li>而管理等领域，随着时间的推移，会积累越来越多的经验；而经验越多，管理能力则更强。是个正向循环</li>
</ul>
</li>
<li>对于需要创新的领域，年轻力量具备天生的优势，而年纪越来越会成为自己的劣势</li>
<li>需要从「自己亲自做」，过渡到「管理别人做」。自己能做的事太小、太少；而有能力聚集更多的人，做更大的事，更有长远的意义</li>
</ul>
<p>每个点都非常残酷地指出了自己的问题。而自己一直是有战术上勤奋、战略上懒惰的毛病。趁着这个假期，没有大块独立的时间写代码，好好想想这个问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1001 - 师生情、同学谊]]></title>
      <url>https://atjason.com/daily/2017-10-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/169tg.JPG" alt=""></p>
<p>一晃 10 年过去，有些同学毕业后从未见过；再见，依然熟悉亲切，真的好像并没有过去多久。</p>
<p>5 年后，北京见。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0930 - 准备旅行]]></title>
      <url>https://atjason.com/daily/2017-09-30.html</url>
      <content type="html"><![CDATA[<p>明天就要出发去南京，参加毕业聚会，期待。</p>
<p>换个城市生活 2 个星期，也是期待。</p>
<p>PS：有了娃，出门真是麻烦，要带的东西很多。而且，天还下雨；又赶上国庆出行高峰，明天估计要早起了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0929 - CloudXNS 域名解析需要实名认证]]></title>
      <url>https://atjason.com/daily/2017-09-29.html</url>
      <content type="html"><![CDATA[<p>今天突然在一个微信群里收到一则消息：CloudXNS 域名解析需要实名认证；未认证者，将在未来几个小时内停止解析。</p>
<p>真突然。</p>
<p>毕竟，域名服务器的切换，最长可能需要 48 小时，这样突然的变故，实在是有些突然。</p>
<p>为什么呢？公安部门的要求。<br>那为什么这么突然呢？鬼知道。毕竟是在天朝上国，没那么多讲道理的地方。</p>
<p>本想着一劳永逸切换到国外的 DNS 服务商，可一方面毕竟在国内解析慢，另一方面免费的 CloudFlare 并不支持线路切换，只能放弃。</p>
<p>听了朋友的建议，最后选择了阿里云解析。免费，且支持线路切换。导入的过程不算太顺利，因为 CloudXNS 导出的格式，和阿里云导入的格式，并不完全相同，需要手动修改。并且，还需要有购买域名的地方，修改 nameserver. 总之，是个繁琐的过程。</p>
<p>这也是个丢包袱的过程。在 CloudXNS 上有多个域名，但发现真正使用也就少数几个，甚至其中一个不到 1 个月就到期了。算了，不再续费了，维持最核心的好了，不在其它地方分散精力了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0928 - 名利之外，保有一份纯真]]></title>
      <url>https://atjason.com/daily/2017-09-28.html</url>
      <content type="html"><![CDATA[<p>马上要同学聚会了，很是期待。</p>
<p>同学之间，没有名利，只有同学情谊；没有攀比，只有互相祝福。</p>
<p>名利之外，保有一份纯真，存在内心最柔软的地方。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0927 - 创新，外行更在行？]]></title>
      <url>https://atjason.com/daily/2017-09-27.html</url>
      <content type="html"><![CDATA[<p>对一个领域越了解，越深知其中的困难和坑，也会感觉做事不易。进而，这种恐惧感，会限制想象力，限制可能的创造。</p>
<p>而外行，则可以无视实现过程中的技术困难，真抵想要的结果，设想、或者说幻想出最终美好的结果。</p>
<p>这样看起来，像是外行更可能有新的想法，更容易创新。</p>
<hr>
<p>类比一下，我们都说小孩子想象力丰富，比如「如果我能飞到天上多好啊」。<strong>但这样的想象力比较肤浅，更多的是对已有认识的随意嫁接。</strong>比如，小孩子知道鸟儿会飞，所以会把「飞」这个能力嫁接到自己身上，进而会有上面的想法。</p>
<p><strong>这种级别的想象力，难以成大事。</strong>比如，是无法构想出《三体》这种级别的科幻小说，因为后者需要的不仅仅是嫁接这种简单的能力，而是需要对世界有深刻的理解，在充分理解基础规律的前提下，才能进一步构织出看似神奇、但又貌似有些道理的复杂虚拟世界。</p>
<hr>
<p>回到文章开头的问题，目前我的理解是，外行、或者说任何人，都可以随意组合自己已有的认知，构想出新的、自己想象的东西，这当然是好的、对的。但只有 <strong>对事情有更进一步的理解，才能构想出更有意义的。理解越多，构想出的越有价值。</strong></p>
<p>所以，<strong>外行更容易创新，内行更容易有深刻的创新。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0926 - 微商的动力]]></title>
      <url>https://atjason.com/daily/2017-09-26.html</url>
      <content type="html"><![CDATA[<p>周围认识有做微商的，那动力，啧啧，跟传销有的一拼。</p>
<p>简单分析下为什么这么有干劲：</p>
<ul>
<li>回报快<ul>
<li>卖一个，就能看到钱。</li>
<li>就跟打游戏一样，打死一个怪，立即就有金币。</li>
</ul>
</li>
<li>客单价高<ul>
<li>一旦打开一个缺口、多了一个用户，就有可能一直给这个用户卖商品（主要是快销品类的），有可能赚的钱会很多</li>
</ul>
</li>
<li>指数效应<ul>
<li>微商必然是有层次、上下线体系的。</li>
<li>发展一个下线，躺着就能赚钱，这诱惑，太大了。</li>
</ul>
</li>
</ul>
<p>所有这个体系都是建立在商品为用户所带来的价值上，一旦这个价值的增速跟不上微商团队的增速、或者不能满足微商从业者对收入增速的预期，就会崩塌。</p>
<p>当然，也不是说一定就会崩塌，比如安利就活得好好的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0925 - 我们依然只能看到别人想让我们看到的]]></title>
      <url>https://atjason.com/daily/2017-09-25.html</url>
      <content type="html"><![CDATA[<p>今天有一则新闻占据了很多人的眼球：新版微信更换了启动画面，其中背景中的地图，从 NASA 提供的图片，换成了我国自主卫星所拍摄的照片。</p>
<p>首先，还是要肯定中国的进步。</p>
<p>可依然，这真是个屁大点的事。可即便，这么屁大点的事，一旦和微信挂上了钩，则会被各大媒体争相报道。敢问，这世界上真的没有比这张图片更有价值的新闻值得报道吗？即便是在科技圈，也没有别的了吗？</p>
<p>事实上，有多少新产品渴望被了解，有多少变化正在发生。可是，媒体事实上被巨头把控着，这些变化只能「悄然」发生，甚至到死都不会有多少人知道。</p>
<p>我们依然只能看到别人想让我们看到的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0924 - 效率可能只是伪需求]]></title>
      <url>https://atjason.com/daily/2017-09-24.html</url>
      <content type="html"><![CDATA[<p>我现在用的是 iPhone 6，想换手机，其中一个理由是：现在的手机太慢，打开 App 都要等半天，一天下来，浪费不少时间。</p>
<p>但同时，我每天无聊时刷朋友圈、看新闻的时间，绝对大于手机慢所消耗的时间。</p>
<p>如果真的理智，首先要做的是减少无聊所消耗的时间，而不是换手机。但实际上，我宁愿继续无聊刷朋友圈，也还是想换手机。</p>
<p>可见，我真正的需求，不是想通过换手机来提交效率、节约时间，而是为了在使用手机时更快，感觉更爽。</p>
<p>在做了 N 个效率工具后，我慢慢感觉，效率这个字眼有误导，<strong>效率的本质，与节约时间无关，更多为了爽。</strong></p>
<p>换句话说，效率工具更现实的意义的是：<strong>把节约出来的时间，以自己爽的方式，浪费掉。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0923 - iPhone 8 Plus 重的让我放弃了]]></title>
      <url>https://atjason.com/daily/2017-09-23.html</url>
      <content type="html"><![CDATA[<p>目前在用 iPhone 6，很卡，已经忍了很久了。本想着这次换个 8；另外，也试试大的手机。</p>
<p>无奈，体验真机后，实在是太重了。挺小，实在掌握不住。</p>
<p>坐等流海吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0922 - 消费的不止是产品，还有情感]]></title>
      <url>https://atjason.com/daily/2017-09-22.html</url>
      <content type="html"><![CDATA[<p>对一个产品的体验，远不止产品本身。</p>
<p>比如网购，快递的速度，会对感觉有非常直接的影响。</p>
<p>比如 App，遇到问题后，作者的响应速度，也非常影响用户的心理。</p>
<p>作为产品的提供者，所要考虑的则不止是产品本身，更加不止是功能，而是完整的体验。</p>
<p>更进一步，提供的又何止是产品，而是让用户爽的一整套服务。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0921 - 休息]]></title>
      <url>https://atjason.com/daily/2017-09-21.html</url>
      <content type="html"><![CDATA[<p>尤其，看书有助于催眠 😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0920 - 积极休息]]></title>
      <url>https://atjason.com/daily/2017-09-20.html</url>
      <content type="html"><![CDATA[<p>今天没写代码，看了美剧，去了影院，喝了啤酒，磕了瓜子…可最后，也并没有觉得放松愉悦。</p>
<p>其实也不是第一次了，这样什么也不做的休息，并不是休息，而只是放纵。</p>
<p>感觉更好的方式是，找到平日工作之外的某项兴趣，投入时间和精力。<strong>专注后的疲惫，反而是更深度的放松。</strong></p>
<p>规律的生活，不需要所谓休息。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0919 - iPaste 上架 App Store]]></title>
      <url>https://atjason.com/daily/2017-09-19.html</url>
      <content type="html"><![CDATA[<p>今天，2017 年 9 月 19 日，我的首款 iOS App - iPaste 正式上架 App Store.</p>
<p>最近持续忙了很长时间，有些累了。这几天好好休息下，暂停开发功能代码，做点因为忙 iPaste 而耽误的事，比如看书、会友、思考、等等。等缓过劲来，回头重新思考 iPaste 及其他产品，考虑接下来的事情安排。</p>
<p>另外，还要持续做点 iPaste 推广的事。海外推广依然没有任何有效途径，只是象征性地在 Twitter、Facebook 等渠道发公告，长久的痛啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[iPaste：剪贴板界的一股清流]]></title>
      <url>https://atjason.com/IndieDev/2017-09-19.html</url>
      <content type="html"><![CDATA[<p>iPaste，既是我的第一个 App，也是到目前为止最后一个；为什么呢？</p>
<p>先前，iPaste 只活跃于 Mac 电脑中；<br>现在，我把它带到了 iPhone 手机上。</p>
<p><img src="https://ps.toolinbox.net/iy17z.png" alt=""></p>
<h2 id="0-缘起：我为什么要做-iPaste-for-iOS"><a href="#0-缘起：我为什么要做-iPaste-for-iOS" class="headerlink" title="0) 缘起：我为什么要做 iPaste for iOS?"></a>0) 缘起：我为什么要做 iPaste for iOS?</h2><p>2017 年 7 月 21 日，<a href="https://atjason.com/daily/2017-07-21.html">我正式入坑 iOS 开发</a></p>
<p>要学一门新的编程语言，最好的方式是：边学边用。而纵观我当时已经做的产品（<a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a>、<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>、<a href="https://toolinbox.net/iPic/iPicMover.html" target="_blank" rel="external">iPic Mover</a>、<a href="https://toolinbox.net/iPaste/" target="_blank" rel="external">iPaste</a>、<a href="https://toolinbox.net/iTimer/" target="_blank" rel="external">iTimer</a>、<a href="https://toolinbox.net/iHosts/" target="_blank" rel="external">iHosts</a>），<strong>iPaste 最适合练手 iOS 开发</strong>：产品本身边界清晰，已经有了 macOS 版、可以练习 iOS &amp; macOS 间的数据同步。总之，简直太适合了；于是，就有了你即将看到的产品。</p>
<p>其实还有别的原因。虽说市面上已经有不少剪贴板应用，但还真没有我特别满意的。如果你了解我之前已经做的产品，就会发现 <strong>我特别偏好小巧、简洁的应用</strong>，不喜欢在小小的应用里塞很多功能；不需要的功能总在碍眼，还让交互变复杂，不爽。</p>
<p>那么，<strong>到底我对剪贴板有什么需求，又会把这款应用做成什么样子呢？</strong>且往下看。</p>
<a id="more"></a>
<h2 id="1-我对剪贴板的需求"><a href="#1-我对剪贴板的需求" class="headerlink" title="1) 我对剪贴板的需求"></a>1) 我对剪贴板的需求</h2><p>电脑端 (Mac) 和手机端 (iPhone) 各有不同，下面分别介绍。 </p>
<h3 id="1-0-电脑端的剪贴板"><a href="#1-0-电脑端的剪贴板" class="headerlink" title="1.0) 电脑端的剪贴板"></a>1.0) 电脑端的剪贴板</h3><p>主要有以下三类需求：</p>
<p><img src="https://ps.toolinbox.net/2d9xx.png" alt=""></p>
<p><strong>粘贴最近复制的内容</strong></p>
<ul>
<li>比如，最近在邀请大家参与 iPaste for iOS 的 Test Flight 测试时，我需要从邮件、聊天工具等地方复制呢称、邮箱，然后统一到开发者后台填写。</li>
<li>有了 iPaste，我可以在一个应用中集中复制，然后在后台统一粘贴；无需在应用间频繁切换。</li>
</ul>
<p><strong>粘贴非常常用的内容</strong></p>
<ul>
<li>比如，在开发过程，有些我常用的命令，如：<ul>
<li><code>git co master; git merge dev; git push; git co dev;</code></li>
</ul>
</li>
<li>在 iPaste 中，我可以把它 Pin 起来，从而使用固定的快捷键粘贴。比如按下 <code>Command + Shift + V</code> 显示剪贴板历史、按下 <code>A</code> 粘贴。</li>
</ul>
<p><strong>粘贴时不时用到的内容</strong></p>
<ul>
<li>比如 Emoji 表情。</li>
<li>虽说微信、Telegram 等客户端都有 Emoji 插入的面板，但内容、排列各不相同。而实际上，我常用的 Emoji 表情并不多。</li>
<li>在 iPaste 中，我会把这些常用的表情都放到一个分组中，实际的快捷键顺序是：按下 <code>Command + Shift + V</code> 显示剪贴板历史、按下 <code>Command + A</code> 显示分组、按下 <code>A/B/C/…</code> 粘贴。</li>
</ul>
<p>除了上述三类使用场景，还有一个通用的需求：<strong>高效</strong>。从前面的图可以看出，不同类型的历史都可以通过 <strong>纯快捷键</strong> 快速插入，实际使用效率很高，感觉也很爽。</p>
<h3 id="1-1-手机端的剪贴板"><a href="#1-1-手机端的剪贴板" class="headerlink" title="1.1) 手机端的剪贴板"></a>1.1) 手机端的剪贴板</h3><p>手机端我最常用的需求是：</p>
<p><strong>粘贴时不时用到的内容</strong></p>
<ul>
<li>比如已有产品的技术支持。</li>
<li>由于我有多款产品、每个产品经常收到用户重复性的问题，如：<ul>
<li>为什么使用 iPic 上传 png 图片后变为 jpg 格式（因为微博不支持 png 格式）</li>
<li>Klib 是否会支持导入生词本并导出至 Anki（会）</li>
<li>…</li>
</ul>
</li>
<li>如果是在电脑上，即使没有 iPaste，我依然可以从之前回复过的邮件、聊天记录里复制粘贴，还能忍。</li>
<li>但在手机上，搜索起来很麻烦。如果要手动打字，那更要了亲命；更别说插图了。</li>
<li>有了 iPaste for macOS &amp; iOS，我会先在 iPaste for macOS 上整理常用的问题及回复（毕竟电脑上操作效率高），添加到 iPaste 分组中（一个产品对应一个分组）。这些分组及记录会自动同步至 iPaste for iOS 中，我就可以很轻松地在手机端复制，然后粘贴至微信等聊天工具中。<ul>
<li>用户看到我码这么多字、还回复这么快，会觉得我很诚恳…</li>
</ul>
</li>
</ul>
<p><img src="https://ps.toolinbox.net/bnruj.png" alt=""></p>
<p>另外，在通知中心添加 iPaste 小组件后，可一键复制之前的历史、或者 Pin 中固定的内容，然后快速粘贴到第三方应用中。</p>
<p><img src="https://ps.toolinbox.net/0smqx.png" alt=""></p>
<p>其实，还有个需求；虽然目前的 iPaste 还没来得及实现，不过可以先简单说下。比如在做运营时，我会先设计一张图及对应的文案，然后发朋友圈。目前，必须先通过 AirDrop、微信等工具，先将图片保存到手机中、同步文案，然后在手机微信中手动发朋友圈。整个过程很麻烦。</p>
<p>在今后的 iPaste 中，可以在电脑端先后复制图片和文案后，在手机端选择，然后一键分享。</p>
<h2 id="2-iPad-专有玩法：拖拽"><a href="#2-iPad-专有玩法：拖拽" class="headerlink" title="2) iPad 专有玩法：拖拽"></a>2) iPad 专有玩法：拖拽</h2><p>苹果在 iOS 11 中大大增加了多任务能力，其中一项就是可以在程序间互相拖拽内容。结合 iPaste，还可组合中更多的玩法。</p>
<ul>
<li>拖拽任意内容至 iPaste，自动保存</li>
<li>从 iPaste 中拖拽至你的应用，自动插入</li>
</ul>
<p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fjoyja9mj5g30hu0bmk94.gif" alt=""></p>
<p>比如，比如你在 iPad 上写作，左侧分栏是你心爱的 Markdown 编辑器，右侧分栏是待命的 iPaste，可随时将 iPaste 中记录的常用片断拖拽至左侧编辑器，如联系方式、微信中的打赏二维码、等等。</p>
<p>注：这需要较新的 iPad、并升级至 iOS 11，以支持多任务。</p>
<h2 id="3-多端同步，免费"><a href="#3-多端同步，免费" class="headerlink" title="3) 多端同步，免费"></a>3) 多端同步，免费</h2><p>上面介绍的使用场景，隐含了一个前提：<strong>电脑端和手机端同步剪贴板历史。</strong></p>
<p><img src="https://ps.toolinbox.net/hs9pz.png" alt=""></p>
<p>在实际的开发过程中，<strong>这部分非常复杂</strong>，几乎一半的时间都花在这上面。为了解决同步的数据合并等问题，真是没少掉头发。</p>
<p><strong>从商业的角度，这几乎是最适合收费的点</strong>；市面上类似的软件，无一例外在这点上都是收费的。<strong>但从用户的角度上，是件很难受的事</strong>：我在电脑端要同步到云端，收费？好，我升级。然后在手机上发现还没有同步下来。定睛一看：原来手机端还要再收费？！从开发者的角度，我当然理解这是合理的，毕竟每个平台都花了时间开发。但实际感受，真的不舒服。</p>
<p>想了又想，我还是决定：<strong>使用 iPaste，在任意数量的 iPhone、iPad、Mac 间同步，免费</strong>。</p>
<p>技术上多说一点，云端是 <strong>使用苹果自家的 iCloud 进行同步</strong>。</p>
<ul>
<li>对用户是透明的，也即 <strong>你不需要在 iPaste 中做任何设置，就可以同步</strong>。前提是你在各个设备上使用相同的 iCloud 账户登录，但实际上这几乎是必然的。</li>
<li><strong>关于数据安全，你绝对可以放心</strong>。除了你自己，包括开发者、乔布斯在内的任何人，均无法看到你的剪贴板信息。</li>
<li>关于 <strong>同步速度</strong>，<strong>快的时候，小于 2 秒</strong>。几乎，你在电脑上复制一段话，2 秒内就会同步至手机端。慢的时候，可能会超出你的耐心了。虽然我使用了后端同步、数据压缩等方法，但毕竟核心层面依然依赖于苹果的服务器，我自己实在无法给出承诺。<ul>
<li>如果你对电脑端与手机端共享剪贴板的实时性有要求，建议还是使用苹果自家的 Handoff 功能，虽说在手机端总会卡一卡，但总体还是可用的。</li>
</ul>
</li>
</ul>
<h2 id="4-付费模式"><a href="#4-付费模式" class="headerlink" title="4) 付费模式"></a>4) 付费模式</h2><p>前面既然提到了付费与免费，这里就敞开说一说钱的事。</p>
<p>花了这么多时间做产品，自然是想赚点生活费的（手动二哈）。那付费模式怎么定呢？这是我非常头痛的事；之前也在群里跟用户一直聊过这事，一直也没定下来。</p>
<p>简单比较下不同的付费模式。</p>
<ul>
<li><strong>付费下载</strong><ul>
<li>这个模式开发成本为 0，也即什么都不用做，只要在后台设个价格就可以了。</li>
<li>但，却是非常危险的，因为需要付费才能下载、才能试用，这会挡住很多可能对 iPaste 感兴趣、需要先试一试才能知道自己是否需要的朋友。</li>
<li>对于名气比较大的开发者、团队，可以采用。但对于名不见经传的自己，胆还没这么肥，只能放弃了。</li>
</ul>
</li>
<li><strong>免费试用 + 过期收费</strong><ul>
<li>软件可以免费下载，全功能使用一段时间（如 30 天）。过期后，如果不付费，则功能极度受限（几乎残废）、数据变为只读。</li>
<li>比如，貌似 Omni Focus 就是采用这种模式，过期后只能查看任务，不能添加新任务。</li>
<li>这种模式会让用户觉得很压力，觉得开发者很强势。</li>
</ul>
</li>
<li><strong>免费 + 内购模式</strong><ul>
<li>软件可以免费使用部分功能，内购后解锁全部功能。</li>
<li>这一模式很常见，主要的问题是：升级之前，无法体验。</li>
</ul>
</li>
<li><strong>免费 + 试用 + 内购模式</strong><ul>
<li>在「免费 + 内购」模式的基础上，增加了试用功能。也即，可以在充分体验后，再决定是否升级。</li>
<li>这种模式，<strong>对用户最为友好，但对开发者最不友好</strong>。因为在代码里加各种限制，还要记录用户是否选择试用，等等。就像是一件漂亮完整的衣服上，打了很多补丁。既增加了开发成本，还感觉很难受。</li>
<li><strong>最终，我采用的是这种方式</strong>。死磕自己，愉悦大家。</li>
</ul>
</li>
</ul>
<p><strong>到底哪些功能免费、哪些收费呢？</strong>这里罗列一下：</p>
<table>
<thead>
<tr>
<th>功能点</th>
<th>免费版</th>
<th>高级版</th>
</tr>
</thead>
<tbody>
<tr>
<td>最近历史数量</td>
<td>3</td>
<td>30</td>
</tr>
<tr>
<td>Pin</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>分组数量</td>
<td>1/0*</td>
<td>无限</td>
</tr>
<tr>
<td>分组内记录数</td>
<td>无限</td>
<td>无限</td>
</tr>
<tr>
<td>拖拽(iPad)</td>
<td>✖</td>
<td>✅</td>
</tr>
<tr>
<td>同步</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>其他</td>
<td>✅</td>
<td>✅</td>
</tr>
</tbody>
</table>
<ul>
<li>免费版电脑端支持 1 个分组，手机端不支持。</li>
</ul>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>闭关 60 天，终于奉上了我的第一款 iOS 作品。</p>
<p><a href="https://itunes.apple.com/cn/app/id1277077036?mt=8&amp;at=1000lv4R&amp;ct=iPaste_me" target="_blank" rel="external"><img src="https://ps.toolinbox.net/ufzqr.png" alt=""></a></p>
<p>以及 iPaste for macOS 2.0:</p>
<p><a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_home" target="_blank" rel="external"><img src="https://ps.toolinbox.net/mg17j.png" alt=""></a></p>
<p>（下载后，<strong>还请顺手评个分</strong>，同样期待你的使用体验）</p>
<p>这只是开始。有了这个新技能，以后会有更多精彩的 iOS &amp; macOS 双平台应用，敬请期待。如果你有什么想法、需求，也欢迎联系我：iToolinbox#gmail.com 静候佳音。</p>
<p>号外：我有每天写博客的习惯。如果你感兴趣，可以瞧瞧从 7 月 21 日开始的博客：<a href="https://atjason.com">https://atjason.com</a> 这里，你可以了解 iPaste 从概念到诞生的全过程，最鲜活、最真实的过程；艰难与欣喜，尽在其中。</p>
]]></content>
      
        <categories>
            
            <category> IndieDev </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0918 - 说说 iPaste 的定价模式]]></title>
      <url>https://atjason.com/daily/2017-09-18.html</url>
      <content type="html"><![CDATA[<p>花了这么多时间做产品，自然是想赚点生活费的（手动二哈）。那付费模式怎么定呢？这是我非常头痛的事；之前也在群里跟用户一直聊过这事，一直也没定下来。</p>
<p>简单比较下不同的付费模式。</p>
<ul>
<li><strong>付费下载</strong><ul>
<li>这个模式开发成本为 0，也即什么都不用做，只要在后台设个价格就可以了。</li>
<li>但，却是非常危险的，因为需要付费才能下载、才能试用，这会挡住很多可能对 iPaste 感兴趣、需要先试一试才能知道自己是否需要的朋友。</li>
<li>对于名气比较大的开发者、团队，可以采用。但对于名不见经传的自己，胆还没这么肥，只能放弃了。</li>
</ul>
</li>
<li><strong>免费试用 + 过期收费</strong><ul>
<li>软件可以免费下载，全功能使用一段时间（如 30 天）。过期后，如果不付费，则功能极度受限（几乎残废）、数据变为只读。</li>
<li>比如，貌似 Omni Focus 就是采用这种模式，过期后只能查看任务，不能添加新任务。</li>
<li>这种模式会让用户觉得很压力，觉得开发者很强势。</li>
</ul>
</li>
<li><strong>免费 + 内购模式</strong><ul>
<li>软件可以免费使用部分功能，内购后解锁全部功能。</li>
<li>这一模式很常见，主要的问题是：升级之前，无法体验。</li>
</ul>
</li>
<li><strong>免费 + 试用 + 内购模式</strong><ul>
<li>在「免费 + 内购」模式的基础上，增加了试用功能。也即，可以在充分体验后，再决定是否升级。</li>
<li>这种模式，<strong>对用户最为友好，但对开发者最不友好</strong>。因为在代码里加各种限制，还要记录用户是否选择试用，等等。就像是一件漂亮完整的衣服上，打了很多补丁。既增加了开发成本，还感觉很难受。</li>
<li><strong>最终，我采用的是这种方式</strong>。死磕自己，愉悦大家。</li>
</ul>
</li>
</ul>
<p><strong>到底哪些功能免费、哪些收费呢？</strong>这里罗列一下：</p>
<table>
<thead>
<tr>
<th>功能点</th>
<th>免费版</th>
<th>高级版</th>
</tr>
</thead>
<tbody>
<tr>
<td>最近历史数量</td>
<td>3</td>
<td>30</td>
</tr>
<tr>
<td>分组数量</td>
<td>1/0*</td>
<td>无限</td>
</tr>
<tr>
<td>分组内记录数</td>
<td>无限</td>
<td>无限</td>
</tr>
<tr>
<td>拖拽(iPad)</td>
<td>✖</td>
<td>✅</td>
</tr>
<tr>
<td>同步</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>其他</td>
<td>✅</td>
<td>✅</td>
</tr>
</tbody>
</table>
<ul>
<li>免费版电脑端支持 1 个分组，手机端不支持。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0917 - 切换至生活模式]]></title>
      <url>https://atjason.com/daily/2017-09-17.html</url>
      <content type="html"><![CDATA[<p>持续忙了这么多天，真是有些累了。</p>
<p>今天切换到生活模式，跟家人一起去了自然博物馆，然后坐船回来，难得安逸一把。</p>
<p>不知道是抱了一天娃累的，还是精神放松下来后，更感觉到累了。晚上 8 点哄娃睡觉，结果自己也睡着了。11 点醒来洗个澡，一觉睡到早上 8 点，真是睡爽了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0916 - Today Widget 是个孱弱的家伙]]></title>
      <url>https://atjason.com/daily/2017-09-16.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/h34q1.jpg" alt=""></p>
<p>今天美好的大半天，都献给了上面的家伙。</p>
<p>基本上，出现这个问题主要有 2 个原因：程序闪退、内存超限。</p>
<p>程序闪退，看似是程序本身的问题，但实际上和 Today Widget 的生命周期有关。Today Widget 基本上是个很弱的家伙，或者说，尽量少的在 Today Widget 中做事情、尽量避免后台任务，尤其是，和 UI 相关的后台任务。因为，当后台任务终于忙完、要更新 UI 时，可能 UI 已经被系统释放了，这里自然就闪退了。</p>
<p>内存超限方面：</p>
<ul>
<li>内存上限是多少呢？这个苹果并没有官方文档说明。从网上搜到的资料，多数说是总内存的 1%，比如对于 iPhone 6 是 10 MB，很小的值。仅供参考。</li>
<li>在我这边，最直接就是 Core Data 造成的。Core Data 在内存使用方面是很慷慨乃至滥用的。只要一启动，就占用 4+ MB 内存，很大了。另外，Core Data 的内存对象释放机制也很不明确，我试了网上找的很多所谓优化，并没有很明显的下降；还有很多人通过测试验证 Core Data 有 Bug</li>
<li>还是后台任务方面。其中我有一个操作：从 CloudKit 下载数据。这在大部分情况下都是没有问题的。但，在程序最开始运行时，会从网络下载大量数据，这时程序就崩溃了。</li>
</ul>
<p>关键的，一旦 Today Widget 崩溃，基本很难恢复（对于我的程序而言），基本只能靠重启手机来重置。一旦用户发生此类问题，会非常难受。折腾了很久，我也没有很好的解决这个问题，只是尽量降低出现的概率，继续观察吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0915 - 宁愿写代码，不愿写文案]]></title>
      <url>https://atjason.com/daily/2017-09-15.html</url>
      <content type="html"><![CDATA[<p>iPaste 开发的差不多了，要提交到 App Store 了。于是，迎来了一个非常头大的事：准备媒体素材，如文案、截图、演示视频、等等。</p>
<p>其中，最最麻烦的是视频。要事先准备好视频中呈现的内容，演算好操作步骤、及各个步骤预期的结果。录制视频后，还要精确剪辑至 30s 内，且按照 App Store 的要求导出。</p>
<p>在实际操作时，在编辑视频时，在使用 QuickTime 导出时，这货最多导出 1080p 的视频。注意，是 1920 <em> 1080，而不支持 1080 </em> 1920 分辨率。也即，对于手机竖屏录制得到的 1080 * 1920，其仅能导出至 608 × 1080 分辨率。我使用了 ffmpeg 提升分辨率，可以尝试提交至 App Store，但总是失败。折腾了几次，暂时搁置了。</p>
<hr>
<p><img src="https://ps.toolinbox.net/hnkpn.jpg" alt=""></p>
<p>其次，最麻烦的是截图。关键的，是要构思出要展现产品的哪些方面；进而，很巧妙地将这些因素展现在最多 5 张截图中，要能在几秒内吸引用户，尤其是手机默认仅能展现前 2 张图。最后，还要根据尺寸要求进行调整，至少要制作 iPhone 和 iPad 两套图。</p>
<hr>
<p>文案也是讲究的；不过，相对于楼上二者，算是最简单的了。</p>
<p>Anyway，今天终于提交发布候选版了，心里松了一口气。明天继续努力，提交 iPaste for macOS；后天，好好好好好好放松下，最近持续紧张，真是有点累了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0914 - 辛苦良久，只为这一句]]></title>
      <url>https://atjason.com/daily/2017-09-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/z0jrz.PNG" alt=""></p>
<p>经过多日的研究，经过大量的测试，终于可以放心地说这么一句：</p>
<blockquote>
<p>在 iPhone、iPad 和 Mac 间同步。</p>
</blockquote>
<p>作为基础服务，iPaste 会免费提供同步功能。同步服务使用的是 CloudKit (也即 iCloud)</p>
<ul>
<li>数据安全可以放心，除了你自己，任何人（包括我）都无法看到你的数据。</li>
<li>同步速度方面，快的时候很快，基本 &lt; 3s 就可在设备间同步。但由于苹果服务器在国内的表现，大家都懂的，有概率的。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0913 - 悲伤是厚重的，幸福是欢快的]]></title>
      <url>https://atjason.com/daily/2017-09-13.html</url>
      <content type="html"><![CDATA[<p>只有厚重，才能承载更多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0912 - 做了一天正确、但很讨厌的事]]></title>
      <url>https://atjason.com/daily/2017-09-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lw3qq.PNG" alt=""></p>
<p>没错，就是内购。</p>
<p>好端端的一个产品，非得加各种让人难受的限制，以期让用户付费升级，这真是非常低劣的玩法。</p>
<p>不止在于表面的交互，代码里也得加各种奇怪的逻辑。写这样的代码，就感觉是在浪费生命。</p>
<p>如果以后我足够知名、强硬了，一定会摒弃免费 + 内购这种模式，直接上付费下载，或者免费 + 捐赠，或者直接订阅。</p>
<p>要是能把时间都花在纯粹有价值的事上，多好啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0911 - 全才才能生存的社会，不够成熟]]></title>
      <url>https://atjason.com/daily/2017-09-11.html</url>
      <content type="html"><![CDATA[<p>前两天一位创业程序员，被前女友逼得跳楼的消息，火爆了网络。</p>
<p>其中一个观察的视角是，这位程序员情商太低，不然不会走到跳楼的地步。虽然很无情，但我基本是认同这个说法的。</p>
<p>但，我又不是很认同这种现状。也即，一位程序员，即便是位天才程序员，也需要在情商、社交等等编程之外的领域，不至于太差，才能在社会上「活」下去。这样的「活」，对人的要求未免太高了。</p>
<p>相比之下，可能生物界的进化更充分些。比如，我问什么动物跑得最快，多数人才能回答出来是猎豹。对，猎豹正是这一招鲜，让它得以生存，且博得美名。正是因为一招鲜就可以活下去，它就可以尽可能地向这方向进化，包括身体的各个部分。反之，如果自然环境同时需要它像羚羊一样有耐力，那它一定抓不到羚羊，甚至饿死。</p>
<p>当然，猎豹肯定不止奔跑这一项技能，还需要伪装等等技能，但这只是个例子。我相信，随着进化的加深，某些能力会进一步加强，而其它能力会进一步退化。关键的，这一进一退，能让它更从容地适应自然。</p>
<p>对应于人类社会，我想道理是相通的。现在我们还经常听到「全栈」、「综合能力」等等词汇，但我觉得这是人类进化不够充分的体现。一方面，可能今后更多的能力会变成基本技能，就像呼吸一样不会被人提起。另一方面，一招鲜会更有市场。</p>
<p>还有个角度，从人类整体而言，并不需要一堆能力平平的通才，而需要一个个在某方面极其突出的专才。这样，累加起来的能力总和才最大。比如，不需要一堆有爱因斯坦 99% 的能力、但又会长跑的科学家，而更需要 100%、甚至 200% 的爱因斯坦。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0910 - iPaste 搞定数据压缩]]></title>
      <url>https://atjason.com/daily/2017-09-10.html</url>
      <content type="html"><![CDATA[<p>在 iPaste 数据结构中，有个很重要的环节：<strong>压缩数据</strong>（即剪贴板内容）；鬼使神差的，竟然一直没有做。在准备发 Beta 2 时，做吧。</p>
<p>简单了解下后，发现Apple 内置了 <a href="https://developer.apple.com/documentation/compression/data_compression" target="_blank" rel="external">libcompression library</a> 压缩库。而且，也有一些使用 Swift 的封装，比如 <a href="https://github.com/leemorgan/NSData-Compression" target="_blank" rel="external">NSData-Compression</a> 和 <a href="https://github.com/mw99/DataCompression" target="_blank" rel="external">DataCompression</a>；我使用了后者，不过应该差不多。</p>
<p>进一步，这个库中包含了 <strong>4 种压缩算法：</strong></p>
<ul>
<li>LZFSE</li>
<li>LZ4</li>
<li>LZMA</li>
<li>ZLIB</li>
</ul>
<p><strong>如何选择呢？</strong>苹果也给出了官方建议：</p>
<blockquote>
<p>Choice of Compression Algorithm:</p>
<ul>
<li>Use LZ4 if speed is critical, and you are willing to sacrifice compression ratio to achieve it.</li>
<li>Use LZMA if compression ratio is critical, and you are willing to sacrifice speed to achieve it. Note that - LZMA is an order of magnitude slower for both compression and decompression than other choices.</li>
<li>Otherwise, if speed and compression are more or less equally important, use LZFSE unless you require interoperability with non-Apple devices. If you do require interoperability with non-Apple devices, use ZLIB.</li>
<li>LZFSE is faster than ZLIB, and generally achieves a better compression ratio. However, it is slower than LZ4 and does not compress as well as LZMA, so you will still want to use LZ4 if speed is critical or LZMA if compression ratio is critical.</li>
</ul>
</blockquote>
<p>简单的说：</p>
<p>**- LZMA 压缩效果最好</p>
<ul>
<li>LZ4 压缩速度最快</li>
<li>LZFSE 是苹果自己开发的、综合表现好</li>
<li>ZLIB 应该被 LZFSE 取代**</li>
</ul>
<p>当然，不能道听途说，我也拿自己的实践数据测试了一把：</p>
<p><img src="https://ps.toolinbox.net/u15ed.jpg" alt=""></p>
<p>最后，我选择了苹果自己的 <strong>LZFSE</strong> 压缩算法。</p>
<p>除了压缩本身，还有件很重要的事：<strong>兼容已有的、未压缩的数据</strong>。事实上也还算好做，关键是有一点：如果数据未压缩，解压是无法得到有效数据。这一点可以用于区分数据是否压缩，而暂时不用添加 v1/v2 这样的数据结构版本号。</p>
<p>再次得到教训：<strong>优先做数据结构相关的事情</strong>。等数据结构做完善、做稳定了，UI、业务逻辑等内容，随意换。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0909 - iPaste Beta 2 基本搞定，心下稍安]]></title>
      <url>https://atjason.com/daily/2017-09-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjdqci802vg30f00du176.gif" alt=""></p>
<p>上午搞定了 Today Extension 剩余部分，最喜欢的就是上图中的切换列表的交互。至少我是没在别的应用中见到，这个微微的创新，让我有些开心。</p>
<p>下午搞定了目前已知的较严重的问题，以目前的状态，基本可以发 Beta 2 了，预计在下周，苹果发布会之前。</p>
<p>接下来最麻烦的就是内购模式了，想了好几种模式，也跟用户深入讨论过，依然没有确定。哎，收个钱，咋就这么难？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0908 - Today > Today Extension]]></title>
      <url>https://atjason.com/daily/2017-09-08.html</url>
      <content type="html"><![CDATA[<p>今天鼓捣了一天 Today Extension，搞定了大部分。本打算熬夜搞定的，无奈太晚了，明天继续吧。今天就不放图了，明天搞完了再一起放。</p>
<p>做的过程中，首先有点吃惊的是，Extension 和主程序几乎就是两个完全独立的程序。要互相通信，主要还是通过 App Group 来实现。目前，我主要是使用了公共 UserDefaults 和 CoreData；其中，在使用公共 CoreData 时，我有些犹豫，主要不想把 Today Extension 的功能和代码变得太复杂。后来，为了可能的在 Today Extension 中搜索，没抵挡这个诱惑，还是公用了。</p>
<p>开发上主要是两点。一是尽量减小资源消耗，尤其是尽量避免不必要的数据请求、速度快，这对于 Today Extension 的简洁交互方式，非常重要。</p>
<p>另一点，就是要美观。比如，颜色之类的，尽量和系统融合。如果有界面变化，使用必要的动画。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0907 - 打磨产品的感觉，真好]]></title>
      <url>https://atjason.com/daily/2017-09-07.html</url>
      <content type="html"><![CDATA[<p>今天暂停了运营工作，重新开始写代码。</p>
<p>改了几个之前明显不能忍的 Bug 后，看着流畅运行的 iPaste，心里畅快多了。</p>
<p>对于如何避免 Universal Pasteboard 所带来的重复历史、内购收费的策略这几个比较大的问题，也大致有了思绪。</p>
<p>目标：争取 9.19 发布 iPaste for iOS 1.0 &amp; iPaste for macOS 2.0</p>
<hr>
<p>另外，在 macOS 10.13 上测试了自己目前的产品，没有发现新问题，松了一口气。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0906 - 谢谢各位参与 iPaste for iOS 内测的朋友]]></title>
      <url>https://atjason.com/daily/2017-09-06.html</url>
      <content type="html"><![CDATA[<p>其实，这只是 iPaste for iOS 的首次面世，我也知道有已知的问题，所以并不打算大规模介绍，只是小范围的先试试，发现可能的问题，解决掉。等产品稳定了、更好用了，再更多的推广。</p>
<p>可没想到，收到了好久要测试的邮件。甚至，我都不知道「最美应用」这样的媒体是怎么找到消息的、并在微博上发布了，我只好被动地在自己的微博上发了通告。</p>
<p>另外，由于之前没料想到有这么多的要测试的朋友，之前只是留了邮箱、发邮件即可。这可苦了我了，手动复制 100 多年邮件地址。另外，真忙搞了个腾讯问卷。这样，大家可以在问卷中留下邮箱，我在后台导出来 csv 文件，进而导入 Test Flight 的后台，免去手动复制的麻烦。</p>
<p>由于折腾这些事情，今天并没有做真正的开发。明天会停止这些运营活动，先修复发现的较严重的问题，然后开发 Today Widget. 至于发布日期，还没想好，可能得 9.12 苹果发布会之后的一两周吧。</p>
<hr>
<p>如果你刚刚了解到 iPaste for iOS，可以在 <a href="https://atjason.com/daily/2017-09-05.html">这里</a> 了解，感兴趣可以在 <a href="https://wj.qq.com/s/1540447/7100/" target="_blank" rel="external">这里</a> 留下邮箱以参与 Test Flight 内测。</p>
<p>最后，凡是参与内测的朋友，真诚地等待你们的使用体验，尤其是不满意的地方，让我们一起把这款产品做得简洁好用。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0905 - iPaste for iOS 面世]]></title>
      <url>https://atjason.com/daily/2017-09-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/wvley.png" alt=""></p>
<p><strong>iPaste for iOS</strong> 低调发布于 Test Flight：</p>
<ul>
<li>自动记录剪贴板历史</li>
<li>可手动添加、编辑历史，方便之后粘贴</li>
<li>支持纯文本、图片、图文混排、文件（暂不支持文件夹）</li>
<li>可使用分组管理历史</li>
<li>…</li>
</ul>
<p><strong>【重磅 1】支持拖拽</strong></p>
<p>场景：比如你在 iPad 上写作，左侧分栏是你心爱的 Markdown 编辑器，右侧分栏是待命的 iPaste，可随时将 iPaste 中记录的常用片断拖拽至左侧编辑器，如联系方式、微信中的打赏二维码、等等。示意如下：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fiqkr3132vg30jg0ekb2f.gif" alt=""></p>
<p>注：由于我这个是 iPad min 2，不支持左右两栏同时存在，故而操作看起来有些麻烦。如果你的 iPad 较新、支持两栏并存，会更舒爽。</p>
<p>前提：较新的 iPad + iOS 11.</p>
<p><strong>【重磅 2】在不同设备间同步</strong></p>
<p>场景：由于我有多款产品，每个产品经常收到用户重复性的问题，如为什么使用 iPic 上传 png 图片后变为 jpg 格式（因为微博不支持 png 格式）、Klib 是否会支持导入生词本并导出至 Anki（会）、等等。</p>
<p>要在微信上码字回答很麻烦，我会在 Mac 上将常用的回复分组添加到 iPaste 中（毕竟电脑上操作效率高），在 iPaste for iOS 中复制后粘贴至微信等聊天工具中。用户看到我码这么多字、还回复这么快，会觉得我很诚恳…</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fj8hdw0ynsj30b40jr74f.jpg" alt=""></p>
<hr>
<p>感兴趣 <a href="https://wj.qq.com/s/1540447/7100/" target="_blank" rel="external">在此留下邮箱</a>，即可加入 Test Flight 测试。</p>
<p>倾心打磨，只为你用着舒爽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0904 - 疲惫 + 混沌]]></title>
      <url>https://atjason.com/daily/2017-09-04.html</url>
      <content type="html"><![CDATA[<p>疲惫中，提交了 Test Flight 审核；<br>混沌中，继续修复新发现的问题。</p>
<p>忍不住在想，这么折腾之后的产品，到底是否被需要？好像想的有些晚了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0903 - Firebase Analytics PK Google Analytics]]></title>
      <url>https://atjason.com/daily/2017-09-03.html</url>
      <content type="html"><![CDATA[<p>之前一直是使用 Google Analytics，无奈 Google 已经禁止移动版的 Google Analytics，全面让位于 Firebase Analytics；于是，在 iPaste for iOS 中，只能选择后者了。</p>
<p>万万没想到，作为继任者的 Firebase Analytics，在 Event 方面远不如其父辈：</p>
<ul>
<li>数据更新慢，目测要 4+ 个小时。在这开始时很要命，因为第一次接触 Firebase，总要多试试才能摸清楚。可试一把就要 4+ 个小时，怒火中烧~</li>
<li>不支持没有实时事件。虽说有开发者模式，但明显差很多。</li>
<li>不支持 Category/Event/Label 分类，这个应该是最不方便的。<ul>
<li>最终，我是使用 <code>AnalyticsEventSelectContent</code> 中的 <code>AnalyticsParameterContentType</code> 和 <code>AnalyticsParameterItemID</code>，够强实现了二级分类的 Event.</li>
</ul>
</li>
<li>不支持页面跳转流。</li>
<li>报表简陋。<ul>
<li>比如不支持自定义 Dashboard.</li>
<li>即使是内置的 Parameter，都无法完全显示在报表中；而自定义的 Parameter，则想当别想了。目测导入 BigQuery 是可以看到的，但目测麻烦、且要钱。</li>
</ul>
</li>
<li>会带来网络请求。这是废话，关键的是，我想延迟网络请求直到用户手动操作，这样 iOS 弹出网络授权时，用户更不可能拒绝。稍后再想想怎么优化。</li>
</ul>
<p>当然，还有有些好处的：</p>
<ul>
<li>可以自定义用户属性。<ul>
<li>比如，可以用于区分开发环境和生产环境、是否曾参加 TestFlight 测试。</li>
</ul>
</li>
<li>生成漏斗报表更方便。比如付费转化率。</li>
<li>Firebase 内置 Crash Report，这个有用。</li>
<li>如果集成了 Ad 模块，可以识别出更多用户画像，比如年龄段、爱好、等等。不过，会让 AppStore 审核更严格。</li>
</ul>
<p>才刚刚接触 Firebase，后续还有很多要学习研究的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0902 - Preferences & Permission]]></title>
      <url>https://atjason.com/daily/2017-09-02.html</url>
      <content type="html"><![CDATA[<p>在 iPaste 的外围功能中，今天主要搞定了 Preferences &amp; Permission.</p>
<p>Preferences 方面，由于目前主要是静态的功能，于是采用了 UITableViewController，基于 UITableView 使用 Static Cells 模式，手动添加一个个选项。其它一些细节：</p>
<ul>
<li>使用 <code>SFSafariViewController</code> 在应用内打开网页，不至于跳出应用。</li>
<li>使用 <code>MFMailComposeViewController</code> 发送反馈邮件。</li>
<li>当系统未配置邮箱时，打开网页进行反馈。</li>
</ul>
<p>Permission 方面，目前 iPaste 仅使用了网络权限。主要要注意的点：</p>
<ul>
<li>在应用启动时，避免一切网络请求。仅当用户有手动操作时，才请求网络。主要的好处是：不至于首次打开应用，就被提示要授权网络连接。</li>
<li>封装检测当前应用是否可以访问的方法。对于重要的网络请求，先检测网络是否通畅。</li>
<li>实际测试有些麻烦。因为 iOS 仅在用户首次运行时才弹出授权申请，要重置就要重置所有应用的权限，卸载程序都不行。感觉真的很不友好。</li>
</ul>
<hr>
<p>另外，我一直觉得应用应该尽量减少配置项，今天碰到法理依据了：</p>
<p><img src="https://ps.toolinbox.net/py5z4.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0901 - 虽已马不停蹄，无奈时光飞逝]]></title>
      <url>https://atjason.com/daily/2017-09-01.html</url>
      <content type="html"><![CDATA[<p>以下为 8 月计划：</p>
<ul>
<li>发布 iPaste for macOS 2.0</li>
<li>发布 iPaste for iOS 1.0</li>
<li>二者数据可以相互同步</li>
</ul>
<p>转眼已是 9 月。</p>
<p>回顾 8 月，虽然一直在忙碌，无奈自己太过浅薄，要学的东西太多，以至于并未完成原先看起来并不复杂的计划，一声嗟叹。</p>
<p>无奈，将 8 月计划照搬至 9 月：</p>
<ul>
<li>（争取）发布 iPaste for macOS 2.0</li>
<li>（争取）发布 iPaste for iOS 1.0</li>
<li>已有产品适配 macOS 10.13</li>
</ul>
<p>但愿时光停止。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0831 - 每晚放松一刻]]></title>
      <url>https://atjason.com/daily/2017-08-31.html</url>
      <content type="html"><![CDATA[<p>最近养成了个习惯：每晚下楼，边走边听小说。</p>
<p>借小说中描述的世界，放空大脑，缓解一天的疲惫，效果还不错。顺便还能稍微锻炼下身体，吹吹凉风，舒服。</p>
<p>大脑这家伙，是挺奇怪的，你专门休息，它丫还是会在潜意识里思考东西，有好有坏吧。好的是，可以不经意想想出问题的答案。坏的是，你真的想休息时，它丫还在干活。没办法，只有给它点别的信息处理，它才会不得已放下先前思考的东西。</p>
<p>最近在听的是《间客》，是之前听过的《庆余年》作者猫腻所著，其实还是能听出很多共通的东西，毕竟同一个的框架、模式、套路，总有相似的痕迹。昨天听的打斗的场景有意思的，今天的部分一般般了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0830 - 迂回于 Swift 包管理]]></title>
      <url>https://atjason.com/daily/2017-08-30.html</url>
      <content type="html"><![CDATA[<p>今天又折腾了下 Swift 包管理。</p>
<p>目前是用 CocoaPods，其实也没太大问题，但总觉得 <strong>对代码的侵入太强</strong>。这不，iPaste for iOS 起了个新项目，想换个清爽点的，于是就又折腾了下。</p>
<p>除了 Pod，主要有 2 个选择：<strong>Carthage</strong> 和 <strong>Swift Package Manager</strong>. 后者现在还太嫩，仅适合 Swift 项目，很多第三方并不支持，遂放弃。</p>
<p>那就来到了 Carthage；其实 <strong>Carthage</strong> 并不复杂，<strong>实质是下载第三方库的源码、本地编译为 Frameworks. 剩下的事情，就要开发者自己手动操作了。</strong>其实手动也没什么，就是把 Frameworks 作为 Linked Frameworks 加入项目中，并在编译时复制入 .app. </p>
<p><strong>为什么不用 Embeded 方式呢？</strong>因为毕竟第三方库是会变的，如果用 Embeded 相当于写死了版本，后续升级时有些麻烦。当然，也是可行的。</p>
<p>这里就可以看出 <strong>Pod 和 Carthage 的二点不同</strong>：</p>
<ul>
<li><strong>Pod 实质是使用源代码集成</strong><ul>
<li>好处：在写代码时可以方便跳转至第三方库的源码中</li>
<li>坏处：编译速度慢，尤其是全新编译或打包时</li>
</ul>
</li>
<li><strong>Carthage 实质是使用 Framework 集成</strong><ul>
<li>好处与坏处，正好与 Pod 相反</li>
<li>不过，在集成 dYMS 后，也可以在调试期间跳入第三方库的源码中，但依然不能在写代码时跳转</li>
</ul>
</li>
</ul>
<p>Carthage 这里有个坑：<strong>Swift 编译器版本</strong>。</p>
<ul>
<li>如果你电脑上仅有一个 Xcode，没什么问题。而如果你同时安装了 Xcode Beta、又恰巧要为 Xcode Beta 的项目添加依赖，就有问题了。</li>
<li>Carthage 默认是用 <code>xcrun swift --version</code> 所得到的 Swift 版本进行编译的。而默认情况下，这个肯定是 Xcode 而非 Xcode Beta 的运行环境。再来个而，Swift 3.2 的项目，是无法引用 Swift 3.1 编译器编译出来的 Frameworks 的。</li>
<li>解决方案也很直接，使用 Xcode Beta 中的编译器即可。只是，貌似 Carthage 并没有相关的参数方便地切换（比如，我试了 <code>TOOLCHAINS=com.apple.dt.toolchain.Swift_3_2 carthage update --platform iOS</code> 来指定 Swift 编译器版本，不过貌似并没有干活），最后比较土的先将 Swift 默认编译器改为 Xcode Beta 版本，编译后再改回来。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo xcode-select -s /Applications/Xcode-beta.app/Contents/Developer</div><div class="line">carthage update --platform iOS</div><div class="line">sudo xcode-select -s /Applications/Xcode.app/Contents/Developer</div></pre></td></tr></table></figure>
<p>Carthage 这么简洁美好，<strong>万万没想到，最后还是倒入了 Pod 的怀抱。</strong></p>
<p><strong>因为 Firebase 只支持 Pod 方式集成？！</strong></p>
<p>根本原因是，<strong>Firebase 并没有完全开源，部分代码只能用静态库的方式发布</strong>。而 Carthage 目前对静态库的支持并不好（虽然网上也有人成功了，但毕竟不是官方支持，有些麻烦，放弃了）</p>
<p>早说嘛，我就不折腾 Carthage 了，何必呢？</p>
<p>另外，还折腾了 <strong>iOS 与 macOS 项目间共享代码</strong>。因为我不想将二者放在一个工程里，怕同时调试时麻烦，就分为 2 个项目了。现在看来，主要有如下方式集成：</p>
<ul>
<li>创建本地 Pod 项目<ul>
<li>好处是可以方便跳入源码，道理和上面介绍的一样</li>
<li>坏处是，创建本地 Pod 项目，麻烦啊</li>
<li><strong>最后，还是用了这个方式</strong></li>
</ul>
</li>
<li>使用 Frameworks + Carthage 集成<ul>
<li>好处是集成简单</li>
<li>坏处也是 Carthage 本身的限制：看源码麻烦</li>
</ul>
</li>
<li>共享相同的源码文件<ul>
<li>由于我是自己写代码，不需要和别人共享，这也不失为一条路。</li>
<li>而且，这个方式最简单。</li>
</ul>
</li>
</ul>
<p>总算，这事有了结论，明天可以静心地优化 iOS 与 macOS 间的数据同步了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0829 - macOS 与 iOS，从此在一起]]></title>
      <url>https://atjason.com/daily/2017-08-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fj0znz17mcg30js092n6l.gif" alt=""></p>
<p>今天进展挺顺序，既实现了 macOS 数据结构升级为 Core Data，还基本实现了 CloudKit 同步，进而可以在多台 Mac、iPhone 等设备间同步。</p>
<p>不过，剩下的事还有很多，单单是增强同步的可靠性，就要做很多工作，明天争取把这部分搞定。</p>
<p>另外，一个有点麻烦的是，iOS 与 macOS 的库管理，以及如何共享代码。目前使用的是 Pod 来管理库，但总觉得对代码的侵入太强。了解下多个同类的方案，选个清爽点的吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0828 - 软件的技术支持成本]]></title>
      <url>https://atjason.com/daily/2017-08-28.html</url>
      <content type="html"><![CDATA[<p>如果我宣布：我的某款应用，永远不会再更新，你还会买吗？</p>
<p>正常情况下，潜在用户肯定是会犹豫的。如果不会，说明你是需要、希望应用有维护的。接下来的问题是：你觉得服务该如何定价？如何收费呢？别告诉你觉得开发者有义务免费更新，就是跟公司觉得你有义务免费加班是一个逻辑。</p>
<p>有朋友说，对于不太需要更新的应用，有没有技术支持问题不大。是这样没错，但也不是绝对。就拿工具型应用来说，即使在 iOS 10 能完美运行，也不能保证在 iOS 11 依然正常。</p>
<p>即使身处 App 的世界，我们还是不太适应 App 的生命周期，还是习惯性像理解一件 T 恤这种简单商品一样，理解 App 以及 App 的维护成本。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0827 - 踏实做事，心里才踏实]]></title>
      <url>https://atjason.com/daily/2017-08-27.html</url>
      <content type="html"><![CDATA[<p>状态好的时候，总是急功冒进、想要一日千里，可这样容易为以后埋下隐患。</p>
<p>状态不好的时候，硬着头皮也要向前拱，再慢也不要停下来。</p>
<p>其实很像长跑。开始的时候体力好，但不能冲得太猛，不然体力消耗太大。遇到极点时，咬牙坚持，过了难受的状态，就会好好多。</p>
<p>Keep on moving.</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0826 - 事情多到让人绝望啊]]></title>
      <url>https://atjason.com/daily/2017-08-26.html</url>
      <content type="html"><![CDATA[<p>8 月真是个混沌的日子，一直在忙碌，事情却总也做不完，甚至都没怎么变少，哎…</p>
<p>本打算 9 月初发布新 iPaste，现在看起来明显无望了。难道要推迟到 10 月份？本来就是个练手的项目，没想到花了这么多时间。</p>
<p>不过，主要还是自己不熟、不会的东西太多，与其说是在做产品，不如说是在学习新技术。既然如此，硬着头皮上吧。无论如何，把这个产品做完，把该学的技术学好。以后的事，以后再说。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0825 - 最佳实践，必是简洁优雅]]></title>
      <url>https://atjason.com/daily/2017-08-25.html</url>
      <content type="html"><![CDATA[<p>今天本打算实现这个功能：打开 iPaste 时，展示最近的剪贴板历史、而非分组列表。</p>
<p>作为一个 iOS 开发的入门者，脑子里迸出的第一种做法，便是将历史列表页作为起始页。可是，这会打乱原本的跳转逻辑，还带来一堆额外的问题。折腾半天，未果。</p>
<p>在搜索过程中，发现了 <a href="https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/PreservingandRestoringState.html" target="_blank" rel="external">Preserving and Restoring State</a>，又试了试系统的自带的 Notes 应用，哇，这不就是我要的吗？退出重启后，能记录并打开上次退出时的页面，体验很棒。</p>
<p>于是，照着教程和 <a href="https://developer.apple.com/library/content/samplecode/StateRestore/Introduction/Intro.html#//apple_ref/doc/uid/DTS40013190" target="_blank" rel="external">示例项目</a> 三下五除二就实现了这个功能。开心。</p>
<p>以后，一旦遇到实现的方法很 Ugly，要小心，很可能不是最佳实践；倒回来，重新做。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0824 - 提出正确的问题]]></title>
      <url>https://atjason.com/daily/2017-08-24.html</url>
      <content type="html"><![CDATA[<p>举个例子：</p>
<ul>
<li>我不知道如何让 UICollectionView 只显示一列，网上搜索了半天也没搞定。</li>
<li>后来想，既然是想显示一列，为什么不用 UITableView 呢？</li>
<li>转向 UITableView 后，也没有很快搞定。又想，其实是想动态添加元素，干嘛不直接使用 addSubView 的方式？</li>
</ul>
<p>以上的例子，有造作的成分。不过，在现实工作中，常常遇见类似的情况：我们沉迷于一个问题、久久无法解决时，或许应该跳出来想想，最终要解决的是什么问题？自己所纠结的「问题」，真的是问题本身吗？条条大路通罗马，我们可能忙于研究修路的技术难点，却没想过直接用现成的路过去。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0823 - 如何走出状态低谷？]]></title>
      <url>https://atjason.com/daily/2017-08-23.html</url>
      <content type="html"><![CDATA[<p>程序员这种略带创造性的工作，对自己状态的要求是很高的。不可能一直保持高效的状态，如何早些从低谷中走出来，才是必备技能。</p>
<ul>
<li>时间<ul>
<li>这是最靠谱的办法，让时间来自愈。</li>
</ul>
</li>
<li>睡觉<ul>
<li>充分的休息，能让人焕然一新。</li>
</ul>
</li>
<li>环境<ul>
<li>换个环境，用环境中的新鲜事务来刺激自己。</li>
</ul>
</li>
<li>成就<ul>
<li>找个喜欢的事，做出点成绩，用成绩来激励自己。</li>
</ul>
</li>
</ul>
<p>核心的，还是自己。但由于自己不能把自己举起来，故而需要借助环境的力量。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0822 - 抓住现金牛，还是投资潜力股]]></title>
      <url>https://atjason.com/daily/2017-08-22.html</url>
      <content type="html"><![CDATA[<p>也即，短期利益和长期收益的平衡。</p>
<p>如果只顾眼下，起码可以活下去，但却可能失去未来某个热门的门票；<br>而只顾未来，却可能撑不到未来。</p>
<p>看起来像是绕口令、玄学，却真实发生在自己身上。到底是改进已有的产品，多赚点钱。还是尽早抛弃鸡肋、寻找鸭腿？尤其是当今天开始一点点浸入灰产、得知某些钱来得很容易时，变得更摇摆：还有必要像之前一样死磕小众，还是大步向钱看？</p>
<p>Who knows, god knows.</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0821 - 我是如何免费为自己的产品制作 Gif 动图的]]></title>
      <url>https://atjason.com/daily/2017-08-21.html</url>
      <content type="html"><![CDATA[<p>不断有朋友问：</p>
<blockquote>
<p>你是怎么做 Gif 的？画质不错，文件也不大。<br>用什么 app 录制的？好顺滑的录屏。<br>…</p>
</blockquote>
<p>真有那么神吗？其实我觉得还好啦。大家可以到我的网站上看看效果，比如：</p>
<ul>
<li><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">https://toolinbox.net/Klib/</a></li>
<li><a href="https://toolinbox.net/iPic/" target="_blank" rel="external">https://toolinbox.net/iPic/</a></li>
</ul>
<p>Anyway，今天我就分享下自己私藏的小秘密。其实也很简单，就是以下三步（基于 macOS 平台）：</p>
<h2 id="1-使用-QuickTime-Player-录屏"><a href="#1-使用-QuickTime-Player-录屏" class="headerlink" title="1. 使用 QuickTime Player 录屏"></a>1. 使用 QuickTime Player 录屏</h2><p><img src="https://ps.toolinbox.net/nabez.jpg" alt=""></p>
<p>其实 macOS 自带的 QuickTime Player 录屏效果还是挺不错的，使用起来也简单：启动后在菜单中选择即可，或者使用 <code>Command + Ctrl + N</code> 快捷键。</p>
<p><img src="https://ps.toolinbox.net/kh87c.jpg" alt=""></p>
<p>这一方式个好处：<strong>录屏时可以包含状态栏</strong>。因为我知道一些工具其实是不支持录制状态栏的，而我的几款产品恰好都是基于菜单栏的，故有此一说。</p>
<h2 id="2-使用-QuickTime-Player-编辑视频"><a href="#2-使用-QuickTime-Player-编辑视频" class="headerlink" title="2. 使用 QuickTime Player 编辑视频"></a>2. 使用 QuickTime Player 编辑视频</h2><p>这一点其实是最便利的。</p>
<p>我之前曾使用 iMovie 来编辑视频，但其仅支持 16:9 的视频，实在太麻烦了，遂放弃。</p>
<p>我对视频的编辑其实很简单：<strong>删除无用帧</strong>。步骤如下：</p>
<ul>
<li>使用 QuickTime Player 打开上面录制的视频</li>
<li>按下 <code>Command + E</code> 显示 Clips</li>
<li>按下 <code>Command + Y</code> 在当前帧分割视频</li>
<li>删除无用帧</li>
</ul>
<p>以下大致演示编辑过程（其中的视频本身是 <a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a> 展示阅读器的操作示意，制作完成的 Gif 在 <a href="https://ws2.sinaimg.cn/large/006tNc79gy1fgvdy9tha1g30fo0d6asu.gif" target="_blank" rel="external">这里</a>）：</p>
<p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1firrefc7v2g30fg0dekjl.gif" alt=""></p>
<p>此方式最大的不足是：<strong>不能在视频中添加文字</strong>。</p>
<h2 id="3-使用工具将视频转换为-Gif"><a href="#3-使用工具将视频转换为-Gif" class="headerlink" title="3. 使用工具将视频转换为 Gif"></a>3. 使用工具将视频转换为 Gif</h2><p>这一步的选择余地应该挺大的，我个人常用的是下面这个网站：</p>
<p><a href="http://image.online-convert.com/convert-to-gif" target="_blank" rel="external">http://image.online-convert.com/convert-to-gif</a></p>
<p><img src="https://ps.toolinbox.net/x2egv.jpg" alt=""></p>
<p>支持宽度等设定，感觉转换效果还可以。</p>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>以上是我目前录制 Gif 的方式，<strong>全程免费</strong>。</p>
<p>我并没有说这是最佳选择、也没有为此背书的意思，以后也可能视情况而调整方案。<strong>如果你有更好的方式，欢迎告诉我</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0820 - iPaste + Drag & Drop in iOS 11]]></title>
      <url>https://atjason.com/daily/2017-08-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fiqkr3132vg30jg0ekb2f.gif" alt=""></p>
<p>看了下 <a href="https://developer.apple.com/videos/play/wwdc2017/203/" target="_blank" rel="external">WWDC 视频介绍</a>，照着 <a href="https://developer.apple.com/videos/play/wwdc2017/223/" target="_blank" rel="external">官方示例</a> 走一遍，一天搞定 iPaste + Drag &amp; Drop in iOS 11</p>
<p>Drag &amp; Drop 核心的接口并不多，还是容易实现的。得益于之前折腾了数据结构，也很容易集成到 iPaste 中。</p>
<p>当然，事情并没有完，目前只是基础的集成，还有一些细节要处理。不过，我已经很开心了，毕竟比之前想象的要简单很多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0819 - 要想富，追新不守旧]]></title>
      <url>https://atjason.com/daily/2017-08-19.html</url>
      <content type="html"><![CDATA[<p>昨天跟一个朋友聊，有一个观点受益颇深：<strong>要想有跳跃式的收入增长，还要跟热门的东西</strong>。毕竟热门的东西，资本多、发展快、可能性大。如果只是守着已有的行业，增长平稳（缓慢），甚至整个行业都有萎缩的风险。</p>
<p>于我来言，就是可以尝试 <strong>追新的技术</strong>。</p>
<p>以前是技术底子差，没能力追新。现在，技术积累慢慢有了，可以考虑追新技术了。比如，iOS 11 + VR/AR 之类的。</p>
<p>作为自由职业，追新还是有优势的，比如没有存量作为包袱，可以发个新 App 仅支持 iOS 11，这些都是大公司产品做不到的。</p>
<hr>
<p>当然，这并不是说守住传统的东西就一定会被淘汰，毕竟，即使是要淘汰，也是有周期的，比如 10 年、甚至更长。而在这样的周期内，还是有可为的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0818 - CloudKit + CoreData 初见成效]]></title>
      <url>https://atjason.com/daily/2017-08-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1finxf2dt6bg30jg0bxe81.gif" alt=""></p>
<p>如上所示，在一台手机上做操作，可以准实时同步至另一台手机上。</p>
<p>CloudKit + CoreData 初见成效，开心。</p>
<p>接下来，可以堆 UI 和业务逻辑了，期待 iPaste for iOS 可以早日与大家见面。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0817 - 做产品，先写宣传稿]]></title>
      <url>https://atjason.com/daily/2017-08-17.html</url>
      <content type="html"><![CDATA[<p>宣传稿里，自然会体现产品最大的卖点、使用场景等信息；反过来，可以帮助在产品初期定义产品、做决策。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0816 - 做产品，杀手功能很重要]]></title>
      <url>https://atjason.com/daily/2017-08-16.html</url>
      <content type="html"><![CDATA[<p>把 10 个平庸的功能做完美，不如把一个杀手功能做到 60 分。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0815 - 堆栈不要溢出…]]></title>
      <url>https://atjason.com/daily/2017-08-15.html</url>
      <content type="html"><![CDATA[<p>这次搞 CloudKit + Core Data，真的已经持续太长时间了，心里堆栈已快溢出…</p>
<p>总算，两台手机间核心的同步差不多搞定了。明天再搞搞外围的，比如订阅推送之类的。</p>
<p>坚持，这个搞定了，一定大肆庆祝下。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0814 - 坚持寻找最佳实践]]></title>
      <url>https://atjason.com/daily/2017-08-14.html</url>
      <content type="html"><![CDATA[<p>今天最大的感触是：<strong>与其自己花时间用已经知道的方法实现功能，不如寻找最佳实践，然后套用。</strong></p>
<p>通过自己造蹩脚的轮子，确实也能解决实际问题，但总是容易遗漏要考虑的点，后续的开发、维护，也是问题多多。</p>
<p>反观寻找最佳实践，虽说前期要花较多时间深入理解相关知识点，但这几乎是一次性投入，之后会有源源不断的好处。</p>
<p><strong>顶住短期的压力，寻找最佳实践，是长期来看的最佳选择。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0813 - 清存量，真难]]></title>
      <url>https://atjason.com/daily/2017-08-13.html</url>
      <content type="html"><![CDATA[<p>之前家里的电饭煲坏了，我觉得扔了可惜，就拆开看，其中电路板坏了。于是，我在淘宝花 28 元买了电路板。可惜装上后，还是不干活。如果是专业人士看，应该是很简单的故障，应该能修好的。可惜，我并不是专业人士，也并不打算花很多时间来修。</p>
<p>并且，这个电饭煲已经用了多年，淘宝上全新的也不足 300 元。如果满世界找售后维修点，先跑一趟送修、再跑一趟取回来，甚是不划算。</p>
<p>无奈，从经济角度来讲，扔掉是最划算的。虽然从环保角度上，我很不愿意如此。</p>
<p>于是，我买了新的。可是，即便已经买了新的，旧的还是在家里放了好几天，我才真的把旧的扔掉。</p>
<p>对于一个坏掉的、已经完全被取代的电饭煲尚且如此，对于其他的存量，我怕是更没有勇气和能力扔掉吧。这时候，存量已经不是优势，而是包袱了。</p>
<p>你，有什么存量？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0812 - 追求最佳实践]]></title>
      <url>https://atjason.com/daily/2017-08-12.html</url>
      <content type="html"><![CDATA[<p>今天基本完成了手机与手机之间的数据同步，技术上主要是 Core Data &gt; CloudKit &gt; Core Data 及反向流程。</p>
<p>虽说已经基本实现功能了，但感觉很多环节都是使用野路子，依靠对技术仅有的理解，堆出解决方案。但，<strong>最佳实践是什么呢？</strong>这是我很好奇、也是让我很痛苦的地方。接下来，准备再花点时间了解下 Core Data、CloudKit 的技术，并参考网上的资源，看如何优化现在实现的方案。优化后，可以方便地应用于 Klib 等其它产品中。</p>
<p>另外还有一个关联的问题：<strong>数据如何互相驱动？</strong>现在的数据存在 3 个地方：Core Data、CloudKit、内存中，要精确实现这三者的一致性，且实现一处修改、推送修改至其他处，很是麻烦，其中有很多逻辑要处理。如何简化呢？比如，是否能去掉内存中的镜像，并不会大量增加 IO 请求、并保持界面的快速响应？</p>
<p>回看日记，已经连续花了一周处理这个事情，时间确实长了点，效率也下降了。明天放空一段时间，看状态再继续。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0811 - 困难让人怀疑人生]]></title>
      <url>https://atjason.com/daily/2017-08-11.html</url>
      <content type="html"><![CDATA[<p>多端同步的复杂度，真的让人怀疑人生啊。</p>
<p>网络异步请求 + Core Data + CloudKit + iOS 与 macOS 又平台 + 冲突合并 + UI 响应…所有这些因素相乘所组合出来的复杂度，让我怀疑我是否适合做程序员…</p>
<p>Anyway，今天还是有进展的，搞定了把 Core Data 上传至 CloudKit，并能处理服务器端有变更时的情况。明天搞定从 CloudKit 下载数据、并组装为 Core Data，实现的效果就是：在一台手机上做的修改，能同步至另一台手机。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0810 - 代码，还是得一行行写]]></title>
      <url>https://atjason.com/daily/2017-08-10.html</url>
      <content type="html"><![CDATA[<p>这两天在看 CloudKit + Core Data 配合的方式，本来是照着 <a href="https://nickharris.wordpress.com/2016/02/09/cloudkit-core-data-nsoperations-introduction/" target="_blank" rel="external">这篇教程</a> 学习。本来，是想整体学习、整体迁移至自己的产品中。无奈，他的实现方式确实复杂。再加之，编程思路、惯用法不一样，看起来好累。</p>
<p>最后，还是放弃了，准备自己一点点从零开始搭建。当然，也是会参考教程中的一些思路。遇到问题、解决问题，这是自己比较习惯、适应的开发方式。</p>
<p>今天完成了部分数据结构，明天铺上传、下载相关的代码，争取本周末把这个部分好好搞定，包含测试用例和单元测试。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0809 - 双指数增长]]></title>
      <url>https://atjason.com/daily/2017-08-09.html</url>
      <content type="html"><![CDATA[<p>指数增加大家都不陌生。</p>
<p>比如，在银行存 1 块钱，一年收益为 5%，大概的演化是：</p>
<ul>
<li>1</li>
<li>1 * (1 + 0.05)</li>
<li>1 * (1 + 0.05) ^ 2</li>
<li>1 * (1 + 0.05) ^ 3</li>
<li>…</li>
</ul>
<p>40 年后，这 1 块钱会变为 6.7 块。</p>
<hr>
<p>好，来看看双指数增加。即增加率也是按指数增加的，大概的演化是：</p>
<ul>
<li>1</li>
<li>1 * (1 + 0.05)</li>
<li>1 <em> (1 + 0.05 </em> (1 + 0.05)) ^ 2</li>
<li>1 <em> (1 + 0.05 </em> (1 + 0.05) ^ 2) ^ 3</li>
<li>1 <em> (1 + 0.05 </em> (1 + 0.05) ^ 3) ^ 4</li>
<li>…</li>
</ul>
<p>40 年后，这 1 块钱会变成多少呢？188 块。</p>
<p>100 年后是多少呢？355337789238618000000000000，很可怕的数字。</p>
<p><img src="https://ps.toolinbox.net/npfww.jpg" alt=""></p>
<hr>
<p>为什么会讨论双指数增长？</p>
<p>比如人类文明的进化，几乎就是双指数的，是加速度也在加速的加速。也许，10 年后的科技，我们目前还可以想象、推测，而 100 年后，是我们无论如何也想象不出来的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0808 - 我为《战狼2》贡献票房]]></title>
      <url>https://atjason.com/daily/2017-08-08.html</url>
      <content type="html"><![CDATA[<p>我为《战狼2》40 亿票房贡献 20 元。</p>
<p>恩，战狼好看的。</p>
<hr>
<p>其实是，昨晚没睡好，加上宝宝闹腾，今天直接没状态，CloudKit + 本地持久化方案也没实质进展。遂，到影院放松一下。</p>
<p>明天，一定搞定CloudKit + 本地持久化方案，搞不定不睡觉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0807 - 重新入坑 CloudKit]]></title>
      <url>https://atjason.com/daily/2017-08-07.html</url>
      <content type="html"><![CDATA[<p>之前花过时间了解 CloudKit，现在要开始做 iPaste macOS 与 iOS 端的同步，重新开始学习 CloudKit.</p>
<p>看了一天的教程，也跟着写了些测试代码，大体是明白了。现在的关键问题是，如何配合  CloudKit，以选择本地持久化方案？</p>
<p>如果是自己监控本地、云端的变化，手动合并，总感觉繁琐、容易出问题。另外，这是比较基础性的事，想着应该会有现成的解决方案。试着找了下，只大概找到几个看起来并不太靠谱的方案、开源库。之前，Core Data 就可以配合 iCloud 实现同步，苹果大爷在不更新这一方案后，为什么不做 Core Data + CloudKit 同步呢？感觉这是很基础的功能，让大家都造自己的轮子，哎…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0806 - 翻过一个山头，接下来是另一个]]></title>
      <url>https://atjason.com/daily/2017-08-06.html</url>
      <content type="html"><![CDATA[<p>iPaste for iOS 端基本功能已可用，我已经录入了自己在回复用户问题时常用的答案，先用几天。</p>
<p>接下来是另一个山头：适配 CloudKit，以在不同 macOS/iOS 设备间同步。技术可行性应该是没有问题，主要是学习和实现的过程。</p>
<p>晚上休息了下，连续看了 4 集《硅谷》这部美剧，其中一些段子还是挺有意思的 😀</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0805 - 功能做好了，交互变了…]]></title>
      <url>https://atjason.com/daily/2017-08-05.html</url>
      <content type="html"><![CDATA[<p>今天早起，很开心地把搜索做好了。</p>
<p>却发现，实现的效果不太理解。又参考了几款其它 App 的交互，决定改了。</p>
<p>改功能…</p>
<p>哎，自己设计的功能，总不能把自己打一顿吧。算了，改。</p>
<p>不过，新的设计确实增加了实现复杂度，需要在一个 Table 中显示剪贴板列表、搜索后的剪贴板列表、搜索历史，很容易出现一堆代码耦合的问题。目前的解耦方式是：每种模式的 DataSource 独立出来，并继续同一个 Protocol；然后，根据当前条件切换 UITableView 的 DataSource，并在 Delegate 中调用对应 DataSource 的方法。只做了一部分，明天估计还得 3 个小时。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0804 - 搜索没搞完…]]></title>
      <url>https://atjason.com/daily/2017-08-04.html</url>
      <content type="html"><![CDATA[<p>上午基本搞定了搜索的数据结构部分。主要的时间耽误在了 <code>NSPredicate</code> 上，因为 Core Data 仅支持简单的搜索条件。最后没办法，还是组合了一堆条件，实现了功能。</p>
<p>在 UI 交互上，花的时间更多。一方面自己不熟悉，另一方面连续代码几天，效率变低了。</p>
<p>周末干一天活、休息一天，调整下状态。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0803 - iPaste for iOS: 详情页基本出炉]]></title>
      <url>https://atjason.com/daily/2017-08-03.html</url>
      <content type="html"><![CDATA[<p>今天基本搞定了详情页。</p>
<p>还是比较顺利的，主要是之前数据结构梳理的好，UI 和业务逻辑搭起来就快。</p>
<p>当然，这里说的快，只是 UI 和业务逻辑达到可用的程度。至于后期的细节，比如 UI 好看、动画自然、覆盖各种边缘 Case 等等，还是非常花时间的。并且，对于数据结构的封装也是很大的挑战。</p>
<p>明天准备搞定剩下的大块内容，如搜索、撤销重做、配置持久化等等，剩下分享和其余细节。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0802 - 部分 iPaste 剪贴板历史界面]]></title>
      <url>https://atjason.com/daily/2017-08-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/gf89c.jpg" alt=""></p>
<p>一半的时间，花了整理数据结构部分。关键的，要保持内存中的数据结构，和 Core Data 中的一致，还要尽可能地减少 Core Data 的读写次数，有些麻烦。</p>
<p>明天先搭历史编辑页面，等总体差不多了，再回过头来完善其它细节。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0801 - 搞定 iPaste for iOS 分组界面]]></title>
      <url>https://atjason.com/daily/2017-08-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/nhpek.jpg" alt=""></p>
<p>今天搞定了 iPaste for iOS 分组界面，大块的时间，是在 UITableView 和 Core Data 查询上，以及一些分散的点；毕竟是新接触 iOS 开发，需要一个个解决的问题还很多。</p>
<p>不过，目前分组界面的交互方式也是临时的，主要是目前熟悉的也只有 UITableView 这种了。稍后，会切换为右侧的交互方式。</p>
<p>明天搞定 Clip 列表界面，争取添加 Clip 列表界面也开工。</p>
<hr>
<p>顺便说下 8 月计划吧：</p>
<ul>
<li>发布 iPaste for macOS 2.0</li>
<li>发布 iPaste for iOS 1.0</li>
<li>二者数据可以相互同步</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0731 - 搞定 iPaste for iOS 数据结构]]></title>
      <url>https://atjason.com/daily/2017-07-31.html</url>
      <content type="html"><![CDATA[<p>今天上午，纠结了半天是否先用 Core Data 实现 iPaste for iOS，还是直接上 CloudKit；最后想想，虽然 Core Data 和 CloudKit 对我来说都是新坑，但毕竟 Core Data 相对简单一点、也熟悉一点，为了避免陷入大坑中无法自拔，还是先用 Core Data 实现主体代码，然后再迁移至 CloudKit；其中，要注意数据结构的剥离，将来换起来容易些。</p>
<p>下午及晚上，基本完成了数据结构部分，包含 Clip 和 Group 的查改增删。唯一的问题是：没有做单元测试，只用代码测试了一遍所有用例。先这样吧，等之后切换到 CloudKit 了，再完善单元测试。</p>
<p>明天开始搭界面。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0730 - 搞定 iPaste for iOS 技术选型]]></title>
      <url>https://atjason.com/daily/2017-07-30.html</url>
      <content type="html"><![CDATA[<p>简单的说，就是可以保存任意格式的剪贴板内容；同时，可以在 macOS 与 iOS 之间互用。</p>
<p>其中，还有些机巧。比如，iOS 可选仅使用基础的类型，以减少同步时的网络流量，增加同步速度。</p>
<p>明天，代码形式固化数据结构部分。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0729 - Mark: iOS 理论学完，开始实战]]></title>
      <url>https://atjason.com/daily/2017-07-29.html</url>
      <content type="html"><![CDATA[<p>今天看完了《<a href="https://www.bignerdranch.com/books/ios-programming/" target="_blank" rel="external">iOS Programming: The Big Nerd Ranch Guide (6th Edition)</a>》这要本书，也输入了书中的每行代码，完成每个示例；同时，也同步到 <a href="https://github.com/atjason/iOSProgramming" target="_blank" rel="external">GitHub</a> 中。</p>
<p>至此，理论部分算是学完了。</p>
<p>下一步，开始实战。</p>
<p>计划先拿 iPaste 开刀，整个 iPaste for iOS；同时，可以和 iPaste for macOS 同步数据。时间下，看下周此时能否搞定。</p>
<p>明天，先从产品角度考虑，确定交互。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0728 - Core 了一天 Data]]></title>
      <url>https://atjason.com/daily/2017-07-28.html</url>
      <content type="html"><![CDATA[<p>今天，基本学完了 iOS 中的 Core Data，跟着教程走了一遍，最后也完成了案例。</p>
<p>Core Data 用好了，确实还是挺方便的，至少能省不少代码。</p>
<p>以目前对 CloudKit 的理解，它和 Core Data 在很多概念是类似的，较好奇他们之间的历史渊源是什么。接下来几周会系统学习 CloudKit，到时就见分晓了。</p>
<hr>
<p>今天，Amazon 又改他们的网页版了。好在，我在上个版本的 Klib 中增加了远程更新的功能：不需要发布新版本，只需要在服务器端更新解析器，客户端来取即可。目前，是使用轮询的方式，即每次客户端启动都却服务器端取。这当然并不是好的设计。不过，简单呀，不需要引入推送通知这么复杂的东东。另外，考虑到 Klib 目前的用户量（呵呵），这个设计也没太大问题。</p>
<p>不过，Klib 解析网页的弹性还不太够，抽空还要改进这部分。不然，总是跟在 Amazon 屁股后面改，也不是什么好玩的事。话说，他们貌似变勤快了嘛。之前旧的版本，6 年没更新。现在，第个月都更新嘛。</p>
<p>另外，还得想办法建议起监控 Amazon 网页版变更的功能。不然总要用户报 Bug 后再改，就不好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0727 - 低调前行]]></title>
      <url>https://atjason.com/daily/2017-07-27.html</url>
      <content type="html"><![CDATA[<p>继续学习 iOS 开发中，今天搞定了 UICollectionView.</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0726 - 把握消费心理]]></title>
      <url>https://atjason.com/daily/2017-07-26.html</url>
      <content type="html"><![CDATA[<p>现在用的 Kindle，一买回来就戴上了保护套。合上熄屏、打开亮屏，还是挺方便的。</p>
<p>可是最近，看书的时间长了，会觉得好重。忍不住去掉保护套，立马轻了不少。并且，原始设备后面的亲肤材质，摸起来确实比套套舒服多了。于是，就不想再戴回去了。</p>
<hr>
<p>今天，在电视里看到王石了；又过了几秒钟，发现他在代言 8848 手机的广告。核心的一点，8848 将手机品牌定位为「男人的第二件首饰」，我觉得这个定位很好。</p>
<p>虽然，我们这个层次的人，通常会为了性能、性价比，去追捧小米这些品牌。但是，对于「老板」这种极具消费能力的群体，性价比俨然是他们鄙视的东西。相反，他们会有自己的需求，比如，在与客户第一次见面时，能想办法彰显自己的财富、地位、权力等等信息，手机这种出镜率如此之高的物品，自然是核心部件之一。8848 的定位，我感觉非常契合这个群体的需求。再加上王石等大牌的代言，相信会击中这些土壕们心中的软肉。</p>
<hr>
<p>深刻理解用户的消费心理，能在深层次满足这些心理的东西，才是好东西。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[说说我出道后的处女作：剪贴板神器 iPaste]]></title>
      <url>https://atjason.com/IndieDev/2017-07-25_iPaste_Review.html</url>
      <content type="html"><![CDATA[<p>2015 年底，我离开了这辈子最后一家公司，成为一名自由职业者。而 <strong><a href="https://toolinbox.net/iPaste/" target="_blank" rel="external">iPaste</a>，是我独立开发的第一款 macOS 产品。</strong></p>
<p>1.7 年过去了，在发布新版 iPaste 时，说说这款让我不再青涩的作品。</p>
<p>—– 长文开始警戒线；不喜请绕行 —–</p>
<p><img src="https://ps.toolinbox.net/ekpjo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="0-起初，「贴贴板」并不算产品"><a href="#0-起初，「贴贴板」并不算产品" class="headerlink" title="0) 起初，「贴贴板」并不算产品"></a>0) 起初，「贴贴板」并不算产品</h2><p>如果现在做个新产品，事先一定会有充分的调研，比如用户需求是否真实存在、市场容量、竞品分析、技术可行性分析等等，然后才会立项。</p>
<p><strong>之所以说不算产品，是因为当初做「贴贴板」时，完全跳过了这些环节，直接开始码</strong>；更像是个练手的项目。怎么回事？主要是当时刚刚出来自己单干，已经至少 3 年没写代码了，做什么领域的产品，都行，也都不行。在脑子一热决定先做 macOS 时，脑子里第一个冒出来的就是贴贴板这个点子，因为自己平时太需要剪贴板增加工具这类产品了。</p>
<p>咦，你可能好奇，说好的是 iPaste，怎么变出个贴贴板？其实，<strong>这个产品就是以「贴贴板」这个名字问世的</strong>，并保持了最开始的大半年时间。<strong>2016 年 9 月底才更名为 iPaste</strong>；这是后话，后面再提。</p>
<p>这里衍伸出一个话题：<strong>做产品，是做自己需要的产品，还是做大众需要的产品？</strong>当然，如果这两者重合，最好。如果不，<strong>建议起步时选择自己需要的产品</strong>。最直接的好处是，你自己就知道产品应该做成什么样子，跳过了用户调研的环节，也不至于跑偏。</p>
<p>不过，这个方式有个很大的局限：通常，自己的需求有限，并且会是个小点子，不利于产品做大。而且，产品做大后，就不再是当初自己想要的东西了，又变成了做大众需求的产品。所以，根本上是 <strong>在做自己需求的产品的时候，摸过出做产品的路子，进而推演到大众需求。</strong></p>
<p>这里引用在 <a href="https://www.indiehackers.com/businesses/cronometer" target="_blank" rel="external">IndieHacker</a> 上看到的一段话。</p>
<blockquote>
<p>If you build a product for yourself…, there’s probably a million others like you out there. Maybe not a billion, but unless you’re a freak, there’s a million.</p>
</blockquote>
<p>精准的翻译是：<strong>通常你需要的，别人也需要的</strong>；这些「别人」，没有千万、也有百万，除非你是朵奇葩。</p>
<h2 id="1-iPaste-夺走我的第-1-次，一次又一次"><a href="#1-iPaste-夺走我的第-1-次，一次又一次" class="headerlink" title="1) iPaste 夺走我的第 1 次，一次又一次"></a>1) iPaste 夺走我的第 1 次，一次又一次</h2><p>就是这么一个不算产品的产品，却 <strong>让我经历了无数的从 0 到 1</strong>：</p>
<ul>
<li>第一次学习 Swift</li>
<li>第一次学习 macOS 开发</li>
<li>第一次给产品起名</li>
<li>第一次设计 Logo</li>
<li>第一次独立完成一个产品</li>
<li>第一次审核被拒（以及 N 次）</li>
<li>第一次收到用户付费</li>
<li>第一次收到用户反馈</li>
<li>第一次收到海外用户反馈</li>
<li>第一次推广</li>
<li>第一次付费推广</li>
<li>第一次开源代码给别人用</li>
<li>第一次…</li>
<li>…</li>
</ul>
<h3 id="1-0-Swift-与-macOS-开发"><a href="#1-0-Swift-与-macOS-开发" class="headerlink" title="1.0) Swift 与 macOS 开发"></a>1.0) Swift 与 macOS 开发</h3><p>这部分在 <a href="https://atjason.com/IndieDev/2017-07-18.html">Mac 开发的神秘面纱：后娘养的嫡长子</a> 里有介绍，这里仅简单的提及。</p>
<p>对于 iPaste 而言，核心的部分是系统剪贴板。也即，<strong>能够记录用户曾经复制的内容，并且能 100% 准确地还原</strong>。难就难在这 100%，因为用户可能会在任意程序中、复制任意格式的数据，如纯文本、格式化文本、图片、文件等等。</p>
<p>其实，我试了当时的一些竞品，包含非常知名的，并没有做到这一点。比如，在复制并粘贴到 Numbers 时，会有一个单元格的错位。产品深处这样的问题，你在他们高大上的宣传中自然是看不到的。而 <strong>贴贴板</strong> 就做到了这一点，所以当时我还打出了「<strong>支持任意格式，不服来战</strong>」的口号。核心的，就是将 <code>NSPasteboardItem</code> 中的数据，存储为 <code>Data</code>；在粘贴时，再将其写回系统剪贴板。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tNc79gw1fah02yiagmg30j60askjl.gif" alt=""></p>
<p>不过，后来发现，某些格式还是有问题的。比如，在 Sketch 中复制 svg 格式的图片时，系统剪贴板中会产生 <code>com.facebook.semaphore</code> 这种类型。而对于这种类型 <code>NSPasteboardItem.data(forType type: String)</code> 这个函数会卡死 10 几秒。我试了几款知名的竞品，也有两样的问题，看来确实是 macOS 系统有 Bug。不过，这种情况还是相当少见，在我自己用 iPaste 的一年多时间里，仅遇到过这种情况（别试 iPaste 了，因为已经改掉了；但是可以试试你手上的工具😂）</p>
<p>再有，就是 <strong>macOS 沙盒的限制</strong>。具体到贴贴板，就是 <strong>如何将系统剪贴板中的内容粘贴到当前应用</strong>。要做到这一点，有多种方式，速度最快的，是发送 <code>Command + V</code> 键盘指令，模拟用户按下粘贴快捷键。不过，在沙盒模式下，这一方式直接不干活。</p>
<p><img src="https://ps.toolinbox.net/87e4v.jpg" alt=""></p>
<p>能在沙盒模式下干活的，就使用 Apple Script 来发送 <code>Command + V</code>。可是，在上架 Mac App Store 时被拒。反观所有已经上架 Mac App Store 的同类应用，都是让用户再从其官方下载一个所谓的插件、助手，基本都是安装  Apple Script 来实现自动粘贴。最后，我也从了，用了类似的方式。</p>
<p>这里再 <strong>吐槽一下 macOS 沙盒模式，已经裹足不前好几年了</strong>。对于自动粘贴这样的需求，不支持的理由无外乎是安全。可是，这样的不作为，直接导致用户下载安装一个自己不可能验证安全的助手。在我看来，只是将安全的皮球踢给了用户，撇清了自己的责任而已。</p>
<h3 id="1-1-独立完成一个产品"><a href="#1-1-独立完成一个产品" class="headerlink" title="1.1) 独立完成一个产品"></a>1.1) 独立完成一个产品</h3><p><strong>一个产品完整的生命周期，所涉及的点是非常多的</strong>：产品定义、市场研究、竞品分析、设计、开发、测试、上架、运营、推广、客服等等。<strong>要独自做好这些事，确实是很大的挑战。</strong></p>
<p>当然，由于精力和能力有限，我也不可能做好所有的方面，目前主要的精力是开发和推广。<strong>对于做不好的地方</strong>，可以：</p>
<ul>
<li>简单做一下，将就着；</li>
<li>花时间学习，做好；</li>
<li>请人帮忙做。</li>
</ul>
<p>不同的事，处理的方式不同。</p>
<ul>
<li>比如 Logo 的设计，我目前倾向于请人做。比如 <a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> 的图标，是由 <a href="https://dribbble.com/openallen" target="_blank" rel="external">Allen</a> 帮忙设计的。</li>
<li>比如程序里的图标，我基本上是在网上免费图标的基础上，简单修改下。</li>
<li>比如推广，很难外包给别人，只能自己硬着头皮上。</li>
</ul>
<p>其实，我还是挺愿意花时间折腾自己目前不擅长的事。不过，毕竟时间有限，还是要 <strong>把时间用在自己的长处，把短处外包给更专业的人完成</strong>。</p>
<p>另外，<strong>自己一个人做也是有好处的</strong>。比如，不需要与人商量，就减少了很多沟通成本。尤其是各方意见不一致时，要达到最终结论，通常需要消耗大量的时间，甚至是返工并带来额外开发成本。而一个人，则没有这样的问题。</p>
<p><strong>在实际做事的过程中，也养成了自己的习惯</strong>，比如：</p>
<ul>
<li>使用 Omni Focus 管理项目要做的事、测试用例</li>
<li>在开发功能时，就完善所有单元测试、测试用例</li>
<li>数据结构、UI、业务逻辑的开发步骤</li>
<li>使用虚拟机来测试操作系统的不同版本、不同语言</li>
</ul>
<p><img src="https://ps.toolinbox.net/evp5j.jpg" alt=""></p>
<p><strong>建立这些习惯的过程是痛苦的</strong>，因为要摸索所有的可能性，摒弃不适合的，最终形成适合自己的方式。<strong>而一旦建立，会有很大的收益</strong>。在下次做类似的事情时，好的习惯会大大提高效率，避免走大的弯路。</p>
<h3 id="1-2-第一次出门吆喝"><a href="#1-2-第一次出门吆喝" class="headerlink" title="1.2) 第一次出门吆喝"></a>1.2) 第一次出门吆喝</h3><p>自己辛苦做出来的产品，自然是希望更多人用；能赚更多钱，当然更好。可是，<strong>酒香也怕巷子深</strong>，尤其现在大家的注意力被各种事情分散着，要在这样的前提下，让更多需要的朋友知道自己的产品，是个很大的挑战。</p>
<p><strong>要增加产品的爆光，最直接的就是在媒体上报道</strong>。回过头来看，从时间和效果上看，当时这几个媒体还是不错的：</p>
<ul>
<li><a href="https://www.v2ex.com/t/243352" target="_blank" rel="external">V2EX</a><ul>
<li>这里聚集了很多愿意尝鲜的极客，他们愿意尝试那些新鲜出炉的粉嫩产品，并予以自己的肯定和鼓励。</li>
</ul>
</li>
<li><a href="http://next.36kr.com/posts/27192" target="_blank" rel="external">36kr Next</a><ul>
<li>现在，这个产品基于处于半死不活状态，我感觉。</li>
<li>当年，在 Next 发布贴贴板，还是带来了不少的流量。</li>
</ul>
</li>
<li><a href="https://www.waerfa.com/tietieban-review" target="_blank" rel="external">Mac 玩儿法</a><ul>
<li>自己认真接触的第一个自媒体，是 Frank 一个人做的，佩服。</li>
</ul>
</li>
</ul>
<p>而这些，全部是国内的媒体。如何在海外推广？很是头大。其中，我尝试了 <strong>平生第 1 次付费推广</strong>，是在 <a href="http://twodollartues.com/deals/daily-clipboard/" target="_blank" rel="external">Two Dollar Tuesday</a>，当时，其官方的规则是：</p>
<blockquote>
<p>You discount your app to $1.99 in the App Store for 48 hour promo (Tuesday &amp; Wednesday). </p>
<p>We will promote your deal via e-mail, our website, Facebook &amp; Twitter.</p>
<p>We then do a revenue split after Apple’s cut. On a $1.99 app, you get $1.40. So we get $0.70 to us per sale on Tuesday only. Wednesday you keep 100% of proceeds.</p>
<p>We have you pay us for the first 100 sales ahead of time ($70).</p>
<p>Finally, we have a $1,000 MAX on the amount due to us. Meaning, no matter how many copies we sell on Tuesday, you can never owe us more than $1,000.</p>
</blockquote>
<p>精准翻译过来，就是：</p>
<ul>
<li>我将应用降价为 $1.99</li>
<li>周二的收入，对方提成 30%</li>
<li>对方至少收 100 份的费用，即 $70，最多收 $1000</li>
</ul>
<p>实际的效果，在这两天仅售出 92 份、$126，除去先前支付的 $70，还剩 $56，相当于每份 $56 / 92 = $0.6，白菜价。</p>
<p><strong>于是，我之后再没试过付费推广…</strong></p>
<p>需要注意的是，<strong>媒体的效果主要有 2 方面</strong>：</p>
<ul>
<li><strong>突击爆光</strong><ul>
<li>尤其在产品发布的时候，多家媒体同时爆光，甚至会有 <strong>霸屏</strong> 的效果。</li>
<li>比如，当用户在微博上看到 iPaste 的报道，可能跳过了。可如果接着又在少数派看到、在即刻订阅上看到，就肯定会加深印象。或许会生出兴趣，尝试一番。</li>
</ul>
</li>
<li><strong>为之后的搜索做铺垫</strong><ul>
<li>我们在需要某类产品时，除了向周围的高手求教，也可能自己去互联网搜索。而这些媒体的报道，则会成为被搜索到的基础。尤其是 <strong>权威媒体的报道，会有更高的搜索权重</strong>。</li>
<li>这里说一个小技巧：自己在写文章时，要「<strong>面向搜索引擎</strong>」，而不仅仅是标题党。比如，「夜深了，熄灯了，老公竟然不理我，还在玩这款游戏？！」这样的标题，其实对于搜索引擎并不友好。对于标题这样重要的因素，不包含产品的名字，是不能接受的。</li>
</ul>
</li>
</ul>
<p>不过，媒体资源毕竟是有限的，你总不可能天天被报道吧？在更长的时间范围内，都要靠用户的自发传播，和自己的影响力。</p>
<p><strong>对于口碑传播，当然首先要靠产品的硬实力</strong>，毕竟首先产品要好，用户才愿意消耗自己品牌价值，去推荐你的产品。当然，这其中也存在一定程度的可操作性，比如在程序角度诱导用户分享，以及分享送 Pro 之类的活动。</p>
<p>而 <strong>对于自己的影响力，就需要长期建设了</strong>。比如，我最近强迫自己每周二早 8 点在自己的「<strong><a href="https://ps.toolinbox.net/z997y.jpg" target="_blank" rel="external">自在开发</a></strong>」公众号中写篇技术长文（包括本篇），也在自己的博客、少数派、掘金、简书等全媒体发布。这些文章的受众，有可能就是我自己产品的用户。并且，有了文章的背书，当用户对我有更多了解和信任后，也就更愿意尝试我的产品。</p>
<h2 id="2-贴贴板到-iPaste-的蜕变"><a href="#2-贴贴板到-iPaste-的蜕变" class="headerlink" title="2) 贴贴板到 iPaste 的蜕变"></a>2) 贴贴板到 iPaste 的蜕变</h2><h3 id="2-0-那些年，我也曾青涩"><a href="#2-0-那些年，我也曾青涩" class="headerlink" title="2.0) 那些年，我也曾青涩"></a>2.0) 那些年，我也曾青涩</h3><p>对于名字，当初也是纠结了很久才定的「贴贴板」（英文 Daily Clipboard）现在来看，中文名还好，英文名就太差了些，且和中文名没有关联。当时，我已经开发了 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>，想维持一个「i」系列，就直接改为「iPaste」了。</p>
<p>再来看看当年贴贴板的 Logo（左侧）:</p>
<p><img src="https://ps.toolinbox.net/j627o.png" alt=""></p>
<p>真有种不忍直视的感觉 😅</p>
<p>目前的 Logo（右侧），是自己设计的。基本是参考系统圆形 Logo，如 iBooks、App Store；其中的 P，和 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> Logo 中的 P 一样；背景的深绿色，是参考系统 Time Machine，想借其稳定的意味。</p>
<p>其实，<strong>改名、改 Logo 的影响还是非常大的</strong>。比如，之前所有在媒体沉淀的报道，全都无效了，需要从 0 开始积累影响力。所以，大家在给产品起名、设计 Logo 时，一定要慎重。定好了，就要坚持。</p>
<p>对于独立开发者朋友，我有个小建议：<strong>保留自己程序的历史版本</strong>。当然，我知道你肯定已经用了 Git；我是说，保留可以直接运行的版本（你确定，20 年后，你还有能力将代码编译为程序 😂）就像老照片一样，多年以后，<strong>重新运行一下自己当年还懵懂时写下程序</strong>，看那交互、那颜色、那不经意的跳转，<strong>就像看老照片一样，会有别样的情愫</strong>。</p>
<p><img src="https://ps.toolinbox.net/n5w2q.jpg" alt=""></p>
<h3 id="2-1-付费下载-gt-内购"><a href="#2-1-付费下载-gt-内购" class="headerlink" title="2.1) 付费下载 -&gt; 内购"></a>2.1) 付费下载 -&gt; 内购</h3><p>最开始，iPaste 的模式是付费以后才能下载使用。</p>
<p>采用这一方式的唯一原因：<strong>实现简单</strong>。或者说，代码上什么都不用做，无需区分免费版和付费后的功能限制，无需处理复杂的 In-App Purchase 集成。</p>
<p>不过，这一方式的缺点也很明确：<strong>限制潜在用户尝试 iPaste</strong>. 这部分可以在 <a href="https://atjason.com/IndieDev/2017-07-18.html">Mac 开发的神秘面纱：后娘养的嫡长子</a> 里有介绍详细的介绍。</p>
<p>后来，<strong>iPaste 将付费模式调整为免费 + 内购</strong>。从效果上看，确实明显增加了用户数量，用户付费也有所增加。所以，如果你打算开发个产品，个人建议采用免费 + 内购的方式。其中，可以试试我开源的 <a href="https://github.com/atjason/IAPHelper" target="_blank" rel="external">IAPHelper</a>，可以很方便地集成 In-App Purchase. 另外，内购也可以试试订阅。虽说很多朋友对于订阅还很抗拒，不过，还是有用户能接受，不妨考虑一下。</p>
<p><strong>换付费模式，其实是挺麻烦的事</strong>。比如，最开始已经付费购买的用户，总不能让其再购买一次、或者不能更新吧？要做到这一点，就要识别出之前上架 MAS 的版本，以及用户是否从 MAS 下载的 iPaste，对于条件都满足，则自动开通高级功能。如何识别？主要是从 MAS 更新 Receipt 并解析其中的内容。</p>
<h2 id="3-iPaste-的现在与将来"><a href="#3-iPaste-的现在与将来" class="headerlink" title="3) iPaste 的现在与将来"></a>3) iPaste 的现在与将来</h2><h3 id="3-0-工具型产品的困境"><a href="#3-0-工具型产品的困境" class="headerlink" title="3.0) 工具型产品的困境"></a>3.0) 工具型产品的困境</h3><p>我查了下，上个版本的是 iPaste，是在去掉 9 月 26 日发布的，几乎都快一年了。</p>
<p><strong>为什么这么久都不出新版？</strong></p>
<p>一方面，是我在忙 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>、<a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> 等其他产品。另一方面，更重要的，是我 <strong>没想好该怎么改进</strong>。</p>
<p><strong>工具型产品很容易陷入这样的困境</strong>：一方面，会遇到用户增长迟缓的情况；另一方面，会有用户表达「加了这个功能，我就买」这样的意愿。于是，很容易抗不住压力，加了某个功能。且不说当初的用户是否真的购买，长此以往，产品的功能越来越多，很容易变得越来越复杂、越来越不好用。用户增长变得更缓慢，甚至流失，陷入 <strong>死循环</strong>。</p>
<p>Word 就是个典型的例子，就像我们熟悉的那句话：99% 的人用了 Word 不到 1% 的功能。当然，Word 依然是现在的工业标准。但与此同时，以 Markdown 为代表的文本轻量型编辑工具，蚕食了大量原本属于 Word 的份额。</p>
<p><img src="https://ps.toolinbox.net/hg7si.jpg" alt=""></p>
<p>其实，<strong>很多工具型产品变坏、变难用，很大程度是因为营收的压力</strong>。因为工具型产品本身是极难赢利的，而不赢利又无法养活团队，不现实。于是，为了赢利，产品团队不得不加些社交、内容等元素，想办法增加用户粘性和互动，进而希望带来更多转化和商业可能性；但通常，事与愿违。</p>
<p><strong>怎么破呢？</strong>简单：<strong>别指望用工具赚大钱</strong>。不要让团队过于膨胀，以减少成本。出于这一点，<strong>独立开发者、小团队，很适合做工具型产品</strong>，因为营收压力小，一人吃饱、全公司不饿，不至于因此让产品畸变。</p>
<h3 id="3-1-iPaste-该如何突围"><a href="#3-1-iPaste-该如何突围" class="headerlink" title="3.1) iPaste 该如何突围"></a>3.1) iPaste 该如何突围</h3><p>说回 <strong>iPaste</strong>，它的 <strong>核心功能就是一句话：记住用户曾经复制的内容，然后粘贴</strong>。对于核心功能，iPaste 已经实现的很好了，甚至可以钉住剪贴板历史，进而使用固定的快捷键粘贴，大大提高效率。</p>
<p><strong>那在此基础上，还能如何改进呢？</strong>经过一年的潜意识思考和自己的实际需求，我加了 2 个功能：</p>
<ul>
<li><strong>编辑及管理剪贴板历史</strong></li>
<li><strong>增加 Pin 历史分组</strong></li>
</ul>
<p>看个操作视频就明白了：</p>
<p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fhq6euq84qg30fg0de1kx.gif" alt=""></p>
<p>主要对应于我自己的几个使用场景：</p>
<p><strong>快速插入 Emoji 表情</strong></p>
<p><img src="https://ps.toolinbox.net/e8yw0.png" alt=""></p>
<ul>
<li><strong>macOS 系统自带的</strong> 是 <code>Ctrl + Command + Space</code> 呼出 <strong>Emoji</strong> 和符号键盘，问题在于：<strong>效率不高</strong>：系统列出了无数的表情，而我自己常用的就那么几个。虽说有历史、收藏夹分组，但每次都要手动切换，还要移动鼠标，麻烦。</li>
<li>macOS 中运行的其它程序，如微信、Telegram、Skype 等等，每家 Emoji 表情的 <strong>排列不一致、长得不一样、交互也不一样</strong>。每次要在不同的排列中找，有点痛苦。</li>
<li>在 iPaste 增加了此功能后，我可以按依次按 <code>Shift + Command + V</code>、<code>Command + A</code>、<code>A/B/C</code>，快速输入指定的 Emoji 表情。<strong>全程使用固定的快捷键、无需鼠标，高效、舒服</strong>。</li>
</ul>
<p><strong>快速插入一些特殊字符</strong></p>
<p><img src="https://ps.toolinbox.net/8q47h.png" alt=""></p>
<ul>
<li>比如，macOS 快捷键中常用的 <code>⌘</code>、<code>⌥</code>、<code>⇧</code>、<code>⌃</code> 等特殊字符，在回复用户邮件时，时不时会用到，几乎每次都要到 Google 搜索，然后再粘贴过去。</li>
<li>现在，我会创建一个专业的 Pin 分组，用于输入这些特殊字符。</li>
</ul>
<p><strong>添加客服常用语</strong></p>
<ul>
<li>比如，我经常我回复用户的问题。而这些问题中，很多是重复的，回复也是类似的。有了 Pin 分组功能，我可以为每个产品添加常用的回复语，用于在邮件中快速添加。</li>
</ul>
<p><strong>添加常用命令</strong></p>
<ul>
<li>比如 <code>gc master; git merge dev; gc dev;</code> 用于切至 Git 主分支、合并、切回 dev 分支。</li>
<li>有时，需要对命令做简单调整，在之前的版本中，就有点痛苦。因为我需要多次 Pin/Unpin，才能让新 Pin 住的历史，并使用原来的快捷键。说起来有点绕，用过 iPaste 之前版本的朋友，应该明白我在说什么。</li>
</ul>
<p>可以看出，做出这个更新，主要还是满足我自己的实际需求。如果恰好你也有这种痒点，欢迎试试新版 iPaste. 顺便做个硬广：含此功能的 <strong><a href="https://itunes.apple.com/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_me" target="_blank" rel="external">新版 iPaste 今天刚刚上架，高级版内购限时半价</a></strong>，需要的朋友不要错过。</p>
<h3 id="3-2-iPaste-还能玩出什么花"><a href="#3-2-iPaste-还能玩出什么花" class="headerlink" title="3.2) iPaste 还能玩出什么花"></a>3.2) iPaste 还能玩出什么花</h3><p>在 App Store 搜索「剪贴板」，会得到一堆应用，这是个充分竞争的领域。那么，iPaste 该如何定位、又能玩出什么花样？</p>
<p>首先，<strong>iPaste 的定位一直没变：简洁高效的剪贴板应用。</strong></p>
<p>我知道，你肯定觉得「简洁高效」这话实在是被用滥了，说了跟没说一样。但我真的是这么做的。</p>
<ul>
<li>iPaste 的交互基于菜单，已经不可能更简洁了。</li>
<li>iPaste 所有关键操作都支持快捷键，全程不需要使用鼠标或触摸板。</li>
</ul>
<p><img src="https://ps.toolinbox.net/neefn.png" alt=""></p>
<p><strong>在坚守 「简洁高效」 这个定位和底线后，iPaste 会在继续在易用性和效率上改进。</strong>比如，很多朋友希望能记录更多的剪贴板历史（虽然我目前依然觉得意义不大），而要在众多历史中找到需要的，搜索便成为必然。于是，入口就是个问题，我打算 <strong>在 Spotlight 搜索中集成 iPaste 的搜索</strong>。据我所知，目前同类应用中尚未出现此功能，<strong>iPaste 算是首创吧</strong>。恩，有了点子公布出来，省得后来者反而说我模仿抄袭。</p>
<p>另外，打算支持 CloudKit，并开发 <strong>iPaste for iOS</strong>. 恩，我知道，在 iOS 领域，剪贴板应用同样竞争非常充分，且有 Pin 这样的明星产品。不过，还是有事情可做的。比如，目前我在 macOS 上设计图片后，要发到朋友圈，需要先通过微信等方式先将图片及文字中转到手机，然后再发，很是麻烦。要是 iPaste for iOS 能做到 macOS 端复制、iOS 端一键发送，多好。</p>
<p>再有，基于 <a href="https://itunes.apple.com/app/id1056935452?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPaste_me" target="_blank" rel="external">iPaste</a> 还有个衍生产品：iTips，主要是 <strong>个人碎片化信息的管理</strong>，如公司发票抬头，追了哪些美剧、分别看到第几集，等等。目前还没想到具体的形态，暂不展开介绍。</p>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>连续写了几篇长文，感觉要被掏空了。下周都不知道要写什么了，总不能继续写回忆录吧？😂</p>
<p>没办法，只能继续逼自己多输入，保证每周都有干货，晾晒在「<a href="https://ps.toolinbox.net/z997y.jpg" target="_blank" rel="external">自在开发</a>」公众号。</p>
<p><img src="https://ps.toolinbox.net/z997y.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> IndieDev </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0725 - 移民，好像变得不那么陌生]]></title>
      <url>https://atjason.com/daily/2017-07-25.html</url>
      <content type="html"><![CDATA[<p>今天跟一个目前刚刚举家从伦敦搬到蒙特利尔的朋友聊天，他们租的 100m2 的房子，只要 $800 每月，而且，这 100 平是使用面积、不是国内变态的含公摊的建筑面积。比杭州便宜。</p>
<p>另一方面，国内的网络环境越来越糟糕，且短期内还有恶化的趋势。虽然我对国内民间的力量有信心，相信并不会变成大陆局域网，但这总归不是件让人愉悦的事。</p>
<p>还有，接连听到有朋友收到国外大公司的 Offer，甚至已经肉身出国的。</p>
<p>所有这一切堆在一起，感觉移民变得不那么遥不可及，好像努力一把就可以的样子。虽然我有过一段时间的美国和德国生活及工作经验，对移民并不是很扔掉热衷，但如果能每年到一个国家生活工作几个月，也是不错的体验。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0724 - 写文章真的是挺花时间]]></title>
      <url>https://atjason.com/daily/2017-07-24.html</url>
      <content type="html"><![CDATA[<p>又到了周一，又到了要写长文的时候了。</p>
<p>算了下，写篇长文基本要 6+ 个小时。如果加上在全平台推广，时间就更多了。</p>
<p>最近一段时间，好像都没有静下心来真正学习些什么，或者做出些什么。之前写的东西，更像是回忆录，是之前的存货。而眼下又有什么新收获呢？AI？机器学习？等等，这个新的、有意思的东西，自己好像都没有涉足。</p>
<p>是时候调整了。等目前已有产品的回忆录写得差不多了，如果没有足够的存货可以输出，就暂时长文系列。潜心学习和做产品，做有了真家伙，再出来跟大伙交流。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0723 - 打好基本功]]></title>
      <url>https://atjason.com/daily/2017-07-23.html</url>
      <content type="html"><![CDATA[<p>今天修复一个 Klib 的 Bug: 导出至 Evernote 时失败。</p>
<p>首先，肯定是看出错日志，提示导出的书名格式无效。只是个字符串，怎么会无效呢？把字符串打印出来，也没看出个所以然；不过，手动将这个字符串替换为 “123” 就成功了，因此可以确认确实是这个字符串有问题。</p>
<p>后来，在 LLDB 控制台中打印出含特殊字符的格式，才发现其中有个 “\u{c2}”. 然后，就查这个字符串呗。</p>
<p>然后就被坑了。</p>
<p>整了几个小时，没搞定。无奈放弃，并向高人求教。果然，有高人指出，其实并不是打印出来的 “\u{c2}”，而是有一个看不见、且没有输出的 “\u{97}”。删掉之后，就正常了。</p>
<p>好，对于这个问题、这个字符是解决了，那还会有哪些字符呢？这是个问题。最佳的解决办法是，找到 Evernote 对于有效、无效字符集的定义，对症下药。不过，以我对 Evernote macOS SDK 6 年不更新的理解，应该不会有这样的定义。所以，更靠谱的办法是，替换掉所有可能有问题的字符，尤其是看不见的控制符。虽然，这不能从根本上解决问题，但从工程的角度，够了，没有谁在书名、笔记上输入自己都看不见的字符。</p>
<p>从这件事来看，自己的基础还是不够扎实。在做业务的间隙，还是抽时间巩固这些基础的东西。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0722 - 临渊羡鱼，不若退而结网]]></title>
      <url>https://atjason.com/daily/2017-07-22.html</url>
      <content type="html"><![CDATA[<p>今天收到一则关于一位独立开发者朋友的好消息，很为其高兴（他暂时要求保密，这里就不提了）。</p>
<p>他做的产品很棒，当得起这样的好消息。我也希望能有类似的好消息，不过，还是要自己做出成绩才行。于是，高兴、羡慕完后，继续低头代码。</p>
<hr>
<p>今天本来学 iOS 学得开心，刚看完本地化和动画，就收到一个关于 Klib 的 Bug；其实根本上并不算 Bug，而是 Amazon 网页版变化后，Klib 需要相应地调整。麻烦就在于，Klib 是个桌面端应用、不是网络应用，无法热更新，需要提交新版到 Mac App Store，还要经历用户升级，才能全面解决这个问题。并且，之后再遇到类似问题，还要再来一遍。</p>
<p>看来，这部分代码的热更新很必要。目前，虽没有彻底地实现热更新，但还是通过从网络获取最新配置信息的方式，实现了一部分的热更新，能适应一定程度的变化。先这样维持着，看后续 Amazon 变化的频率再说吧。</p>
<p>另外，就是要建立实时监测机制，不能总是等到用户报 Bug 才发现问题，那样体验就差了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0721 - Mark: 开战 iOS]]></title>
      <url>https://atjason.com/daily/2017-07-21.html</url>
      <content type="html"><![CDATA[<p><strong>今天，正式开始学 iOS 开发。</strong></p>
<p>选什么书呢？这个很关键。</p>
<p>之前学 macOS 开发时，研读了《<a href="https://www.bignerdranch.com/books/cocoa-programming/" target="_blank" rel="external">Cocoa Programming for OS X (5th Edition)</a>》这本书。这次，毫无悬念地选择了他们家的《<a href="https://www.bignerdranch.com/books/ios-programming/" target="_blank" rel="external">iOS Programming: The Big Nerd Ranch Guide (6th Edition)</a>》。果然，还是那个味道。</p>
<p>而且，有了 macOS 和 Swift 开发经验后，iOS 开发学起来确实快。今天，一口气看完前 6 章。按照这个节奏，5 天内就可过完全书。</p>
<p><strong>即便是学习，也要动真格的</strong>；也即，要做出能解决实际问题的产品。准备拿自己已有的产品开刀，也即开发出 macOS 版对应的 iOS 版本。大致想了，准备先做 iPaste for iOS. 虽说此类产品已经有不少了，比如 Pin. 不过，应该还是有可做的。比如，我现在在 macOS 生成图片后要发朋友圈，就很麻烦。有了 iPaste for iOS，可以做到选择图片、文本后，一键发朋友圈。</p>
<p>学习的感觉还是不错的，感觉很充实。尤其多了一项技能后，能做的事更多了，感觉更有可能改变世界了 😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0720 - 做产品，三步走]]></title>
      <url>https://atjason.com/daily/2017-07-20.html</url>
      <content type="html"><![CDATA[<p>好像，事情也没那么复杂：</p>
<ol>
<li><strong>发现需求</strong></li>
<li><strong>做出产品以满足需求</strong></li>
<li><strong>告知需要的人</strong></li>
</ol>
<p>发现需求，首先要丰富自己的生活，提高自己的品位。这样，才能发现生活中不如意的地方，也就是要改进的点。多和不同的人接触，洞察别人的需求，也是很重要的。</p>
<p>有了需求，就得有能力把产品做出来。落实到具体，主要是产品设计和开发。</p>
<p>有了好产品，还得让别人知道，才能被用起来，这就是运营推广了。</p>
<p>当然，以上不一定全部是自己做。但自己至少要对全局有所了解，这样，才能知道在什么环节，找什么样的人，做到什么程度。</p>
<p>目前，比较痛苦地卡在「发现需求」阶段…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0719 - 暂时放弃适配 macOS High Sierra]]></title>
      <url>https://atjason.com/daily/2017-07-19.html</url>
      <content type="html"><![CDATA[<p>今天在为剪贴板神器 iPaste 适配 macOS High Sierra 时，遇到一个很诡异的问题：<strong>在尝试升级时，无法弹出用户授权的对话框</strong>。</p>
<p>相同的代码，在 10.12 及以前都是好的，在 10.13 下，在下面的回调中，只能收到 <code>SKPaymentTransactionState.purchasing</code> 状态，没有完成或其他状态。界面上，也没有弹出让用户输入账户以授权的对话框（感觉问题就出在这里）</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">paymentQueue</span><span class="params">(<span class="number">_</span> queue: SKPaymentQueue, updatedTransactions transactions: [SKPaymentTransaction])</span></span></div></pre></td></tr></table></figure>
<p>等的时间长了，还遇到 2 次 storeuid.app 闪退的情况：</p>
<p><img src="https://ps.toolinbox.net/iolr9.jpg" alt=""></p>
<p>严重怀疑是 macOS 10.13 的 Bug，目前打算暂时搁置了，等 macOS 10.13 快发布了再适配，说不定自己就好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0718 - 为何要写作]]></title>
      <url>https://atjason.com/daily/2017-07-18.html</url>
      <content type="html"><![CDATA[<p>今天发布的 <a href="https://mp.weixin.qq.com/s?__biz=MzI2NTY1ODQ0NQ==&amp;mid=2247483735&amp;idx=1&amp;sn=37f42988d6b0643a6afcbd9bfb2e77cc&amp;chksm=ea9b4875ddecc163239782b07c87d500dc70cd6a016c75807b6ba836b30bf77496539193e307#rd" target="_blank" rel="external">Mac 开发的神秘面纱：后娘养的嫡长子</a> 这篇文章，入选少数派 Matrix 精选，上了简书头条，V2EX 10 大热议帖子，掘金被推荐…</p>
<p>感觉，并不是因为我多牛、写得有多好，而是 <strong>现在的人们太浮躁，很少有人能静下心来写些有深度的内容</strong>。尤其，写技术文章，对技术的要求还是很高的。<strong>而有能力的大牛，都忙着赚钱</strong>，没时间做这些教会徒弟、饿死师傅的事。</p>
<p><strong>那我为什么要写呢？</strong>应该说是多方面原因吧。</p>
<ul>
<li><strong>输出倒逼输入</strong><ul>
<li>能系统性地输出、写长文，证明自己真的掌握了这部分知识</li>
</ul>
</li>
<li><strong>个人品牌建设</strong><ul>
<li>对于我这样一个名不见经传的开发者，既要用产品来增加名气，又要用名气来为产品背书。需要找到一个产品之外的方式，来增加自己的知名度、信誉</li>
</ul>
</li>
<li><strong>跨界寻找可能性</strong><ul>
<li>纯技术，我干不过 99% 的开发者；写文章，我干不过 99% 的作者。可，会写作的开发者，可能我就可以干过 99% 的同行。会写代码、会写文章、能做产品、能做运营…这样的人呢？可能能干过 99.99% 的同行</li>
<li><strong>多一个维度，多一种可能性</strong></li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac 开发的神秘面纱：后娘养的嫡长子]]></title>
      <url>https://atjason.com/IndieDev/2017-07-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/bx86a.png" alt=""></p>
<p>本来，标题是「揭开 macOS 开发的神秘面纱」，可想想，以我目前对 macOS 开发的理解，还是去掉「揭开」二字吧 😂</p>
<p>本文不是系统性的文章，更像是 <strong>随笔</strong>。回想自己过去 1.6 年的 macOS 开发历程，挑些有意思的来说。如果想看完就去挖 macOS 这座金矿（如果是的话），你会失望的；<strong>且作佚事来读吧</strong>。</p>
<p>注：严格地说，应该叫作「<strong>macOS 开发</strong>」，因为去年起，苹果将 Mac 操作系统更名为 macOS；不过，苹果电脑依旧以 Mac 命名，如 MacBookPro，故而 Mac 开发也说得过去；再加上，以小写字母开头作为文章名，总觉得怪怪的，是以本文混用「Mac 开发」与「macOS 开发」</p>
<p>—– 长文开始警戒线；不喜请绕行 —–</p>
<p><img src="https://ps.toolinbox.net/syxbc.jpg" alt=""></p>
<a id="more"></a>
<h2 id="0-Mac-是后娘养的嫡长子"><a href="#0-Mac-是后娘养的嫡长子" class="headerlink" title="0) Mac 是后娘养的嫡长子"></a>0) Mac 是后娘养的嫡长子</h2><p>说 Mac 是嫡长子，是因为 <strong>苹果就是做电脑起家的</strong>。虽说后来 iPod、iPhone 风生水起，但嫡长子的血统还是纯正的；而 iOS 正是基于 macOS 开发的。这里的故事很多，感兴趣可以读读《乔布斯传》之类的书或文章。</p>
<p>可惜的是，<strong>有了 iPhone 这棵摇钱树之后，Mac 电脑靠边站了</strong>，macOS 自然也被冷落，不到万不得已，不更新；即使更新，也像挤牙膏一样。</p>
<p><strong>Mac 哪里被冷落了？多了去了。</strong></p>
<p>比如，我每周都会收到一款苹果给开发者的邮件，本意是告知本周 App 的活跃程度。而我每次收到的邮件内容都是这样的：</p>
<p><img src="https://ps.toolinbox.net/734na.jpg" alt=""></p>
<p>因为我尚未上架 iOS 应用、只有 macOS App；而 <strong>在苹果看来，macOS App 岂能叫 App ？！</strong>是以，这里的数据是空的…</p>
<p>其它的，不胜枚举。</p>
<h2 id="1-Mac-是个小市场"><a href="#1-Mac-是个小市场" class="headerlink" title="1) Mac 是个小市场"></a>1) Mac 是个小市场</h2><p><strong>有多小？</strong></p>
<p><strong>先说说硬件</strong>，这是 2016 第四季度出货量对比：</p>
<table>
<thead>
<tr>
<th>设备</th>
<th>出货量</th>
<th>营收</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mac</td>
<td>537 万</td>
<td>72 亿美元</td>
</tr>
<tr>
<td>iPhone</td>
<td>7,830 万</td>
<td>543 亿美元</td>
</tr>
</tbody>
</table>
<p>不论是出货量、还是营收，均是零头。</p>
<p><strong>再来看看 App 的数量：</strong></p>
<p>从 <a href="http://appshopper.com/" target="_blank" rel="external">AppShopper</a> 的数据来看，<strong>不足 3 万的 macOS App 数量，不到 iOS App 的 1%</strong>；对，是「百分之一」，<strong>零头的零头</strong>。</p>
<p><img src="https://ps.toolinbox.net/qg8nb.jpg" alt=""></p>
<p>当然，这里主要统计的是上架 MAS (Mac App Store) 的应用，在 MAS 之外也有很多。不过，2 个数量级的差异，没跑。</p>
<p><strong>现说说操作系统占比：</strong></p>
<p>据 <a href="https://netmarketshare.com/" target="_blank" rel="external">MarketShare</a> 的数据，<strong>macOS 仅占 6.12%，仅有 Windows 用户的 6.7%.</strong></p>
<p><img src="https://ps.toolinbox.net/d40yo.jpg" alt=""></p>
<p>其中，<strong>macOS 版本的分散程度</strong>，虽比 Windows 好很多，但也 <strong>不如 iOS:</strong></p>
<p><img src="https://ps.toolinbox.net/vsz2g.jpg" alt=""></p>
<p>看到这里，是不是觉得有些心凉，<strong>觉得 Mac 好可怜有没有…</strong></p>
<p>不过，Mac 电脑确实是在慢慢增加的，知名度也在变高。比如，<strong>国内现代都市剧中出现的电脑，大多都是 Mac</strong>；苹果也刚刚宣布 <strong>全球 Mac 活跃用户有 1 亿</strong>。</p>
<p><img src="https://ps.toolinbox.net/5pb5e.jpg" alt=""></p>
<h2 id="2-Swift-or-Objective-C"><a href="#2-Swift-or-Objective-C" class="headerlink" title="2) Swift or Objective-C"></a>2) Swift or Objective-C</h2><p><strong>我开发的应用 (<a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a>、<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>、<a href="https://toolinbox.net/iPic/iPicMover.html" target="_blank" rel="external">iPic Mover</a>、<a href="https://toolinbox.net/iPaste/" target="_blank" rel="external">iPaste</a>、<a href="https://toolinbox.net/iTimer/" target="_blank" rel="external">iTimer</a>、<a href="https://toolinbox.net/iHosts/" target="_blank" rel="external">iHosts</a>)，全部基于 Swift；不过，即使你也打算基于 Swift，还是建议对 Objective-C 有基本的了解。</strong>因为，毕竟 Objective-C 是苹果一直以来使用的开发语言，绝大多数的文档、教程，都是基于 Objective-C 的。</p>
<p>虽说可以很容易地改编为 Swift、或被 Swift 调用，但这就像是：你有一本英文词典，理论上就可以直接看英文文章，因为看见不懂的单词可以查嘛；但也知道，这不现实，毕竟你总不能每个单词都查吧？</p>
<p><strong>所以：</strong></p>
<ul>
<li>如果你已经有 Objective-C 基础，就直接使用 Objective-C 开发 Mac 应用好了。要不要学 Swift？看你自己心情，我不提供建议；</li>
<li>如果你并没有 Objective-C 基础，建议你先学学 Objective-C 基础，然后再学 Swift，并基于 Swift 开发。</li>
</ul>
<h2 id="3-Mac-文档及教程"><a href="#3-Mac-文档及教程" class="headerlink" title="3) Mac 文档及教程"></a>3) Mac 文档及教程</h2><p>官方文档主要有这些：</p>
<ul>
<li><a href="https://developer.apple.com/macos/" target="_blank" rel="external">macOS 开发者中心</a></li>
<li><a href="https://developer.apple.com/documentation/" target="_blank" rel="external">API Reference</a></li>
<li>Programming Guide<ul>
<li>主要是对具体知识点的详细介绍，如 <a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/TableView/Introduction/Introduction.html" target="_blank" rel="external">Table View Programming Guide for Mac</a></li>
</ul>
</li>
<li><a href="https://developer.apple.com/videos/" target="_blank" rel="external">历年 WWDC 视频</a></li>
<li><a href="https://developer.apple.com/library/content/navigation/#section=Platforms&amp;topic=macOS" target="_blank" rel="external">Guides and Sample Code</a><ul>
<li>这里提供了一些示例项目。比如，想学某个控件的实际用法，可以到这里搜搜看。</li>
</ul>
</li>
</ul>
<p>实际上，由于我们一般是「<strong>面向 Google 编程</strong>」，一般遇到问题都是先搜索，不太需要记录这些网址。只是，如果你想系统性、深入地学习某个点时，可以正向地从官方文档入手。</p>
<p>不过，对于 <strong>苹果的开发文档</strong>，友情提醒：<strong>并不怎么好</strong>。如果套用这句话：<br>「为什么懂得这么多道理，却仍过不好这一生？」</p>
<p>便是：<br>「<strong>为什么我看了所有 Mac 文档，却仍无法开发 Mac 应用？</strong>」</p>
<p>文档更多是偏向对某个具体知识点的介绍，而如果想系统性地入门 macOS，最好是通过一本好的书，以及自己的练习。由于 iPhone 的热销，市面上 iOS 的书，可谓汗牛充栋。而 <strong>macOS 的书呢？呵呵</strong>。</p>
<p>我自己是看《<a href="https://www.bignerdranch.com/books/cocoa-programming/" target="_blank" rel="external">Cocoa Programming for Mac OS X</a>》这本书入门 macOS 开发的，这几乎是我在 2015 年能找到的唯一一本基于 Swift 的 macOS 开发教程。另外一本是 <a href="https://book.douban.com/subject/26410821/" target="_blank" rel="external">Swift Development with Cocoa</a>，跟这本书没法比。</p>
<p>其他 macOS 的书，我看的不多，也没什么好推荐的。如果你有觉得哪本书不错，欢迎留言告诉我。</p>
<h2 id="4-macOS-数据结构及持久化"><a href="#4-macOS-数据结构及持久化" class="headerlink" title="4) macOS 数据结构及持久化"></a>4) macOS 数据结构及持久化</h2><p>首先要说的是，<strong>虽说是 macOS 开发，但实际上很多基础的东西都是通用的</strong>，比如 JSON 格式、MySQL 数据库等等。</p>
<p>另外，<strong>macOS 和 iOS 相比</strong>，像 TouchBar 这种独有的东西，并不多；<strong>更多的是通用的</strong>，或者说是并行的两套。</p>
<p><strong>使用 plist 文件存储数据：</strong></p>
<ul>
<li>默认仅支持简单的数据结构；此方式仅适合保存少量数据，如偏好设置中的 On/Off 选项</li>
<li>可使用 <code>UserDefaults</code> 管理默认的 plist 文件。注意：沙盒模式和普通模式下默认的 plist 文件的位置不同</li>
<li>可在命令行中使用 <code>defaults</code> 命令来管理 plist 文件中的数据</li>
<li>可使用 Xcode 打开 plist 文件进行管理</li>
</ul>
<p><strong>序列化后存储：</strong></p>
<ul>
<li>对于自定义类型，适配 <code>NSSecureCoding</code> 协议后，可使用 <code>NSKeyedArchiver</code> 转换为 <code>Data</code> 格式</li>
<li>进而，可存储在普通文件中，也可存储于 plist 文件中</li>
</ul>
<p><strong>Core Data:</strong></p>
<ul>
<li>Core Data 本质上是对数据访问方式的封装</li>
<li>对于简单的数据结构，使用 Core Data 会带来额外的复杂度，并不划算。对于复杂的应用，Core Data 可以显著减少代码量</li>
<li>持久化方面，Core Data 提供了对象-关系映射 (ORM) 的功能，不编写任何SQL语句，即可将数据保存在 SQLite 数据库文件中，也能还原到内存中</li>
</ul>
<p><strong>CloudKit:</strong></p>
<ul>
<li>存储方面，CloudKit 本质上类似于云端的关系数据库</li>
<li>除了存储，CloudKit 更有用的场景，是在多设备、macOS 与 iOS 间同步数据。比如，系统自带的 Notes 等应用，均是通过 CloudKit 来存储、同步数据。其中，通知机制可以最小化需要同步的数据量</li>
<li>再有，就是提供基于 CloudKit 的共享功能</li>
</ul>
<p>注：数据持久化存储方式有非常多，也要视具体的需求而定；这里仅提及一些常用的方式。</p>
<h2 id="5-macOS-界面开发"><a href="#5-macOS-界面开发" class="headerlink" title="5) macOS 界面开发"></a>5) macOS 界面开发</h2><p>我们所说 macOS 开发，通常默认指开发「有界面及交互的、能运行在 macOS 上的应用」，<strong>其核心，就在于界面及交互</strong>。</p>
<p>我们也常听到 Cocoa，那 <strong>什么是 Cocoa 呢？</strong>援引《Cocoa Programming for OS X》中的介绍：</p>
<blockquote>
<p>Cocoa is your application’s interface to the window server to receive events and draw to the screen. At the same time it has access to the Unix layer where it can make lower level calls.</p>
</blockquote>
<p><img src="https://ps.toolinbox.net/1h5z5.jpg" alt=""></p>
<p>也就是说，<strong>Cocoa 是这样一个中间环节：负责衔接你的应用与窗口系统，同时也可直接操作系统底层。</strong></p>
<p><strong>界面的开发，是个无底洞</strong>；可以是个简单的单窗口应用，也可以是 Pages、iMovie 这样复杂的应用。</p>
<p><strong>对于初学者，建议从菜单栏程序入手</strong>。可以暂时绕开窗口、控件这些复杂的话题，又可以创建出能解决实际问题的一些应用。比如，iPic 主交互即位于菜单栏：</p>
<p><img src="https://ps.toolinbox.net/th82z.png" alt=""></p>
<p>这部分，可参见我之前写的教程：<a href="https://en.atjason.com/Cocoa/Status%20Bar%20App.html" target="_blank" rel="external">Status Bar App</a> 教程是 16 年 4 月写的，现在来看有些可能已经过时，比如当时是基于 Swift 2.2；不过整体还是可以参考的。</p>
<p>回到界面的开发。首先，<strong>要理解 App 的整体生命周期。</strong>尤其是 App 启动时，都做了哪些事、先后顺序及依赖是什么。</p>
<p>然后，<strong>实际的工作，就是搞定界面布局，以及熟悉一个个控件的用法</strong>，如 NSButton、NSTextField、NSTableView 等等。<strong>建议的学习步骤：</strong></p>
<ul>
<li>先随意玩玩，能让控件跑起来；一些控件复杂，跑不起来也不用觉得沮丧</li>
<li>如果官方有 Programming Guide，认真读一遍</li>
<li>如果官方有示例程序，学习之，熟悉正确的用法</li>
<li>过一遍 API Reference，了解控件所有的可能性和局限</li>
<li>解决自己实际的问题，真正用起来</li>
</ul>
<p><strong>我一般的开发步骤：</strong></p>
<ul>
<li>想清楚数据结构</li>
<li>堆 UI</li>
<li>完成业务逻辑</li>
</ul>
<h2 id="6-macOS-设计模式之解耦"><a href="#6-macOS-设计模式之解耦" class="headerlink" title="6) macOS 设计模式之解耦"></a>6) macOS 设计模式之解耦</h2><p>随着程序变得复杂，代码变多，也很容易交织在一起。对于进一步开发和维护，是非常头痛的事。</p>
<p><img src="https://ps.toolinbox.net/xnxnn.png" alt=""></p>
<p>怎么避免这样的情况呢？其中一个思路是：<strong>解耦</strong>。</p>
<p>抽象的说，就是 <strong>把复杂的东西拆成一个个独立的模块，然后通过一些方式让这些模式有机地组合在一起</strong>。</p>
<p>有哪些方式呢？顺着这个思路，我列出一些概念。</p>
<p><strong>MVC模式 (Model-View-Controller)</strong></p>
<ul>
<li>这一模式在界面开发里大量使用，比如你经常看到的 XXViewController，就是其中的 Controller 部分</li>
<li>简单的说，就是 <strong>把界面与逻辑分离</strong>。界面部分，如布局、样式等。通常，代码量最多的，都是在 Controller 中。View 与 Controller 之间，<strong>通过引用、绑定来传递数据</strong>，即将数据显示在界面中、从界面读取用户产生的数据</li>
</ul>
<p><strong>Delegate</strong></p>
<ul>
<li>有两个角度来理解代理。以 NSWindowDelegate 为例，可理解为 Window 本身有丰富的可定制性，程序可选择性地实现某些功能、特性</li>
<li>另一个角度是，同样对于 NSWindowDelegate，对事件（如窗口即将关闭）的响应，Window 本身是不知道的，或者说是具体的业务相关的。Window 自己做不到，只能委托给自己的「代理」去决定。比如，当窗口即将关闭时，程序提示用户保存未保存的数据</li>
</ul>
<p><strong>Callback</strong></p>
<ul>
<li>对于非实时的操作，可以使用 Callback 回调的方式，来解耦调用者和执行者之间的等待</li>
<li>比如，程序在从网络下载图片时，可能需要 1ms，也可能需要 2s，程序总不能傻等着。于是，程序告诉下载的模块：我去忙别的事了，你下载好了告诉我。怎么告诉？就是通过 Callback 回调机制实现</li>
<li>与之关联的概念，如代码块</li>
</ul>
<p><strong>Notification</strong></p>
<ul>
<li>对于「<strong>如果…就…</strong>」这样的逻辑，比较适合的是通知机制</li>
<li>这里的通知，不止是从网络上推送下来的通知，也可以是程序内部的通知</li>
<li>比如，用户在偏好设置的界面中完成账户升级后，在程序内发出账户类型变更的通知；程序的主窗口之前注册以监听这一通知，便可根据账户类型实时调整界面</li>
</ul>
<h2 id="7-发布-macOS-应用"><a href="#7-发布-macOS-应用" class="headerlink" title="7) 发布 macOS 应用"></a>7) 发布 macOS 应用</h2><p>自己辛苦开发的程序，通常是愿意让更多人来用的。如果能赚点小钱，当然更好啦。</p>
<p><img src="https://ps.toolinbox.net/jxzr4.jpg" alt=""></p>
<h3 id="7-0-macOS-应用签名"><a href="#7-0-macOS-应用签名" class="headerlink" title="7.0) macOS 应用签名"></a>7.0) macOS 应用签名</h3><p>对于简单的程序，可以复制到别的电脑上运行，但最好还是要对程序进行签名。尤其是使用 CloudKit 等一些苹果特性的程序，必须签名。</p>
<p>怎么签名呢？前提是交钱。也就是，<strong>必须每年交给苹果 $99 的人头税，才能成为苹果开发者</strong>，进而给应用签名。</p>
<h3 id="7-1-MAS-与沙盒模式"><a href="#7-1-MAS-与沙盒模式" class="headerlink" title="7.1) MAS 与沙盒模式"></a>7.1) MAS 与沙盒模式</h3><p><strong>在 MAS (Mac App Store) 上提交的应用，必须运行在沙盒模式中。</strong></p>
<p><strong>沙盒模式有诸多限制</strong>，比如，默认不能访问用户的任何文件、一些接口无法使用等等。<strong>和 iOS 的沙盒模式相比，macOS 的沙盒模式还是宽松很多的</strong>。以访问文件的权限为例，应用可以申请访问如 Downloads 等指定目录。向谁申请呢？苹果，而不是用户。一旦通过（虽然并不容易），便可直接访问该目录，无需用户授权。</p>
<p>事实上，<strong>沙盒模式确实限制了程序的发挥空间</strong>，一些应用（如屏幕取词翻译、截图工具）干脆无法上架，或者额外开通「Accessibility」权限才能正常工作。而据说苹果已不再放行需要此权限的应用上架。</p>
<h3 id="7-2-MAS-付费方式"><a href="#7-2-MAS-付费方式" class="headerlink" title="7.2) MAS 付费方式"></a>7.2) MAS 付费方式</h3><p>苹果支持多种内购方式，要想通过应用收费，最简单的方式是：<strong>设置程序必须付费才能下载</strong>。这样，程序内无需区分免费版与高级版，无需做任何功能限制，代码简单。苹果系统保证了，使用哪个 Apple ID 下载的应用，只能在使用哪个 Apple ID 上登录的电脑上使用。比如，<strong>你自己购买了某个付费应用，直接把 .app 复制到朋友的电脑上，是无法运行的</strong>。</p>
<p>不过，这一方式也有局限：用户在付费之前，无法体验到产品的所有功能，也就很难决定是否要付费。对于这一局限，一些程序的做法时：在产品官网提供一个全功能、但仅能运行一段时间（如 7 天）的 <strong>体验版</strong>。这样，用户可以在体验所有功能后，决定是否购买。</p>
<p>再进一步，就是 <strong>免费版 + 内购的模式</strong>。用户可免费下载应用，但应用仅开放基础功能，需要内购才能使用高级功能。这样，既能最大化地获取用户，又能适时地收费，我的所有应用都采用此方式，相信也是未来一段时间的趋势。</p>
<p><strong>对于内购，又分为一次性购买和订阅制</strong>。一次性购买容易理解；订阅制可以有按月、季度、年等不同周期。对于订阅制，又分为自动续订和手动续订。目前，苹果对于订阅制、尤其是自动续订的订阅制，审核较严。</p>
<p>另外，还有 <strong>消耗型内购</strong>，这种在游戏中较为常见，比如花钱买装备，或者为账户充值等。</p>
<p><strong>对于内购的开发</strong>，还是比较繁琐的，比如要处理展示、购买、用户购买后退款、恢复、订阅续订、订阅未续订导致过期等等逻辑。好在，<strong>我封装了 <a href="https://github.com/atjason/IAPHelper" target="_blank" rel="external">IAPHelper</a></strong>，可以很方便地处理这些逻辑（如下代码为购买部分）；<strong>开源</strong>，可以 Pod 方式集成，已经在我的产品中应用多年，大家可放心使用。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> <span class="type">IAP</span>.purchaseProduct(productIdentifier, handler: &#123; (productIdentifier, error) <span class="keyword">in</span></div><div class="line">	<span class="keyword">if</span> <span class="keyword">let</span> identifier = productIdentifier &#123;</div><div class="line">		<span class="comment">// The product of 'productIdentifier' purchased.</span></div><div class="line">	     </div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> error = error <span class="keyword">as</span>? <span class="type">NSError</span> &#123;</div><div class="line">      <span class="keyword">if</span> error.code == <span class="type">SKError</span>.<span class="type">Code</span>.paymentCancelled.rawValue &#123;</div><div class="line">		<span class="comment">// User cancelled</span></div><div class="line">        </div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">		<span class="comment">// Some error happened</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="7-3-不完美的-MAS"><a href="#7-3-不完美的-MAS" class="headerlink" title="7.3) 不完美的 MAS"></a>7.3) 不完美的 MAS</h3><p>之前苹果与微信怒怼的打赏分成事件，想必让更多朋友知道了：<strong>凡是应用从用户收到的钱，苹果均要收 30% 的拔毛费。</strong></p>
<p>MAS 的诸多限制，以及不菲的拔毛费，让很多知名的 macOS App 纷纷下架，如 Sketch、Dash 等等。</p>
<p>不过，<strong>要在 MAS 之外发布，还是要做很多事情的</strong>，比如下载、支付、退款、激活码等等。对于小程序，还是挺繁琐的，并不划算。另外，毕竟 MAS 还能带来一些自然流量。</p>
<p>如果在 MAS 之外发布，还有一点需要注意：<strong>.app 程序本质上是一个文件夹</strong>。如果需要在网络上传送（如作为邮件的附件），最好是进行压缩，甚至是制作 .dmg 文件，我使用的是 <a href="https://github.com/sindresorhus/create-dmg" target="_blank" rel="external">create-dmg</a> 这个小工具，非常方便，生成的样式也简单大方。</p>
<p>基于上面的原因，目前我的应用全部在 MAS 上发布，尚未在 MAS 之外发布。</p>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>macOS 开发的话题还有非常多，比如 Storyboard、绑定、动画、并发、Undo、Pasteboard、Drag &amp; Drop、本地化、单元测试等等，本文不可能全部提及。并且，写起来也好累，毕竟必须对这些点有完全的掌握，才可能写出来。暂且挖坑，以后再填。</p>
<p>对 macOS 开发感兴趣？欢迎留言交流。</p>
<hr>
<p>原文：「<strong>自在开发</strong>」公众号</p>
<p><img src="https://ps.toolinbox.net/z997y.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> IndieDev </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0717 - 畅想一下美好的事]]></title>
      <url>https://atjason.com/daily/2017-07-17.html</url>
      <content type="html"><![CDATA[<p>每年，能换个国家工作、生活一段时间，想想还是挺美好的。</p>
<p>没事，多想想这些美好的事，激励下自己。</p>
<p>多…赚…钱…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0716 - 主要靠自己]]></title>
      <url>https://atjason.com/daily/2017-07-16.html</url>
      <content type="html"><![CDATA[<p>今天跟朋友吃饭，一起吹牛，商量着发财大计。可惜，最终并没有产出有效的方案。</p>
<p>跟朋友吹牛，确实可以互通有无、杂交思想。但根本上，是触发自己已有思想，在存量上找增量的机会。如果自身没有储备、准备，再怎么刺激，也激发不出新的想法。</p>
<p>回到 7 月最初的计划，在接下来几天忙完新版 iPaste，接着完善 iTips 初版。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0715 - 证明自己最好的方式：新的成绩]]></title>
      <url>https://atjason.com/daily/2017-07-15.html</url>
      <content type="html"><![CDATA[<p>之前，我在 V2EX 上发表了《Klib 到底赚了多少钱？》这篇文章，评论里说是标题党，这我认；可要说我在文中自吹自擂，我不认。可是，围观的群众已经被标题这个事吸引所有眼球，我再解释其他的，没人愿意听；我也就不再说话。</p>
<p>后来，我又在 V2EX 上发表了《在 iPic 周岁时，说说这款让我骄傲的产品》，这次，没人在评论里批评了，之前在上一篇文章里批评的朋友，这里也点赞了。</p>
<hr>
<p>昨天到今天，Pin 作者和锤子科技就「大爆炸」抄袭 Pin 的分词一事，在微博上吵着。以目前的情况看，锤子可能更占优势（情感上，我是站在 Pin 这一边的，因为我和 Pin 作者见过面、握过手，而老罗没有）。</p>
<p>不过，我想说的是，Pin 作者 <strong>证明自己最好的方式，不是赢得这次争吵，而是其产品的下一次创新。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0714 - 几天没写代码了]]></title>
      <url>https://atjason.com/daily/2017-07-14.html</url>
      <content type="html"><![CDATA[<p>最近有点私事，再加上散漫，有几天没写代码了。</p>
<p>准备新养成个习惯：积累代码片断。通过这种习惯，还逼迫自己保持学习、沉淀。</p>
<p>暂时先随意找个代码片断管理工具，等丰富了，再好好找个工具，或者自己做个。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0713 - 悼念]]></title>
      <url>https://atjason.com/daily/2017-07-13.html</url>
      <content type="html"><![CDATA[<p>全文完</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0712 - 坚守，加强老本]]></title>
      <url>https://atjason.com/daily/2017-07-12.html</url>
      <content type="html"><![CDATA[<p>在做独立开发者的路上，经常会有些诱惑，比如：能赚快钱的外包。做，还是不做？</p>
<p>都有道理。做吧，可以多点收入，缓解眼下的压力，让自己能坚持更久。不做的话，可以专注于自己的产品，不断积累能力和个人品牌，也就是自己的老本。</p>
<p>总的来说，除非诱惑非常大、快钱特别多，否则，坚守自己的路，加强老本。相信，长久来看，未来会有更多收获等着自己。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0711 - 在 iPic 周岁时，说说这款让我骄傲的产品]]></title>
      <url>https://atjason.com/daily/2017-07-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/t7kvl.png" alt=""></p>
<p><strong>2016 年 7 月 4 日，图床神器 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> 上架 Mac App Store</strong>，虽说这是个好记的日子：美国独立日，但其实我还是忘记了。是前几天一条银行扣款短信提醒了我，刚开始我还觉得奇怪：我最近没在 MAS 上买软件呀？后来一查才知道：这里 iPic 高级版第二年的扣款短信。</p>
<p>Git 历史显示，<strong>iPic 项目始建于 2016 年 5 月 19 日</strong>。事实上，因为已经过了这么长时间，我也记不起 iPic 一路走来的点点滴滴，很难像 Klib 那样有系统性的总结。这里主要回忆一些关键的点，或者我觉得有意思的，拿出来与大伙一说。</p>
<p>文章很长，我也并不知道你大概需要几分钟读完；<strong>不喜欢读长文的，现在就可以关闭了</strong>，去找些你更感兴趣的吧。</p>
<p>————- 长文开始警戒线 —————-</p>
<h2 id="iPic-带给我的骄傲"><a href="#iPic-带给我的骄傲" class="headerlink" title="iPic 带给我的骄傲"></a>iPic 带给我的骄傲</h2><p>我最骄傲的，是 <strong>iPic 开创了 macOS 图床工具这一品类</strong>。在 iPic 之前，你在 macOS 中是找不到类似工具的，而在 iPic 之后，接连有多款 App 出现，甚至包括 Windows 版。曾经，你在 Mac App Store 搜索「iPic」，会有多款类似产品。<strong>使用「iPic」作为搜索关键字，也算是他们向我致敬的一种方式吧。</strong>不过，现在没有了，因为我向苹果举报、苹果向他们发律师邮件，他们已经去掉这一关键字了。</p>
<p>如果你在 macOS 平台找到比 iPic 更好的图床工具，告诉我。</p>
<h2 id="Swift-带来的尴尬"><a href="#Swift-带来的尴尬" class="headerlink" title="Swift 带来的尴尬"></a>Swift 带来的尴尬</h2><p>Swift 是 2014 年中发布的，iPic 是 2016 年初启动的。虽说已过 1 年多，但对于一门编程语言而言，还是太短了。主要的问题是：<strong>不成熟，导致厂商对 Swift 的支持非常有限</strong>。比如，iPic 需要集成各家图床所提供的接口。对于一些较成熟的语言，比如 JavaScript、Python 等等，厂商可以直接提供了 SDK，只需要调用简单的接口，就可以实现图片上传这样的操作。</p>
<p><img src="https://ps.toolinbox.net/taxpu.jpg" alt=""></p>
<p>而对于 Swift 这么年轻的语言，肯定是没有 SDK 的，这就需要我 <strong>一个个去集成各个服务商的 REST API</strong>，这一过程相当繁琐。其中，大量的时间花在 OAuth 的实现上。不过，好在 OAuth 是相对标准的东西，各家的实现也大体相当，多支持几个图床，能重用的代码也多了。</p>
<p>另外，做这种相对 SDK 来说偏底层的东西，也是有好处的。比如，可以多一些对 OAuth 的理解；在设计 Klib 后端接口时，也能多参考这种工业级的 REST API 设计规范；等等。</p>
<p>其实，在这个过程中也会有很多有意思的发现，比如，<strong>阿里云的 OSS 接口基本是复刻 Amazon S3，连参数名都一样</strong>。Amazon S3 果然是企业级的，权限系统什么的很复杂，一般人很难搞定，而后来的阿里云则对中小用户更友好些。当然，只是模仿接口也未可厚非，但总会让人看轻一些：不要把 S3 中一些不好的设计也抄了去才好 😂</p>
<p>期间，也经历了 Swift 2.2 &gt; 3.0 的升级，感觉比较多的变更都是语法层面，甚至可以说是变量名方面。个人感觉，<strong>我愿意给 Swift 版本升级多一些体谅：虽说确实会带来一些麻烦，但总比裹足不前要好</strong>。</p>
<p>顺便说一句，我所有的产品都是纯 Swift 的：<a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a>、<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a>、<a href="https://toolinbox.net/iPic/iPicMover.html" target="_blank" rel="external">iPic Mover</a>、<a href="https://toolinbox.net/iPaste/" target="_blank" rel="external">iPaste</a>、<a href="https://toolinbox.net/iTimer/" target="_blank" rel="external">iTimer</a>、<a href="https://toolinbox.net/iHosts/" target="_blank" rel="external">iHosts</a></p>
<h2 id="我不愿增加一个额外的选项"><a href="#我不愿增加一个额外的选项" class="headerlink" title="我不愿增加一个额外的选项"></a>我不愿增加一个额外的选项</h2><p>首先吐槽一下七牛的接口。</p>
<p>七牛起初只有几个区域（好像是华北、华东，具体忘了），每个区域的不同的图片上传地址。后来，七牛增加了新的区域，每个区域又有新的上传地址。关键问题在于，<strong>Bucket 的名字在各个区域中不能重复的，但七牛却没有提供根据 Bucket 名字查询其所在地区的接口</strong>。这就意味着，在 iPic 的图床配置中，用户需要额外指定 Bucket 所在地区。这在我看来，是相当傻的。我相信，很多用户在创建结果后，并不记得 Bucket 所在地区，这就使得在配置图床时，遇到了额外的困难。</p>
<p><strong>我实在不想增加这一设置项</strong>，所以实际上我是这么做的：<strong>用户不需要指定地区，iPic 自动尝试所有地区</strong>。如果图床的其他信息如 Key 是正确的，则可以找到正确的地区。这一方案，唯一问题是：一旦七牛又新开了区域，iPic 就得多尝试一个地区。至少，iPic 需要从服务器端获取七牛所有的区域列表，多了一点点维持工作量。不过，为了减少界面上一个设置项，这些都是值得的。</p>
<p>其实，不止七牛，别的图床也有类似的问题。不过，要好一些。比如，Amazon S3 如果选择错误的地区上传，返回结果中会包含正确的地区，选用即可。</p>
<p>这样以后，<strong>七牛、又拍、阿里云 OSS、Amazon S3 的图床配置界面一模一样，这降低了用户的使用成本，也让我很满意。</strong></p>
<p><img src="https://ps.toolinbox.net/sk70s.png" alt=""></p>
<h2 id="开放图片上传能力的-iPicUploader"><a href="#开放图片上传能力的-iPicUploader" class="headerlink" title="开放图片上传能力的 iPicUploader"></a>开放图片上传能力的 iPicUploader</h2><p>iPic 一个比较重要的场景：<strong>在使用 Markdown 写文章时，插入图片</strong>。那与其单独使用 iPic 这样一个额外的 App，直接使用 Markdown 编辑器来插图，岂不更好？不过事实上，仅有少量的 Markdown 编辑器支持图床功能（如我在用的 MWeb），大部分并不支持。</p>
<p>正巧，Typora 作者联系上我，希望与 iPic 集成，可谓一拍即合。</p>
<p>于是，我好好研究了在 macOS 沙盒限制下，各个 App 间通信的方式。最后，我选择了<strong>「私有剪贴板」这种方式</strong>（这个名字是我自己取的），<strong>既可以安全地上架 Mac App Store，也不会对用户的通用剪贴板造成干扰</strong>。事实上，在我向 Bear（对，就是前段时间大红大紫的 Markdown 编辑器 Bear）介绍时，他们也夸赞这种方式。只可惜，他们没接入 iPic…</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gw1fah02vc5sdg30hm0bsnbg.gif" alt=""></p>
<p>具体的步骤：</p>
<ul>
<li>Typora 集成 <a href="https://github.com/toolinbox/iPicUploader" target="_blank" rel="external">iPicUploader</a> 这个开源的 iPic 上传助手</li>
<li>Typora 等 Markdown 编辑器，当用户通过拖拽等方式上传图片时，读取图片信息，写入「私有剪贴板」，然后等待返回结果<ul>
<li>注：之所以要由 Typora 读取图片信息，是因为 iPic 处于沙盒模式中，如果客户端仅仅发送一个文件路径，iPic 是没有权限读取的</li>
<li>另外，iPicUploader 也能检测 iPic 是否安装、当前是否在运行等情况</li>
</ul>
</li>
<li>当 iPic 运行时，会监控「私有剪贴板」中的内容。一旦发现有待上传的图片，则上传、并将图片地址写回「私有剪贴板」</li>
<li>Typora 得到上传结果，即图片的 http 地址，更新 Markdown 中的图片链接</li>
</ul>
<p>事实上，<strong>从客户端的角度，使用过程比上述文字描述要简单的多</strong>：只要在项目中集成 <a href="https://github.com/toolinbox/iPicUploader" target="_blank" rel="external">iPicUploader</a>，通过一个接口调用就可以了：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> imageFilePath = <span class="string">"/Path/to/the/pic.jpg"</span></div><div class="line"></div><div class="line">iPic.uploadImage(imageFilePath, handler: &#123; (imageLink, error) <span class="keyword">in</span>    </div><div class="line">	<span class="keyword">if</span> <span class="keyword">let</span> imageLink = imageLink &#123;</div><div class="line">		<span class="comment">// Image uploaded        </span></div><div class="line">	   </div><div class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> error = error &#123;</div><div class="line">		<span class="comment">// Some error happened</span></div><div class="line">	&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>当然，做这事也不是纯粹因为对开源世界的热爱，我自然是有私心的：傍大款。比如，像 Bear 这样级别的产品如果集成 iPic，那对 iPic 自然是极好的。只可惜，大部分邀约都没有反馈，最终成产品的只有 Typora…</p>
<p><img src="https://ps.toolinbox.net/dj57r.jpg" alt=""></p>
<h2 id="自立山头的-iPic-Mover"><a href="#自立山头的-iPic-Mover" class="headerlink" title="自立山头的 iPic Mover"></a>自立山头的 iPic Mover</h2><p>除了配合 Markdown 编辑器，我还单独开发了 iPic Mover，核心功能是：<strong>通过 iPic 上传 Markdown 中的图片（包括本地或网络图片）至新的图床，并替换 Markdown 中的图片地址。</strong></p>
<p>主要的使用场景：</p>
<ul>
<li><strong>将博客中的图片整体搬家至新图床</strong></li>
<li><strong>使用 Markdown 编辑器编辑文章后，一键上传本地图片</strong></li>
</ul>
<p><img src="http://ww2.sinaimg.cn/large/006y8lVagw1fajaszqardg30ia0bc4cp.gif" alt=""></p>
<p>其实，这个功能确实可以作为 iPic 的一部分。这样，至少可以省去单独为 iPic Mover 这款 App 设计 Logo，运营推广等多方面的资源。不过，我还是不想因为这个小众的功能，让 iPic 主体变得复杂。毕竟，大部分 iPic 用户并不需要这个功能。如果不需要却要天天看见这个功能，我是觉得不爽的。</p>
<h2 id="免登录上传图片至微博"><a href="#免登录上传图片至微博" class="headerlink" title="免登录上传图片至微博"></a>免登录上传图片至微博</h2><p>iPic 默认上传图片至微博图床，且无需登录。为什么一定要做到无需登录呢？主要是为了实现<strong>「开箱即用」</strong>的效果。想想一个国际友人，在下载 iPic 后，还需要注册一个微博账户才能用、注册界面丑陋且多年未更新，那是怎样的画面？</p>
<p>其实，iPic 要实现开箱即用：即安装后就可以上传图片至微博，技术上还是有些复杂的。不过，严格来讲，把微博当图床来用，本身确实是在道德上无法站住脚的，怎么说都有滥用微博资源的嫌疑。出于这一点，我就不在文章中详细介绍了，大家也不要私信问我，我不会回答。不过，想想我经常看的，包括 App 启动广告、女性生理期用品在内的微博广告，我心里就觉得舒服一些了。</p>
<h2 id="关于-iPic-付费模式"><a href="#关于-iPic-付费模式" class="headerlink" title="关于 iPic 付费模式"></a>关于 iPic 付费模式</h2><p>iPic 的付费模式是：</p>
<ul>
<li>默认的（微博）图床免费，所有 iPic 的功能免费</li>
<li>自定义图床收费，图床包括：七牛云 、又拍云、阿里云 OSS 、Imgur 、Flickr 、Amazon S3 共 6 款，包含了目前主流的图床，收费模式为 ￥58 每年</li>
</ul>
<p><img src="https://ps.toolinbox.net/th82z.png" alt=""></p>
<p>其实，默认的微博图床还是挺好的：免费、不限流量、CDN 加速、稳定可靠、支持 https 等等，主要的局限是：</p>
<ul>
<li>不支持 png 格式</li>
<li>会对图片进行肉眼可见的有损压缩</li>
<li>无法删除已上传的图片</li>
<li>无法查看或管理所有自己上传的图片</li>
<li>毕竟是依赖第三方服务，多少有风险，比如新浪倒闭</li>
</ul>
<p>相反，如果不能接受微博图床的上述局限，可使用灵活度更高的自定义图床。比如，我自己使用的是七牛图床。起初是因为七牛提供一定额度的免费流量，后来才发现是个坑：免费流量不支持 https，而我的 <a href="https://atjason.com/">博客</a> 和 <a href="">产品首页</a> 已经全面支持 https，虽说我每月也就给七牛交很少的流量费，不过多少有些受骗的感觉。早知如此，我就选择阿里云 OSS 了。</p>
<p>这里顺便再说个七牛的一个坑：不支持 bucket 的自定义域名。也许你会说：支持的呀？但其实，只有「融合云」是支持的。但 CDN 毕竟有缓存问题，比如在做 Klib 分享时，我并不想因为速度的提升带来很大的缓存的问题（这会带来业务的问题，详见我当时的介绍），最后还是使用了支持自定义域名的阿里云 OSS. 比如，你在访问 <a href="http://s.klib.me/share.html" target="_blank" rel="external">http://s.klib.me/share.html</a> 时，其实是访问的阿里云 OSS 里的文件。</p>
<h3 id="关于订阅模式"><a href="#关于订阅模式" class="headerlink" title="关于订阅模式"></a>关于订阅模式</h3><p>现在，订阅依然不为人所接受。而想想 1 年前，订阅更加被抗拒；但我还是依然坚持做吃螃蟹的人。一方面，我想有所尝试；另一方面，我觉得订阅制是对开发者友好的，进而对整个生态友好的。试想，如果开发者都坚持不下去了，也就不会再有好软件诞生。Windows 的生态就是很好的例子，我时不时听到有开发者放弃、或不愿开发 Windows 下的应用，很大的一个原因是：盗版太猖獗。很多人用盗版用得理所应当，觉得 Windows 操作系统收费是变态，OK，惹不起我还躲得起，<strong>最终吃亏的还是用户自己：没有好软件可用</strong>。</p>
<p>Apple 的订阅制有个细节可以跟大家分享下。对于订阅的首年，Apple 会抽成 30%，即你付的 58 中，我只能得到 58 * 0.7 = 40.6，17.4 被 Apple 拔毛了。而在第 2 年及以后，Apple 抽成降低至 15%，即我可以多得 8.7 元。虽不多，但蚊子腿也是肉。更多的，是 Apple 对开发者的支持，用户对我的肯定。</p>
<p>￥58 一年的软件贵吗？贵，尤其是在国内的软件环境里，绝对是高价。但，还是有人愿意购买。我相信，购买的人不是傻子，而是经过充分对比才做的聪明选择。￥58 一年对于使用 iPic 所节约的时间而言，可以忽略。<strong>用钱买效率，并不是所有人的习惯，只是高效人士的习惯。</strong></p>
<p>很开心的，就是通过 iPic 认识了一群 <strong>高效人士</strong>。他们认可我的努力，认可我对产品的理解，认可 iPic 对他们带来的帮助，愿意用付费的方式来支持我继续，还通过微信群、邮件等方式，提出改进意见。<strong>在此，谢谢各位的支持。</strong></p>
<h2 id="关于-iPic-的未来"><a href="#关于-iPic-的未来" class="headerlink" title="关于 iPic 的未来"></a>关于 iPic 的未来</h2><p>其实，就像我在小结 Klib 中已经提到了，<strong>对于 iPic 这种典型的工具型应用，其天花板是很明显的</strong>：一旦功能实现了，进一步的想象空间很小。这也是我很长时间都没有对 iPic 更新的主要原因，因为不知道怎么做才是对的。</p>
<p>比如，有用户提除了 Markdown 格式外，也支持 reST 等其它标记语言的格式。这样的需求肯定是有道理的。但问题是，相对而言更小众。如果列表里同时列出 Markdown、reST，对于只用 Markdown 的大多数用户而言，是种干扰，因为他们可能根本就不知道什么是 reST。当然，可以在配置在自定义链接格式。这也是有道理的，只是又增加了产品的理解难度。</p>
<p>对于这类的需求，我很难判断是否要加。不加，肯定会流失部分用户；加，又会对已有用户造成一定的困扰。想不好之前，我宁愿暂时什么都不做。</p>
<p>当然，这并不意味着 iPic 不会更新。就像同样许久未更新的 iPaste，本月会迎来重大更新：支持 Pin 分组及管理。同样的，随着大家对图床需求的演变，一旦我想通了某一点，自然会适时跟进的。</p>
<h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>这篇文章很长，希望你能有与付出时间相称的回报。不然，我不会觉得不好意思…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0710 - 看病去医院，多大程度是心理作用？]]></title>
      <url>https://atjason.com/daily/2017-07-10.html</url>
      <content type="html"><![CDATA[<p>这两天宝宝生病，没少往医院。首先感谢医生和工作人员，让宝宝的病情刚好；不过，还是有些想法。</p>
<p>首先，最重要的当然是不生病。这次看来，几乎肯定是被传染的。小家伙有吃手的习惯，出门之后到处乱摸，然后又放嘴巴里吃，估计这是最可疑的传染方式。</p>
<p>进一步，这种病，家庭医生是否能解决呢？是否一定要到医院呢？我想，以下几个方面还很难取代：</p>
<ul>
<li>权威性<ul>
<li>事关小孩的健康，家长都是很担心的，愿意花尽可能多的钱，找最好的医疗资源。这方面，大医院的权威很难被取代。</li>
</ul>
</li>
<li>专业设备<ul>
<li>医院，有专业的化验检测设备，而这些设备可能昂贵或庞大。只有出现在病患比较集中的地方，才更经济。</li>
</ul>
</li>
<li>住院服务<ul>
<li>有些病症，确实需要住院以持续观察、治疗。</li>
</ul>
</li>
<li>当然还有很多…</li>
</ul>
<p>确实，大医院有很多不可替代性。不过，凡病都往大医院跑，肯定也是不对的。我觉得，家庭医生、个性化就医服务，肯定会在不长的时间内兴起。当好赚的钱都赚得差不多了，总会资本和才能涌入医疗这个难啃的骨头。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0709 - 沉浸在自己的世界里，是好是坏？]]></title>
      <url>https://atjason.com/daily/2017-07-09.html</url>
      <content type="html"><![CDATA[<p>做事，有自己的想法是必须的。但听从别人的规劝，是否也是？</p>
<p>正反都有例子。</p>
<p>比如，像马斯克那样顶着无数压力和质疑，推动特斯拉、Space X 等事先看来荒唐，事后看来英明的事，无疑证明了要有自己的坚持。</p>
<p>比如，即便现在，我也希望有高人指点，告诉我未来的路如何走更好。这，不也是别人的规劝吗？</p>
<p>沉浸在自己的世界里，无视别人或善意或恶意的规劝，很难说是好是坏。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0708 - 今天休息，顺便废了个点子]]></title>
      <url>https://atjason.com/daily/2017-07-08.html</url>
      <content type="html"><![CDATA[<p>今天没写代码。</p>
<p>下午，和用户及朋友讨论了一个点子：做外贸的图床服务。痛点的出发点是：做外贸的需要在国外的网站上放图片，其中 Amazon S3 是个不错的空间。可是，S3 的权限系统很复杂，并且，Windows 下并没有合适的图床工具（是的，iPic 目前仅支持 macOS 版，不支持 Windows），于是就是个麻烦。</p>
<p>我设想了一种服务，可以对用户屏蔽这些复杂性，提供简单的使用方式，收费方式也简单，甚至想了大概的技术方案。可是，一个认识做外贸的朋友说，现在大多使用电商自带的图床，基于空间的图床，已经少有人用了。哎，这个点子就放弃吧。</p>
<p>晚上看了 3 集《硅谷》这部美剧，有些桥段有意思，毕竟是圈内的。之前空闲时继续看吧，当是奖励了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0707 - iTips v0.0.1]]></title>
      <url>https://atjason.com/daily/2017-07-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/87g0g.png" alt=""></p>
<p>连着编码 3 天，今天终于拿出了 iTip v0.0.1 版本。</p>
<p>主要是想验证下这个想法，以及目前的交互是否合适。接下来：</p>
<ul>
<li>一方面补充关键环节，如快速添加</li>
<li>另一方面，尽量多地用真实数据去感受，看是否能解决问题，该如何调整</li>
</ul>
<p>累了，今天早休息。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0706 - 个人品牌建立]]></title>
      <url>https://atjason.com/daily/2017-07-06.html</url>
      <content type="html"><![CDATA[<p>昨天，被有才拉去录「<a href="https://banlan.show/bitvoice/152" target="_blank" rel="external">比特新声</a>」，聊得挺开心，主要是价值观比较契合，所以有的聊。</p>
<p>期间必然地聊了过去，比如当初为什么走上独立开发这条路，等等。这也让我不自觉地回想这条路。想想，从名不见经传的开发者，到目前被人认同，真是个漫长的过程。</p>
<p>我觉得主要的，还是自己肯努力、花时间。有了这一点，什么开发上的困难，对产品的把握，运营，等等，都是可以学的。</p>
<p>未来怎样，我并不知道。我不是一个擅长做决定的人，但是一个能够坚守的人，相信总会守得云开见月明。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0705 - 说说 NSPopover 的一个坑]]></title>
      <url>https://atjason.com/daily/2017-07-05.html</url>
      <content type="html"><![CDATA[<p>今天开发 iTips，遇到一个很诡异的问题：<strong>NSOutlineView 中的 NSTableCellView 中的 NSTextField，始终有一个背景色，无论怎么设置都无法去掉。</strong>如下图中左侧部分所示：</p>
<p><img src="https://ps.toolinbox.net/anc8i.png" alt=""></p>
<p>关键的，<strong>相同的代码在另一个项目中，则没有问题，奇了怪了。</strong></p>
<p>Google 了快一个小时，最后终于在 <a href="https://github.com/rheinfabrik/RFOverlayScrollView/issues/6" target="_blank" rel="external">GitHub 的一个项目的一个 Issue 的一个评论里</a>，有人说了一点，才 <strong>终于知道为什么</strong>：NSPopover 默认使用 <code>NSAppearanceNameVibrantLight</code> 这种样式，因此带来问题：NSTextField 使用透明背景色，进而就会取 NSPopover 中的背景色，就是图中的问题。</p>
<p><strong>解决方案</strong>：只要将 NSPopover 的主题改为 <code>NSAppearanceNameAqua</code> 即可：</p>
<p><code>self.view.appearance = NSAppearance(named: NSAppearanceNameAqua)</code></p>
<p>知道原因后，改是容易的。关键的，很难知道这个原因，这是你翻遍 Apple 技术文档第一页，都找不到答案的问题。好在解决了，不然真的是闹心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0704 - Klib 到底赚了多少钱？]]></title>
      <url>https://atjason.com/daily/2017-07-04.html</url>
      <content type="html"><![CDATA[<p><strong>说说 Klib 这一生，以及能否养活他爹。</strong></p>
<hr>
<p><strong><a href="http://www.klib.me/cn/" target="_blank" rel="external">Klib</a></strong> 这款产品，从最初的想法，到目前第四版发布，已整整半年。而这个产品也走到了分叉路口，也是回顾的好时机。<strong>Klib 到底赚了多少钱？</strong>往下看。</p>
<p>先前，已经写了 2 篇关于 Klib 的长文：</p>
<ul>
<li><a href="https://atjason.com/daily/2017-02-21.html">0221 - 我是如何把 Klib 带到这个世界的</a></li>
<li><a href="https://atjason.com/daily/2017-06-20.html">0620 - 关于 Klib 分享，各种纠结之后，我选了如下方案</a></li>
</ul>
<p>感兴趣可以先看这两篇文章，相关的部分这里不再重复。</p>
<h2 id="Klib-简要时间表"><a href="#Klib-简要时间表" class="headerlink" title="Klib 简要时间表"></a>Klib 简要时间表</h2><p>2017 这半年，便是 Klib 的全部。</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th>版本</th>
<th>日期</th>
<th>主要功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.1.3</td>
<td>2 月 26 日</td>
<td>首发上架 MAS</td>
</tr>
<tr>
<td>1.5.5</td>
<td>4 月 4 日</td>
<td>从 Amazon、Kindle 客户端、多看导入</td>
</tr>
<tr>
<td>-</td>
<td>-</td>
<td>在 Kindle for macOS 中回顾</td>
</tr>
<tr>
<td>1.6.1</td>
<td>5 月 16 日</td>
<td>从 iBooks 导入</td>
</tr>
<tr>
<td>-</td>
<td>-</td>
<td>可标记章节</td>
</tr>
<tr>
<td>-</td>
<td>-</td>
<td>引入实验室</td>
</tr>
<tr>
<td>1.7.2</td>
<td>6 月 23 日</td>
<td>新增阅读器</td>
</tr>
<tr>
<td>-</td>
<td>-</td>
<td>一键分享读书笔记</td>
</tr>
</tbody>
</table>
<h2 id="在产品层面聊聊-Klib"><a href="#在产品层面聊聊-Klib" class="headerlink" title="在产品层面聊聊 Klib"></a>在产品层面聊聊 Klib</h2><h3 id="Klib-解决了什么问题？"><a href="#Klib-解决了什么问题？" class="headerlink" title="Klib 解决了什么问题？"></a>Klib 解决了什么问题？</h3><p>这应该是我启动一个项目时，最先、最经常问自己的问题，也应该是 <strong>产品存在的唯一理由</strong>。</p>
<p>起初，这个问题很好回答：<strong>管理用户在 Kindle 上所做的标注和笔记。</strong></p>
<p>后来，随着产品的演进，引入了很多其他功能，甚至可以从 iBooks 这个跟 Kindle 没有任何关系的 App 中导入笔记，产品的定位和方向就变得不清晰了。关于这一点，在文末统一介绍。</p>
<h3 id="Klib-做得怎样？"><a href="#Klib-做得怎样？" class="headerlink" title="Klib 做得怎样？"></a>Klib 做得怎样？</h3><p>值得骄傲的，<strong>Klib 做到了很多第一：</strong></p>
<ul>
<li>首款上架 Mac App Store 的 Kindle 标注管理工具</li>
<li>首款能在 Kindle for macOS 中回顾笔记的 App</li>
<li>能从 Kindle、导出的 html、Amazon 官网中导入笔记，地表最强、没有之一</li>
<li>首款可以导入 Kindle + 多看系统中笔记的 App</li>
<li>目前自动排除 Kindle 重复标注最好的 App</li>
<li>首款可以将 Kindle 的标注一键复制为 Markdown 格式的 App</li>
<li>首款可以优雅管理 iBooks 标注的 App</li>
<li>…</li>
</ul>
<p>简单的说，如果你需要管理 Kindle 标注、恰巧有一台 Mac，<strong>Klib 是你最好的选择</strong>。</p>
<h3 id="Klib-的一些功能"><a href="#Klib-的一些功能" class="headerlink" title="Klib 的一些功能"></a>Klib 的一些功能</h3><p>牛皮不是吹的，来说说 Klib 中一些不错的点：</p>
<p><strong>「在 Kindle for macOS 中回顾笔记」</strong></p>
<p>这是一个既酷炫、又实用的功能。</p>
<p>我们在回顾笔记时，有时会觉得标注的内容太简洁了、需要回看书的上下文。怎么办呢？很巧妙地，Klib 可以打开 Kindle for macOS、并跳转到标注所在位置，够贴心吧？</p>
<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fewrf4i8frg30g80cs47a.gif" alt=""></p>
<p><strong>「自动合并不同来源的笔记」</strong></p>
<p>如上所述，Klib 支持从 Kindle、Kindle 客户端、Amazon 等来源导入笔记，这也引入了书籍和笔记的合并问题。并且，用户有可能在 Klib 中修改笔记，这会让合并所需处理的逻辑更复杂。</p>
<p>好在，<strong>Klib 结合书名、作者、笔记原文、笔记位置等信息，很好地解决了不同来源的合并问题</strong>，尽可能地避免重复。</p>
<p>不过，毕竟不同来源的笔记没有标准格式，导入时依然会有重复的可能。于是，Klib 还支持手动合并书籍。看似简单，这却会又一层地增加复杂度：如果在被合并书中增加新标注，如何正确导入到合并的书中？单单是这一整套的合并逻辑，我处理了将近一个星期，梳理了大量测试用例，并用单元测试，保证各逻辑的正确。</p>
<p>当然，<strong>这是用户无法感知、却又觉得理所当然的功能。</strong></p>
<p><strong>「自动排除重复的笔记」</strong></p>
<p>之前 Kindle 系统的标注逻辑是：选择文本，然后手动标注。新版系统做了调整：选择文本后自动标注。这带来的问题是：如果第一次没有选择正确、或者干脆就是误解，即使删除后重新标注，之前删除的标注依然会位于 Kindle 系统中，进而会被导入。</p>
<p><img src="https://ps.toolinbox.net/ewqtt.jpg" alt=""></p>
<p><strong>Klib 结合笔记的位置、内容的相似度，几乎可以排除所有重复的内容</strong>，仅保留最有价值的一条。</p>
<p>同样，<strong>这是用户无法感知、却又觉得理所当然的功能。</strong></p>
<p><strong>「标注为章节」</strong></p>
<p>章节对于笔记的管理是很有帮助的，不然就会是一堆标注罗列在一起，没有规律，也会给回顾带来压力。</p>
<p><strong>如何读取到书的章节信息呢？</strong>之前辗转联系上一位前 Kindle 在线阅读的工程师，他的原话是：我们内部有接口，用起来很容易。而很可惜，<strong>Kindle 并没有开放接口</strong>。如果要彻底支持，就需要解析带数字签名的亚马逊私有电子书格式。这工作量与难度，是相当巨大的。</p>
<p>不能放弃呀。于是，我想出了一个方式：</p>
<ul>
<li>阅读时在章节文字上添加标注</li>
<li>导入 Klib 后，选择全部章节对应的标注，将其「标记为章节」</li>
<li>在 Klib 中复制为 Markdown 时，自动为章节添加二级标题</li>
<li>在 Klib 的阅读器中回顾时，章节会让排版更优雅</li>
</ul>
<p><img src="https://ww1.sinaimg.cn/large/006tKfTcgy1ffixqimibcg30hi0bu4qp.gif" alt=""></p>
<p>虽然需要手工多做一些事情，但与其能达到的效果，是相当划算的。</p>
<p><strong>「阅读器及分享」</strong></p>
<p>之前的 Klib 使用列表来展示所有笔记，虽然可以按下空格显示笔记的预览，但总归没有整体的感觉。</p>
<p>为了提升阅读体验，我在最近的 Klib 中引入了「阅读器」，名字和交互灵感来自 Safari 的「阅读器」，后者可以去除网页中的冗余元素，仅保留文本、图片等核心内容。想法很明确，而设计优雅的排版以方便中英文阅读，并不容易。并且还要考虑网页在电脑、手机等不同设备上的阅读效果，难度加倍。</p>
<p>经过好几版设计后，最终的样式是这样的：</p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fgvdy9tha1g30fo0d6asu.gif" alt=""></p>
<p>可以隐藏所有干扰因素，仅剩下文字本身。纯净排版，让你沉醉于阅读；全屏体验，效果更佳。</p>
<p>有了优雅的排版，怎能不分享给好友呢？以书会友，共读精彩。当我偶然在一个读书群中看到用户分享使用 Klib 生成的读书笔记时，真的很开心 :)</p>
<p><img src="https://ps.toolinbox.net/7y3ak.jpg" alt=""></p>
<p><strong>「实验室」</strong></p>
<p>功能的开发，总是众口难调。而我也可能做出错误的判断，怎么办呢？</p>
<p>目前，Klib 引入的「实验室」功能。对于变动较大的新功能，都会在「实验室」中观察一段时间。如果大家不喜欢，新功能将会调整、甚至移除。另外，考虑暂时不用考虑收费的问题，看试验的结果，延迟决定。</p>
<p><img src="https://ps.toolinbox.net/ppn90.jpg" alt=""></p>
<h2 id="Klib-之于技术"><a href="#Klib-之于技术" class="headerlink" title="Klib 之于技术"></a>Klib 之于技术</h2><p>麻雀虽小，五脏俱全。Klib 看似一个很小的产品，涉及到的技术还是很多的。</p>
<table>
<thead>
<tr>
<th>功能</th>
<th>技术</th>
</tr>
</thead>
<tbody>
<tr>
<td>从 Kindle 导入</td>
<td>多语言文本识别、日期识别</td>
</tr>
<tr>
<td>从 Kindle 客户端导入</td>
<td>html 内容解析</td>
</tr>
<tr>
<td>从 Amazon 导入</td>
<td>html 内容解析</td>
</tr>
<tr>
<td>从 iBooks 导入</td>
<td>iBooks 数据结构逆向解析</td>
</tr>
<tr>
<td>导出至 Evernote</td>
<td>Evernote 6 年前的 SDK</td>
</tr>
<tr>
<td>阅读器</td>
<td>使用 Markdown 生成 html，CSS 布局，SNS 分享</td>
</tr>
<tr>
<td>笔记分享</td>
<td>Python + Flask + Nginx + 阿里云 OSS + 服务器</td>
</tr>
</tbody>
</table>
<h3 id="界面开发"><a href="#界面开发" class="headerlink" title="界面开发"></a>界面开发</h3><p>这部分没有太多可说的，因为我想尽量保持原生的感觉，大部分都是使用 <strong>标准控件</strong>。不过，还是遇到了坑，比如：</p>
<ul>
<li><code>NSOutlineView</code>会出现诸如 UI 刷新不及时、图标丢失等现象。</li>
<li><code>MKWebView</code> 在 macOS 10.11 时有闪退，10.12 则正常</li>
</ul>
<p>另外，要把标准控件用好，并不件容易。一个原因是，<strong>Apple 的技术文档，和 MSDN 不在一个世纪</strong>。</p>
<h3 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h3><p>质量是软件的生命。对于我来讲，最大的问题是：时间有限。如果 <strong>在尽量少的时间内，覆盖尽量多的场景，减少 Bug</strong>，是一个挑战。</p>
<p><strong>单元测试</strong></p>
<p>在开发功能时，立即完善单元测试。既可以保证开发时避免遗漏，又可以一劳永逸地使用单元测试保证后续开发不会影响之前的功能，非常推荐。</p>
<p>截止目前，Klib 共有 133 条单元测试：</p>
<p><img src="https://ps.toolinbox.net/7bq6p.jpg" alt=""></p>
<p>不过，在项目复杂后，Xcode 的单元测试变得很慢。尤其是 App 签名时，程序修改后，单元测试首次运行会失败，必须第 2 次运行才可以，很是闹心。</p>
<p><strong>测试用例</strong></p>
<p>人总是会遗忘的。在刚开发功能时，测试时能很好地覆盖功能的各个细节，时间长就忘了。最好的办法是，<strong>开发功能时，即写充分的测试用例</strong>。<strong>出现用户报的 Bug</strong>，通常意味着这个环节是薄弱的。修复后，我都会 <strong>新添加一条测试用例</strong>，以保证后续的版本不会出类似的问题。</p>
<p>截止目前，Klib 共有 682 条测试用例：</p>
<p><img src="https://ps.toolinbox.net/csni9.jpg" alt=""></p>
<p>也就是说，每发一个版本，我都要测试 682 个场景，如果考虑到操作系统版本（macOS 10.11, 10.12），理论上测试工作量还要翻倍。各位自行脑补一下，每发一个版本，我在电脑前久坐测试的场景…尤其是提需求希望支持 10.10 甚至更多版本的朋友。</p>
<p><strong>收集日志</strong></p>
<p>错误是难免的，重要的是及时改进。要改进，首先就要能知道错误。</p>
<ul>
<li>Klib 本身会在错误时输出日志、记录在本地</li>
<li>集成 DevMate 后，可以很方便地收集闪退日志</li>
</ul>
<p>当然，前提是用户愿意并手动发送日志。</p>
<p><strong>慎用第三方库</strong></p>
<p>或者说，尽量使用稳定可靠的第三方库。在 DevMate 中追踪到的仅有的几个 Crash 中，大部分是 6 年前的 Evernote SDK 引起的，我也是无奈…</p>
<h3 id="软件性能"><a href="#软件性能" class="headerlink" title="软件性能"></a>软件性能</h3><p>Klib 最开始遇到的性能瓶颈是：当用户有上万条标注时，导入需要将近 2 分钟。其中，大部分时间用于日期识别、数据合并。经过改进后，导入仅需 10 秒左右，满意。</p>
<p>不过，目前还有待改进的是：当有大量数据时，界面操作会有卡顿。数据越多，卡顿越明显。确实还是有可改进的空间。一方面是减少计算量，另一方面是进一步分离界面操作与后台数据计算。</p>
<h2 id="Klib-运营-amp-推广"><a href="#Klib-运营-amp-推广" class="headerlink" title="Klib 运营 &amp; 推广"></a>Klib 运营 &amp; 推广</h2><p>酒香也怕巷子深。这时代，<strong>大家每天要接触的信息太多了，要将自己的产品展现在用户面前，很难。</strong>也就意味着，很需要花时间、花心思去研究。我做的并不好，也并没有找到门道，这里只是大致列出我所做的事，供大家参考。</p>
<h3 id="在-MAS-提交版本"><a href="#在-MAS-提交版本" class="headerlink" title="在 MAS 提交版本"></a>在 MAS 提交版本</h3><p>这可以说是运营的起点。因为毕竟 MAS 是 Klib 唯一的下载渠道，是脸面。并且，<strong>MAS 还是有些自然流量的</strong>。即使这个环节不加分，至少不能减分。</p>
<p>每次提交版本，都要处理至少以下内容：</p>
<ul>
<li>应用名称</li>
<li>描述</li>
<li>What’s New</li>
<li>关键字</li>
<li>截图</li>
</ul>
<p><img src="https://ps.toolinbox.net/ttfa0.png" alt=""></p>
<p>考虑到目前 Klib 支持 <strong>简体中文、英文、德文</strong>，工作量实际是上述的 3 倍。</p>
<p>其中，<strong>截图部分最为麻烦</strong>。因为，不仅要处理图片，关键的，要 <strong>事先准备素材</strong>（如书、标注内容等），才能生成适当的截图。中文还好，可我并没有标注那么英文原著。即使有，也都是技术类书籍，并不适合用于 MAS 的截图。没办法，我只能找英文中流行的书，从 Amazon 官网中找其分享的标注，合成一样书的阅读笔记。这种工作是非常费时的，德语版我干脆放弃了，直接使用英文的素材。</p>
<h3 id="域名与官网"><a href="#域名与官网" class="headerlink" title="域名与官网"></a>域名与官网</h3><p>之前，Klib 是挂在 Toolinbox 官网的：<a href="https://toolinbox.net/Klib/" target="_blank" rel="external">https://toolinbox.net/Klib/</a></p>
<p>后来，为了方便推广，我又挑选了 <a href="http://klib.me/cn/" target="_blank" rel="external">Klib.me</a> 这个域名，并建立官网：</p>
<p><img src="https://ps.toolinbox.net/t3rdh.jpg" alt=""></p>
<p>这个页面看似简单、却花费大量时间：</p>
<ul>
<li>编写内容，制作图片<ul>
<li>中文、英文</li>
</ul>
</li>
<li>页面排版<ul>
<li>适配不同设备</li>
<li>微信分享时显示图标</li>
</ul>
</li>
<li>全球访问加速<ul>
<li>期间，为了使用国内的 CDN 等资源，还不得不关站图案，哎…</li>
</ul>
</li>
<li>SEO 优化</li>
</ul>
<p>有个短的域名很重要，这样后来在分享笔记时，就可以有类似 <a href="http://s.klib.me/share.html" target="_blank" rel="external">http://s.klib.me/share.html</a> 这种简洁的网址。</p>
<h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3><p>随着 Klib 功能变得复杂，详尽的使用教程变得必须。目前，<strong><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">中文版的教程</a> 在 13 寸 MBP 上，已经有 28 页之多</strong>。</p>
<p>其中，<strong>最花时间的操作 gif 图的制作</strong>。和截图一样，首先要准备好素材。另外，就是要在最小的屏幕范围内，将意图表达清楚。因为，这意味着才能控制最终生成的 gif 文件大小。</p>
<p>之前，我使用 QuickTime 录屏，使用 iMovie 编辑后导出来 .mov 格式，然后再转成 gif. 其中，最麻烦的是 iMovie 仅能处理 16:9 的视频，这就要在录屏时非常小心地控制好比例。</p>
<p><img src="https://ps.toolinbox.net/blyjt.png" alt=""></p>
<p>后来，我发现 <strong>可以直接在 QuickTime 进行简单的编辑</strong>，也就是去除操作中多余的环节，仅保留操作部分，并生成最终的 gif 文件。这大大加快了 gif 的制作，唯一的缺点是：不能在视频中加文字。</p>
<h3 id="媒体运营"><a href="#媒体运营" class="headerlink" title="媒体运营"></a>媒体运营</h3><p>媒体的助力，对产品的推广，帮助很大。</p>
<p><strong>国内</strong></p>
<p>效果最好的就是「少数派」了，以及 V2EX、爱范儿、掘金、Mac 玩儿法等媒体，以及自己个人的媒体，如朋友圈、微博、博客、等等。</p>
<p>除了媒体是否愿意报道，对我而言，<strong>最困难就是如何写媒体文章</strong>。毕竟自己是程序员思维，很难用讲故事的方式，写出吸引人的文章。这方面还得再提高。</p>
<p><strong>海外</strong></p>
<p>其实，国外推广是个非常头痛的事。毕竟文化不同，语言也有障碍。</p>
<p>效果最好的主要是两处：</p>
<ul>
<li><a href="https://www.producthunt.com/posts/klib" target="_blank" rel="external">Product Hunt</a><ul>
<li>多人讨论，300+ 个赞</li>
</ul>
</li>
</ul>
<p><img src="https://ps.toolinbox.net/fsqb8.jpg" alt=""></p>
<ul>
<li>Twitter 上用户自发推广<ul>
<li>30+ 次转发，160+ 个喜欢</li>
</ul>
</li>
</ul>
<p><img src="https://ps.toolinbox.net/s8q1q.jpg" alt=""></p>
<p>我曾经要求自己每天在 Twitter、Facebook 发新消息，以建立品牌和影响力；不过可惜没有坚持。找个契机，重新开始运营。</p>
<h3 id="用户运营"><a href="#用户运营" class="headerlink" title="用户运营"></a>用户运营</h3><p>都说要口碑传播，最重要的，就是核心用户了。</p>
<p><strong>起初，我是抗拒建立用户群的</strong>，因为我担心重复回答基础性的问题这种技术支持，会花太多时间。不过后来想想，还是利大于弊的，毕竟可以直接和用户接触、倾听用户的声音，是非常宝贵的。目前，用户和我直接沟通的渠道有：</p>
<ul>
<li>微信群</li>
<li>Telegram 群</li>
<li>邮件反馈<ul>
<li>基本 3 小时内回复</li>
</ul>
</li>
</ul>
<p>另外一个没做的事：<strong>邮件订阅</strong>。尤其是国外，这个更常见。用户一旦喜欢一个团队、开发者，很可能是愿意知道其发布的新产品、新版本。很可惜，我还没有在网站建立这个。其中一个原因是，目前我的网站是基于博客的，加这一点不太方便。不过，找机会还是要加上。</p>
<h3 id="软件定价与收入"><a href="#软件定价与收入" class="headerlink" title="软件定价与收入"></a>软件定价与收入</h3><p>软件定价是门玄学，里面的门道非常多。最近 Day One 调整收费模式，引来一片骂声。Klib 也没什么经验可介绍，只是罗列一下历史。</p>
<p>刚发布时 Klib Pro 是 ￥50，随着功能的改进，目前是 ￥98. 另外还有 Klib 扩展包，不过由于 Amazon 功能限制，国内用户可以无视；而且，其带来的收入，与 Klib Pro 相比，可以忽略。</p>
<p>如果你觉得书、软件贵，<strong>去商场逛一圈，看买 Klib Pro 的钱，都能买些什么</strong>。</p>
<p><strong>到底 Klib 赚了多少钱？</strong>我想这是很多朋友都感兴趣的。不出意料，答案可能会让绝大多数朋友惊讶：<strong>Klib 这 6 个月给我带来的收入，差不多等于我过去一个月的薪水。</strong>作为独立开发者，要养活自己和家人，我还得坚持很久。</p>
<p>另外一点可以分享的，由于我的影响力主要在国内，<strong>85% 左右的收入来自国内用户</strong>。在国内盗版的环境下，大家能如此支持 Klib，真心感谢。我也相信，随着大家消费能力、和软件素质的提高，会有越来越多用户愿意花钱购买软件，期待。</p>
<h2 id="Klib-未来会怎样？"><a href="#Klib-未来会怎样？" class="headerlink" title="Klib 未来会怎样？"></a>Klib 未来会怎样？</h2><p>面对近 300 件要做的事，Klib 该何去何从？</p>
<p><img src="https://ps.toolinbox.net/4cdav.jpg" alt=""></p>
<h3 id="引申：功能性产品的思考"><a href="#引申：功能性产品的思考" class="headerlink" title="引申：功能性产品的思考"></a>引申：功能性产品的思考</h3><p>截止目前，我已经先后做了 6 款 mac App (Klib、iPic、iPic Mover、iPaste、iHosts、iTimer)，也都先后到了瓶颈。怎么回事呢？</p>
<p>总体来看，主要是 <strong>产品太过依赖功能：当功能基本完成时，就没有更多想象空间了。</strong></p>
<p>如果要增加用户，很可能就要强行加功能。而这些附属的、可有可无的功能，很可能让产品本身变得难用。纠结于此。</p>
<h3 id="再来看看-Klib"><a href="#再来看看-Klib" class="headerlink" title="再来看看 Klib"></a>再来看看 Klib</h3><p><strong>Klib 是款好产品，但不一定是个好的商业项目。</strong></p>
<ul>
<li><strong>使用频次太低</strong><ul>
<li>比如，如果读一本书需要一个月，读完后才需要使用 Klib 导入标注和笔记，那 Klib 的打开次数基本就是 1 次/月，这实在是太低了。</li>
</ul>
</li>
<li><strong>用户体量太小</strong><ul>
<li>恰巧使用 Kindle 阅读</li>
<li>恰巧想要管理标注</li>
<li>恰巧有 Mac 电脑</li>
<li>恰巧愿意付费</li>
<li>…</li>
<li>这样的概率，相当于 0.1 <em> 0.1 </em> 0.1 <em> 0.1 = 0.0001，可真是 <em>*万里挑一</em></em></li>
</ul>
</li>
</ul>
<p>怎么办呢？</p>
<p><strong>方向一：深挖 Kindle 辅助工具这个定位</strong></p>
<p>好处是：</p>
<ul>
<li>可以让 Kindle 用户获得更好的体验</li>
</ul>
<p>坏处是：</p>
<ul>
<li>Kindle 的用户群体还是太小</li>
<li>更关键的，Kindle/Amazon 并不是一个合适的合作伙伴，不开放数据接口，很多体验很难做好</li>
</ul>
<p><strong>方向二：做笔记中枢</strong></p>
<p>笔记的来源可以不止是 Kindle，也可以是 iBooks、多看等等；除了在 Klib 中阅读，还可方便地导出至 Evernote、OneNote 等目标应用。</p>
<p>好处是：</p>
<ul>
<li>可以获得更多潜在的用户</li>
<li>可以增加产品的使用频次</li>
</ul>
<p>坏处是：</p>
<ul>
<li>技术上非常依赖于第三方应用的开放程度、稳定性<ul>
<li>目测像微信阅读这样的应用，不见得深度开放数据，进而很难在其基础上有所发挥</li>
<li>而且，一旦未来比现在更封闭，届时已经实现的功能就会失效（参见微博接口的越来越封装），这对于产品而言是很大的风险</li>
</ul>
</li>
</ul>
<p>目前还很难决择，暂定先观察一段时间；等考虑成熟了，再进一步改进。</p>
<hr>
<p>考虑的同时，我准备挖个新坑：<strong>iTips, 碎片信息管理工具</strong>。这是我的 iPaste 的一位荷兰用户跟我提的需求，接下来的一段时间，我会跟他进行国际合作，共同打造这样一款国内、国外用户都喜欢，横跨 macOS、iOS 的新工具，敬请期待。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0703 - 高房价导致火箭发射失败]]></title>
      <url>https://atjason.com/daily/2017-07-03.html</url>
      <content type="html"><![CDATA[<p>今天看到一条微博，大意是高房价导致火箭发射失败，有意思。</p>
<p>北京的高房价，让从事航空航天的人才流失。要么选择离开北京，要么选择其他行业。即使是留在行业内的，也是心浮气躁。比如，利用体制内身份狂开信用卡，套现后炒房，最后大赚。</p>
<p>我愿意相信这是有道理的。</p>
<p>注：新华社快讯中字眼为：「发射任务失利」，而不是「失败」，呵呵。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0702 - 有了米，为啥还要有千米、毫米？]]></title>
      <url>https://atjason.com/daily/2017-07-02.html</url>
      <content type="html"><![CDATA[<p>有了米，为啥还要有千米、毫米？</p>
<p>最直接的理解，为了简洁。想象一下雕版印刷时代，多刻一些字，要少刻多少书啊？</p>
<p><strong>简单就是力量</strong>。再微小的变化，乘以时间的维度，就会有可观的变化。</p>
<hr>
<p>不止于此。</p>
<p>当我们频繁使用千米、甚至光年时，我们的思维会不自然地变得开阔；<br>当我们频繁使用毫米、甚至纳米时，我们的思维会不自然地变得细微。</p>
<p><strong>考虑问题单位的变化，会影响格局的不同。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0701 - 7 月计划]]></title>
      <url>https://atjason.com/daily/2017-07-01.html</url>
      <content type="html"><![CDATA[<p>进入下半年了，列下 <strong>7 月要做的事：</strong></p>
<ul>
<li>发布新版 iPaste，主要支持 Pin 管理</li>
<li><strong>iTips</strong> MVP: macOS &amp; iOS</li>
<li>学习 iOS 开发</li>
<li>坚持「周二早 8 点」技术长文</li>
</ul>
<hr>
<p><strong>问我为什么没有回顾 6 月工作？</strong></p>
<p>不是很在意。因为 <strong>计划只是用来指导接下来要做的事，却不是用来遵守的、也不是用来限制要做的事。</strong>根据当下的情况随时调整，更好。进而，也就没必要总结。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0630 - 有产者的社会]]></title>
      <url>https://atjason.com/daily/2017-06-30.html</url>
      <content type="html"><![CDATA[<p>说难听点，<strong>有钱人的社会</strong>。</p>
<p>今天和新朋友面基，其中聊到了这个话题：<strong>阶级固化</strong>；有钱人坐着不动，财富会快速增加；没钱的人，很难变有钱。</p>
<p>再比如，<strong>高房价对创新，到底是促进作用大、还是抑制效果更多？</strong>年轻人，更可能豁出去拼一把，还是心灰意冷、墨守成规？西方的福利社会使得 <strong>生存压力变低，到底是提供更多创新的可能性，还是杀死进步的温床？</strong></p>
<p>虽未善其身，已兼济天下，这或许就是年轻人的特性吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0629 - 基本完成 iPaste 的 Pin 管理]]></title>
      <url>https://atjason.com/daily/2017-06-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/z1icx.png" alt=""></p>
<p>作为 iTips 的前传，今天基本完成了 iPaste 的 Pin 管理，稍后会放出来给大伙体验。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0628 - 是什么在阻止产品变好？]]></title>
      <url>https://atjason.com/daily/2017-06-28.html</url>
      <content type="html"><![CDATA[<p>如果：</p>
<ul>
<li>产品从 0 做到 60 分，需要 1 个小时、能赚 10 块钱；</li>
<li>从 60 分做到 80 分，需要 1 个小时、能赚 5 块钱。</li>
</ul>
<p>我应该把这 1 小时用于改进已有产品，还是另外做一个新产品？</p>
<p><strong>精品的边际收益低，阻止了产品变好。</strong></p>
<hr>
<p>如何破局呢？提高精品软件的边际收益。</p>
<p>具体点，大家愿意为精品买单；<br>再具体点，之前你花 10 块钱买了有 10 个功能的 App，现在 App 出新版了，只改进了其中 2 个功能的体验、并没有增加新功能，你也愿意花 10 块钱买单、而不是骂娘：擦，这也要钱？</p>
<p><strong>用户的层次，决定了产品的层次。</strong></p>
<hr>
<p><strong>情怀不能当饭吃，也不能让产品变好</strong>。归因到底，还是用户对于好产品的愿力，推动开发者创造更好的产品。<strong>你想要的，决定了你能得到的。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Klib 第四版：纯粹，只为悦读]]></title>
      <url>https://atjason.com/PM/2017-06-27_Klib.html</url>
      <content type="html"><![CDATA[<p>在 Kindle 上读书，可以避免纸质书的收纳问题，还能方便地标注，挺好的。不过，标注虽然方便，标注的回顾整理却并不方便。好在，<strong><a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a></strong> 解决了这个问题（如何解决？请看 <a href="https://sspai.com/post/37581" target="_blank" rel="external">这里</a>、以及 <a href="https://sspai.com/post/38688" target="_blank" rel="external">这里</a>）</p>
<h2 id="改进阅读体验"><a href="#改进阅读体验" class="headerlink" title="改进阅读体验"></a>改进阅读体验</h2><p><strong>Klib</strong> 发布时，就因简洁实用而广受好评；之后的更新，也跨界支持从 <strong>iBooks</strong> 中导入。不过，大家用着用着，也发现有些地方可以改进，<strong>比较集中的是笔记的阅读体验</strong>，下面说说新版是怎么改进的。</p>
<p>目前，Klib 笔记列表是这样的：</p>
<p><img src="https://ps.toolinbox.net/wwkxc.png" alt=""></p>
<p>左侧是书籍列表，右侧是选中书籍的标注列表。其中，有的朋友希望字大些，有的朋友觉得信息密度太大，有的朋友希望能在列表中展示标注的全部内容…<strong>总之，大家需要一个更好的「阅读器」</strong></p>
<p>期间，考虑了几版设计，其中之一是这样的：</p>
<p><img src="https://ps.toolinbox.net/dsf04.png" alt=""></p>
<p>不过，自己感觉交互还是略显复杂。双栏模式对于 Markdown 编辑器这种需要编辑的场景，是比较适合的。而我感觉，标注的内容并不会经常修改，更加需要的是阅读。</p>
<p>于是，<strong>我干脆把「阅读器」简化成这样了：</strong></p>
<p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fgvdy9tha1g30fo0d6asu.gif" alt=""></p>
<p>可以隐藏所有干扰因素，仅剩下文字本身。<strong>纯净排版，让你沉醉于阅读</strong>；全屏体验，效果更佳。</p>
<p><img src="https://ps.toolinbox.net/1zh31.png" alt=""></p>
<h2 id="以书会友，共读精彩"><a href="#以书会友，共读精彩" class="headerlink" title="以书会友，共读精彩"></a>以书会友，共读精彩</h2><p><strong>当我们读到一本好书、被几个精彩的句子打动，忍不住想分享给别人</strong>。现在，有了漂亮简约的排版，可以更愉悦地分享了。</p>
<p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fgpoqklmhzg30eg0ec4gf.gif" alt=""></p>
<p>附上文中：<a href="http://s.klib.me/share.html" target="_blank" rel="external">《简单思考》的读书笔记</a></p>
<h2 id="新版限时优惠"><a href="#新版限时优惠" class="headerlink" title="新版限时优惠"></a>新版限时优惠</h2><p>新版上架，高级版内购限时 <strong>半价</strong> 优惠，手握 Kindle 的朋友，可考虑入手。</p>
<p><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=klib_sspai" target="_blank" rel="external"><img src="https://ps.toolinbox.net/0vsw5.jpg" alt="Mac App Store"></a></p>
<hr>
<p>如何让阅读这件事更愉悦，欢迎各位 Kindler 留言交流。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0627 - 不能再靠功能取胜]]></title>
      <url>https://atjason.com/daily/2017-06-27.html</url>
      <content type="html"><![CDATA[<p>截止目前，我已经先后做了 6 款 mac App，也都先后到了瓶颈。怎么回事呢？</p>
<p>总体来看，主要是 <strong>产品太过依赖功能</strong>：<strong>当功能基本完成时，就没有更多想象空间了。</strong></p>
<p>接下来，在考虑新项目时，要注意避免功能为王。反过来，要注意这两个方向：</p>
<ul>
<li><strong>基于数据</strong><ul>
<li>比如，一些 SEO/ASO 工具，本身也确实提供了一些功能，但核心的，还是其背后的数据、以及对数据的挖掘。并且，随着时间推移，数据越多，能提供的服务质量越高，竞品的壁垒也越高。</li>
</ul>
</li>
<li><strong>基于内容</strong><ul>
<li>比如，像少数派这样的媒体，本身基本没什么功能，但核心的，是其不断累积的内容。并且，随着时间推移，内容越多，其品牌、影响力越大，像搜索引擎收录、被引用这样的数据更好，能越发推动其向前发展，进入正向循环。</li>
</ul>
</li>
</ul>
<p>像这样两类产品，其发展基本不受功能限制，反而能随着时间的推移，本身越来越好。</p>
<p>今天和 61 聊他的 <strong>Price Tag</strong>，目前可以说是基于数据，未来可以切入到面向内容。总之，都是我比较看好的。希望他早日杀出一条路，给国内的独立开发者更多信心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0626 - 《变形金刚 5》不好看]]></title>
      <url>https://atjason.com/daily/2017-06-26.html</url>
      <content type="html"><![CDATA[<p>在 Klib 第四版发布前，去看了变 5，算是放松和对自己的奖励吧。</p>
<p>没想到，真的不好看。</p>
<p>其实，我只是想去看看场面，所以还特意挑了屏幕最大的影厅。可惜，场面确实不够好。再加上，剧情我都不想说什么。总结起来，不建议看。</p>
<p>可惜了我的时间和放松的机会。Anyway，继续上路 iTips 吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0625 - 不会休息]]></title>
      <url>https://atjason.com/daily/2017-06-25.html</url>
      <content type="html"><![CDATA[<p>今天给自己放假、休息，可事实上，也只是看了电影，发呆打发时间。</p>
<p>连休息都不会，生活品质也太低了，BS 下自己。</p>
<p>劳碌命，明天接着代码。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0624 - iTips: 极简笔记本]]></title>
      <url>https://atjason.com/daily/2017-06-24.html</url>
      <content type="html"><![CDATA[<p>今天和一位荷兰的用户+朋友聊了他的一个想法，我取名叫 <strong>iTips</strong></p>
<p>核心诉求：<strong>轻量化的常用信息备忘录</strong>。</p>
<p>工作、生活中，我们常会碰到这样一些 <strong>碎片信息</strong>：</p>
<ul>
<li>公司发票抬头</li>
<li>客服的常用语</li>
<li>回复邮件时不同的签名</li>
<li>⌘ 这种常用、却不容易打字的特殊字符</li>
<li>常用的 Emoji 表情</li>
<li>某个视频看到第几分钟</li>
<li>最近工作常用的一些用语</li>
<li>代码片断</li>
<li>常用的一些命令<ul>
<li>gc master; git merge dev; git pull; git push; gc dev; git merge master;</li>
</ul>
</li>
<li>…</li>
</ul>
<p><strong>如果记录在 Todo 类应用中，感觉怪怪的，一不小心就会被完成/删除。</strong><br><strong>如果记录在笔记应用中，搜索起来麻烦，且还需要选择、复制，才能在目标应用中粘贴。</strong></p>
<p>能不能有一个轻量的应用，专门记录这些轻量的、碎片化的信息，需要时可以快速获取/复制？能，这就是 <strong>iTips</strong></p>
<p>目前只是点子，也只画了原型。不过应该会挖这个坑，因为至少是个很好的练手 macOS + iOS 的项目。</p>
<p><strong>关于这一个点子，你有什么想说的？</strong>欢迎跟我聊聊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0623 - 寻找下一个有激情的事]]></title>
      <url>https://atjason.com/daily/2017-06-23.html</url>
      <content type="html"><![CDATA[<p>今天，提交了新版 Klib.</p>
<p>突然，想找下一个让自己兴奋的事。正好，一位国际友人约我谈合作。</p>
<p>趁这个周末，休息一下，梳理一下沉积的待办事项，寻找下一段激情。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0622 - 如何坚守自己的价值观？]]></title>
      <url>https://atjason.com/daily/2017-06-22.html</url>
      <content type="html"><![CDATA[<p>如果有人有着和自己迥异的价值观，且混得很好，且和自己是熟人，自己是不是要改变自己、向其学习？</p>
<ul>
<li>比如，常说的「<strong>学习好的比学习差的打工</strong>」，那到底是要好好学习，还是提前混人脉、攒经验？</li>
<li>比如，如果有人贷款炒房，一个月赚的比自己一年都要，自己要不要也去炒？</li>
</ul>
<p>如果自己遇到困难挫折，要不要从根本上调整方向？</p>
<ul>
<li>比如，自己辛苦做了产品、写了文章，却很少有人用、有人看，试了一段时间还是如何，还要继续吗？</li>
<li>比如，有个强大的竞争者出现，自己是要迎难而上、还是尽快转向？</li>
</ul>
<p>…</p>
<p><strong>前方，总是会有各种诱惑、阻碍，该如何坚守自己</strong>？</p>
<p>我也不知道。</p>
<p>有点像是招聘和管理的关系：</p>
<ul>
<li><strong>与其费尽心机管一个人，不如花精力招个不用管的人；</strong></li>
<li><strong>与其想着如何抵御诱惑，不如想清楚自己到底要什么；</strong></li>
<li><strong>到底要不要放弃？问问自己还想不想要</strong>。</li>
</ul>
<p>向内寻找向外的力量。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0621 - 选择余地盈余、选择能力不足？]]></title>
      <url>https://atjason.com/daily/2017-06-21.html</url>
      <content type="html"><![CDATA[<p><strong>生活越来越富足、选择越来越多，而认识和选择能力，却并没有相应地提高。</strong></p>
<p>比如，在穷的时候，买东西的选择余地小一些，反而容易选一些。<br>而有钱了，选择余地大了，却带来了选择的问题：<strong>该怎么选择呢？</strong></p>
<p><strong>这是需要学习的。</strong></p>
<ul>
<li>即，自己知道什么是好的、怎么选。</li>
<li>从这个角度，<strong>我们需要终身学习</strong>，使自己的能力与自己拥有的资源相匹配。<strong>不然，选择不但不能让我们受益，还会成为包袱</strong>。</li>
</ul>
<p>又或者，<strong>需要有专业人士告诉自己如何选择。</strong></p>
<ul>
<li>从这个角度，<strong>社会需要更充分地分工，需要更多在具体领域的咨询和专业化服务</strong>。类似于旅游规划师、上门拍照、买手这样的细分职业，会层出不穷。</li>
<li>另外，「越有钱、越抠门」、「钱是抠出来的」，这样的思想是不对的。<strong>有钱人就要有有钱的人自觉：多花钱。</strong>通过购买专业的服务，避免在自己不擅长的领域浪费时间，让自己专注在自己更擅长的领域，赚更多钱。<strong>不然，时间的杠杆，也会让自己把赚到的钱吐出来。</strong></li>
<li>另外，所谓有钱是相对的，并不是说百万富翁才算有钱。<strong>根本的，是指自己有选择余地</strong>。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0620 - 关于 Klib 分享，各种纠结之后，我选了如下方案]]></title>
      <url>https://atjason.com/daily/2017-06-20.html</url>
      <content type="html"><![CDATA[<p><strong>技术方案选型是件很有意思的事</strong>，各个环节都有各种选择，可以组合出各种可能。在这些可能性中，挑选出最佳方案，<strong>是我很喜欢做的事</strong>。</p>
<p>最近刚刚完成 <strong>Klib 的标注分享</strong>，趁着热乎劲，小结一下：过程中纠结了哪些方案，以后最后选择了什么。</p>
<h2 id="0-先来看看最终效果"><a href="#0-先来看看最终效果" class="headerlink" title="0) 先来看看最终效果"></a>0) 先来看看最终效果</h2><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fgpoqklmhzg30eg0ec4gf.gif" alt=""></p>
<p>这就是 Klib 分享标注的操作流程：点击分享，立即得到可以全球访问的网页。<strong>操作不能更简单，背后的技术逻辑却很复杂：</strong></p>
<p>实际的开发是混在一起的、思路也是交叉的，不过，为了介绍方便，我大致按照数据流来推演。</p>
<p><img src="https://ps.toolinbox.net/fw1yv.jpg" alt=""></p>
<h2 id="1-Klib-与接口服务器"><a href="#1-Klib-与接口服务器" class="headerlink" title="1) Klib 与接口服务器"></a>1) Klib 与接口服务器</h2><p>这部分的功能比较直接：<strong>Klib 将标注内容发送给接口服务器，服务器处理完后返回结果。</strong></p>
<p>需要介绍的，倒是功能之外的东西：</p>
<ul>
<li>如何防止接口被攻击</li>
<li>如何做身份识别</li>
</ul>
<p>这部分内容其实是很复杂的，我最终采用了和 Klib 安全性相称的方案。</p>
<a id="more"></a>
<h3 id="1-0-防止接口被攻击"><a href="#1-0-防止接口被攻击" class="headerlink" title="1.0) 防止接口被攻击"></a>1.0) 防止接口被攻击</h3><h4 id="1-0-0-接口服务器使用-https"><a href="#1-0-0-接口服务器使用-https" class="headerlink" title="1.0.0) 接口服务器使用 https"></a>1.0.0) 接口服务器使用 https</h4><p>这是最基础、但非常有效的方式，全程使用 https 加密，已经可以大大提高安全性。</p>
<h4 id="1-0-1-防止接口被非法使用"><a href="#1-0-1-防止接口被非法使用" class="headerlink" title="1.0.1) 防止接口被非法使用"></a>1.0.1) 防止接口被非法使用</h4><p>如果接口是公开的、所有人都可以任意访问，就可以随意地向服务器丢垃圾数据，迅速将服务器挤爆。</p>
<p>比如好的做法是 <strong>使用非对称加密</strong>，即使用一对私钥、公钥，使用 <strong>私钥加密</strong> 的数据，只能使用 <strong>公钥解密</strong>；反之，使用 <strong>公钥加密</strong> 的数据，只能使用 <strong>私钥解密</strong>。整体流程大致如下：</p>
<p><img src="https://ps.toolinbox.net/f7o33.jpg" alt=""></p>
<ul>
<li>接口服务器开放 <code>公钥 A</code></li>
<li>每个 Klib 客户端生成新的 <code>私钥 B</code> 和 <code>公钥 B</code></li>
<li>Klib 客户端使用 <code>公钥 A</code> 加密 <code>公钥 B</code>，并将其发送给接口服务器</li>
<li>接口服务器使用 <code>私钥 A</code> 解密后，存储该客户端对应的 <code>公钥 B</code></li>
<li>之后，Klib 客户端发送数据时，使用 <code>私钥 B</code> 加密，接口服务器收到后使用 <code>公钥 B</code> 解密，并用 <code>公钥 B</code> 加密后返回数据</li>
</ul>
<p><strong>听起来有点像绕口令？</strong></p>
<p>开发上也有点麻烦，毕竟服务器还要保存每个 Klib 客户端对应的公钥。如果有多个服务器，则需要在不同服务器间同步公钥，更加麻烦。对于我这个小产品 + 实验功能来说，暂时不需要这么高的安全级别。</p>
<p>于是，<strong>我采用了更简单、但够用的 AES 对称加密</strong>。即 Klib 客户端和接口服务器使用相同的 AES 加密方法、同一个密码，加密请求和响应的数据；如果不能提供正确的加密，就无法使用服务器接口。</p>
<p>这一方案主要的风险是：黑客可以反编译 Klib 得到密码。除了 Klib 本身会编译并签名，我还在代码里加密存储密码。基本上除了跟我有八辈子解不开的愁，<strong>99.9999%</strong> 的人是不会花精力来破解这个密码的。</p>
<h4 id="1-0-2-使用时间戳-MD5"><a href="#1-0-2-使用时间戳-MD5" class="headerlink" title="1.0.2) 使用时间戳 + MD5"></a>1.0.2) 使用时间戳 + MD5</h4><p>即使加密过的数据，最终也只是表现为一个 http 请求，而这个请求是可能被本地拦截，进而用于模拟正常用户请求。</p>
<p>对应的防护是，在 http 请求中加入时间戳，并对 http 头的内容部分计算 MD5（或 CRC 等），服务器端进行验证，就可保证 http 头不被滥用。</p>
<p>其实，这是 OAuth 的范畴。好在，我在开发 <a href="https://toolinbox.net/iPic/" target="_blank" rel="external">图床神器 iPic</a> 时，先后从客户端的角度实现了七牛、又拍、阿里云、Imgur、Flickr、Amazon S3 的 OAuth，这次实现一个简单的服务器端部分，也不算麻烦。</p>
<h3 id="1-1-如何做身份识别"><a href="#1-1-如何做身份识别" class="headerlink" title="1.1) 如何做身份识别"></a>1.1) 如何做身份识别</h3><p>上面说的是在面对黑客时的防护，听着有点晕是吧？下面来说说正常情况下的身份识别。</p>
<p>比如：<strong>如果用户尝试停止一个分享，如何判断该用户是否有权限？</strong></p>
<p><strong>如果有账户系统，这点比较容易解决</strong>。而 Klib 尚未引用账户系统，怎么办呢？比较高级的是使用区块链（咳咳），我目前的做法是：<strong>用户使用 Klib 分享一本书的标注时，服务器会返回一个随机数。下次用户在停止分享时，只要能提供这个随机数，即判定为有效请求</strong>。在上述各种防护的前提下，可以有效地防止被恶意停止分享。</p>
<h2 id="2-接口服务器"><a href="#2-接口服务器" class="headerlink" title="2) 接口服务器"></a>2) 接口服务器</h2><p>接口服务器是整个系统中最复杂的部分，它的职责比较多：</p>
<ul>
<li>验证请求，并接收数据</li>
<li>存储数据</li>
<li>根据数据生成静态网页</li>
<li>将静态网页输送给静态服务器</li>
<li>更新、删除分享时，更新数据存储和静态服务器</li>
</ul>
<p>验证请求和前面的介绍是对应的，这里略过不表。</p>
<h3 id="2-0-使用-Python-Flask-实现功能部分"><a href="#2-0-使用-Python-Flask-实现功能部分" class="headerlink" title="2.0) 使用 Python + Flask 实现功能部分"></a>2.0) 使用 Python + Flask 实现功能部分</h3><p>所谓接口服务器，首先就是要开放接口（开门接客）具体的，就是 http 请求的路由表。比如，当 Klib 客户端向 <a href="https://api.klib.me/share" target="_blank" rel="external">https://api.klib.me/share</a> 发送数据时，要有相应的代码来接收处理这个请求。</p>
<p>在之前的文章 <a href="https://atjason.com/daily/2017-06-12.html">我入门 Python 后总结的基础教程</a> 中，我已经介绍了使用 Flask 框架，这里不再重复。</p>
<h3 id="2-1-使用-Nginx-Gunicorn-搭建服务器"><a href="#2-1-使用-Nginx-Gunicorn-搭建服务器" class="headerlink" title="2.1) 使用 Nginx + Gunicorn 搭建服务器"></a>2.1) 使用 Nginx + Gunicorn 搭建服务器</h3><p>同上，请参考 <a href="https://atjason.com/daily/2017-06-12.html">我入门 Python 后总结的基础教程</a>。</p>
<p>另外，使用 Supervisorctl 保证服务可靠运行。</p>
<h3 id="2-2-使用-MySQL-SQLAlchemy-存储数据"><a href="#2-2-使用-MySQL-SQLAlchemy-存储数据" class="headerlink" title="2.2) 使用 MySQL + SQLAlchemy 存储数据"></a>2.2) 使用 MySQL + SQLAlchemy 存储数据</h3><p>从数据存储的角度看，书的标注都是很规整的，无非是书名、作者、笔记内容等等。于是我选择了最常用的关系型数据库：MySQL</p>
<p>如果直接使用 SQL 语句操作数据库，既繁琐又不安全，这里我使用可称为 ORM (Object Relational Mapping) 界事实标准的 <strong>SQLAlchemy</strong> 构建 Model、操作数据库。</p>
<p>我本来想说「这没什么好介绍的」，但实际上，<strong>MySQL 的坑很多</strong>。比如，如果要支持 Emoji 表情，就要全程使用 <strong>utf8mb4</strong> 编码。还有很多其他的坑，此处略去一万字…</p>
<h3 id="2-3-使用-Jinja-模板生成静态网页"><a href="#2-3-使用-Jinja-模板生成静态网页" class="headerlink" title="2.3) 使用 Jinja 模板生成静态网页"></a>2.3) 使用 Jinja 模板生成静态网页</h3><p>关于标注部分，Klib 发送的是  Markdown 格式，如：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="section"># 简单思考</span></div><div class="line"></div><div class="line"><span class="section">## 卷首语</span></div><div class="line"></div><div class="line"><span class="bullet">- </span>商业的本质就是“持续提供用户真正想要的东西”，除此无他。</div><div class="line"></div><div class="line"><span class="bullet">- </span>召集具备回应用户需求的热情与能力的员工，并为他们营造出无拘无束可最大限度地发挥其才能的环境，除此无他。</div><div class="line"></div><div class="line"><span class="section">## 第一章　经商不是“打仗”</span></div><div class="line"></div><div class="line"><span class="bullet">- </span>重要的是不断磨炼对“大众真实需求”的感知能力和使之实体化的技术。</div><div class="line"></div><div class="line"><span class="bullet">- </span>音乐和体育不同，不用与任何人战斗。</div></pre></td></tr></table></figure>
<p>需要使用 markdown 模式将其转换成 html 格式，如：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>简单思考<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>卷首语<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>商业的本质就是“持续提供用户真正想要的东西”，除此无他。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>召集具备回应用户需求的热情与能力的员工，并为他们营造出无拘无束可最大限度地发挥其才能的环境，除此无他。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>第一章　经商不是“打仗”<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>重要的是不断磨炼对“大众真实需求”的感知能力和使之实体化的技术。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>音乐和体育不同，不用与任何人战斗。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这里赞叹一下：<strong>Python 轮子就是多</strong>。只需轻轻地导入 markdown 模块，即可优雅地将 Markdown 转换为 html 格式，舒爽。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> markdown</div><div class="line">html_str = markdown.markdown(markdown_str)</div></pre></td></tr></table></figure>
<p>对于最终生成的静态网站，像 css/js 等部分都是一样的，只是页面标题、正文等内容性的东西不同。于是，使用 Jiaja 模式表示这些通用部分，并 0620 - 关于 Klib 分享，各种纠结之后，我选了如下方案 这样的标注符表示各个分享所不同的内容部分；再用 render_template 方法替换模板中的内容，即可生成对应的静态文件。</p>
<p>感叹：<strong>这样简洁直接的操作、无需各种复杂的配置，就能得到最后想要的东西，真真是编程中最可爱的环节</strong>。</p>
<h2 id="3-静态服务器与-CDN"><a href="#3-静态服务器与-CDN" class="headerlink" title="3) 静态服务器与 CDN"></a>3) 静态服务器与 CDN</h2><p>有了静态服务器，就像是有了宝贝，不能只是自己藏着，得拿出来让大家瞧瞧，这就是静态 (Web) 服务器要干的事。</p>
<p>当然，静态服务器和接口服务器，在物理上可以是同一台服务器，这里只是从角色上进行区分。</p>
<p>在展示静态网页方面，技术选型上主要有 2 方面的需求：</p>
<ul>
<li>网页内容能实时更新</li>
<li>用户访问速度快</li>
</ul>
<p>其中，内容的更新对应用户分享时的 3 种操作：</p>
<ul>
<li>创建分享<ul>
<li>对应创建静态 html 文件</li>
</ul>
</li>
<li>更新分享的内容<ul>
<li>对应更新 html 文件内容</li>
</ul>
</li>
<li>停止分享<ul>
<li>对应删除 html 文件</li>
</ul>
</li>
</ul>
<p>好，<strong>带着「实时」创建、更新、删除 html 文件这 3 个需求，我们来看看如何提高访问速度</strong>。</p>
<h3 id="3-0-😔-仅使用单一服务器"><a href="#3-0-😔-仅使用单一服务器" class="headerlink" title="3.0) 😔 仅使用单一服务器"></a>3.0) 😔 仅使用单一服务器</h3><p>首先，如何什么都不做，意味全球的用户（<strong>Klib 必须是国际性产品，得考虑全球用户，嗯</strong>）都要连接这台服务器。</p>
<p>且不说并发数等限制，单从网速上看，如果将服务器放在国内，国外用户势必慢；反之亦然。更何况国内还是电信、网通、以及神奇的长宽，国外也有 N 多国家。</p>
<p>如果确实要这么做，比较好的方案是使用 <strong>阿里云香港服务器</strong>，可以兼顾国内国外用户。暂时，不采用这一方案，每月省下 $19…</p>
<h3 id="3-1-😔-CDN"><a href="#3-1-😔-CDN" class="headerlink" title="3.1) 😔 CDN"></a>3.1) 😔 CDN</h3><p>进而，通常的做法是使用 CDN.</p>
<p>CDN 确实可以有效提高不同地区、不同网络环境下的访问速度，且极大地降低对静态服务器的压力。不过，<strong>CDN 有个致命的局限：内容更新慢</strong>。尤其在更新、删除内容时，<strong>这种慢会带来业务上的问题</strong>。</p>
<p>比如，用户在 Klib 中分享标注后又停止，却发现之前产生的网页依然可以访问，用户会觉得这是 Bug，进而会带来很大的客服压力。于是，跳过这一方案。</p>
<h3 id="3-2-😔-国内、国外多台服务器"><a href="#3-2-😔-国内、国外多台服务器" class="headerlink" title="3.2) 😔 国内、国外多台服务器"></a>3.2) 😔 国内、国外多台服务器</h3><p>下一方案是：国内、国外各一台（或多台）服务器，通过 DNS 服务器进行分流，相当于自建 CDN。</p>
<p>不料，却遇到一个坑：<strong>国内服务器的外网速度普遍较慢</strong>。比如我试了阿里云上海节点，从国外服务器使用 scp 或 rsync 传输一个 10 KB 的文件需要 4s，跌破了我的眼镜。并且，阿里云我也只买了 1 MB 带宽的小水管，并发时速度会很慢。于是，这一方案也被放弃。</p>
<h3 id="3-3-😃-最终方案"><a href="#3-3-😃-最终方案" class="headerlink" title="3.3) 😃 最终方案"></a>3.3) 😃 最终方案</h3><p><strong>最终采用的方案时：国内使用阿里云 OSS、国外使用 Amazon S3</strong>（注：因为测速显示，我的国外服务器在全球的访问速度尚可，暂未实施，不过原理是一样的）</p>
<ul>
<li><strong>速度</strong> 方面，测试软件显示，阿里云 OSS，在国内的访问速度是不错的。</li>
<li><strong>可靠性</strong> 方面，阿里云 OSS 本身肯定值得依赖的（至少比我自己搭静态服务器靠谱的多）<ul>
<li>另外，阿里云 OSS 可以从我的国外静态服务器回源，意味着用户通过阿里云 OSS 访问网站时，肯定可以得到内容，<strong>这已经满足了 90% 的场景</strong></li>
</ul>
</li>
<li><strong>实时更新</strong> 方面，服务器端使用 <strong>pyinotify</strong> 监控 html 文件所在目录，一旦发现有文件更新、删除，立即同步至阿里云 OSS 上。同步速度也不错（比阿里云 ECS 强太多），用户的响应几乎是实时的</li>
</ul>
<p>比如，你访问这篇分享试试速度如何：<br><a href="http://s.klib.me/share.html" target="_blank" rel="external">http://s.klib.me/share.html</a></p>
<p>以及 <a href="http://www.17ce.com/site/http/201706_10f07a6144debca77bb831cb18c0ae00.html" target="_blank" rel="external">全国测速结果</a>，打开时间基本在 1s 内，满意。</p>
<p><img src="https://ps.toolinbox.net/xz3ok.jpg" alt=""></p>
<p>注：我另外也考虑了七牛云，不过 <strong>七牛不支持为存储空间绑定域名</strong>、而只支持 CDN 的方式绑定域名，而 CDN 的方案已经被放弃，所以只能放弃七牛（以及七牛的免费 http 流量…）</p>
<h3 id="3-4-搜索引擎优化"><a href="#3-4-搜索引擎优化" class="headerlink" title="3.4) 搜索引擎优化"></a>3.4) 搜索引擎优化</h3><p>这是个全方面的话题，这里只提几点：</p>
<ul>
<li><strong>搜索引擎直接访问静态服务器</strong>，因为 CDN 等因素对搜索引擎是种干扰。这一点，可以通过 DNS 服务器来解决。</li>
</ul>
<p><img src="https://ps.toolinbox.net/f6s9d.jpg" alt=""></p>
<ul>
<li><strong>向搜索引擎提供 sitemap 文件，包含静态网页的网址列表</strong>。虽然搜索引擎不一定真的使用这个文件，但必要的基本功还是要做的，万一被用了呢？</li>
</ul>
<h2 id="4-网页的适配"><a href="#4-网页的适配" class="headerlink" title="4) 网页的适配"></a>4) 网页的适配</h2><p>好，经过千辛万苦，用户终于可以打开网址、看到分享内容了，是不是大功告成了？</p>
<p>错，还有很大一个坑：<strong>网页布局及适配</strong></p>
<p>比如：</p>
<ul>
<li>作为文字类的网页，字体、字号、配色、行间距、留白得看得过去吧？</li>
<li>用户可能在 24 寸显示器、iPad、手机等不同设备上打开网页，总得能正确显示吧？</li>
<li>总得方便用户分享到不同 SNS 吧？</li>
<li>用户分享到微信、朋友圈，总得显示个缩略图吧？</li>
<li>用户分享到 Facebook、Twitter，总得以卡片形式显示、摘要总要有吧？</li>
<li>…</li>
</ul>
<p>这方面我不是专家，Klib 的分享也只是做个入门。</p>
<p>在 Klib 中阅读效果类似：</p>
<p><img src="https://ps.toolinbox.net/5264v.jpg" alt=""></p>
<p>PC 端最终效果类似：</p>
<p><img src="https://ps.toolinbox.net/5s7ex.jpg" alt=""></p>
<p>手机端类似：</p>
<p><img src="https://ps.toolinbox.net/x4t4b.jpg" alt=""></p>
<h2 id="5-其他"><a href="#5-其他" class="headerlink" title="5) 其他"></a>5) 其他</h2><p><strong>表一漏万</strong>，除了看得见的、说得出的，还有很多看不见的东西，挑几个来说。</p>
<h3 id="5-0-区分开发、测试、线上环境"><a href="#5-0-区分开发、测试、线上环境" class="headerlink" title="5.0) 区分开发、测试、线上环境"></a>5.0) 区分开发、测试、线上环境</h3><p><strong>如何在同一代码仓库下</strong>，区分开发、测试、线上环境？</p>
<p>我目前的做法是，<strong>创建排除在 Git 外的 .env 文件</strong>，其中存储了开发、测试、线上环境所对应的配置。程序启动时，先读取配置文件，然后根据配置文件启动对应的参数，如数据库地址、服务端口、日志级别及文件位置等等。</p>
<h3 id="5-1-服务监控"><a href="#5-1-服务监控" class="headerlink" title="5.1) 服务监控"></a>5.1) 服务监控</h3><p>从上面的介绍可以看到，整体的框架涉及多个模式，并且互为备份的环节并不多，有一个模块出问题，就可以导致整个流程出问题。<strong>最好有个机器人一直盯着，一旦出问题，立即通知我（总比用户跑过来报 Bug 强）</strong></p>
<p><strong>如何能有效监控呢？</strong>几个供参考：</p>
<ul>
<li>接口服务器方面，一旦发现严重错误，立即发告警邮件（目前还没做）</li>
<li>在接口服务器创建测试脚本，包含创建、更新、删除分享功能，并定期工作。一旦出问题，立即发告警邮件</li>
<li>使用 360 监控等服务，监控某分享链接是否可访问</li>
<li>以及，一些基础的服务器监控工具</li>
</ul>
<h3 id="5-2-一定要有日志"><a href="#5-2-一定要有日志" class="headerlink" title="5.2) 一定要有日志"></a>5.2) 一定要有日志</h3><p><strong>日志可以说是线上服务的生命线</strong>，一旦出问题，第一件要做的事：查日志。那首先得有日志呀？恩，代码里要输出。</p>
<p>另外，日志文件要 <strong>定期切割</strong>，避免过大。</p>
<h3 id="5-3-一定要有备份"><a href="#5-3-一定要有备份" class="headerlink" title="5.3) 一定要有备份"></a>5.3) 一定要有备份</h3><p><strong>万一服务器被黑了、被人 <code>rm / -rf</code> 了，万一数据库被删了…作为独立开发者，我总不能申请破产保护吧？</strong></p>
<p>备份一定要有（虽然最好不要用），比如：</p>
<ul>
<li>服务器级别的定期制作镜像，一般云服务器都有此功能</li>
<li>制作脚本，定期将数据库、日志等关键数据，备份至 Dropbox、Amazon S3 等可靠的网络存储中，当然要加密保存</li>
<li>使用 GitHub/GitLab 等私有 Git 仓库备份代码。什么都没了，只要有代码，就能东山再起</li>
</ul>
<h2 id="6-事务诸葛亮"><a href="#6-事务诸葛亮" class="headerlink" title="6) 事务诸葛亮"></a>6) 事务诸葛亮</h2><p>以上就是 Klib 分享大体的技术选型、以及期间的纠结。虽然已经能干活，现在回过头来看，主要的问题是：</p>
<p><strong>涉及模块多，维护成本高</strong></p>
<p>想象一下这个场景：</p>
<ul>
<li>在吃年夜饭时，收到不能创建分享的报警邮件</li>
<li>一边后悔没有给服务器上香，一边放下筷子、打开 MBP</li>
<li>查了半天，发现是 MySQL 的问题</li>
<li>又查了半天，发现竟然是因为 VPS 硬盘空间不够了</li>
<li>于是，添加新数据盘，小心翼翼地迁移数据，胆战心惊地重启数据库</li>
<li>手动测试，持续观测日志一段时间，好在没有问题</li>
<li>刚巧，新年的钟声敲响，完美…</li>
</ul>
<p>相比之下，如果使用 AWS 这种能托管 MySQL 的服务，上述问题都不会发生，还不会错过微信红包里的几个亿。</p>
<p>再比如，使用 Heroku 之类的服务，就可以免去大部分需要自建服务器部分。没选 Heroku 主要的原因是：国内访问速度太慢。不过现在想想，可以通过国内、或香港服务器回调的方式加速。于是，Heroku 又成为很有优势的选择。</p>
<p>听完之后，你会怎么选？</p>
<hr>
<p><strong>我所说的，都是错的。</strong></p>
<p>那么，我的公众号「<strong>自在开发</strong>」，你还关注吗？每周二早 8 点，技术长文、准时推送。</p>
<p><img src="https://ps.toolinbox.net/nckv0.jpg" alt="自在开发"></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0619 - 越做越熟]]></title>
      <url>https://atjason.com/daily/2017-06-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/5264v.jpg" alt=""></p>
<p>今天，在开发 Klib 应用内阅读模式时，突然想到可以在阅读模式下引导分享，实用且不打扰用户的功能，不错。</p>
<p>能想到这个点子，前提是在做这块的功能。保持手热，脑子一直浸淫在相关的逻辑中，才有可能冒出好的想法。</p>
<p>如果可能，挖个深坑。找个合适的项目，好好钻研较长的一段时间，做出精品。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0618 - 写文章，真花时间]]></title>
      <url>https://atjason.com/daily/2017-06-18.html</url>
      <content type="html"><![CDATA[<p>今天，基本完成了 Klib 分享的技术总结，下个「周二早 8 点」的文章有着落了。</p>
<p>构思、码字、行文、排版、做图…前后花了 4 小时左右，真是花时间啊。</p>
<p>本次暂定免费发布，如果反响可以，之后会试试小密圈，并推迟在公开渠道发布。</p>
<p>不过，写文章这种事，看的是别人、收益的是自己。会做是一回事，能系统性总结出来、甚至能帮到别人，是另一回事。而且，也写的过程中，也是对方案的反思，会有意外的收获。坚持，用输出倒逼自己输入。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0617 - 只做核心业务]]></title>
      <url>https://atjason.com/daily/2017-06-17.html</url>
      <content type="html"><![CDATA[<p>这两天遇到了 MySQL 一个很诡异的问题，Google 后打开了上百个页面，折腾了将近一天，也只是「绕过去」了，最终也只是模糊地了解了原因。</p>
<p>回头来看：<strong>真不划算</strong>。既浪费了时间，还坏了自己的精神头。</p>
<p>还是要 <strong>专注于核心业务，把核心业务以外的事情，全部「外包」</strong></p>
<p><strong>外包，就是交给更专业的人做，节约自己的时间</strong>。比如，对于 MySQL，可以找 AWS 这种专门提供数据库托管的服务，几分钟就可以创建一个强大的、全球的、高可靠、防攻击的数据库，这是个人花几个月也做不到的；而其成本，则相对低廉的多。</p>
<p><strong>尤其对于独立开发者，个人精力非常有限，一定要用在最核心的、无法被替代的地方</strong>。对于 MySQL 这种基础性的工作，做差了，用户骂；做好了，用户根本不知道，也不会表扬；摆明了吃力不讨好的事。</p>
<p>再一次记住这个教训。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0616 - 完成功能，离完善产品，还差很远]]></title>
      <url>https://atjason.com/daily/2017-06-16.html</url>
      <content type="html"><![CDATA[<p>目前，已经完成了 Klib 分享的后端和前端部分，可距离发布产品，还有很多工作要做。</p>
<p>比如数据库，正常的读写好，还要处理异常的情况，比如防止 SQL 注入，防止恶意插入大量数据，等等。</p>
<p>再比如并发数，同时和多个组件关联，复杂度甚至是各组件相乘：</p>
<ul>
<li>MySQL</li>
<li>SQLAlchemy</li>
<li>gunicorn</li>
<li>nginx</li>
</ul>
<p>有高人指点就好。可要找到恰巧上面各项都懂、有时间、愿意帮忙的高手，太难了。</p>
<p>更靠谱的是，自己学习并解决。趁还不算老，多学点吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0615 - 没有比较，就没有伤害]]></title>
      <url>https://atjason.com/daily/2017-06-15.html</url>
      <content type="html"><![CDATA[<p>用了一段时间 Python，今天又开始切换至 Xcode + Swift，真的是感觉到：没有比较，就没有伤害。</p>
<p>一方面：</p>
<ul>
<li>和解释型语言相比，编译型语言的编译时间，简直是在谋杀程序员<ul>
<li>尤其，Swift 的编译时间出名的慢</li>
<li>再加上，每次编译都要签名；尝试了取消签名，但失败了，回头再折腾下</li>
<li>当然，也是有好处是：不用像解释型语言一样，担心在运行时出现类型错误。当然，这一点是可以通过别的方法解决</li>
</ul>
</li>
<li>Xcode 的代码提示…Xcode 有代码提示吗？</li>
<li>VS Code 可以像网页一样使用 Command +/- 来缩放，比 Xcode 用起来舒服</li>
</ul>
<p>另一方面：</p>
<ul>
<li>和 Xcode 相比，VS Code 的调试功能还是太弱了</li>
<li>VS Code 在提交代码时，即时的修改竟然不会被提交</li>
</ul>
<p>另外：</p>
<ul>
<li>Xcode 和 VS Code 的功能和快捷键有很大的不同，切换起来，要人格分裂了<ul>
<li>在 IDE 中使用 Git 查看代码不同时，Xcode 当前代码在左侧，VS Code 在右侧</li>
</ul>
</li>
<li>Swift 和 Python 语法上的不同，切换起来，要人格分裂了</li>
<li>现在用 13 寸的 MBP、还未外接显示器，多窗口调试时确实显小了，下一台一定要上 15 寸，除非有工作室 + 外接显示器</li>
</ul>
<p>好在，今天完成了 Klib 分享的客户端主体部分，明天应该能完整搞定；争取再写一部分 Klib 分享的技术方案。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0614 - 终于完成 Klib 笔记分享的后端部分]]></title>
      <url>https://atjason.com/daily/2017-06-14.html</url>
      <content type="html"><![CDATA[<p>严重拖堂之后，终于完成了 Klib 笔记分享的后端部分。目前的方案了实现，基本满意。也想好下周公众号要发的文章了：描述 Klib 笔记分享的技术造型与关键点。</p>
<p>关注我的公众号「自在开发」，下周二、下下周二、下下下周二早 8 点…准时分享技术长文。</p>
<p><img src="https://ps.toolinbox.net/nckv0.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0613 - 一天干了很多活]]></title>
      <url>https://atjason.com/daily/2017-06-13.html</url>
      <content type="html"><![CDATA[<p>今天干活涉及到了很多个技术点，罗列一下吧：</p>
<ul>
<li>Python 项目的单元测试</li>
<li>完善 Python 中日志的用法<ul>
<li>如格式化日志文件分割，开发、生产环境区分，等等</li>
</ul>
</li>
<li>使用 pyinotify 监控文件夹变化</li>
<li>使用 rsync 在不同服务器间同步文件</li>
<li>使用 ssh 远程运行命令</li>
<li>使用 supervisor 保障服务运行</li>
<li>去掉 CSS 中未用到的属性</li>
<li>认识到国内服务器访问外网是龟速<ul>
<li>影响了技术选择；哎，之前太天真了</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0612 - 我入门 Python 后总结的基础教程]]></title>
      <url>https://atjason.com/daily/2017-06-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/7xtvc.jpg" alt=""></p>
<h2 id="0-先唠叨几句"><a href="#0-先唠叨几句" class="headerlink" title="0) 先唠叨几句"></a>0) 先唠叨几句</h2><p>学习 Python 有几周了，也写了 2 个小项目来解决自己的实际需求。简单记录一下，供自己备忘，也供后来者参考。</p>
<h3 id="0-0-我为什么选择-Python"><a href="#0-0-我为什么选择-Python" class="headerlink" title="0.0) 我为什么选择 Python"></a>0.0) 我为什么选择 Python</h3><p>我之前使用 <strong>Swift + Vapor</strong> 开发了 <strong><a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a></strong> (图床工具) 的后端服务，遇到很多问题：</p>
<ul>
<li>主要还是 Swift 在 Ubuntu 下并不成熟，甚至很多关键性、基础性的库，都是 TBD；</li>
<li>以及，基于 Swift + Ubuntu 的库并不多，开发起来很吃力。</li>
</ul>
<p>接下来要开发 <strong><a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a></strong> (Kindle、iBooks 标注管理) 的标注分享功能，需要后端支持，于是打算好好学一学后端开发。</p>
<p>适合后端开发的语言还是挺多的，比如 Java、PHP、Python、Ruby、Go、Javascript 等等。我其实并没有严格比较，最后选择了 Python，主要原因其实是和 Swift 相对的：</p>
<ul>
<li><strong>Python 成熟</strong>，无论在 Windows/Linux/macOS 都很稳定</li>
<li><strong>Python 轮子多</strong>，几乎所有能标准化的操作都能找到库，然后你可以专注于自己的业务</li>
</ul>
<p>还有个原因，之前我接触过的开发语言（VB/C++/Java/C#/Swift）都是编译型的，这次想学个 <strong>解释型</strong> 的玩玩。</p>
<a id="more"></a>
<h3 id="0-1-首先，知道要学什么"><a href="#0-1-首先，知道要学什么" class="headerlink" title="0.1) 首先，知道要学什么"></a>0.1) 首先，知道要学什么</h3><p>先形而上地聊聊这个话题。</p>
<p>至少从我的经验来看，<strong>在学习一样新东西时，我很希望能被告知要学什么，类似于一个大纲、知识点清单</strong>。这样，我就可以对照着清单一样样学习，方向感清晰、还不怕走弯路。</p>
<p>而事实上，很少有这样的「清单」，最接近的可能是书的目录。可惜，好书实在太少了。尤其技术更新快，书中的知识很可能是陈旧的。</p>
<p>出于这个理解，本文我只会 <strong>罗列我学习 Python 时所遇到的知识点，尽量组织成系统的清单</strong>。</p>
<h3 id="0-2-然而，我并不会教你怎么学"><a href="#0-2-然而，我并不会教你怎么学" class="headerlink" title="0.2) 然而，我并不会教你怎么学"></a>0.2) 然而，我并不会教你怎么学</h3><p>清单上的知识点，我并不打算展开讲，因为：</p>
<ul>
<li>这太花(<strong>不</strong>)时(<strong>赚</strong>)间(<strong>钱</strong>)了</li>
<li>通常，官方文档已经足够好，我没必要复制粘贴</li>
</ul>
<p>所以，<strong>对于某一个具体的点，还得你自己去学习</strong>。至于怎么学？我建议，<strong>在项目开发实际用到某个点时，再参考官网系统性的学习</strong>。</p>
<p>如果你实在急的必须在被炒鱿鱼之前解决某个问题（通常并不存在），你可以上网搜索，通常在技术博客、StackOverflow 这样的网站上能找到答案。</p>
<p>不过，这是种投机行为、可能会有 <strong>陷阱</strong>：</p>
<ul>
<li>如果你找对了方案，可能很快就解决问题。</li>
<li>可如果你找了过期的、错误的、不适合你的环境的方案，你可能会掉入解决 A 问题时遇到 B 问题、解决 B 问题时又遇到 C 问题这样的陷阱，所花的时间，会当初系统性地学习，更多。</li>
</ul>
<p><img src="https://ps.toolinbox.net/c1qdr.jpg" alt=""></p>
<h2 id="1-Python-语法及基础"><a href="#1-Python-语法及基础" class="headerlink" title="1) Python 语法及基础"></a>1) Python 语法及基础</h2><p>好，唠叨了半天，终于来干的了。</p>
<h3 id="1-0-Python-2-or-3"><a href="#1-0-Python-2-or-3" class="headerlink" title="1.0) Python 2 or 3?"></a>1.0) Python 2 or 3?</h3><p>Python 的 2、3 之争，在网上可以找到很多。虽然我一向主张学新不学旧（比如我甚至尝试用 Swift 开发后端，no zuo no die…），但在后端方面，由于吃了 Swift 的亏，<strong>我建议先学习成熟的 Python 2</strong>。真到了不得不用 3 时，学。据说差别并不大（我保证，绝对没有 Swift 2 和 3 的差别大）</p>
<h3 id="1-1-入门教程"><a href="#1-1-入门教程" class="headerlink" title="1.1) 入门教程"></a>1.1) 入门教程</h3><p>虽说我一向建议以官网为基础学习，但 Python 的官网的文档实在是太长了。没办法，为了全面性，各种犄角旮旯、你一辈子都用不到点的，官网也要提及。</p>
<p>这里介绍 2 个 Python 入门教程：</p>
<ul>
<li>英文：<a href="https://learnpythonthehardway.org/book/" target="_blank" rel="external">Learn Python the Hard Way</a></li>
<li>中文：<a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">廖雪峰的 Python 2.7教程</a><ul>
<li>注意，不要学习最后的「实战」，相信我，至少目前不适合你。</li>
</ul>
</li>
</ul>
<p><img src="https://ps.toolinbox.net/engx1.jpg" alt=""></p>
<h2 id="2-尽早开发-Python-项目"><a href="#2-尽早开发-Python-项目" class="headerlink" title="2) 尽早开发 Python 项目"></a>2) 尽早开发 Python 项目</h2><p>我建议，一旦有了语法基础，<strong>尽早</strong> 开发实际的、能解决自己问题的项目（或表述为工程、产品、工具、轮子）。</p>
<p>注意，一定要是「<strong>能解决自己问题的项目</strong>」。相信我，如果只是做一个你自己根本用着的博客系统、爬虫之类的，学习过程中的困难一定会让你半途而废的。</p>
<h3 id="2-0-项目的文件夹结构"><a href="#2-0-项目的文件夹结构" class="headerlink" title="2.0) 项目的文件夹结构"></a>2.0) 项目的文件夹结构</h3><p>如果你真的想写个好项目，项目的文件夹结果一定要拿得出手，比如要区分代码、配置、数据、文档、测试等文件。尤其对于在不同服务器上部署、需要区分开发与生产环境的项目，更重要。</p>
<p>注意，文件夹结构并没有唯一解；并且，和你使用的网络框架（后面会介绍）相关。在实践中逐渐优化，越早形成一套自己熟悉的项目结构，收益越大。</p>
<p>我在 GitHub 上创建了一个 <a href="https://github.com/atjason/flask_project" target="_blank" rel="external">Python 项目文件夹结构示例</a>，供参考。</p>
<p>参考：</p>
<ul>
<li><a href="https://learnpythonthehardway.org/book/ex46.html" target="_blank" rel="external">https://learnpythonthehardway.org/book/ex46.html</a></li>
<li><a href="http://python-guide-pt-br.readthedocs.io/en/latest/writing/structure/" target="_blank" rel="external">http://python-guide-pt-br.readthedocs.io/en/latest/writing/structure/</a></li>
<li><a href="https://github.com/kennethreitz/samplemod" target="_blank" rel="external">https://github.com/kennethreitz/samplemod</a></li>
</ul>
<h3 id="2-1-单元测试"><a href="#2-1-单元测试" class="headerlink" title="2.1) 单元测试"></a>2.1) 单元测试</h3><p><strong>单元测试很重要、很重要、很重要</strong>。</p>
<p>尤其对于后端程序，几乎没有用户交互，非常适合进行单元测试。也许，一些已经超出了单元测试的范畴，称之为功能测试、压力测试、等等更合适。Anyway，叫测试就对了。</p>
<p>我在开发过程中有写单元测试的习惯，甚至有时会先写单元测试、再写功能代码（恩，这就是测试驱动开发）。</p>
<p>在多个测试框架中，我目前选择 <a href="https://docs.pytest.org/" target="_blank" rel="external">pytest</a>：一直在更新、对 Python 3 支持好、自动发现测试用例。</p>
<h3 id="2-2-IDE"><a href="#2-2-IDE" class="headerlink" title="2.2) IDE"></a>2.2) IDE</h3><p>我一位大学同学，用 Windows 记事本开发了一个局域网 IM 工具，可那是为了学习。人生苦短，还是用 IDE 开发吧。</p>
<p>选什么呢？其实我并没有纠结，因为之前在 Windows 上使用 Visual Studio，且一直听闻 Visual Studio Code 不错，就直接上了 <a href="https://code.visualstudio.com/" target="_blank" rel="external">VS Code</a></p>
<p>不过，VS Code 本身只提供一个框架，要打造适合自己的 IDE，还得有一系列的配置，比如主题、字体、快捷键、插件 等等。</p>
<p>就 Python 开发，目前还有几点不顺手（如果你知道怎么做，麻烦告诉我）：</p>
<ul>
<li>出错时，不能点击错误日志跳转至对应的代码</li>
<li>单元测试有时会卡死，重启 VS Code 后正常</li>
<li>调试工具跟 Xcode 等工具有差距</li>
<li>快捷键没办法和 Xcode 统一，用起来很割裂</li>
</ul>
<p><img src="https://ps.toolinbox.net/axoqt.jpg" alt=""></p>
<h2 id="3-善用-Python-库"><a href="#3-善用-Python-库" class="headerlink" title="3) 善用 Python 库"></a>3) 善用 Python 库</h2><p>Python 的优势之一，就是轮子多，也就是库（模块）丰富。碰到一个问题，你不愁找不到库，而是不知道该选哪个，甜蜜的烦恼。</p>
<p>号外：<strong>我为 Python 造的第一个轮子：<a href="https://github.com/atjason/AES256CBC_python" target="_blank" rel="external">AES256CBC</a></strong></p>
<h3 id="3-1-标准库"><a href="#3-1-标准库" class="headerlink" title="3.1) 标准库"></a>3.1) 标准库</h3><p>任何语言都会把常用的库，纳入自己的标准库中。其实，很多时候我们说一门语言，都是在学其标准库。</p>
<p>对于标准库的学习，倒是建议参考 <a href="https://docs.python.org/2/library/index.html" target="_blank" rel="external">官方文档</a></p>
<h3 id="3-2-管理-Python-库"><a href="#3-2-管理-Python-库" class="headerlink" title="3.2) 管理 Python 库"></a>3.2) 管理 Python 库</h3><p>库多了，管理就成了问题。这个没什么好说的，直接使用 <a href="https://pip.pypa.io/" target="_blank" rel="external">pip</a></p>
<p>小技巧：</p>
<ul>
<li>对于项目的依赖库，可以使用 requirements.txt 集中管理。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip freeze &gt; requirements.txt</div><div class="line">pip install -r requirements.txt</div></pre></td></tr></table></figure>
<ul>
<li>可以将 Python 的安装源改为国内豆瓣、阿里等镜像源，速度快。</li>
</ul>
<h3 id="3-3-Python-运行环境"><a href="#3-3-Python-运行环境" class="headerlink" title="3.3) Python 运行环境"></a>3.3) Python 运行环境</h3><p>库+库，就是 Python 运行环境。尤其，当你需要在服务器上部署 Python 项目时，保证服务器和开发环境有一致的 Python 运行环境，很重要。</p>
<p>推荐使用 <a href="https://github.com/pyenv/pyenv" target="_blank" rel="external">pyenv</a>，其利用 Shell 的 <code>shims</code> 机制，<strong>当你 cd 到项目目录时，自动切换 Python 版本</strong>（对比 virtualenv，其需要手动执行 source 命令，麻烦）。</p>
<p><strong>小建议</strong>：要在自己的电脑上特别建立一个「<strong>Python 脏环境</strong>」，用于平时写临时代码、测试新模块时使用，确保不会破坏电脑上的 Python 环境。</p>
<p><img src="https://ps.toolinbox.net/18w1i.jpg" alt=""></p>
<h2 id="4-使用-Python-开发网络服务"><a href="#4-使用-Python-开发网络服务" class="headerlink" title="4) 使用 Python 开发网络服务"></a>4) 使用 Python 开发网络服务</h2><p>前面据说，我学 Python 主要是为了后端。我目前使用的是 <strong>Flask + Gunicorn + Nginx + MySQL + Supervisor</strong> 组合。</p>
<h3 id="4-0-Flask"><a href="#4-0-Flask" class="headerlink" title="4.0) Flask"></a>4.0) Flask</h3><p>Python 的 Web 框架不少，不过据说主要还是 <a href="https://www.djangoproject.com/" target="_blank" rel="external">Django</a> 和 <a href="http://flask.pocoo.org/" target="_blank" rel="external">Flask</a>。据说：</p>
<ul>
<li>Django 的特点的大而全、开箱即用</li>
<li>Flask 的特点的小巧灵活、定制性高</li>
</ul>
<p>只要不是太不成熟、坑太多，我通常会选择简单的，于是，选 Flask.</p>
<p>Flask 是个大话题，根本不适合在这里介绍，直接看 <a href="https://book.douban.com/subject/25814739/" target="_blank" rel="external">Flask Web Development</a> 这本书吧，建议读原文。</p>
<h3 id="4-1-Gunicorn"><a href="#4-1-Gunicorn" class="headerlink" title="4.1) Gunicorn"></a>4.1) Gunicorn</h3><p>Flask 自带的 Web 服务器只是能让代码跑起来，而真正用于生产，则需要考虑并发、缓存等问题。</p>
<p>主要的选择是 <a href="https://uwsgi-docs.readthedocs.io" target="_blank" rel="external">uWSGI</a> 和 <a href="https://github.com/benoitc/gunicorn" target="_blank" rel="external">Gunicorn</a>，和 Flask 与 Django 的对比很相似：</p>
<ul>
<li>uWSGI 的特点的成熟、用的人多、高性能、强大（复杂）</li>
<li>Gunicorn 则更简单、易用</li>
</ul>
<p>于是，选 Gnuicorn.</p>
<p>Gnuicorn 的配置简单，直接看官方文档即可。</p>
<h3 id="4-2-Nginx"><a href="#4-2-Nginx" class="headerlink" title="4.2) Nginx"></a>4.2) Nginx</h3><p>有了 Flask + Gunicorn，为什么还要 Nignx？职责不同，Nginx 在处理静态资源、https/http2、负载均衡等方面，更擅长。</p>
<p>Nginx 我就不介绍了吧？主要还是和 Gnuicorn 的配合。</p>
<h3 id="4-3-MySQL"><a href="#4-3-MySQL" class="headerlink" title="4.3) MySQL"></a>4.3) MySQL</h3><p>本地测试，我直接使用 SQLite，但要用于服务器，还是 MySQL 吧。</p>
<p>主要这次开发 <strong><a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a></strong> 后端服务，业务上的数据比较规整，适合关系数据库；以后有机会再试试 NoSQL 吧。</p>
<h3 id="4-4-Supervisor"><a href="#4-4-Supervisor" class="headerlink" title="4.4) Supervisor"></a>4.4) Supervisor</h3><p>服务，要的就是稳定。</p>
<p><strong>啥叫稳定？</strong>就是程序挂了能满血复活、重新运行。</p>
<p>于是，使用 <a href="http://supervisord.org/" target="_blank" rel="external">Supervisor</a>，监控程序运行，挂了就立即重新运行。</p>
<h2 id="5-尾巴"><a href="#5-尾巴" class="headerlink" title="5) 尾巴"></a>5) 尾巴</h2><p>这么枯燥、这么长的文章你都能看完？牛！</p>
<p>关注我的公众号「自在开发」，下周二、下下周二、下下下周二早 8 点…准时分享技术长文。</p>
<p><img src="https://ps.toolinbox.net/nckv0.jpg" alt=""></p>
<p>Python 我只是入门，要学的东西还很多，以后还会有小结、分享。</p>
<p>未完待续…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0611 - 今天只做了一个网页]]></title>
      <url>https://atjason.com/daily/2017-06-11.html</url>
      <content type="html"><![CDATA[<p>一个网页看起来简单，要做的事情还真是不少：</p>
<ul>
<li><strong>设计</strong>，在一张白纸上作画，这是最难的。要放哪些内容、如何摆放、相互之间的关系、等等。</li>
<li><strong>布局</strong>，做好响应式布局，适配不同屏幕。</li>
<li><strong>字体</strong>，尤其要做到中英文、不同平台都能用到合适的字体，很难。</li>
<li><strong>字号</strong>，页面缩放时，字体也能相应地缩放。不同级别的文字对比适中。</li>
<li><strong>颜色</strong>，前景色、背景色、链接颜色、文字选择颜色、等等。</li>
<li><strong>分享</strong>，想要干净的社会化分享，现有的产品肯定是不行、也很笨重，只能找到 js 组件、并进行定制。另外，网页布局也要适合分享，比如，分享到微信时，缩略图正确。</li>
<li><strong>SEO</strong>，要对 SEO 友好，方便收录。</li>
<li><strong>加速</strong>，比如，尽量使用 cdn 上的 js/css 资源，CSS 与 html 分离却又要尽量合并小文件。</li>
<li><strong>数据统计</strong>，比如使用 GA，分析用户行为。</li>
</ul>
<p>今天基本做好了 Klib 笔记分享页面，感兴趣可以 <a href="http://s.klib.me/KU2Nkd.html" target="_blank" rel="external">点这里瞧瞧示例页面</a>，有意见？欢迎。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0610 - AES256CBC, my first wheel for Python]]></title>
      <url>https://atjason.com/daily/2017-06-10.html</url>
      <content type="html"><![CDATA[<h1 id="AES256CBC"><a href="#AES256CBC" class="headerlink" title="AES256CBC"></a>AES256CBC</h1><p>Wrapper for AES 256 CBC using Python.</p>
<p><a href="https://github.com/atjason/AES256CBC_python" target="_blank" rel="external">Get from GitHub</a></p>
<h1 id="Dependency"><a href="#Dependency" class="headerlink" title="Dependency"></a>Dependency</h1><p>Depends on <a href="https://github.com/pyca/cryptography/" target="_blank" rel="external">cryptography</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install cryptography</div></pre></td></tr></table></figure>
<p>Note: also refers to Swift version: <a href="https://github.com/atjason/AES256CBC" target="_blank" rel="external">AES256CBC</a></p>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">txt = <span class="string">"Hello World."</span></div><div class="line">password = AES256CBC.generate_password()</div><div class="line"></div><div class="line">encrypted = AES256CBC.encrypt(txt, password)</div><div class="line">decrypted = AES256CBC.decrypt(encrypted, password)</div><div class="line"></div><div class="line"><span class="keyword">assert</span> decrypted == txt</div></pre></td></tr></table></figure>
<p>Note:</p>
<ul>
<li>The password must be exactly 32 chars long for AES-256.</li>
<li>IV of AES is the first 16 chars of encrypted strings.</li>
<li>The encrypted strings are base 64 encoded.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0609 - 我好像总抓不住热点]]></title>
      <url>https://atjason.com/daily/2017-06-09.html</url>
      <content type="html"><![CDATA[<p>就在我刚刚开通微信公众号、并正式更名为「<strong>自在开发</strong>」时，微信突然关闭一批有千万粉丝的大号，这个…</p>
<p>时下，小密圈还算热门，可我总觉得自己再有所沉淀后，会更合适。可那时，小密圈可还热门？</p>
<p><strong>我好像总抓不住热点。</strong></p>
<p>不管了，还是先从公众号做起吧，声明及暂定一些规则：</p>
<ul>
<li>名字：「自在开发」<ul>
<li>作「<strong>自由</strong>」自在开发</li>
<li>也作「<strong>独</strong>」自在开发</li>
</ul>
</li>
<li>目的<ul>
<li><strong>用输出的方式，倒逼自己输入</strong>；顺便学习内容、社区运营。</li>
</ul>
</li>
<li><strong>每周至少一篇有深度的文章，周二早上 8 点前发</strong>；如果还可以有更多，周四早上 8 点前发。<ul>
<li><strong>主题：产品思考、运营推广、独立开发、自由职业等方面的小结或感悟</strong></li>
</ul>
</li>
</ul>
<p>已发文章：「<strong>坚果 Pro 的红与黑</strong>」</p>
<p>下周一主题：「<strong>实用主义者的 Python 入门</strong>」如果感兴趣，不然先扫码占坑、坐等下周一推送。</p>
<p><img src="https://ps.toolinbox.net/nckv0.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0608 - Flask 学的有点感觉了]]></title>
      <url>https://atjason.com/daily/2017-06-08.html</url>
      <content type="html"><![CDATA[<p>首先，感谢 <a href="https://flaskbook.com/" target="_blank" rel="external">Flask Web Development</a> 这本书，由浅入深、又在工程角度上全面地介绍的 Flask，是本好书，推荐。</p>
<p>然后，更关键的，针对 Klib 接下来的开发需要，<strong>面向项目进行学习</strong>，既可以用成就感避免学习过程的枯燥、疲倦，还可以在学习结束后，生成一个可以用于实际生产的项目。</p>
<p>一些学习的步骤，记下来，也供自己以后学习新语言时参考：</p>
<ul>
<li><strong>先概览性地学习，把框架搭起来</strong>，然后总共要学哪些方面的知识，并有基本的了解。</li>
<li>开发一个小项目，解决一个小需求，把兴趣调动起来。</li>
<li><strong>优化项目的目录结构</strong>，这是 <strong>把上面提到的框架落实下来</strong>。比如这个过程这我知道要注意整体工作流程、不同环境切换、测试、日志、等等，<strong>之后就可以慢慢填坑</strong>。</li>
<li>增加一个小功能，尽可能地优化。<strong>在优化过程中，会发现很多不足、自己不会的东西</strong>。在优化的契机，学习、巩固这些点。</li>
<li>继续增加一个小功能，继续优化。</li>
<li><strong>如此反复</strong>，直至功能基本完整、也没什么迫切需要学习的点。</li>
<li><strong>进入实战项目</strong>。</li>
</ul>
<p>争取早日使用 Flask 完成 Klib 的后端功能。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0607 - 坚果 Pro 使用体验]]></title>
      <url>https://atjason.com/daily/2017-06-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/rtod1.jpg" alt=""></p>
<p>锤子的坚果 Pro 用了一周了，来说说使用感受吧。</p>
<p>购买经历：</p>
<ul>
<li>5.28 官网下单，本来提示 10 天内发货，结果第 2 天就发货了，比想象的快。</li>
</ul>
<p>不好的地方：</p>
<ul>
<li>手感确实不好，不硌手，割手。买了官方的红套套，不割手了，但手机明显大了一圈。对于习惯 iPhone 6 的手感，这样 Size 确实需要适应一段时间。</li>
<li>做工是千元机级别。比如，后背板玻璃在和塑料贴片衔接的地方，明显不平。</li>
<li>屏幕<ul>
<li>亮度低，白天太阳下吃力。</li>
<li>亮度自动调节，垃圾，跟没有一样。</li>
<li>不光滑，比如快速滑动界面时，阻力很大，不顺滑。</li>
</ul>
</li>
<li>摄像头<ul>
<li>如果你也习惯了 iPhone 的拍照，你基本懒得用坚果来拍照。</li>
<li>前置摄像头在微信视频时，手稍微一动，白平衡剧变，难受。</li>
<li>双摄？我基本无视。还不如没有，平白多开了个孔。</li>
</ul>
</li>
<li>应用权限控制<ul>
<li>Android 系统的权限管理是我很头痛的地方。安装应用后，并没有默认禁用权限、使用时确认后激活，而基本是默认全开启。自己一个个去禁用，很浪费时间。</li>
<li>即使我在系统中禁用了某应用（如百度地图）的电话、短信权限，在登录时百度地图依然能读取本机号码、短信中的验证码。感觉非常可怕。</li>
</ul>
</li>
<li>播放音乐、第三方应用播放音频时，不能快速暂停、快进，一定要去通知栏点开通知后操作，明显不如 iPhone 的播放控制方便。</li>
<li>电源键接近机身中间，很容易误触。</li>
</ul>
<p>说不上好坏：</p>
<a id="more"></a>
<ul>
<li>外放效果怪怪的，不好说好或不好。</li>
<li>一些应用没有 Android 版本，明显不爽；但这又不是锤子的错。</li>
<li>不支持插件。比如 SS 应用的插件，可以快速开启、停止。当然，这也是好处，比如让界面整洁、省电；有好有坏吧。</li>
<li>Type C 接口，毕竟现在还不够流行，外出时不带线就麻烦了。</li>
<li>胶囊，用了，但还没完全用顺畅。</li>
</ul>
<p>好的地方：</p>
<ul>
<li>不同指纹解锁后启动不同应用。比如，左手拇指正常解锁，右手拇指解锁后进入支付宝界面，右手食指解锁后进微信支付界面，很方便。</li>
<li>应用双开，比如开两个微信，方便。</li>
<li>双卡双待，需要的人，刚需。</li>
<li>One Step，尤其频繁切换应用时，很方便。比如，在阅读订阅时，可以快速切换到微信回复消息，回复完后再切换回来。</li>
<li>可以装 Google 服务，这点太良心了。装个 Google Play，变为标准的 Android 手机。装 Gmail、Google Photos 等应用，舒爽。</li>
<li>大爆炸有时挺有用，比如复制不让复制的网页。不过，有时可以爆炸、有时不可以，这种不一致性让人在使用前犹豫、没信心，体验不好。</li>
<li>待机时间可以，正常使用一天没问题。充电速度快，1 个小时能充得差不多。充电时的界面动画有用又好玩。</li>
</ul>
<p>用坚果，等苹果。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0606 - WWDC 之夜]]></title>
      <url>https://atjason.com/daily/2017-06-06.html</url>
      <content type="html"><![CDATA[<p>好久没有通宵了，今天和 40 余位小伙伴在杭州 123 茶楼，共同观看 WWDC 2017.</p>
<p>WWDC Keynote 本身，说实话没太多的惊喜。我近段时间倒是对家庭语音助手挺感兴趣，苹果也如爆料中一样，发布了垃圾桶音箱 HomePod（虽然这名字像是实习生取的），不过，我对其售价和年底才发货保留意见。</p>
<ul>
<li>对于价格，Google Home 和 Amazon Echo 都在 $200 以下，苹果的可以买人家 2 个还剩 $40 元</li>
<li>关键的，这入口抢得太不积极了。比如，Google IO 2017 提到，Google 要从 Mobile First 转向 AI First，而除了手机，家庭语音助手是重要的 AI 入口。有了这一入口，才有更多的数据；有了数据，才能喂养出人工智能怪兽，Siri 才不会是现在的半残状态。</li>
</ul>
<p>期间见识了不少达人（比如国内某知名 VPN 服务的 CEO），也没想到杭州隐藏着这么多高手，以后要多多交流。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0605 - 域名备案成功]]></title>
      <url>https://atjason.com/daily/2017-06-05.html</url>
      <content type="html"><![CDATA[<p>记录一下，等了 10 几天后，管局终于通过审核。看起来，就像朋友说的，只要阿里云通过了，管局基本也能通过，只是时间问题。</p>
<p>不过，还得去公安备案。哎，良民当到底吧。</p>
<p>有了备案后，就要考虑 CDN 了，以及用起来阿里云国内的服务器。再加上把现在的网站全部升级，又是半天左右的事了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0604 - Python 学得好慢]]></title>
      <url>https://atjason.com/daily/2017-06-04.html</url>
      <content type="html"><![CDATA[<p>不知道是学习的方法不对，还是自己状态不好，感觉学得很慢，也觉得累。</p>
<p>还是坚持把廖雪峰的教程看完，然后实施 Klib 分享页。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0603 - 近视，是种残疾]]></title>
      <url>https://atjason.com/daily/2017-06-03.html</url>
      <content type="html"><![CDATA[<p>这两天新配了眼镜。</p>
<p>其实，我是非常抵触去眼镜店的。</p>
<p>一方面，总感觉被宰。因为多少还是知道一点眼镜行业的暴利，于是，他们服务的越周道、热烈，我越发觉得被宰得厉害、就更不舒服了。哎，一个行业能做成这种状态，也是悲哀。</p>
<p>另一方面，更重要的是：怕面对近视度数又加深的事实，有点讳疾忌医的感觉。作为每天至少面对电脑 8 个小时、外加不知道多少小时手机的我，近视加深几乎是必然的；但又必然是不想加深的。这种矛盾与无能为力，真让人难受。</p>
<p>近视，是种残疾，让人想想就难受的病。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0602 - 共享工具？]]></title>
      <url>https://atjason.com/daily/2017-06-02.html</url>
      <content type="html"><![CDATA[<p>最近共享概念还挺热，比如共享雨伞、共享篮球、等等。像这样的东西都可以共享了，还有什么不能共享？</p>
<p>其实，我倒是挺希望有 <strong>共享工具</strong> 的。比如，前段时间家里需要钻个孔，我到楼下做铝合金窗户的店铺里借电钻，结果去了 3 次，人家以各种理由推脱，就是没借到。最后，我自己在淘宝买了一个。用完之后，就一直闲置在家里。</p>
<p>如果当时有共享这个电动工具的，我就是挺愿意一用。而目前我有了之后，我也愿意租给别人用，但并不愿意为此花时间、精力。共享电动工具这事，问题还挺多，比如如何取、送、保护隐私、等等。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0601 - 管理期望值]]></title>
      <url>https://atjason.com/daily/2017-06-01.html</url>
      <content type="html"><![CDATA[<p>东西贵不贵、好不好，是相对的；相对于什么呢？相对于用户的期望值、心理预期。</p>
<p>要「管理」用户的期望。</p>
<p>比如，软件的免费 + 内购模式。起初，用户看到内购价格时，可能会觉得贵。但看的多了，慢慢就不觉得贵了。某一天需要的时候，可能就入手了。</p>
<p>比如，坚果 Pro 发布会上将产品吹的天上手、地下无的，可当拿到手，看到背板不平这样低级的质量问题，还是会有种吃苍蝇的感觉；心理落差大。</p>
<p>好坏无绝对，只能相对满意。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0531 - 两眼论]]></title>
      <url>https://atjason.com/daily/2017-05-31.html</url>
      <content type="html"><![CDATA[<p>围棋中有「两眼即活」理论，可以简单理解为：多一条路，就不会死。</p>
<p>对应到自己的生活中，发现可以找到很多映射：</p>
<table>
<thead>
<tr>
<th>领域</th>
<th>A</th>
<th>B</th>
</tr>
</thead>
<tbody>
<tr>
<td>操作系统</td>
<td>macOS</td>
<td>Windows</td>
</tr>
<tr>
<td>编程语言</td>
<td>Swift</td>
<td>Python</td>
</tr>
<tr>
<td>Python 虚拟环境</td>
<td>pyenv</td>
<td>virtualenv</td>
</tr>
<tr>
<td>手机</td>
<td>iPhone</td>
<td>锤子</td>
</tr>
<tr>
<td>服务器</td>
<td>阿里云</td>
<td>Vultr</td>
</tr>
<tr>
<td>CDN</td>
<td>七牛</td>
<td>CloudFlare</td>
</tr>
<tr>
<td>通讯</td>
<td>微信</td>
<td>Telegram</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<p>换个角度讲，不在一颗树上吊死。多了解一个领域、多一个选择、多一种跨界，就多一种活下去的方式，就更不容易死掉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0530 - Radxa 又复活了]]></title>
      <url>https://atjason.com/daily/2017-05-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xp8v3.JPG" alt=""></p>
<p>最近，项目上需要一个能 24 小时运行的桌面版操作系统，像 Raspberry Pi、Radxa 这样的板子，简单是太适合了。于是，拿出吃灰已久的 Radxa，重新刷新了 Ubuntu Desktop，配置了一下环境，完美运行所需要的小程序，爽！</p>
<hr>
<p>平时积累的素材、能力，总会有需要的时候。当然，如果能和大方向关联，就更实在了。比如，Facebook 创始人扎克伯格每年的习惯：学中文、每天写代码、每天打领带、每天认识一个公司以外的人…都是和公司战略想契合的：连接地球上每一个人。</p>
<p><strong>提前布局，坚持在各个点上做准备，终会连点成线、结线成面，形成战略优势。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0529 - 这几天状态不错，开始有对的感觉]]></title>
      <url>https://atjason.com/daily/2017-05-29.html</url>
      <content type="html"><![CDATA[<p>首先，确认了坚持做独立开发者，至少到年底。</p>
<p>进而，明确本年度的技能树培养：macOS/iOS/后端</p>
<p>进而，技术上开始布局：</p>
<ul>
<li>后端方面<ul>
<li>学习 Python</li>
<li>搭建国内外服务器，继续学习 Linux，学习 CDN 等网络工具</li>
</ul>
</li>
<li>iOS 方面<ul>
<li>使用坚果 Pro 作为主力机，了解 Smartisan OS 的特性</li>
<li>下半年使用 iPhone 8 作为主力机</li>
</ul>
</li>
</ul>
<p>有了前面的布局，产品方面可以进行拓展：</p>
<ul>
<li>Klib<ul>
<li>可以考虑更方便地共享笔记</li>
</ul>
</li>
<li>iPic<ul>
<li>考虑 iOS 端</li>
</ul>
</li>
<li>全新产品<ul>
<li>支持 macOS、iOS，有后端做保障，有更多可能性</li>
</ul>
</li>
</ul>
<p>恩，开始有做对事的感觉了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0528 - 「小电」的 MVP]]></title>
      <url>https://atjason.com/daily/2017-05-28.html</url>
      <content type="html"><![CDATA[<p>今天参加「第７届 BAT 精英巅峰会」，印象最深的就是「小电」负责人介绍其最小原型的故事，感觉挺有意思，写出来跟大家分享下。</p>
<p><img src="https://ps.toolinbox.net/34pct.jpg" alt=""></p>
<p>「小电」提供的是桌面共享充电宝，最开始构建最小原型时，一个很大的困难是：市面上找不到合适的硬件。如果单单为了原型而找工厂定制，其成本明显高昂、周期长。并且，出于商业保密的原因，他们并不想完整地向工厂介绍他们为什么要做、做成什么样子。</p>
<p>怎么办呢？</p>
<p>共享充电宝机制，最核心的操作是：<strong>用户扫码付钱，机器「自动」开始放电、手机开始充电</strong>。问题就在于「<strong>自动</strong>」，这需要硬件基础、打通软件，是较复杂的系统。而当时，市面上的智能插座已经可以实现远程控制通、断电。于是，整体的流程是这样的：</p>
<ul>
<li>用户在吃饭时，手机没电；正好发现桌子有个充电器，就插上线开始充电。</li>
<li>可是，插上线后，发现并没有真的充电。仔细一看：需要扫码付款 1 元。</li>
<li>好，扫码付钱。注意：此时只是转账给某个人账户。</li>
<li>该个人账户收到钱后，远程激活设备、开始放电。</li>
<li>重点来了：<strong>如何实现远程控制呢？</strong>其实，他们找了一个香薰灯，把其中的内脏掏出来扔掉，然后装上智能插座、外面留出充电插口。之后，通过远程控制智能插座来控制放电与否。</li>
</ul>
<p>整个过程很巧妙，<strong>用最经济的方式实现了最小原型、验证了产品需求</strong>，值得学习。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0527 - 固化、板结知识]]></title>
      <url>https://atjason.com/daily/2017-05-27.html</url>
      <content type="html"><![CDATA[<p><strong>用到什么、就搜索什么，这种碎片化、场景化的知识和能力，是很必要的。</strong></p>
<p>可是，<strong>有坚实的基础知识，才能更好的吸收、嫁接这些碎片化的知识</strong>。于是，怎么夯实基础知识，就更重要。</p>
<p>比如，我这两天在学习的 Python 语言，就属于基础知识。这其中涉及很多点：</p>
<ul>
<li>语言基础</li>
<li>常用模块</li>
<li>单元测试</li>
<li>IDE</li>
<li>（自动）部署</li>
<li>什么书？</li>
<li>哪些记住、哪些知道，如何固化</li>
<li>以什么项目来练手</li>
<li>和已有的知识如何联系</li>
<li>…</li>
</ul>
<p>面对这一系列的问题、以及学习中不断涌现的新问题，目前还是一团浆糊。对于如何学习一门新的编程语言、亦或是其他新领域的知识，尚没有一整套方法，还是边学边摸索的状态。</p>
<p>不过，这次要 <strong>杜绝肤浅的学习后就搁置，一定要学到可以做外包的程度</strong>，并通过不断的项目来保持熟练。<strong>能用，才是真的学会。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0526 - 缺什么、补什么]]></title>
      <url>https://atjason.com/daily/2017-05-26.html</url>
      <content type="html"><![CDATA[<p>缺产品嗅觉，就补产品嗅觉；<br>缺人脉，就补人脉；<br>缺运营，就补运营；<br>缺技术，就技术；<br>…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0525 - 找一个方向，坚持]]></title>
      <url>https://atjason.com/daily/2017-05-25.html</url>
      <content type="html"><![CDATA[<p><strong>找一个自己认可的、还比较有前景的方向，坚持；无他。</strong></p>
<p>只要对一个领域熟悉了，才能发现机会、甚至创造机会。</p>
<p>遇到问题就逃、换项目、换领域，只能在表面跳来跳去。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0524 - 又一次折腾备案]]></title>
      <url>https://atjason.com/daily/2017-05-24.html</url>
      <content type="html"><![CDATA[<h2 id="为什么要折腾备案呢？"><a href="#为什么要折腾备案呢？" class="headerlink" title="为什么要折腾备案呢？"></a>为什么要折腾备案呢？</h2><ul>
<li>最近又买了新域名，想在启用前备案，省得启用后备案，还得关站。</li>
<li>最近阿里云香港服务器也频繁出现无法访问、连接超时的情况。而如果要使用国内的网络服务，比如 CDN，就需要对域名备案。</li>
</ul>
<h2 id="备案为什么麻烦呢？"><a href="#备案为什么麻烦呢？" class="headerlink" title="备案为什么麻烦呢？"></a>备案为什么麻烦呢？</h2><ul>
<li>备案要关站，这很烦。<ul>
<li>比如，当用户访问 App 的帮助页面时，发现无法访问，肯定是影响产品的。</li>
<li>比如，搜索引擎在爬网站时，发现无法访问，会给网站降权。</li>
<li>而这些产品人所担心的问题，并不是当局关心的。</li>
</ul>
</li>
<li>域名所有人必须是备案人<ul>
<li>而事实上，为了保护隐私，有时并不愿意填写真实的名字。</li>
<li>又比如，国外的域名注册商，通常是不支持中文字符的。</li>
<li>再比如，备案时可能要什么「域名证书」，而事实上并没有所谓的证书、这只是当局发明的东西。</li>
</ul>
</li>
<li>个人无法备案商用的内容<ul>
<li>只是博客之类的。如果涉及商业，就要使用公司、个体户的名义。</li>
</ul>
</li>
</ul>
<h2 id="怎么解决这些麻烦呢？"><a href="#怎么解决这些麻烦呢？" class="headerlink" title="怎么解决这些麻烦呢？"></a>怎么解决这些麻烦呢？</h2><ul>
<li>中介<ul>
<li>这是一个神奇的存在。不论多复杂的事实、多烦的步骤，只要给钱，就有人能摆平。说明规则有漏洞、只是用来管老实人的。</li>
</ul>
</li>
<li>在线生成域名证书<ul>
<li>搜索一下，很多这种服务。</li>
<li>我相信，阿里云备案的工作人员，肯定是知道备案人所提供的证书是「制作」出来的。不过，他们还是会通过、当作不知道。当然，这种情况，我认为他们是「好人」。</li>
</ul>
</li>
<li>局部「关站」<ul>
<li>比如，当阿里云和当局所在的浙江、北京所在地访问域名时，返回 404；其他地区的用户、搜索引擎访问时，返回正常的数据。</li>
<li>比如，在审核机制上班期间，返回 404；其他时间正常。</li>
<li>比如，根域名返回 404，二级域名、或带路径的网址，返回正常。</li>
<li>这也是为什么，你能看到这篇文章。</li>
</ul>
</li>
<li>挂羊头、卖狗肉<ul>
<li>个人备案时，备案期间网站无法访问。等备案结束了，再换成自己需要的内容。</li>
<li>当然，当局是会不定期抽查的。但实际上，如果你只是个小啰啰，没人有这个精力来管你。</li>
</ul>
</li>
</ul>
<p><strong>这片神奇的土地，诞生出备案这件神奇的事情</strong>。要备案成功，首先就要摆正心态：你是屁民，公仆是大爷。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0523 - 多离谱的价格，都是正常的]]></title>
      <url>https://atjason.com/daily/2017-05-23.html</url>
      <content type="html"><![CDATA[<p>这几天突然挺想玩 Google Voice Kit，了解了下，目前尚未发售，只是在 MagPi #57 杂志中附送。可该杂志早已脱销；而原价 £5.99 的杂志，在 eBay 上已经炒到 $129，真是疯狂。</p>
<p><strong>价格无论多高，只要有人买，就是正常的；就像中国的房价。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0522 - 简便，如剑]]></title>
      <url>https://atjason.com/daily/2017-05-22.html</url>
      <content type="html"><![CDATA[<p>今天，发现在我身上的一个真实变化：</p>
<ul>
<li><p>之前，如果有人问我如何在 iPhone 上科学上网，我得让他先去买 SS 账户，然后安装 SS 客户端、设置 SS 账户，然后开启后使用。不仅对方搭建环境麻烦，我还得花很多时间向其解释。</p>
</li>
<li><p>之后，如果有人问我如何在 iPhone 上科学上网，我会向他推荐「浪潮」或其他同类 App: 只需点击、应用内点击连接即可。他方便、我也节约时间。</p>
</li>
</ul>
<p>这就是 <strong>简便的力量：如剑，直刺靶心。</strong></p>
<ul>
<li><strong>简便，至少是简单。</strong>没有复杂的步骤，才不会吓退用户，才可能拥有更多潜在的用户。</li>
<li><strong>简便，通常是组合多个步骤、一步到位。</strong>通过组合，隐藏达到目的的中间操作，直接奉上结果。</li>
</ul>
<p><strong>看看自己、他人的生活，有何不便之处，能否通过简化、组合的方式，达到简便的效果，这就是一种发现新产品胚子的方式。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0521 - 小镇青年]]></title>
      <url>https://atjason.com/daily/2017-05-21.html</url>
      <content type="html"><![CDATA[<p>不同于一二线城市的人，在三四线甚至更小城镇生活的人、尤其是青年，有着非常不同的标签。他们人群巨大，会是 <strong>未来消费升级的主力，却没有得到相当体量的关注</strong>：大家更多的还是在关注一二线城市那些质量高、竞争却异常激烈的人群。</p>
<p>比如，记得 Kindle 发布年度阅读榜单时，<strong>国内中小城市阅读量的绝对值和增加量都高于大城市</strong>。当然，这可能是由于大城市人群生活压力大、没时间阅读的原因。不过，依然有类比价值，也可以提醒我们关注这些未被充分关注的群体。</p>
<p>对于我的产品，目测北上广深加起来有一半左右，而全国所有的长尾城市加起来，基本和这些一线城市持平。而明显的，后者的潜力更大。</p>
<p>其实，就我个人而言，还是挺愿意当一名「小镇青年」、而非「城市青年」。确实，城市发展充分、机会多。不过，对于我目前「自由职业」的状态而言，并不能充分享受这种优势。而去小城镇，至少对于写代码不会有大的影响、反而会有好的帮助，比如环境会好些。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0520 - 行动、行动、行动]]></title>
      <url>https://atjason.com/daily/2017-05-20.html</url>
      <content type="html"><![CDATA[<p>解决目前状态低下最好的办法，不是思考、不是计划，是行动。</p>
<p>行动，胜千言。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0519 - 点子是想不出来的]]></title>
      <url>https://atjason.com/daily/2017-05-19.html</url>
      <content type="html"><![CDATA[<p>最近 Klib 新版上架，在想有哪些可能的新产品可以做。可是，想来想去，并没找到合适的。</p>
<p>干脆不想了，把这时间用来接触新领域、新事务，看能不能找到新的、实际的需求。</p>
<p>你有什么需求？也可以找我聊聊~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0518 - 做产品，挑难的做]]></title>
      <url>https://atjason.com/daily/2017-05-18.html</url>
      <content type="html"><![CDATA[<p>如果简单，还需要我来做？</p>
<p>如果简单，不怕别人抄？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0517 - 拿什么存放你，我的信息]]></title>
      <url>https://atjason.com/daily/2017-05-17.html</url>
      <content type="html"><![CDATA[<p>每天都会接触各种新闻、信息，可如果不能吸收、存储在脑子里、对自己做的事有帮助，这些信息就毫无价值，还浪费了获取信息过程所消耗的时间。</p>
<p>如何吸收？</p>
<p>关键的，自己要梳理好自己的认知框架。这样，收到信息时才知道往哪里放。如果自己没有主心骨，过多的信息只会让自己更迷茫；如果没有差不多成型的点子，别人的建议只会是耳旁风。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0516 - Klib 玩跨界？]]></title>
      <url>https://atjason.com/daily/2017-05-16.html</url>
      <content type="html"><![CDATA[<p>作为全新的 Kindle 标注、笔记管理工具，Klib 已不满足于 Kindle、玩起了跨界。快瞧瞧都玩出什么花了！</p>
<h1 id="从-iBooks-中导入标注、笔记"><a href="#从-iBooks-中导入标注、笔记" class="headerlink" title="从 iBooks 中导入标注、笔记"></a>从 iBooks 中导入标注、笔记</h1><p>作为 macOS 的原生应用，Klib 不支持 <strong>导入 iBooks 中的标注、笔记</strong>，有些说不过去。</p>
<a id="more"></a>
<p><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1ffnjc4qk9tj30m80jsdix.jpg" alt=""></p>
<h1 id="使用-macOS-Services-导入"><a href="#使用-macOS-Services-导入" class="headerlink" title="使用 macOS Services 导入"></a>使用 macOS Services 导入</h1><p>直接上操作演示：</p>
<p><img src="https://ww4.sinaimg.cn/large/006tKfTcgy1ffixr3fh0zg30f00dswrd.gif" alt=""></p>
<p>聪明的你一定发现，这是书摘收集利器：<strong>在阅读时遇到心仪的句子，只需选择、按下「Command + K」快捷键，就立即收集到 Klib 中啦。</strong></p>
<h1 id="使用系统-Share-分享笔记"><a href="#使用系统-Share-分享笔记" class="headerlink" title="使用系统 Share 分享笔记"></a>使用系统 Share 分享笔记</h1><p>看图说话：</p>
<p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffnjgyun6uj30jg0eimyu.jpg" alt=""></p>
<p>也就是说，有了读书笔记，你可以方便地发微博、Twitter，以及通过各种方式分享给朋友。</p>
<h1 id="标记为章节"><a href="#标记为章节" class="headerlink" title="标记为章节"></a>标记为章节</h1><p>章节信息对于回顾整本书的笔记很有帮助，可以 Kindle 导出的笔记中并不包含，怎么办呢？一个小技巧供大家参考：</p>
<ul>
<li>阅读时在章节文字上添加标注</li>
<li>导入 Klib 后，选择全部章节对应的标注，将其「标记为章节」</li>
<li>在 Klib 中复制为 Markdown 时，自动为章节添加二级标题</li>
</ul>
<p><img src="https://ww1.sinaimg.cn/large/006tKfTcgy1ffixqimibcg30hi0bu4qp.gif" alt=""></p>
<h1 id="新建书、笔记"><a href="#新建书、笔记" class="headerlink" title="新建书、笔记"></a>新建书、笔记</h1><p>这应该是此版最默默无闻的功能。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1ffesfb9a8yj30b408c3ym.jpg" alt=""></p>
<h1 id="下载玩玩"><a href="#下载玩玩" class="headerlink" title="下载玩玩"></a>下载玩玩</h1><p><strong>新版限时五折优惠</strong></p>
<p><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_blog" target="_blank" rel="external"><img src="https://ww4.sinaimg.cn/large/006tNc79gy1feajo1pv9hj306y01pt8n.jpg" alt="Mac App Store"></a></p>
<p><a href="http://klib.me/cn/" target="_blank" rel="external">Klib 官网</a><br><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib 使用教程</a></p>
<p>各种建议、各种欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=Klib&amp;utm_source=V2EX" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0515 - DNSPod 解析变得不给力了]]></title>
      <url>https://atjason.com/daily/2017-05-15.html</url>
      <content type="html"><![CDATA[<p>这几天出现了网站打开速度比较慢的情况，还以为是服务器的问题，结果一排查，<a href="http://www.17ce.com/site/http/201705_f7d9114ee43b645de21c33e3b300fb65.html" target="_blank" rel="external">域名解析竟然要 10s</a>，太吓人了。</p>
<p><img src="https://ps.toolinbox.net/fd53y.jpg" alt=""></p>
<p>一直使用的是 DNSPod 来解析域名，看来要换了。初步使用了 CloudXNS，初步效果满意，至少比 DNSPod 要好。不过，这要过一段时间再测比较准确。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0514 - 思维这种东西，不扩张，就会自动收缩]]></title>
      <url>https://atjason.com/daily/2017-05-14.html</url>
      <content type="html"><![CDATA[<p>前几个星期集中开发新版 Klib，好久没有输入新信息、研究新东西了。</p>
<p>周末休息了两天，明天开始去看看别人创业的产品、模式，也想想新的点子。</p>
<p>思维这种东西，不扩张，就会自动收缩；不有意识地去开扩、接收新想法，就会自动固守在已有的东西上、也会越来越狭隘。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0513 - 可编程机器人：HEXA]]></title>
      <url>https://atjason.com/daily/2017-05-13.html</url>
      <content type="html"><![CDATA[<p>今天知道的信息中，最有意思的就是 HEXA 机器人了。</p>
<p><img src="https://ps.toolinbox.net/190d6.jpg" alt=""></p>
<blockquote>
<p>六足全地形机器人，可以装进双肩包。配有丰富的传感器，开放的操作系统，可以轻松编程。</p>
</blockquote>
<p>看起来像是程序员的机器人玩具嘛，没事编个程，让机器人跳个舞，也是不错的事。</p>
<p>先长个小草，之后再了解。最近，倒是想写个算法了排列下面的小球：</p>
<p><img src="https://ps.toolinbox.net/te5u1.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0512 - 写文档真累]]></title>
      <url>https://atjason.com/daily/2017-05-12.html</url>
      <content type="html"><![CDATA[<p>要发布新版 Klib 了，又要更新文档了…</p>
<p>哎，想到这个事就头大。</p>
<p>写代码容易，要把做好的功能用比较诱人的方式表现出来，不容易。</p>
<ul>
<li>写文案（包括英文）<ul>
<li>既能说清楚功能，又吸引人</li>
<li>考虑对搜索引擎友好</li>
</ul>
</li>
<li>设计图示、录制操作视频<ul>
<li>比较麻烦的，要准备图、视频中出现的内容，既要贴切、还要避免法律风险</li>
<li>调整尺寸、有损压缩</li>
</ul>
</li>
<li>在网站、论坛等地方更新之前旧的版本<ul>
<li>首先，得记录之前在哪些地方发布吧？再不济就用搜索引擎</li>
</ul>
</li>
<li>全部做完后，校对<ul>
<li>相当于文案的测试</li>
<li>关键的，这事没法自动化测试，只能肉眼看</li>
</ul>
</li>
</ul>
<p>整个过程下来，繁琐又耗时。要是这些事能外包出去，自己专心研究如何改进程序、用代码实现就好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0511 - 充分利用已有资源]]></title>
      <url>https://atjason.com/daily/2017-05-11.html</url>
      <content type="html"><![CDATA[<p>今天在 Klib 中集成 DevMate，花了 20 分钟，就完成了 Crash 日志的收集。</p>
<p>爽。</p>
<p>如果是自己搭建这套系统，不知道多麻烦。而采用现有的资源，则可以极大地提高效率，把节约的时间，用在自己更擅长的地方。</p>
<hr>
<p>不过，自己造轮子的过程也很难避免。比如更满足自己的定制需求、多少减少一点金钱支出、找不到合适的已有资源、等等。比如，我就没有使用 DevMate 的反馈系统，因为其回复的机制不太好，还不如自己搭建的系统。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0510 - 完美离不开手工打磨]]></title>
      <url>https://atjason.com/daily/2017-05-10.html</url>
      <content type="html"><![CDATA[<p>今天想到一个不错的点子：<strong><a href="http://klib.me" target="_blank" rel="external">Klib</a> 支持手工新建、标记章节</strong>。有了章节信息，就可以很方便地导出有大纲的笔记，阅读体验会好很多。</p>
<p>当然，最自然的方式是 Kindle 提供的数据中就包含章节信息。但这并不现实；即使有接口，要「自动」做到满足用户的不同需求也是不可能；比如，是一级章节信息就足够了，还是需要多级？这是因人而异的。</p>
<p><strong>全自动很难完美；完美一定包含手工打磨。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0509 - 蕴酿]]></title>
      <url>https://atjason.com/daily/2017-05-09.html</url>
      <content type="html"><![CDATA[<p>在近期开发 Klib 过程中，积累了一些要学习的技术点、想尝试的一些产品。由于在专注 Klib 开发，全都搁置了。目前，继续全力开发 Klib，争取早日发布，然后去消化下积累的东西。</p>
<p><strong>在保持前行的同时，用旁光欣赏边上的美景（女）</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0508 - 维护成本一定要低]]></title>
      <url>https://atjason.com/daily/2017-05-08.html</url>
      <content type="html"><![CDATA[<p>今天本打算出 Klib 新体验版的，结果在最后关头，iPic 爆出一个紧急的问题、不得不立即处理。等处理完，也来不及发布 Klib 了。节奏被打乱了，这感觉，真难受。</p>
<p>以后一定要更加注意，维护成本一定要低。与之相比，什么代码优雅、效率高、等等，都不那么重要了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0507 - 做产品，把心思花在用户身上]]></title>
      <url>https://atjason.com/daily/2017-05-07.html</url>
      <content type="html"><![CDATA[<p>这像是一句正确的废话，但其实并不容易坚持。</p>
<p>比如，我这个月的目标是：新版 Klib 上 App Store 首页。但这只是我自己的目的、私心，用户根本不关心；用户关心的是，这个产品是否解决了我的问题、是否好用。离开了这一点，即便上了首页推荐，也只是误入歧途。</p>
<p>看似复杂的事，其实本质很简单；看似简单的东西，其实最难支持。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201708 -《简单思考》]]></title>
      <url>https://atjason.com/book/201708.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/yaegn.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B01IBR2GRI/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B01IBR2GRI&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">简单思考</a> ，这是我第一次用 2 口气看完的书。</p>
<p>书的内容和结构，就像作者想表达的观点一样：简单。我也很认同作者的观点，书看起来就很顺畅、舒服。越是简单的东西，越有说服力、穿透力。</p>
<p>这本书也不需要总结，因为全书很简洁，大家可以自己花时间看完。</p>
<a id="more"></a>
<hr>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<h2 id="卷首语"><a href="#卷首语" class="headerlink" title="卷首语"></a>卷首语</h2><ul>
<li><p>商业是什么？ 商业是非常简单的。 用户与商家构成的 eco-system（生态系统）；这就是商业的本质。</p>
</li>
<li><p>给予之人被给予</p>
</li>
<li><p>商业的本质就是“持续提供用户真正想要的东西”，除此无他。</p>
</li>
<li><p>召集具备回应用户需求的热情与能力的员工，并为他们营造出无拘无束可最大限度地发挥其才能的环境，除此无他。</p>
</li>
</ul>
<h2 id="第一章-经商不是“打仗”"><a href="#第一章-经商不是“打仗”" class="headerlink" title="第一章　经商不是“打仗”"></a>第一章　经商不是“打仗”</h2><ul>
<li><p>重要的是不断磨炼对“大众真实需求”的感知能力和使之实体化的技术。</p>
</li>
<li><p>音乐和体育不同，不用与任何人战斗。</p>
</li>
</ul>
<h2 id="第二章-依自己的“感性”生活"><a href="#第二章-依自己的“感性”生活" class="headerlink" title="第二章　依自己的“感性”生活"></a>第二章　依自己的“感性”生活</h2><ul>
<li><p>在“一无所有”的情况下，人才能迅速成长。</p>
</li>
<li><p>未来不确定，所以才有无限的可能性。</p>
</li>
</ul>
<h2 id="第三章-不断舍弃“成功”"><a href="#第三章-不断舍弃“成功”" class="headerlink" title="第三章　不断舍弃“成功”"></a>第三章　不断舍弃“成功”</h2><ul>
<li><p>我不禁觉得，人类果然是脆弱的…… 人一旦幸福了，就不再追求更高的东西。</p>
</li>
<li><p>公司不是“学校” 培养员工的“自主性”绝无可能</p>
</li>
<li><p>不提升“士气”，自身缺乏干劲的人没资格做职场中人</p>
</li>
<li><p>公司不需要一个既创造不出价值还会拖优秀人才后腿的员工。 因此，我认为没有必要去提升员工的士气。 士气不是公司或上司的问题，而是员工个人的问题。</p>
</li>
</ul>
<h2 id="第四章-不需要“大人物”"><a href="#第四章-不需要“大人物”" class="headerlink" title="第四章　不需要“大人物”"></a>第四章　不需要“大人物”</h2><ul>
<li><p>不需要“大人物”，真正的领导者用自己的梦想推动人</p>
</li>
<li><p>不需要“统一管理”，现场的员工才是最高决策者</p>
</li>
<li><p>将经营理念书面化甚至是危险的，因为书面化恐怕会导致理念的形式化。</p>
</li>
<li><p>不需要“构想” 与其预测未来，不如专注于眼前的事</p>
</li>
<li><p>不简单的不是“战略”</p>
</li>
<li><p>守则不能攻，做好心理准备，抛弃“过去的成功”</p>
</li>
</ul>
<h2 id="第五章-精简一切多余的工作"><a href="#第五章-精简一切多余的工作" class="headerlink" title="第五章　精简一切多余的工作"></a>第五章　精简一切多余的工作</h2><ul>
<li><p>不需要“计划”，计划导致应变能力下降</p>
</li>
<li><p>严格地讲，并不是“没有计划”，而是停止在公司内宣布计划的详细内容，只把希望达到的底线透露给各项事业部门的主管。之后的事则交由他们自行判断。</p>
</li>
<li><p>靠“机制”无法成功，操作手册会破坏创造性</p>
</li>
<li><p>不做多余的事，一切都化繁为简就行。</p>
</li>
<li><p>越不行的公司会议越多。</p>
</li>
<li><p>不需要“信息共享” 多余的信息只会带来多余的思考</p>
</li>
</ul>
<h2 id="第六章-不追求“创新”"><a href="#第六章-不追求“创新”" class="headerlink" title="第六章　不追求“创新”"></a>第六章　不追求“创新”</h2><ul>
<li><p>不以“差别化”为目标；用户不追求“差别”，只追求“价值”</p>
</li>
<li><p>紧盯先驱者最有价值的部分，仅单纯地针对这部分价值深入挖掘。</p>
</li>
<li><p>不追求“创新”，始终耿直地回应当下的需求</p>
</li>
<li><p>集中精力，切实地去满足用户当下所感受到的需求。这既是企业的社会责任，也是提高经商成功率的良方。始终耿直地回应当下的需求，反而能使我们艰辛地抵达创新之路。</p>
</li>
<li><p>“设计”主导一切，最优先考虑用户的使用便利性</p>
</li>
<li><p>如果让软件工程师取得领导权，往往容易导致功能过剩。他们总想把最新技术或自己擅长的技术导入产品。</p>
</li>
<li><p>用户能告诉我们的无非是对“现有之物”的期望和不满。换言之，回应用户的声音，虽然可使“现有之物”得到打磨，但无法产生创新式的构想——那种在“现有之物”上大大飞跃后获得的构想。</p>
</li>
<li><p>只是表面地听取用户的声音，会使我们走上歧途。深入挖掘用户的心声、靠自己的头脑深入思考“用户真正需要的是什么”，这一点非常重要。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0506 - Klib 有了自己的实验室]]></title>
      <url>https://atjason.com/daily/2017-05-06.html</url>
      <content type="html"><![CDATA[<p>没错，<a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a> 有了自己的「实验室」：</p>
<p><img src="https://ps.toolinbox.net/6fdac.jpg" alt=""></p>
<p>主要是放置新开发的功能：</p>
<ul>
<li>如果反馈不好，改；</li>
<li>如果没人用，删；</li>
<li>如果很棒，收钱 😂</li>
</ul>
<p>想法的来源是 Gmail Labs，核心目的：<strong>保持程序简洁</strong>。我不希望自己因为判断错误而添加的、没什么人用的功能，让程序的主体变复杂。</p>
<p>都说加功能容易、删功能难，其中一部分原因是：一旦有用户使用了这个功能，删除后这部分用户肯定会不爽。而有了「实验室」这一关，如果真的删除了，这些用户相对更容易接受一些。</p>
<p>之后，这个「实验室」还会加入新的实验品，期待…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0505 - 又烧脑了一天]]></title>
      <url>https://atjason.com/daily/2017-05-05.html</url>
      <content type="html"><![CDATA[<p>今天，搞完了使用服务来收集书摘：</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1ffauadqp1tg30fu0d4k71.gif" alt=""></p>
<p>其实，单单是做个服务是简单的，麻烦的是添加书、笔记后自动跳转，以及为了后续做 URL Scheme 支持，需要设计良好的代码框架。</p>
<p>明天继续尝试一个还没做到的功能：Klib 接入 macOS Spotlight 搜索。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201707 -《疯传：让你的产品、思想、行为像病毒一样入侵》]]></title>
      <url>https://atjason.com/book/201707.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lr0z2.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B00HALILL2/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00HALILL2&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">疯传</a> 这本书主要讲了：<strong>人们愿意分享哪些内容、为什么愿意分享</strong>。并结合一些案例，介绍应该如何根据这些原则，创造人们愿意分享的内容；并像特洛伊木马一样，将自己的产品推广隐藏在分享的内容中，达到让人们不自觉地帮忙疯传的效果。</p>
<a id="more"></a>
<hr>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul>
<li><p>社会化媒体的海量宣传的首要问题是，使人们忽略了重要的线下口头评论。即使线下评论更为广泛，甚至比在线评论更有效</p>
</li>
<li><p>想利用好口碑传播这种方式，首先要理解人们为什么要谈论某些事情，为什么会把这些事情告诉给他们的朋友。</p>
<ul>
<li>原则一：社交货币（Social Currency）</li>
<li>原则二：诱因（Triggers）</li>
<li>原则三：情绪（Emotion）</li>
<li>原则四：公共性（Public）</li>
<li>原则五：实用价值（Practical Value）</li>
<li>原则六：故事（Stories）</li>
</ul>
</li>
<li><p>精品巴克莱所推崇的牛肉三明治就具备这六个原则，因为它给了人们社交货币，被高频出现的费城牛肉三明治所激活，产生令人非常向往的情绪，高质量的牛排享受体现了极大的实用价值，并且被编成故事广为流传。这六个原则会帮助我们更广泛地宣传我们的产品、思想和行为，并尽可能地形成相应的流行趋势。</p>
</li>
</ul>
<h2 id="第一章-社交货币-Social-Currency"><a href="#第一章-社交货币-Social-Currency" class="headerlink" title="第一章　社交货币 Social Currency"></a>第一章　社交货币 Social Currency</h2><ul>
<li><p>人们倾向于分享他们所见到的能对自己有益的事物。</p>
</li>
<li><p>人们都倾向于选择标志性的身份信号作为判断身份的最直接的依据。</p>
</li>
<li><p>神秘和争议也是产生非凡吸引力的两大要素。</p>
</li>
</ul>
<h2 id="第二章-诱因-Triggers"><a href="#第二章-诱因-Triggers" class="headerlink" title="第二章　诱因 Triggers"></a>第二章　诱因 Triggers</h2><ul>
<li><p>所以与其寻找引人注目的话题，还不如考虑话题流传的情境。一定要仔细思考这种产品或思想是否每天都能被目标顾客所处的情境诱发出来，而不是考虑产品的趣味。</p>
</li>
<li><p>诱因之所以越来越重要，是因为在一定的刺激过后，人们才会产生后续行为。</p>
</li>
<li><p>产品和思想一样有它们的栖息空间，这就是诱因，</p>
</li>
<li><p>并非所有的产品和思想都有天然的诱因。如果没有天然诱因，自然需要人为地去开发。</p>
</li>
<li><p>诱因是口碑传播和流行的基础，这就好比大多数的摇滚乐团，需要一种催化剂让他们流行起来。社交货币就好比乐团里的主唱，他是非常令人兴奋和有趣的，可以吸引众人的眼光。诱因就好比乐团的鼓手或者伴唱，虽然没有主唱这样的社交货币有魅力，但也是非常有效的陪衬。人们不可能经常留意他，但他能够不经意间成为乐队流行的基石。更多地被诱导，就会更有可能变为伟大的思想，产品或者思想就会变得越来越成功。</p>
</li>
<li><p>所以我们需要合理地利用周围的情境，像百威啤酒的甜麦圈在一天里在Twitter上被提及的频率统计“Wassup？”或者丽贝卡的《星期五》，都及时利用了日常生活中的诱因。我们当然也需要考虑产品和思想的栖息环境。通过科琳的奇巧巧克力与咖啡组合的案例表明，我们需要开发一个与流行诱因的连接。诱因与相关线索会促使人们不断地谈论、选择并使用相关产品，正是诱因使人们能够保持这种谈论行为。</p>
</li>
</ul>
<h2 id="第三章-情绪-Emotion"><a href="#第三章-情绪-Emotion" class="headerlink" title="第三章　情绪 Emotion"></a>第三章　情绪 Emotion</h2><ul>
<li><p>教育类文章比运动类文章受到了更多的转载和关注，健康类的新闻比政治领域的新闻更加流行，适合人们在茶余饭后谈论。</p>
</li>
<li><p>健康领域的文章话题一般都是很实用的，大多是关于教你怎样活得更长寿或更轻松，而教育领域的文章话题一般都是小孩的优教话题，所以比较受欢迎。</p>
</li>
<li><p>敬畏之情的确能够增加人们的共享行为。让人敬畏的文章转载率比一般的文章高出30％。</p>
</li>
<li><p>积极的文章比消极的文章更加受到人们的青睐，共享次数也更高。</p>
</li>
<li><p>参与原地慢跑实验的学生共享率达到了惊人的75％，是放松组学生共享率的两倍之多。所以不管唤醒的形式如何，生理唤醒也好，情绪唤醒也罢，甚至只是形式上的唤醒，都可以激发人们的共享行为。</p>
</li>
</ul>
<h2 id="第四章-公共性-Public"><a href="#第四章-公共性-Public" class="headerlink" title="第四章　公共性 Public"></a>第四章　公共性 Public</h2><ul>
<li><p>不要让私人的事情公开化，这样做只能让想禁止的行为适得其反，而要使公开的事情私人化。如果他人的错误行为不具备可视性，这样就可以减少这种行为重复发生的可能性。</p>
</li>
<li><p>所以我们需要像 Hotmail 和 Intel 一样，设计出能够自我宣传的产品。我们需要像露露柠檬和耐克的黄腕带一样，创造行为剩余，即使在人们使用完产品或对我们的思想不再狂热后还能留下有关这些事物的明显遗迹。我们还需要让私人的事物公开化。如果某些事情生来就是为了展示，那么就让它持续地向人们展示吧。</p>
</li>
</ul>
<h2 id="第五章-实用价值-Practical-Value"><a href="#第五章-实用价值-Practical-Value" class="headerlink" title="第五章　实用价值 Practical Value"></a>第五章　实用价值 Practical Value</h2><ul>
<li><p>人们喜欢传递实用的信息，即一些别人能用得上的信息。</p>
</li>
<li><p>人们并非绝对按照经济原则去评价事物，而是根据比较原则或者“参照点”来评价事物。</p>
</li>
<li><p>交易如果增强了让人惊喜的价值之后，会使得交易更有吸引力。</p>
</li>
<li><p>虽然有人气的信息容易被大家所共享，但独特的专业消息更容易像病毒一样传播开来。</p>
</li>
<li><p>相对于广告，人们很少会排斥故事。</p>
</li>
<li><p>我们情不自禁地被故事的情节所劝服。</p>
</li>
<li><p>我们应该怎样编写故事，以引起人们的持续谈论呢？ 我们需要构建一个属于我们自己的特洛伊木马——一个让人们持续谈论的载体，这样人们才会持续地谈论我们的产品或思想。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0504 - 好软件的标志之一：开放接口]]></title>
      <url>https://atjason.com/daily/2017-05-04.html</url>
      <content type="html"><![CDATA[<p>今天兴冲冲地打算支持 Klib 导出至 Notes.app，却无奈发现 Notes 没有 API，哎…</p>
<p>相比之下，OneNote、Evernote 都是有接口的，高下立现。对比 OneNote、Evernote，Notes 有明显的短板：</p>
<ul>
<li><strong>没有 API，这带来的主要问题是：没有第三方玩家</strong>。比如，<strong>有很多服务都支持导出至 Evernote，这就大大增强了 Evernote 的价值</strong>。只有 Apple 自己开发的 Notes，在扩展性上是无法与后者相比的。</li>
<li>跨平台性差些，其实就是不支持 Windows。当然，如果 Notes 网页版好用还好说，可是…iCloud 在国内的速度，我就不说了。虽然用户当下不见得需要 Windows，但对于笔记这种粘性很强的应用，有 Windows 版还是要放心很多。</li>
</ul>
<p>当然，<a href="http://klib.me" target="_blank" rel="external">Klib</a>、<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> 是好软件，因为都支持 URL Scheme，也算是开放接口啦 :)</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0503 - 略尴尬的 Windows 10 S]]></title>
      <url>https://atjason.com/daily/2017-05-03.html</url>
      <content type="html"><![CDATA[<p>微软刚刚发布 Windows 10 S，最大的特点是：<strong>只能安装 Windows Store 中的应用。</strong></p>
<p>在操作系统中安装 App，最严格的是 iOS，仅能安装 App Store 中的应用；当然，还有 Chome OS。而苹果自家的 macOS，虽然默认不允许运行未签名的程序，但毕竟是可以绕过；并且，可以安装 Mac App Store 以外的应用。</p>
<p>这次，Windows 10 S 这么严格的限制，确实有些尴尬。</p>
<ul>
<li>微软对生态的把控，没有苹果有(变)力(态)。</li>
<li>用户选择 Windows，很大程度是看中运行在其中的丰富应用、游戏。而一旦阉割了大部分、因各种原因不上架 Windows Store 的应用（比如目前甚至没有 Chrome），其生产力将大大折扣，用户还会买单吗？</li>
</ul>
<p>当然，如果真能强力推行，对 Windows 的整个生态、开发者、用户，都可能是有好处的。比如，可以很大程度打击盗版，开发者有更有可能从盗版中抢回收益。</p>
<p>希望不会像当年的 Windows RT 一样昙花一现，观察之~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0502 - 好多蛇]]></title>
      <url>https://atjason.com/daily/2017-05-02.html</url>
      <content type="html"><![CDATA[<p>今天、以及最近搜索的开源项目中，竟然多数都是使用 Python 语言实现的，看来要好好学学这条大蟒蛇了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0501 - 5 月只做一件事]]></title>
      <url>https://atjason.com/daily/2017-05-01.html</url>
      <content type="html"><![CDATA[<p><a href="http://klib.me" target="_blank" rel="external">Klib</a> 上 Mac App Store 编辑推荐。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0430 - 又一个月过去了…]]></title>
      <url>https://atjason.com/daily/2017-04-30.html</url>
      <content type="html"><![CDATA[<p>感觉这个月过得像是：愚人节</p>
<ul>
<li>月初，Klib 新版发布，做了些推广的事。</li>
<li>然后，考虑了新方向；可是，却没有付诸行动。</li>
<li>月底，又重新转回 Klib 新版开发。</li>
</ul>
<p>虽有尝试，但「犯懒」了，尤其是没有什么产出，惭愧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0429 - 剑已出鞘]]></title>
      <url>https://atjason.com/daily/2017-04-29.html</url>
      <content type="html"><![CDATA[<p>今天，搞定了 <a href="https://atjason.com/IT/anki.html">Anki 在 Chrome、iPhone、Kindle 各平台的制作卡片</a>，算是做好了学英语的利器。</p>
<p>接下来，靠的就是坚持了。😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Anki 使用小结]]></title>
      <url>https://atjason.com/IT/anki.html</url>
      <content type="html"><![CDATA[<p>最近在学习 Anki，遇到一些坑、也找了一些解决方案，这里记录下来供大家参考。</p>
<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><p>首先，对于想要入门 Anki 的朋友，强烈建议仔细阅读 <a href="https://apps.ankiweb.net/docs/manual.html" target="_blank" rel="external">官方文档</a>，这可以帮你更准确地理解 Anki 所使用的词汇、背后的逻辑。这之后，再去看国内朋友整理的教程、资源。</p>
<h1 id="Note-Fields-amp-Cards-Template"><a href="#Note-Fields-amp-Cards-Template" class="headerlink" title="Note Fields &amp; Cards Template"></a>Note Fields &amp; Cards Template</h1><p>目前我主要是用 Anki 来学习英文（单词），这里介绍下我所使用的 Note Note Fields &amp; Cards Template.</p>
<a id="more"></a>
<p>Note Field:</p>
<p><img src="https://ps.toolinbox.net/r1wwq.png" alt=""></p>
<ul>
<li>Word<ul>
<li>单词</li>
</ul>
</li>
<li>Reading<ul>
<li>音标</li>
</ul>
</li>
<li>Meaning<ul>
<li>释义</li>
</ul>
</li>
<li>Example<ul>
<li>例句</li>
</ul>
</li>
<li>Sound<ul>
<li>发音</li>
</ul>
</li>
</ul>
<p>Card 模板是从别人分享的 VOA 资源，我简单修改了下。</p>
<p><img src="https://ps.toolinbox.net/ztm70.png" alt=""></p>
<p>Card Front Template:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div class=Words_Front&gt;</div><div class="line">&lt;span class=sound&gt;&#123;&#123;Sound&#125;&#125;&lt;/span&gt;&amp;nbsp; &#123;&#123;Word&#125;&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>Card Back Template</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;div class=Words_Front&gt;</div><div class="line">&lt;span class=sound&gt;&#123;&#123;Sound&#125;&#125;&lt;/span&gt;&amp;nbsp; &#123;&#123;Word&#125;&#125;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;div class=Words_Meaning&gt;&lt;span class=sound&gt;&lt;/span&gt; &#123;&#123;Reading&#125;&#125;&lt;br&gt;&#123;&#123;Meaning&#125;&#125;&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;p /&gt;</div><div class="line">&#123;&#123;#Example&#125;&#125;</div><div class="line">	&lt;div class=Words_Example&gt;</div><div class="line">	&#123;&#123;Example&#125;&#125;&lt;/div&gt;</div><div class="line">&#123;&#123;/Example&#125;&#125;</div></pre></td></tr></table></figure>
<p>Style:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">.card &#123;</div><div class="line"># v. 2016.03.11.a</div><div class="line"> font-family: georgia;</div><div class="line"> font-size: 20px;</div><div class="line"> text-align: left;</div><div class="line"> color: black;</div><div class="line"> background-color:white;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.highlight &#123;</div><div class="line"> color: green;</div><div class="line"> #background-color: lightgreen;</div><div class="line"> font-weight: bold;</div><div class="line"> text-align: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.Words_Front &#123; </div><div class="line"> background-color: #33adff;</div><div class="line"># color: #FF80DD;</div><div class="line"> color: white;</div><div class="line"> font-weight: bold;</div><div class="line"> font-family: georgia,times;</div><div class="line"> font-style: italic;</div><div class="line"> font-size: 22px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.Words_Example &#123; </div><div class="line"># color:  #9CFFFA;</div><div class="line"> color:  #00aaaa;</div><div class="line"> font-family: georgia,times;</div><div class="line"> font-style: italic;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.Words_Meaning &#123; </div><div class="line"># color:  darkred;</div><div class="line"> font-family: verdana,sans,arial;</div><div class="line"># font-style: italic;</div><div class="line"> font-size: 18px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.Words_30 &#123; </div><div class="line"> color:  darkred;</div><div class="line"> font-family: verdana,sans,arial;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.Words_40 &#123;</div><div class="line">font-family: Lucida Sans Unicode; </div><div class="line"># color: #00557f;</div><div class="line">color: #FF80DD;</div><div class="line"># font-weight:bold;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.comment &#123;</div><div class="line"> font-size: 18px;</div><div class="line"> font-family: times;</div><div class="line"> font-style: italic;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.footer &#123; </div><div class="line"> font-size: 11px;</div><div class="line"> font-family: arial;</div><div class="line"> color: #696969;</div><div class="line"> #align: right;</div><div class="line"> #font-style: italic;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.sound_none &#123; display: none &#125;</div><div class="line"></div><div class="line">.sound &#123; display: no ne &#125;</div><div class="line"></div><div class="line">i m g &#123; width:none;  height: 100%;&#125;</div></pre></td></tr></table></figure>
<h1 id="添加卡片"><a href="#添加卡片" class="headerlink" title="添加卡片"></a>添加卡片</h1><p>这应该是最繁琐、最不愿意花时间的地方，这里梳理下我从几个源中添加卡片的方式，供大家参考。</p>
<h2 id="从-Chrome-添加卡片"><a href="#从-Chrome-添加卡片" class="headerlink" title="从 Chrome 添加卡片"></a>从 Chrome 添加卡片</h2><p>这里我使用的是 Chrome 插件「Anki 划词制卡助手」，具体可见 <a href="https://ninja33.github.io/20160817/anki-dict-helper-chrome-extension/" target="_blank" rel="external">作者博客的介绍</a></p>
<p>简单贴出我的配置：</p>
<p><img src="https://ps.toolinbox.net/udo6f.jpg" alt=""></p>
<p>注意：</p>
<ul>
<li>这一插件是依赖 <a href="https://ankiweb.net/shared/info/2055492159" target="_blank" rel="external">AnkiConnect</a> 插件，而这个插件是有些娇气的：仅当 Anki 仅使用主程序、未打开 Browse 等窗口时有效。</li>
</ul>
<h2 id="从-iPhone-添加卡片"><a href="#从-iPhone-添加卡片" class="headerlink" title="从 iPhone 添加卡片"></a>从 iPhone 添加卡片</h2><p>这个没有非常好的办法，我目前使用的是通过 Workflow 来中转，具体可见  <a href="https://ninja33.github.io/20170311/iOS-workflow-dict-helper/" target="_blank" rel="external">作者博客的介绍</a></p>
<p>补充我的修改：</p>
<ul>
<li>除了 Dropbox，还支持 iCloud、Box. 我本来是想用 iCloud 的，因为无需安装额外的程序。无奈，iCloud 在国内的同步速度实在是浪费生命。当然，如果你是在一天结束时批量导入，倒是可以考虑，毕竟无缝集成体验还是不错的。</li>
<li>在「保存到 Dropbox」中，我在最后添加了一列 iPhone，以作为最后导入时的标签，方便在导入后使用标签来筛选出卡片并更新。</li>
</ul>
<p><img src="https://ps.toolinbox.net/x47ws.jpeg" alt=""></p>
<p>这一方案的不足：</p>
<ul>
<li>首先，你需要安装 Workflow</li>
<li>配置过程略麻烦，需要添加多个 Workflow</li>
<li>添加卡片的步骤略显繁琐</li>
<li>每次都需要在 Anki 中手动导入</li>
<li>每次导入时，需要手动指定各个 Field 的对应关系</li>
<li>每次导入后还需要更新发音</li>
</ul>
<h2 id="从-Kindle-添加卡片"><a href="#从-Kindle-添加卡片" class="headerlink" title="从 Kindle 添加卡片"></a>从 Kindle 添加卡片</h2><p>和 iPhone 类似，这个目前也没有很好的办法。我目前使用的是「<a href="https://ankiweb.net/shared/info/1985846191" target="_blank" rel="external">KindleImporter</a>」插件。</p>
<p>这一方案的不足：</p>
<ul>
<li>每次都需要通过 USB 连接 Kindle</li>
<li>每次都需要在 Anki 中手动导入</li>
<li>每次导入时，需要手动指定各个 Field 的对应关系</li>
<li>每次导入后还需要更新发音、释义等 Field</li>
<li>无法添加标签</li>
</ul>
<h2 id="添加后更新卡片"><a href="#添加后更新卡片" class="headerlink" title="添加后更新卡片"></a>添加后更新卡片</h2><p>从上述源中添加的卡片，其信息可能是缺失的（比如缺少释义、发音等信息），需要完善卡片。我是使用 <a href="https://github.com/finalion/WordQuery" target="_blank" rel="external">WordQuery</a> 进行完善，具体可见链接中的介绍。</p>
<p>需要说明的是，其设置项并不人性（或者说，不容易理解）需要你多次试错后才能明白各项的意义、用法。简单的说：缺少什么信息，就通过 WordQuery 完善什么信息；不缺的，就不要碰。</p>
<p>这一方案的不足：</p>
<ul>
<li>无法设置不同的更新配置，方便对不同来源的卡片更新不同的 Field</li>
<li>配置和更新操作交互上并不在一起，无法在更新时确认配置信息</li>
<li>无法设置细粒度的配置。比如从有道导入音标时，只能同时导入英式、美式音标，无法仅导入美式音标（当然，具体到这个点，可能使用其他分别支持英式、美式音标的词典）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0428 - 入坑 Anki]]></title>
      <url>https://atjason.com/daily/2017-04-28.html</url>
      <content type="html"><![CDATA[<p>事情的起因是，有 Klib 用户需要导出 Kindle 中的生词、并转换为 Anki 格式。于是就研究了一下 Anki. 另外就是，自己也打算重新学学英文，于是就深入研究。</p>
<p>目前已经做的：</p>
<ul>
<li>Anki 的基本用法</li>
<li>英文单词的 Note/Card 模板</li>
<li>直接在 Chrome 中插入卡片</li>
</ul>
<p>还需要做的：</p>
<ul>
<li>直接在 iOS 中插入卡片</li>
<li>考虑 Klib 与 Anki 的结合</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0427 - 看书的副产品]]></title>
      <url>https://atjason.com/daily/2017-04-27.html</url>
      <content type="html"><![CDATA[<p>看书，不只是为了看书，而是在看书时思考。</p>
<p>在看书时，思想比较集中、思路比较开放。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0426 - 知难行易、知易行难？]]></title>
      <url>https://atjason.com/daily/2017-04-26.html</url>
      <content type="html"><![CDATA[<p>换句话说，<strong>是想法重要，还是执行力更重要？</strong></p>
<ul>
<li>有人说，想法不重要，重要的是把东西做出来；</li>
<li>有人说，只要有想法，肯定能做出来；关键是要有好的想法。</li>
</ul>
<p>其实，<strong>缺少哪个能力，哪个能力就更重要。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0425 - 第一次与 Google AdWords 亲密接触]]></title>
      <url>https://atjason.com/daily/2017-04-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/061gy.png" alt=""></p>
<p>Klib 上线时，象征性地在 Google AdWords 投放了广告。不过，当时提示所有的关键字无效，因为包含「Kindle」这个「商标」，也就一直没管。</p>
<p>今天又登录一看，发现已经有 2 次点击，1.46 美元的费用；不知道为什么关键字又生效了。于是，接着又更新了关键字。不想，立马就有点击。结果是：<strong>8.52 美元广告费，付费 0 转化…</strong></p>
<p>Google AdWords 是个很大的坑，要做的事还有很多，比如：</p>
<ul>
<li><strong>改进关键字</strong>，仅投放最有可能转化的关键字。</li>
<li><strong>改进数据追踪</strong>，比如点击广告、下载、内购等环节的转化率。</li>
<li>…</li>
</ul>
<p>目前的打算是：先观察一段时间，然后再改进关键字，每天设置 1 美元上限后放着。</p>
<hr>
<p>当然，如果是投放广告，还有很多其他渠道可以考虑，比如：</p>
<ul>
<li>Facebook</li>
<li>Twitter</li>
<li>播客</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0424 - 企业的核心竞争力：企业能力]]></title>
      <url>https://atjason.com/daily/2017-04-24.html</url>
      <content type="html"><![CDATA[<p>这两天在听「罗振宇」与「罗永浩」的「长谈」节目，有个观点跟分享下。</p>
<p><strong>假如，锤子手机没有做成，罗永浩拉着现在的队伍，准备杀入一个新的领域，会有会有人投资？</strong></p>
<p>答案是：<strong>一定会</strong>。</p>
<p>为什么呢？核心的，老罗和他的团队在做锤子手机过程中，所表现出来的能力，是大家能看见的。有这种能力做背书，投资人自然愿意投钱。</p>
<p><strong>大家愿意相信企业能做成某件事，就是企业能力。</strong></p>
<hr>
<p>类比到个人，如果：</p>
<ul>
<li><strong>你创业时有人愿意加入</strong></li>
<li><strong>别人创业时愿意拉你入伙</strong></li>
<li><strong>你做事时大家愿意相信你能做成</strong></li>
</ul>
<p>这就是你个人能力的外在证明。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201706 -《SEO实战密码》]]></title>
      <url>https://atjason.com/book/201706.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xmg92.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B011LQHH66/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B011LQHH66&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">SEO实战密码</a> 这本书，非常系统、完整地介绍了网站 SEO 所需要做的方方面面，对于 SEO 入门是极好的。接下来，准备以此为依据，系统性地优化自己的这几个网站：</p>
<ul>
<li><a href="https://toolinbox.net/" target="_blank" rel="external">https://toolinbox.net/</a></li>
<li><a href="https://atjason.com/">https://atjason.com/</a></li>
</ul>
<a id="more"></a>
<hr>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<h2 id="第1章-为什么要做SEO"><a href="#第1章-为什么要做SEO" class="headerlink" title="第1章 为什么要做SEO"></a>第1章 为什么要做SEO</h2><ul>
<li>SEO是英文Search Engine Optimization的缩写，中文意译为“搜索引擎优化”。</li>
</ul>
<h2 id="第2章-了解搜索引擎"><a href="#第2章-了解搜索引擎" class="headerlink" title="第2章 了解搜索引擎"></a>第2章 了解搜索引擎</h2><ul>
<li>搜索引擎所收录的绝大部分页面是蜘蛛自己跟踪链接得到的。可以说提交页面基本上是毫无用处的，搜索引擎更喜欢自己沿着链接发现新页面。</li>
</ul>
<h2 id="第3章-竞争研究"><a href="#第3章-竞争研究" class="headerlink" title="第3章 竞争研究"></a>第3章 竞争研究</h2><ul>
<li><p>做关键词研究就是要找到被搜索次数比较多，同时难度不太大的关键词，网站优化才有可能在一定的预算、周期下取得较好效果。</p>
</li>
<li><p>排名和流量都不是目的，有效流量带来的转化才是目的。</p>
</li>
<li><p>网站核心关键词，既不能太长、太宽泛，也不能太短、太特殊，需要找到一个平衡点。</p>
</li>
<li><p>一般来说，排在前面的内页数越多，说明竞争越小。</p>
</li>
<li><p>一般来说核心关键词在三个左右比较合适，不要超过4个。</p>
</li>
<li><p>有的站长认为同一个词用多个页面优化，获得排名的机会多一点。其实这是误解，只能造成不必要的内部竞争。无论你为同一个关键词建造多少个页面，搜索引擎一般来说也只会挑出最相关的一个页面排在前面。使用多个页面反而分散了内部权重及锚文字效果，很可能使所有页面没有一个是突出的。</p>
</li>
<li><p>在SEO领域，较长的、比较具体的、搜索次数比较低的词就是长尾关键词。</p>
</li>
<li><p>用户认为有实力做广告的公司更可靠</p>
</li>
<li><p>社会热点新闻搜索次数非常高。</p>
</li>
<li><p>域名越老，权重越高。</p>
</li>
<li><p>快照越新，说明搜索引擎爬行收录的频率越高，这也在某种程度上代表了域名权重。</p>
</li>
<li><p>锚文字是排名算法很重要的一部分。网站内部链接锚文字是站长自己能控制的，所以是最主要的增强关键词相关性的方法之一。在这方面维基百科是SEO人员应该学习的典范，其内部链接及锚文字使用达到了非常高的水平。</p>
</li>
<li><p>只有搜索引擎能顺利找到所有页面，抓取这些页面并提取出其中真正有相关性的内容，网站才可以被视为是搜索引擎友好的。</p>
</li>
<li><p>所以除非万不得已，尽量不要使用301转向以外的跳转。</p>
</li>
<li><p>但从SEO角度看，我建议尽可能使用目录，而不是子域名。</p>
</li>
<li><p>在robots.txt文件中通知搜索引擎网站地图文件位置，</p>
</li>
</ul>
<h2 id="第5章-页面优化"><a href="#第5章-页面优化" class="headerlink" title="第5章 页面优化"></a>第5章 页面优化</h2><ul>
<li><p>建议Title紧接着写在<head>之后，然后再写其他标签和代码，尤其不要在中间插上一大段JavaScript程序，这样搜索引擎可以迅速找到标题标签。</head></p>
</li>
<li><p>把多个关键词组合为一句更为通顺的词组或句子</p>
</li>
<li><p>现在主流搜索引擎排名算法都已经不使用描述标签，所以描述标签对关键词排名没有影响，但是对点击率有一定影响，因为大部分情况下，搜索结果列表中的页面摘要说明就来自描述标签。</p>
</li>
<li><p>保险起见，建议描述标签不要超过70个中文字。</p>
</li>
<li><p>如果不能生成恰当通顺、不重复的描述标签，那么就不要写描述标签。</p>
</li>
<li><p>所以现在的主流搜索引擎无一例外都没有在排名算法中考虑关键词标签的内容。</p>
</li>
<li><p>一般来说，篇幅不大的页面出现两三次关键词就可以了，篇幅比较长的页面出现4～6次也已经足够，千万不要堆积关键词。</p>
</li>
<li><p>写作页面内容时可以适当融入关键词的变化形式，包括同义词、近义词、同一件事物的不同称呼等。</p>
</li>
<li><p>英文页面优化中还有一种特殊关键词变化形式，就是同一个词根所生成的各种形式的单词，如work是词根，它的变化形式包括works，worker，workers，working，worked等。这些变化形式交叉使用，使搜索引擎能更快速准确地提取页面主题，并且这些变化形式都有可能被用户所搜索，组合出更多搜索词。</p>
</li>
<li><p>在H1和H2标签中融入关键词，有助于提高相关性。</p>
</li>
<li><p>在图片ALT属性中以简要文字说明图片内容，同时包含关键词，也是页面优化的一部分。</p>
</li>
<li><p>页面更新频率也是吸引搜索引擎蜘蛛返回抓取的因素之一。</p>
</li>
<li><p>页面上能优化的地方就这么多，优化方法也相对固定。只要在重要的地方，如Title、H1、alt文字、链接锚文字等地方出现关键词，避免在任何地方堆积关键词就可以了。相比外部链接及网站结构来说，页面优化是比较简单的部分。在搜索引擎排名算法中，页面本身的优化只占20％～30％的比重。</p>
</li>
</ul>
<h2 id="第6章-外部链接建设"><a href="#第6章-外部链接建设" class="headerlink" title="第6章 外部链接建设"></a>第6章 外部链接建设</h2><ul>
<li><p>外部链接数量及质量对一个域名所能带动收录的总页数有至关重要的影响。没有强有力的外链，仅靠内部结构和原创内容，很难使大型网站收录充分。</p>
</li>
<li><p>锚文字中出现目标关键词是最好的外部链接</p>
</li>
<li><p>总域名数与排名有更强的关系，其作用比总链接数更大。因此，来自100个普通权重域名的链接，比来自1个权重较高的域名上的100个链接作用更大。</p>
</li>
<li><p>内容为王，链接为后</p>
</li>
<li><p>没有外部链接的内页，似乎连内部链接的权重也不能完全体现出来，有了外部链接，内页的内部链接权重及排名能力才完全释放出来。</p>
</li>
<li><p>被高质量的目录收录对SEO依然有重要意义，因为带来不错的外部链接。</p>
</li>
</ul>
<h2 id="第10章-SEO观念及原则"><a href="#第10章-SEO观念及原则" class="headerlink" title="第10章　SEO观念及原则"></a>第10章　SEO观念及原则</h2><ul>
<li><p>所以说到底，提供SEO服务是在出卖自己的时间。凡是出卖时间的生意，都注定扩展性很差。</p>
</li>
<li><p>解决基本问题就解决了95％的问题</p>
</li>
<li><p>这里所说的基本问题主要包括：</p>
<ul>
<li>至少整体方向的关键词研究。</li>
<li>网站结构及内部链接，解决收录问题。 </li>
<li>页面标题标签、H1标签等几处最重要代码。 </li>
<li>页面正文包含关键词两三次。</li>
<li>网站内容原创性和避免复制内容。</li>
<li>找到一两个最拿手的外部链接建设方法。</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0423 - 升级网站]]></title>
      <url>https://atjason.com/daily/2017-04-23.html</url>
      <content type="html"><![CDATA[<p>今天折腾了一天网站升级，记个流水吧：</p>
<ul>
<li>升级 Next 主题，优化字体</li>
<li>优化 Favicon.ico</li>
<li>压缩图片</li>
<li>国外图床迁移至 Imgur</li>
<li>更新国内七牛图床地址</li>
<li>国内用户访问香港服务器</li>
<li>js/css 国内、国外使用对应的 CDN</li>
<li>压缩 html/js/css 文件</li>
<li>适配 http2</li>
<li>优化首页</li>
<li>比较不同的评论系统，最终继续使用 Disqus</li>
<li>清理 git 历史</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0422 - 在行动中思考]]></title>
      <url>https://atjason.com/daily/2017-04-22.html</url>
      <content type="html"><![CDATA[<p>已经不止一次掉入这个坑：<strong>特意空出大块的时间思考方向、战略，结果浪费了大块的时间。</strong></p>
<p>不是说这种方式不好、不需要这样做，而是：显然不适合我。我还是老老实实边干活、边思考吧。</p>
<p>也许，这就是用战术上的勤奋，来代替战略上的懒惰吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0421 - 即便玩，也要专注]]></title>
      <url>https://atjason.com/daily/2017-04-21.html</url>
      <content type="html"><![CDATA[<p>哪怕是看电影、玩游戏，不专注、时时被手机等分心，就无法享受玩本身的乐趣。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0420 - 凡是出卖时间的生意，注定扩展性差]]></title>
      <url>https://atjason.com/daily/2017-04-20.html</url>
      <content type="html"><![CDATA[<p>比如理发，基本可以假定给一个人理发的时间是固定的，要给更多人理发，就需要更多时间、或者更多理发师。如果为了增加单日理发能力，就是需要更多的理发师。而一旦进入淡季，更多的理发师则成为更高的、纯粹的成本。这就是扩展性差、边际成本高。</p>
<p>而如果是网络服务，多一个用户的成本几乎可以忽略；多很多用户，可能也只是多开一台服务器的事。这就是扩展性好、边际成本低。</p>
<p>做惯了互联网、软件等领域的产品，就习惯了后者。不仅思维是倾向于后者，也不太愿意碰前者的生意。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0419 - 没砍过功能，就别加功能]]></title>
      <url>https://atjason.com/daily/2017-04-19.html</url>
      <content type="html"><![CDATA[<p>没裁过人，就别招人；</p>
<p>没砍过功能，就别加功能。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0418 - 数据是挖不完的金矿]]></title>
      <url>https://atjason.com/daily/2017-04-18.html</url>
      <content type="html"><![CDATA[<p><strong>数据越多、沉淀时间越久，越有价值，是挖不完的金矿。</strong></p>
<p>最近在了解 SEO，知道了很多基于数据而提供的服务，订阅价格不菲。另外，国内也有了推出不久的「聚合指数」，虽说目前还挺简单，但方向是对的，我看好。</p>
<p>想想共享单车都可怕，不仅轻而易举地拿到押金，还拿到姓名、身份证、手机、等个人信息，还是真实位置的骑行数据，想想真是可怕。单单是累积的骑行数据，日后的价值都是无法估量的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0417 - 是我的审美提高了吗？]]></title>
      <url>https://atjason.com/daily/2017-04-17.html</url>
      <content type="html"><![CDATA[<p>今天去看了《速度与激情 8》，确实如一个朋友所说的「我不会再去影院看下一部了」我也觉得一般。</p>
<p>可以吐槽的点很多，我就不在这里罗列了。我倒是觉得，除去电影本身的原因，是不是我、我们变了，变得挑剔了，变得「见多识广」而不为其中包袱打动了，觉得其中桥段老套了，觉得缺乏新意了，开始不被一些场面所动了…</p>
<p><strong>随着年龄、阅历、见识的增长，能让我们兴奋的东西变了；关键的，变少了。</strong>甚至，很多人已经只能被钱这种东西打动，变得单调乏味很多。</p>
<p><strong>与其吐槽电影不能让我们爽，不如去培养些其他让我们爽的兴趣、事业、等等。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0416 - 不经历、无体验]]></title>
      <url>https://atjason.com/daily/2017-04-16.html</url>
      <content type="html"><![CDATA[<p>今天坐朋友的车出门，发现 <strong>有车以后，明显距离感不同</strong>。我没买车，会觉得去城市的另一端，很远；而有车的朋友，就会觉得还好，开车也不用花太久。</p>
<p>这就是体验、感受上的差别。没有车，是很难体会这种心理上的细微差别。</p>
<p>另外，在跟朋友吹牛时，他提到的一个幼儿园监控系统的案例，也清晰的表示：<strong>有些商业模式、背景里的逻辑，是坐在办公室无论如何也想不到的</strong>；一定要深入真正参与到项目的实际，尤其是了解整个利益链条上各个环节，才能真正理解项目的要害、被采购的关键。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0415 - 输出倒逼输入]]></title>
      <url>https://atjason.com/daily/2017-04-15.html</url>
      <content type="html"><![CDATA[<p>这几天在了解小密圈，心里在想：<strong>如果自己开个「独立开发者」相关的小密圈，怎么才能让自己有持续的输出、持续的产生对别人有价值的信息？</strong></p>
<p>目前来看，自己尚未准备好。不过，如果只是抖存货，那肯定有耗完的一天。更重要的是，<strong>自己要能持续地学习，不断获取新的信息、刷新自己的认知</strong>。并且，要能了解圈友实际的情况，能结合自己的经验、对方的实际情况，给出自己的建议。</p>
<p>从信息的角度，自己不太可能造出全新的、唯一的、没有别人知道的信息；更可能的是，<strong>根据信息不对称，交流自己知道、而圈友不知道的信息</strong>。从圈友的角度，从别的地方也能获取信息，但是从我这里获取的时间成本更低、更准确。这应该就是小密圈能运转起来的真正动力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0414 - 高风险、高收益]]></title>
      <url>https://atjason.com/daily/2017-04-14.html</url>
      <content type="html"><![CDATA[<p>如果有以下 2 个选择，你会选择哪个？</p>
<ol>
<li>一年有 100% 的机会赚 10 万；</li>
<li>一年有 20% 的机会赚 100 万； </li>
</ol>
<p><strong>以前，我会选择 1</strong>，保险起见；</p>
<p><strong>现在，我想试试 2</strong>; 从概率的角度，一年收入 20 万。</p>
<p><strong>是时候尝试下高风险、高收益的选择</strong>。</p>
<p>是什么选择？我还不知道，在思考；希望年底能交出满意的答卷。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0413 - 多花钱]]></title>
      <url>https://atjason.com/daily/2017-04-13.html</url>
      <content type="html"><![CDATA[<p><strong>节俭是美德；仅此而已。</strong></p>
<p>感觉最近花钱花太少了。虽说，这样可以省点小钱，却失去更多。要知道，<strong>很多实际的体验，不花钱是永远感受不到的</strong>。比如；</p>
<ul>
<li>不交押金，就无法骑单车；</li>
<li>不坐专车，就无法体会和快车的区别；</li>
<li>不买 App，就无法理解购买者心态上的变化；</li>
<li>…</li>
</ul>
<p><strong>多花钱，不是为了花钱，而是收获更多体验。</strong>更宝贵的，能发现更多的机会，发财的机会。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0412 - 怎么找到 100+ 个需求？]]></title>
      <url>https://atjason.com/daily/2017-04-12.html</url>
      <content type="html"><![CDATA[<p>这两天在面对这个问题，还真难到我了。</p>
<h1 id="先问问自己"><a href="#先问问自己" class="headerlink" title="先问问自己"></a>先问问自己</h1><p>关键的，自己平时要多看、多体验、多想、多思考，这样才能积累一些候选的需求，关键时候才能拿出来救场。</p>
<p>功夫在平时，还是要靠平时积累；临时抱佛脚，质量不高。</p>
<h1 id="再问问用户"><a href="#再问问用户" class="headerlink" title="再问问用户"></a>再问问用户</h1><p>毕竟，自己能想到的点子还是有限的，不如直接到用户那问。</p>
<p>这里发现个技巧：<strong>愿意花钱的，才是真需求</strong>。比如，国内有类似猪八戒、58 这种发布需求的网站，绝对是真的有需求才来找供应商的，可以到上面找找灵感。另外，国外也有类似的地方。</p>
<p>当然，这些都是已经成熟的需求，很可能已经有解决方案了，自己再做就是重复了。所以，更多的是找灵感。</p>
<p>还有个地方，就是用户吐槽的地方。比如别家 App 的评论区、论坛、等等。已有产品可能有自己的包袱，很难解决用户的某些问题；而新产品轻装上阵，就好办得多。。<strong>旧产品的槽点，可能就是新产品的卖点</strong>。</p>
<h1 id="别人也有好建议"><a href="#别人也有好建议" class="headerlink" title="别人也有好建议"></a>别人也有好建议</h1><p>每个人的知识领域、经验有限，多和别人头脑风暴，交换思想、杂交出新想法，会有意想不到的收获。</p>
<hr>
<p>周五结束前，出 10+ 个基本靠谱的产品胚子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0411 - 从创造者、到服务者]]></title>
      <url>https://atjason.com/daily/2017-04-11.html</url>
      <content type="html"><![CDATA[<p>回想自己目前做的产品：<a href="http://klib.me/cn/" target="_blank" rel="external">Klib</a>、<a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1000lv4R&amp;ct=iPic_blog" target="_blank" rel="external">iPic</a>、等，更多是创造者的意味：<strong>实现自己的需求，打包成产品，供他人使用。</strong></p>
<p>核心的一点是：<strong>需求来源于自己</strong>。优势是：自己可能透彻地把握需求，怎么做、做成什么样子、什么程度，自己心里是有数的。</p>
<p>不过，局限也很明显：<strong>自己的需求是有限的</strong>。或者说，自己需要、同时别人也需要、而且自己有能力实现的需求，是有限的。</p>
<p>怎么办呢？</p>
<p>需要跳出自身的局限，直接从用户出发。<strong>去发现、体会用户的问题，设计、并实现恰当的产品或服务，以解决用户的问题</strong>。这就是服务者的方式。</p>
<p>这样的方式，思路当然很广，不愁没有事做，就愁要做的事太多。不过，核心的一点，由于需求并不是自已的，或者说 <strong>自己并不需要这样的产品，怎么才能做好呢？</strong></p>
<p>这对我是个考验，我现在也说不好，但感觉首先要找到这样的问题，然后是去体会。最好能和有这样问题的人建立持续的联系，能在产品的整个生命周期都有典型用户参与，这样应该会好很多。</p>
<p>恩，想法还没有，但至少明确了思考问题的方向，继续寻找。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0410 - Google 也来忽悠]]></title>
      <url>https://atjason.com/daily/2017-04-10.html</url>
      <content type="html"><![CDATA[<p>最近，看到 Google 出了新的 jpg 压缩库。正好，这几天在出新版 iPic，就顺手来试试效果如何。</p>
<p>结果，不试不知道、一试吓一跳，这压缩库的表现真差：</p>
<p><img src="https://ps.toolinbox.net/n35le.jpg" alt=""></p>
<ul>
<li>狂占 CPU</li>
<li>狂占内存</li>
<li>狂慢</li>
<li>压缩效果与成本相比，并不出众</li>
</ul>
<p>网上的新闻都是正面，却基本都是通稿，鲜有真正测试的结果。看来，以讹传讹在科技新闻中，也不是新闻啊。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0409 - 删代码的感觉，爽]]></title>
      <url>https://atjason.com/daily/2017-04-09.html</url>
      <content type="html"><![CDATA[<p>这两天重构了部分 iPic 的代码，之后删除了冗余的代码，爽。</p>
<p>现在回看，之前写的代码有明显的问题，比如复制代码。估计当初是为了赶进度，堆砌了代码，也没去优化。</p>
<p>另外，还碰到了 Swift 中这个神奇的区别：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">as</span>? <span class="type">Int</span></div><div class="line"><span class="keyword">as</span> <span class="type">Int</span>?</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0408 - 春天，共享单车的春天]]></title>
      <url>https://atjason.com/daily/2017-04-08.html</url>
      <content type="html"><![CDATA[<p>今天骑车出门，发现杭州共享单车已经挺多了。即使是在高峰期，路边还是能看到不少单车。尤其，路过黄龙体育中心时（当时有演唱会），原本停着杭州「小红车」的地方，已经没有车了，而共享单车还有。</p>
<p>在我看到的单车中，感觉「Hello Bike」是做工最好、看着最顺眼了。</p>
<p>不过，好骑不好骑我就不知道了，因为可悲的是，我试了「Hello Bike」和「小鸣单车」，都失败了：一个总说验证码失败而无法登录，一个押金已经扣款了、App 内还显示没有押金。看来大家 <strong>为了「快」，太「糙」了</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0407 - Google BBR]]></title>
      <url>https://atjason.com/daily/2017-04-07.html</url>
      <content type="html"><![CDATA[<p>今天，在朋友圈里被提到了 <a href="https://github.com/google/bbr" target="_blank" rel="external">Google BBR</a>。搜了下，好评很多。朋友实测了，提速确实明显：3 倍。</p>
<p><strong>有点小兴奋，因为新技术。</strong></p>
<p>经常，看到朋友有这样的想法：<strong>最近没动力，需要败点东西刺激下</strong>。</p>
<p>于我，<strong>败点时间折腾新技术，也是很爽的。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0406 - 为什么有些人连提问都不会？]]></title>
      <url>https://atjason.com/daily/2017-04-06.html</url>
      <content type="html"><![CDATA[<p>比较典型的，会遇到用户这样的反馈：</p>
<blockquote>
<p>xx 失败，怎么办？</p>
</blockquote>
<p>你让我怎么办？</p>
<p>最基本的，你总要描述下 <strong>做了什么操作、遇到什么结果、有什么提示、等等</strong>，这样我才能知道发生了什么、问题可能出在哪，才有可能帮到你。</p>
<p>真的很难理解，为什么连基本的提问都不会，是饭来张口习惯了吗？<strong>总要在别人不断的追问下，才能把问题描述清楚，真真是自己理解、表达能力的缺失。</strong></p>
<hr>
<p>另外一种陋习就是，<strong>上来先问：在不</strong>？凭空多了一次回复和等待的时间；况且，<strong>我得看你说什么事、然后才能决定在不在呀？</strong>想起 Google 的视频 App，接收方能看到发起方当前的视频，这样就能大致判断出对方视频的意图，对于是否接受视频是很有帮助的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0405 - 睡后收入]]></title>
      <url>https://atjason.com/daily/2017-04-05.html</url>
      <content type="html"><![CDATA[<p>好吧，今天又是套牌车…</p>
<p>「<strong>睡后收入</strong>」，也即「<strong>被动收入</strong>」的另一种说法，比如：</p>
<ul>
<li>在睡觉的时候，银行里的钱在增加</li>
<li>在旅游的时候，银行里的钱在增加</li>
<li>陪家人的时候，银行里的钱在增加</li>
<li>在…的时候，银行里的钱在增加</li>
<li>…</li>
</ul>
<p>说白了，就是能 <strong>构建一种能自动运行、无人值守、无需客服、自动盈利的商业模式</strong>，这怕是自由职业者的终极目标吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0404 - 新版 Klib 上架]]></title>
      <url>https://atjason.com/daily/2017-04-04.html</url>
      <content type="html"><![CDATA[<p>经过一个多月的开发、测试、上架、被拒、修改、被拒…终于，新版 <a href="http://klib.me/cn/?utm_source=atjason" target="_blank" rel="external">Klib</a> 顽强上架 Mac App Store.</p>
<p>个中滋味，实在是自己体会。</p>
<p>好在，<strong>Klib 实现了几项地表最强、世界第一</strong>，也算是让自己满意了些：</p>
<ul>
<li>地表首款可以导入多看笔记的 App</li>
<li>地表首款可以导入「Kindle for iPhone」等客户端的笔记</li>
<li>地表首款可以在 Kindle for macOS 中打开笔记上下文的 App </li>
<li>通过网络从「亚马逊」导入（暂不支持中国区账户）</li>
<li>导出至「印象笔记」</li>
</ul>
<p><strong>总体来看，Klib 是地表导入 Kindle 标注、笔记最强的 App，没有之一</strong></p>
<p>新版上架，<strong>限时半价优惠</strong>，抢到就是赚到：</p>
<p><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external"><img src="https://ww4.sinaimg.cn/large/006tNc79gy1feajo1pv9hj306y01pt8n.jpg" alt="Mac App Store"></a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0403 - 要想富、搞少妇]]></title>
      <url>https://atjason.com/daily/2017-04-03.html</url>
      <content type="html"><![CDATA[<p>好吧，我也标题党一回…</p>
<p>有话说：<strong>女人和小孩的钱最好赚</strong>。但其实，<strong>小孩的钱多半也是女人花的</strong>；这女人，就是「<strong>少妇</strong>」喽。</p>
<p><strong>要做赚钱的事，首先就要搞清楚谁是花钱的人。</strong></p>
<p>在《自律型创业》中，这也被称为为「<strong>购买的决策单元</strong>」。比如，在公司里，采购经理等角色，决定了要不要购买某个产品。而在家庭消费中，女主人做了大量的消费决策。也许在中国的传统观念里，大宗消费还是男主人主导。但其实女主人日积月累所花的钱，也许大大多于男主人的「重大决策」。</p>
<p>比如化妆品、服装、母婴、育儿、等等，均是 <strong>女人的天下</strong>。还有哪些未被发掘的机会呢？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0402 - 又多了一个榜样：Pinboard]]></title>
      <url>https://atjason.com/daily/2017-04-02.html</url>
      <content type="html"><![CDATA[<p>之前也知道 <a href="http://pinboard.in/?utm_source=Klib.me" target="_blank" rel="external">Pinboard</a>，今天重新认识了 <a href="http://pinboard.in/?utm_source=Klib.me" target="_blank" rel="external">Pinboard</a>.</p>
<ul>
<li>也是一位 <strong>独立开发者的作品</strong>，坚持了快 8 年，<strong>实现了可观的收入</strong>。</li>
<li><strong>产品没有免费版</strong>，坚持「<strong>不要做个免费用户</strong>」的理念。</li>
<li>收取合理的费用，<strong>养活自己的同时，带来的可贵的自由、对产品的控制权</strong>，而不是将产品出售给大公司</li>
<li><strong>专注于产品本身的优化、改进，做一件事，并做好</strong></li>
<li>在产品比较成熟的前提下，<strong>最近一年几乎只做了维护工作</strong>，就可以享受可观的收入。</li>
<li>是一个内向的人，<strong>愿意做「反社交」的产品</strong></li>
</ul>
<p>以上种种，都是自己比较认同、向往的。独立开发者有时比较苦闷、沮丧，以后再遇到类似的状况，就把 <a href="http://pinboard.in/?utm_source=Klib.me" target="_blank" rel="external">Pinboard</a> 的故事拿出来再读一遍。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201705 -《增长黑客》]]></title>
      <url>https://atjason.com/book/201705.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/qlek6.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B011BHQSV0/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B011BHQSV0&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">增长黑客（Growth Hacker）</a></p>
<p>为了做 <a href="http://klib.me/cn/?utm_source=atjason.com" target="_blank" rel="external">Klib</a> 海外推广，特意看了这本书。</p>
<p><strong>用黑客式的方式带来用户增长，既酷炫、又实用；而且，非常适合独立开发者</strong>，因为自己有开发能力，还能全面掌控自己的产品。比如，像 SEO 优化带来更多流量，则是性价比非常高的事。</p>
<p><strong>全书主线清晰：定义出好的产品 &gt; 获取用户 &gt; 激发活跃 &gt; 提高留存 &gt; 增加收入 &gt; 病毒式传播</strong>。而且，在各个环节辅以案例进行介绍，很清晰。</p>
<p>不过，看书归看书，真正要有收获，还是要实操。<strong>尤其是在做了某项具体优化后，能真切地看到用户数据增加，那种感受，应该很深刻、很爽</strong>。计划 4 月份从网站 SEO 优化开发，希望能早日体会到这种感觉。</p>
<a id="more"></a>
<hr>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<h2 id="第1章-增长黑客的崛起"><a href="#第1章-增长黑客的崛起" class="headerlink" title="第1章　增长黑客的崛起"></a>第1章　增长黑客的崛起</h2><ul>
<li><p>低成本甚至零成本地用“技术”来让产品获得有效增长。</p>
</li>
<li><p>徒手起家的创业者掌握的资源有限，能够仰赖的更多是一些几乎零成本的方式，比如交换流量、撰写软文、申请报道、邀请转发等。</p>
</li>
<li><p>他们通常采用的手段包括A/B测试、搜索引擎优化、电子邮件召回、病毒营销等，而页面加载速度、注册转化率、E-mail到达水平、病毒因子这些指标成为他们日常关注的对象。</p>
</li>
<li><p>我们可以将增长目标拆分并概括为“AARRR”转化漏斗模型，即：</p>
<ul>
<li>Acquisition（获取用户）</li>
<li>Activation（激发活跃）</li>
<li>Retention（提高留存）</li>
<li>Revenue（增加收入）</li>
<li>Referral（传播推荐）</li>
</ul>
</li>
<li><p>数据分析就是定性分析与定量分析相互结合，不断验证的过程。提出假设、设计方案、分析数据、验证或推翻假设，最终抽丝剥茧，逐渐接近真相。</p>
</li>
<li><p>当事情‘按计划’进行时，没有人会惊慌，即使这个计划是可怕的。</p>
</li>
</ul>
<h2 id="第2章-创造正确的产品"><a href="#第2章-创造正确的产品" class="headerlink" title="第2章　创造正确的产品"></a>第2章　创造正确的产品</h2><ul>
<li><p>原本隶属复杂产品中的一个功能子集，最终以其简单的概念和聚焦的特性赢得了用户的青睐。</p>
</li>
<li><p>真正的浪费不是上班刷微博，不是开给员工高于市场标准的工资，也不是没有谈到最优惠的广告报价。真正的浪费是在错误的方向大踏步地高歌猛进，走得越远，就越与成功背道而驰。在如今这个技术井喷的时代，一样东西“能不能造出来”早已不是问题，该冷静追问的是这样东西究竟“该不该造出来”。成功地执行一项没有意义的计划是导致失败的致命原因。</p>
</li>
<li><p>当你试图在产品上增加一些功能以确保它的“完整性”和对某些极端情况的应对能力时，这意味着只能推迟正式进入真实市场接受用户检验的时间。</p>
</li>
<li><p>强行让一辆残破的二手车在高速公路上以全速冲刺，开得越快就越容易倾覆散架。</p>
</li>
<li><p>缺乏成熟产品做依托，再强力的推广也无济于事。</p>
</li>
<li><p>1．需求是真实存在的还是伪需求</p>
<ul>
<li>相比产品经理灵光一现的锦上添花，扎实地满足既有需求的雪中送炭或许更为可贵。</li>
</ul>
</li>
<li>2．判别需求是否属于刚需<ul>
<li>选择刚需作为产品切入点，能够减少前期项目风险和后期推广阻力，但面临的竞争也更为惨烈。</li>
</ul>
</li>
<li>3．研究需求量是否够大，市场是否够肥</li>
<li><p>4．衡量需求的变现能力</p>
</li>
<li><p>最小化可行产品（Minimum Viable Product，简称MVP）</p>
</li>
<li><p>如果问开发一个MVP必须具备哪些模块，那么我会不假思索地告诉你：除了待验证的基本功能外，反馈渠道、公告看板、自动升级和使用行为统计这四件事必须纳入考量。</p>
</li>
<li><p>对不同用户设置不同的后台功能开关，进行新功能的灰度发布，也是避免失败的一种方式。</p>
</li>
<li><p>你雄心万丈地公布一堆开发计划，还没发布就受到用户们的强烈期待，但当功能实际开发完毕上线后，却发现鲜少有人会真正用到——既然是免费的，人们总是希望得到的越多越好，不管实际上是不是真的需要。</p>
</li>
<li><p>避免被用户口头意见带到沟里的另一种方法是，不要问他们喜欢什么，而是看他们是否愿意为某项功能付费。</p>
</li>
</ul>
<h2 id="第3章-获取用户"><a href="#第3章-获取用户" class="headerlink" title="第3章　获取用户"></a>第3章　获取用户</h2><ul>
<li><p>所谓产品蝗虫，是指那些产品目标用户以外的围观群体，他们往往并非冲着满足自身需求来使用你的产品，而只是单纯好奇的观光客、寻找项目的投资人或是来做竞品调研的产品经理。</p>
</li>
<li><p>常用的搜索引擎优化方式包括提高关键词的密度和权重、增加长尾关键词数量、建立外链、优化页面结构等。一般来说，搭建清晰直观的页面结构、填充符合主题的高质量内容、维持有规律的更新、尽可能获取高权重网站的链接推荐，能获得更佳的搜索引擎排名。</p>
</li>
<li><p>通过维基百科建立反向链接</p>
</li>
<li><p>在新闻资讯的信息流中温柔地询问这些用户“您是否喜欢本产品？”，以此将打扰降到最低。如果用户选择了“喜欢”，则Circa的下一步是询问“是否愿意去App Store为我们打分？”；当用户再次点击确认，这才会被引导去App Store的下载页面</p>
</li>
<li><p>应用市场通常会为新上架或刚更新了版本的应用赋予短时间内的高权重，在此期间，越多下载，排名蹿升越快。</p>
</li>
<li><p>开放的态度是根本，与其将服务封闭起来，敝帚自珍，不如将其中一部分有价值的内容开放输出给网民，在网民的自发传播中扩张地盘。这成为许多初创公司跑马圈地的一招妙法。</p>
</li>
<li><p>所谓的增长就是设法在产品的曝光量和转化率上双管齐下，尽全力优化。你需要做的就是衡量产品的哪些特性最容易吸引人们的眼球，然后通过测试验证，并使它成为产品的增长引擎。”</p>
</li>
<li><p>长文案的“滑梯理论”：优秀的文案，应当让阅读者有种乘坐滑梯的感觉，即顺着你预先铺设的轨道一路顺畅地滑下去，走完全程，到达终点。而标题、副标题、题图的所有作用只在于让读者阅读正文的第一句话；至于正文第一句话的核心价值，则是让读者继续去阅读第二句话，以此类推。</p>
</li>
<li><p>一款产品本身或许有诸多特性，除此之外，使用技巧、同类对比、幕后趣事、未来计划等，都是值得一写的宣传素材。</p>
</li>
<li><p>文章的谋篇布局可以遵循以下顺序：简要概述→话题事件→核心特色→主要功能→团队访谈→未来计划→有奖活动→转化引导。</p>
</li>
<li><p>核心特色：也就是俗称的“卖点”。卖点又分为一级卖点和二级卖点，其中一级卖点最好只定义一个，将其充分强化后深深打入用户的脑海中，二级卖点一般有两到三个。如</p>
</li>
<li><p>人们喜欢听故事。团队访谈能将冷冰冰的产品推荐转向带有人情味的轻松交流氛围中，使读者通过字里行间更加了解产品背后团队的风格理念，从而产生认同感。</p>
</li>
<li><p>描绘产品未来的规划，既可以解释产品当前版本的不足，向用户表露改进的决心，引发期待，也能够起到烟幕弹的作用，迷惑竞争对手。</p>
</li>
<li><p>披露未来计划时有两个忌讳，一是忌画大饼，提出不切实际的发展计划，今天刚上线1.0版，马上雄心勃勃昭告天下要推出开放平台；二是忌太过诚实具体，以至于暴露商业机密。比较好的做法是只披露未来一到两个版本内会做的事情。</p>
</li>
<li><p>不要用战术的勤奋来掩盖战略的懒惰</p>
</li>
</ul>
<h2 id="第4章-激发活跃"><a href="#第4章-激发活跃" class="headerlink" title="第4章　激发活跃"></a>第4章　激发活跃</h2><ul>
<li><p>当路边小吃摊主热情洋溢地问你“鸡蛋灌饼是加一个蛋还是两个蛋”时，原本并不打算吃饼的你是否也曾因此莫名其妙就掏钱了呢？</p>
</li>
<li><p>每次抢夺打车红包随机金额最大的，永远属于那个从来没有用过滴滴打车的人。</p>
</li>
<li><p>游戏的四大决定性特征：目标、规则、反馈系统和自愿参与。</p>
</li>
</ul>
<h2 id="第5章-提高留存"><a href="#第5章-提高留存" class="headerlink" title="第5章　提高留存"></a>第5章　提高留存</h2><ul>
<li><p>留住已有的用户胜过拓展新的客户。也就是俗称的“一鸟在手，胜过双鸟在林”</p>
</li>
<li><p>一款起初简单的产品，随着发展阶段的变化，会逐渐变得形态臃肿、模块堆叠，原本轻盈单纯的质地，不可避免地承载起越来越多的商业目标。如果手段生硬，不顾忌用户体验，则将形成骚扰，造成用户的反感和流失。</p>
</li>
<li><p>关注产品的次日留存率，可于第一时间发现产品新版本的品质变动和渠道优劣；而7日留存则可反映出用户完成一个完整体验周期后的去留状况；至于30日留存，则更能反映出一次版本迭代后的稳定性，辅助判断产品的演进方向是否合理。</p>
</li>
<li><p>渠道留存也是一项值得钻研玩味的指标。由于渠道来源不一，用户质量也千差万别，所以有必要针对渠道用户单独剥离进行留存率分析，选择留存率较高的优质渠道进行重点投放。</p>
</li>
<li><p>像这样审慎地进行每一像素的开发，宁可麻烦自己，也绝不拖累用户。抱着这样的觉悟和诚意去用心做产品，相信一定能让用户感受到。</p>
</li>
<li><p>有损服务，顾名思义是指刻意输出在品质上存在某些损失的服务，目的是以此牺牲换取其他方面（速度、稳定性、成功执行的几率）的优化。</p>
</li>
</ul>
<h2 id="第6章-增加收入"><a href="#第6章-增加收入" class="headerlink" title="第6章　增加收入"></a>第6章　增加收入</h2><ul>
<li><p>让100万人付费的最简单方法就是获得10亿用户规模。</p>
</li>
<li><p>由于顾客都倾向于低估产品价值，因此体验产品的最佳定价应该以一个较低的价格开始，当顾客发现产品价值时，再逐渐抬高价格。</p>
</li>
<li><p>当你在使用免费服务时，你自己就是商品。</p>
</li>
<li><p>羊毛出在羊身上，如果在用户身上再也“薅”不出羊毛，那么服务提供者很有可能“翻脸比翻书快”，彻底将免费服务终结。</p>
</li>
<li><p>免费模式的前提是你的用户基数足够大，并且能够提供边际成本更低的标准化服务。鲁本说，像是Pandora这样体量的音乐服务提供商，付费率约为1％～1.7％，Evernote全球的付费用户约为0.5％，其中2％会持续成为年费用户。对用户基数庞大的产品而言，这尚且说得过去，但对小团队的产品来说就难以接受了。</p>
</li>
</ul>
<h2 id="第7章-病毒传播"><a href="#第7章-病毒传播" class="headerlink" title="第7章　病毒传播"></a>第7章　病毒传播</h2><ul>
<li><p>群体不善推理，却急于行动，原本理性的个人一旦结成群体，便容易智商尽失，轻易被影响操纵。</p>
</li>
<li><p>今天就得到执行的好计划要远胜过明天的完美计划。</p>
</li>
</ul>
<h2 id="第8章-完整案例集"><a href="#第8章-完整案例集" class="headerlink" title="第8章　完整案例集"></a>第8章　完整案例集</h2><ul>
<li><p>不要在意有多少人喜欢你，关注那些真正热爱并使用你产品的人。</p>
</li>
<li><p>Github用这个收费策略，巧妙地向有高级需求且有付费能力的客户收到了钱，而并没有令绝大部分免费用户感到反感。</p>
</li>
<li><p>我们学到了先交付，再修bug。与其遥遥无期地缓慢开发，不如快速交付一版，看用户们会怎样使用它。</p>
</li>
<li><p>美丽说移动客户端有两个设计原则。第一，一个应用只做一件事；第二，让用户达到想要的内容不超过三步。</p>
</li>
<li><p>让自己慢下来，别老跟人家比来比去，先把用户体验修炼到极致再说，其他都是浮云。</p>
</li>
<li><p>欲戴其冠，必承其重。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0401 - 4 月计划新鲜出炉]]></title>
      <url>https://atjason.com/daily/2017-04-01.html</url>
      <content type="html"><![CDATA[<p>一不小心就到 4 月份了，思考了下这个月的主题，记录一下：</p>
<ul>
<li><strong><a href="http://klib.me/cn/?utm_source=atjason.com" target="_blank" rel="external">Klib</a> 新版发布</strong><ul>
<li>回顾一下，3 月份只做了一件事：<strong>开发新版 <a href="http://klib.me/cn/?utm_source=atjason.com" target="_blank" rel="external">Klib</a></strong></li>
<li>回头来看，节奏是有些慢。本打算在 3.28 发布的，结果由于审核、海外推广等原因，推迟至 4.5 发布。</li>
<li>不过，好在对 <a href="http://klib.me/cn/?utm_source=atjason.com" target="_blank" rel="external">Klib</a> 目前的形态还比较满意：<strong>Klib 功能完备、交互简洁，还有多项地表最强、世界第一</strong>，对 Kindle 爱好者来说，确实是比较有用的工具；是拿得出手的产品。</li>
</ul>
</li>
<li><strong>高流量需求</strong><ul>
<li>自己目前做的产品，都是 <strong>小众需求 + 细分领域</strong> 的产品，喜欢的人很喜欢，但用户总量不大，推广起来也有些吃力。</li>
<li>下一步，希望能做 <strong>大众需求 + 细分领域</strong> 的产品，即需求本身是时下热点，不过不是热点本身，而是围绕热点的周边服务、深度需求。也锻炼下自己对需求的把握能力，以及伺候更多用户的能力。</li>
</ul>
</li>
<li><strong>品牌建设</strong><ul>
<li>最近，在海外推广 Klib 时，遇到很大的瓶颈。究其原因，很大部分是因为自己没有响亮的品牌。相反，如果有 <code>Omni 团队出品</code> 这样的光环，会很容易吸引眼球。</li>
<li>当然，自己的产品小众、影响力有限。而越是这样，越要聚集能量，组合推广资源，用最有效、最节约时间的方法，不断累积影响力；杜绝低效推广、浪费时间。</li>
<li>具体的，从网站 SEO 优化做起，同时考虑域名、品牌形象、等等因素。</li>
</ul>
</li>
<li><strong>思考、重新定位</strong><ul>
<li>做独立开发 15 个月了，也到了该突破的时侯。经过上面的尝试后，思考下一步如何。</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0331 - 运营，非一日之功]]></title>
      <url>https://atjason.com/daily/2017-03-31.html</url>
      <content type="html"><![CDATA[<p>今天 <a href="http://klib.me" target="_blank" rel="external">Klib</a> 的海外推广依然不顺利，几乎没有有效收获。</p>
<p>其实想想，除了运营的技法，<strong>最主要的是自己没有品牌、没有影响力</strong>。而作为媒体、编辑，都希望通过报道有趣、有用、有价值、有影响力的产品，来增加自己的价值。所以，除了个人关系的熟络，更重要的是自己提供的东西，能帮助其增加价值。</p>
<p>而个人品牌的建立，并非一日之功。比如域名、品牌的选择，比如 Twitter、Facebook 的经营，比如坚持写博客，比如英文写作功底，等等，都是需要长期的支持、磨练，才能见效。</p>
<p>好消息是，一旦建立了良好的运营渠道、方法，但是很大的优势，因为竞品想要追上来，也非一日之功。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0330 - 运营：全面撒网、不如单点突破]]></title>
      <url>https://atjason.com/daily/2017-03-30.html</url>
      <content type="html"><![CDATA[<p>今天推广了一天 <a href="http://klib.me" target="_blank" rel="external">Klib</a>，收效甚微，心累…</p>
<p>回头来看，就像投简历一样，随意的广撒网，不如盯住心仪的公司（媒体），重点突破。这样，保证有一家的可能性更大。并且，<strong>一旦在一家媒体上爆光了，在其他媒体上推广的难度就会小很多</strong>。</p>
<p>再者，时间有限，也不可能对大量媒体重点进攻，只能选择更对口的媒体。</p>
<p>换个角度，从媒体的角度，什么样的产品是他们愿意爆光的？从用户的角度，什么样的介绍方式是他们愿意接受的？<strong>从这些角度、而不是产品说明书的角度，好好的写文稿，然后再去敲门。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0329 - 运营，别急]]></title>
      <url>https://atjason.com/daily/2017-03-29.html</url>
      <content type="html"><![CDATA[<p>最近是有些急躁，总感觉运营有好多事情要做，却又感觉没做什么事、进展很慢。再加上 <a href="http://klib.me" target="_blank" rel="external">Klib</a> 审核接连被拒，确实有些急躁了。</p>
<p>不过，反过来想，别总想着还有多少事没做，想想凡是做点推广的事，就有可能多一位用户。这样想想，压力就小些了。</p>
<p>目前，对 <a href="http://klib.me" target="_blank" rel="external">Klib</a> 还是有些自信的，相信只要是需要管理 Kindle 标注的用户，都还是会喜欢  <a href="http://klib.me" target="_blank" rel="external">Klib</a> 的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0328 - 你娃子长好好哦]]></title>
      <url>https://atjason.com/daily/2017-03-28.html</url>
      <content type="html"><![CDATA[<p>最近在丈母娘家，带娃出去，经常听到「你娃子长得好好哦」</p>
<p>心里窃喜，基因嘛 😊</p>
<p>后来，老婆告知：在我们这，「长得好好」，意思就是「长得好胖」</p>
<p>我去…</p>
<hr>
<p>国内文化都差异这么大，这两天在做海外推广，那区别得多大啊，怕怕…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0327 - Klib.me 国外秒开]]></title>
      <url>https://atjason.com/daily/2017-03-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/0t1co.jpg" alt=""></p>
<p>折腾了两天，终于差不多把 <a href="http://Klib.me" target="_blank" rel="external">Klib.me</a> 页面做好了，基本可以达到在国外秒开。</p>
<p>虽然如此，可做的事情还很多。并且，尤其是对网速优化部分，只是了解皮毛的皮毛，离真正了解还差的很远。不管了，暂先这样吧，能干活就行，之后遇到实际问题，再较系统地学习吧。</p>
<p>现在来回看，应该可以把时间压缩半天，而且也不应该这么累。今天没有按时睡觉，批评自己。明天半休息~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0326 - 努力造首页]]></title>
      <url>https://atjason.com/daily/2017-03-26.html</url>
      <content type="html"><![CDATA[<p>今天花了一天的时间在造 Klib.me 的首页。结果是：没完成。</p>
<p>回看今天的事，花费时间比较多的模块主要是：</p>
<ul>
<li>思考网站做成什么样子</li>
<li>考虑用什么技术来建：使用建站服务、自己使用 Bootstrap 并结合工具创造</li>
<li>设计图片</li>
<li>使用建站工具堆出网站</li>
</ul>
<p>如果外包的话，应该有一半的内容可以外包出去。不过，考虑到沟通成本，最多只能节约 1/3 的时间。不过，这事还没完，要做到国外秒开，差得还非常远。如果以这个目标来衡量，应该选择外包。不过，考虑到目前的产品形态还不值得做到这么极致，再加上自己学习的考虑，还是自己操刀吧。</p>
<p>明天，最多再花一天的时间折腾首页。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0325 - 学习增长黑客]]></title>
      <url>https://atjason.com/daily/2017-03-25.html</url>
      <content type="html"><![CDATA[<p><strong>用黑客性质的方法，带来用户的增长，是既酷炫又实用的推广方式。</strong></p>
<p>今天开始看《<a href="https://www.amazon.cn/gp/product/B011BHQSV0/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B011BHQSV0&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">增长黑客</a>》这本书，同时，以 Klib 为案例，实操海外推广。</p>
<p>目前来看，海外推广和在国内推广，本质上是相同的：<strong>开发出对用户有价值的产品，并设法介绍给用户</strong>。只是在具体的操作层面有所不再。比如对应不同的科技媒体、不同的社交平台、不同的搜索引擎、不同的语言、不同的消费习惯、等等。</p>
<p>争取经过这一段时间的突击，能有所收获。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Improve evernote-sdk-mac]]></title>
      <url>https://atjason.com/IT/evernote-sdk-mac.html</url>
      <content type="html"><![CDATA[<p>Tips: official <a href="https://github.com/evernote/evernote-sdk-mac" target="_blank" rel="external"><em>evernote-sdk-mac</em></a> hasn’t been updated <strong>over around 4 years</strong>. You can image how many possible issues inside.</p>
<p><img src="https://ps.toolinbox.net/y83qr.jpg" alt=""></p>
<p>When add feature of export to Evernote from <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a>, I fixed the issues in the SDK and improve it. Check what problems I ever met, and how you can safely walk around them.</p>
<h1 id="What’s-changed-in-this-fork"><a href="#What’s-changed-in-this-fork" class="headerlink" title="What’s changed in this fork?"></a>What’s changed in this fork?</h1><p><a href="https://github.com/atjason/evernote-sdk-mac" target="_blank" rel="external">My fork</a></p>
<ul>
<li><p>Change <code>Dynamic Library Install Name Base</code> (i.e., <code>DYLIB_INSTALL_NAME_BASE</code>) from <code>/Library/Frameworks</code> to <code>@rpath</code>. </p>
<ul>
<li>If not, even you include <code>EvernoteSDK-Mac.framework</code> in your App, your App will still crash with error <em>dyld: Library not loaded: … Reason: image not found</em>. As <code>EvernoteSDK-Mac.framework</code> will definitely not be copied to <code>/Library/Frameworks</code>.</li>
</ul>
</li>
<li><p>Could manually set Evernote token.</p>
<ul>
<li>This change isn’t necessary, as the SDK itself will save the token in system Keychain.</li>
<li>But it will be flexiable if so, i.e., save token after authorization, and set it after app restarts.</li>
</ul>
</li>
<li><p>Choose Evernote host based on parameter of host.</p>
<ul>
<li>The SDK will still choose host (i.e., ‘Evernote’, or ‘Evernote-China’) based on <code>getBootstrapInfoWithLocale</code>, even you set the host as <code>BootstrapServerBaseURLStringCN</code> (i.e., “app.yinxiang.com”) in <code>setSharedSessionHost</code> and <code>authenticate</code>.</li>
<li>But this logic seems has issue (always chhose the first host from the list returned from Evernote sever).</li>
<li>And sometimes, user want to manually choose host.</li>
<li>For the reasons above, I modify the API to use Evernote host based on parameter of host.</li>
</ul>
</li>
</ul>
<h1 id="About-Evernote-API"><a href="#About-Evernote-API" class="headerlink" title="About Evernote API"></a>About Evernote API</h1><p>Beside the SDK itself above, you also need to pay attention on Evernote API.</p>
<ul>
<li>Try to activate Evernote API as early as possible. No one guarantee how much time you need to wait before Evernote really activate it.<ul>
<li>Tips: you will not get any confirm email after request to activate API.</li>
<li>If you thought Evernote ignore your request, you can try to reach them in Twitter <a href="https://twitter.com/evernotehelps" target="_blank" rel="external">@evernotehelpst</a></li>
</ul>
</li>
<li>By default, Evernote only activate API for Evernote international rage. If you want to provide service in ‘Evernote-China’ (i.e., Yinxiang Biji), you need to manually request Evernote team to do so. Just reply the confirm email about activation.</li>
</ul>
<h1 id="About-NoteStore-findNotesMetadata"><a href="#About-NoteStore-findNotesMetadata" class="headerlink" title="About NoteStore.findNotesMetadata"></a>About <code>NoteStore.findNotesMetadata</code></h1><ul>
<li>@param  maxNotes The maximum notes to return in this query. The service will return a set of notes that is no larger than this number, but may return fewer notes if needed. The NoteList.totalNotes field in the return value will indicate whether there are more values available after the returned set. Currently, the service will not return more than <strong>250</strong> notes in a single request, but this number may change in the future.</li>
<li>The <strong>250</strong> means, if you have more than 250 notes in the query, you need to query for times.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201704 -《自律型创业》]]></title>
      <url>https://atjason.com/book/201704.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xxnlt.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B00U3NDIJE/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00U3NDIJE&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">自律型创业</a></p>
<p>这应该是我做标注最多的书了。</p>
<p>这是讲创业如何启动、如何从 0 到 1 的。比较系统的分析了这一过程中各个方面，并且列出了各方面重点要注意的事项。感觉可以作为一本工具书，每当启动新项目时，就拿来读一遍。</p>
<a id="more"></a>
<hr>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<ul>
<li><p>一旦创业开始启动，你根本没有足够的时间对流程中的每一个步骤做到精益求精。换句话说，你要做的是在调查研究的基础上提出一个尚可的方案，然后在后续的过程中不断进行修订。</p>
</li>
<li><p>在我们的想象中，创意和现实总是完美吻合，但在真实环境中，它们往往相距十万八千里。</p>
</li>
<li><p>创业能力是可以习得的。</p>
</li>
<li><p>他们的成功归根结底是因为开发出了伟大的产品，而不是具备什么特殊的天赋。</p>
</li>
<li><p>要想成为成功的创业者，你必须拥有伟大的创新性产品。</p>
</li>
<li><p>创业是由团队完成的。</p>
</li>
<li><p>相对于个人魅力而言，创业者必须具备其他更为重要的能力，如有效的沟通能力、招聘能力和销售能力。</p>
</li>
<li><p>创新=发明创造×商业化</p>
</li>
<li><p>创业活动应当和创业者的价值观、兴趣和个人技能高度吻合。</p>
</li>
<li><p>无论你对创业多么感兴趣，在创业伊始你都必须首先回答这样一个问题：“在未来较长的一段时间内，我能做好而且乐意去做的事情是什么？”</p>
</li>
<li><p>通常，你会发现某个创意或技术能够为你的个人生活带来某些方面的改善，进而意识到它们可能有潜力为其他人带来帮助。我们把这种现象称为“用户型创业”。</p>
</li>
<li><p>在经营5年以上的创新型初创企业中，几乎有一半都是由用户型创业者成立的。</p>
</li>
<li><p>创业团队取得成功的概率要比个人创业大得多。</p>
</li>
<li><p>创业者的资源和时间都非常有限，必须有所取舍，做到超级高效。</p>
</li>
<li><p>商业成功的唯一充分必要条件是付费顾客。</p>
</li>
<li><p>以顾客为中心，寻找市场中无法得到满足的需求，然后在此基础上进行创业。</p>
</li>
<li><p>对初创企业来说，开发现有市场无法提供的创新产品是取得成功的重要条件。通</p>
</li>
<li><p>鉴于创业者手中的资源有限，如果在现有市场中以仿效产品为策略进行竞争，成功的机会非常渺茫。</p>
</li>
<li><p>为新创意找到可应用的行业，然后列出这个行业中的哪些群体会受益于你的新创意。</p>
</li>
<li><p>直接与顾客沟通，观察他们的行为模式，这些都能帮助你更好地了解到底哪个市场机会最值得开发。</p>
</li>
<li><p>和潜在顾客直接沟通，了解他们的处境、问题、机会和市场信息，以此方式搜集大量的第一手资料。</p>
</li>
<li><p>在和潜在顾客沟通时，注意自由扩散思维，不要鼠目寸光或急于获得承诺。</p>
</li>
<li><p>你不能指望顾客为你设计产品，告诉你解决问题的方案。市场调查的目标是了解顾客的问题，然后再设计可以解决这些问题的方案。</p>
</li>
<li><p>对于原始市场调查工作，我们有以下三条重要说明： 1.记住你是在了解事实，不要带着“既成答案”与潜在顾客沟通。 2.潜在顾客只是反馈信息，不能替你做出回答。 3.采用“征询”语气而不是“推销”语气和对方沟通。你的目的是聆听对方的真实想法，不是向他们销售产品。</p>
</li>
<li><p>市场细分是发现多个潜在市场机会的过程。列出潜在市场后，你应当对其中一定数目的市场展开基于直接调查的行业分析，这样做能帮助你确定哪些市场最适于你的新创意或新技术。</p>
</li>
<li><p>市场细分是发现多个潜在市场机会的过程。列出潜在市场后，你应当对其中一定数目的市场展开基于直接调查的行业分析，这样做能帮助你确定哪些市场最适于你的新创意或新技术。市场调查的目标不是提供完美的解决方案，而是从不同角度深入了解市场机会，帮助你确定业务重心。原</p>
</li>
<li><p>市场细分是发现多个潜在市场机会的过程。列出潜在市场后，你应当对其中一定数目的市场展开基于直接调查的行业分析，这样做能帮助你确定哪些市场最适于你的新创意或新技术。市场调查的目标不是提供完美的解决方案，而是从不同角度深入了解市场机会，帮助你确定业务重心。原始市场调查目前是发现市场机会的最佳手段，它需要你和潜在顾客当面沟通，或是观察他们的具体行为。</p>
</li>
<li><p>几乎每一个初次创业者都会发现，忽略其他市场机会是一件非常困难，甚至相当痛苦的事情。</p>
</li>
<li><p>你的当务之急是先选择一个做起来，而不是陷入“过度分析”无法自拔的状态。</p>
</li>
<li><p>当务之急是先选择一个做起来，而不是陷入“过度分析”无法自拔的状态。记住，你的目标是要创建公司，不是成为专业的市场分析员。行动会为你带来真实反馈，告诉你这个市场到底行不行。</p>
</li>
<li><p>我们建议，最好不要选择最大或较大的市场，哪怕它们看起来成功的希望最高。你要进入的第一个市场具有重要的学习意义，你应当选择一个规模较小的市场快速占领份额，让潜在顾客熟悉你。</p>
</li>
<li><p>如果创业团队中有人符合最终用户特征，这会是一个巨大的优势，因为你们对用客的深入了解可以有力地推动企业成功。</p>
</li>
<li><p>用户形象能帮助你关注该做和不该做的事</p>
</li>
<li><p>为产品创建可视化全面周期使用案例，它能帮助你了解产品怎样融入顾客的价值链，以及顾客在产品使用过程中会遇到哪些障碍。</p>
</li>
<li><p>这个高级产品规格对我们很有帮助，使我们有效地得到了顾客对产品的反馈。</p>
</li>
<li><p>练习设计宣传册可以帮助团队弄清楚很多问题。</p>
</li>
<li><p>对比当前产品和你的产品的使用区别</p>
</li>
<li><p>学会“少承诺，多付出”是很聪明的做法，因为信誉对于B2B企业的发展至关重要</p>
</li>
<li><p>根据用户形象，找到至少10位符合最终用户特征的潜在顾客。 ·联系这些顾客，验证他们和用户形象的相似度以及购买产品的意愿。</p>
</li>
<li><p>如果顾客的反馈都是“还可以”，那只能说明他们并不关注你的产品，也不在意产品带来的价值。如果顾客的反馈非常详细，甚至有批评的意思，这才表明他们关注你要解决的问题，你需要花时间跟对方沟通如何改善产品。</p>
</li>
<li><p>为什么你的企业能为顾客提供其他企业无法提供的解决方案。</p>
</li>
<li><p>核心价值指的是你能以超越竞争对手的效率为顾客带来的收益。</p>
</li>
<li><p>核心价值还能为企业提供保护，保证你千辛万苦开发的产品不会轻易被别人模仿或超越。想一想，你的产品有什么地方是竞争对手无法复制或很难复制的？没错，那就是你的核心价值。</p>
</li>
<li><p>只要企业关注需求未得到满足的顾客，为其提供更好的产品，那就根本不必担心竞争对手，因为你的关注点已经让企业成功摆脱了竞争对手的困扰。</p>
</li>
<li><p>最强大的竞争对手：顾客当前行为模式</p>
</li>
<li><p>最强大的竞争对手：顾客当前行为模式 很多情况下，企业遭遇的最大障碍是要说服顾客改变当前的行为习惯。</p>
</li>
<li><p>实际上，他们和他们的假想敌加在一起，所占的市场份额也寥寥无几，更大的市场源自怎样改变消费者当前的行为模式，怎样克服个人和组织机构的行为惰性。换句话说，与其盯着对手为一座山头拼命厮杀，不如换个思路想想该怎样唤醒顾客实现更大的市场。</p>
</li>
<li><p>怎样绘制竞争地位图</p>
<ul>
<li>截图</li>
</ul>
</li>
<li><p>后续市场通常有两种，一种是向相同顾客销售附加产品或应用的市场，即通常所说的追加销售市场。经</p>
</li>
<li><p>另一种市场，即创新型企业经常采用的方式，是向毗邻市场销售相同的基本产品。毗邻市场即那些和登陆市场类似的市场。</p>
</li>
<li><p>他们急于向市场推出产品，然后随便借鉴市场中常见的商业模式展开经营。</p>
</li>
<li><p>为什么人们总是关注技术和产品设计方面的创新但不肯研究商业模式的创新呢？</p>
</li>
<li><p>作为新企业，你有很多种商业模式可以选择，但顾客群一旦确定之后再改变商业模式会变得很难。</p>
</li>
<li><p>商业模式是一个框架，它能帮助你从为顾客创造的价值中抽取一部分形成商业价值。换句话说，企业从顾客那里得到的回报取决于你的产品能为顾客创造多少价值，而不是根据产品成本随意指定的价格涨幅。</p>
</li>
<li><p>向顾客预收费用，哪怕为其提供折扣价格，对初创企业来说也是很理想的选择。</p>
</li>
<li><p>顾客终身价值和获取成本是决定企业是否盈利的两个重要指标。</p>
</li>
<li><p>你应当基于产品为顾客创造的价值，而不是基于产品成本定价。</p>
</li>
<li><p>早期试用者能帮助你改善产品，灯塔型顾客能显著影响行业内其他用户的采购决策。对于他们你应当采用灵活的方式定价，比如打折预付、免费或低成本试用等，这样才能保证他们的采购和对产品的满意度。这些顾客能帮助你做案例研究、现场研讨，或是在市场中形成有效的产品宣传。但是，千万不要把全部产品提供给他们，也不要在后续费用上打折，因为这样会暗示你的产品价值很低，为创业失败埋下伏笔。</p>
</li>
<li><p>一开始把价格定高一些以后再打折，肯定要比定价低不断涨要容易得多。</p>
</li>
<li><p>定价的实质是确定你的产品能为顾客创造多少价值，然后从中抽取一定的比例作为回报。在确定产品价格的过程中，成本其实是无关因素。</p>
</li>
<li><p>需要注意的是，在向早期试用者和灯塔型顾客提供一次性折扣价格时，你的定价方法一定要灵活，因为他们要比普通的早期顾客影响大得多，能有效推动产品的成功。</p>
</li>
<li><p>对于软件即服务型企业，他总结的最简单直接的经验是，顾客终身价值和获取成本之比至少应达到3:1。</p>
</li>
<li><p>如果你的产品成为市场标准而且鲜有竞争对手，企业定价权力有时也会增加。</p>
</li>
<li><p>美国法律禁止利用自动拨号方式联系手机用户，</p>
</li>
<li><p>开发最小可行商业产品必须具备三个核心要素，这些要素必须在这一步完成。它们分别是： 1.顾客通过使用产品获得价值。 2.顾客为产品支付费用。 3.产品可以推动顾客反馈循环，利用顾客反馈进行迭代，不断开发出更好的产品。</p>
</li>
<li><p>正如爱因斯坦所言：“简单就是一切。”</p>
</li>
<li><p>向你的顾客展示最小可行商业产品，看他们会不会真的付费使用。你应当注意搜集数据，了解他们是否真的使用产品，以及作为用户对产品的参与程度有多高。你应当确定他们或与其相关的人会不会为产品付费，会不会为你的产品宣传正面口碑。</p>
</li>
<li><p>注意，一定要保证你的分析客观真实，你要依靠的是来自真实世界的信息而不是主观上的逻辑推断。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0324 - 帮助别人带来的满足感]]></title>
      <url>https://atjason.com/daily/2017-03-24.html</url>
      <content type="html"><![CDATA[<p>好像，我还是是挺喜欢这种感觉的。</p>
<p>尤其是，当使用自己的技能，解决了别人不会、或很难解决的问题，就会很有成就感。尤其，当这个人跟自己有关系、比较亲近时，这种成就感就更高了；<strong>感觉自己对别人还是有点用的。</strong></p>
<hr>
<p>今天有些过于忙了，这样并不是很好，因为 <strong>过于忙碌具体的事，反而没时间思考忙碌本身是否值得，以及可能错过更重要的。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0323 - 简单，无法被打败]]></title>
      <url>https://atjason.com/daily/2017-03-23.html</url>
      <content type="html"><![CDATA[<p>简单是无法被打败的，复杂却可以。</p>
<p>因为 <strong>你无法比简单更简单，却可以比复杂更复杂。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0322 - 价格，其实跟成本没几毛钱关系]]></title>
      <url>https://atjason.com/daily/2017-03-22.html</url>
      <content type="html"><![CDATA[<p><strong>所谓价格，其实是在给用户提供一定价值后，从中制取一定比例作为回报。</strong></p>
<p>当然，价格并不只这么简单，还和成本、市场环境、消费者经济水平、竞品价格、等等因素有关。不过，最核心的，依然还是产品本身能为用户提供的价值。</p>
<p>作为理性的消费者，在考虑价格这个因素时，主要考虑的应该还是这个产品给自己带来的收益、便利。如果收益已经大于价格，那么，过多的在价格上纠结，就是在浪费时间。省去纠结的时间、精力，可以做更多事、产出更多价值，或者直接说，赚更多钱。</p>
<hr>
<p>最近 Klib 搞得好累，感觉要涨价了…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0321 - 用「好」工具 &「用好」工具]]></title>
      <url>https://atjason.com/daily/2017-03-21.html</url>
      <content type="html"><![CDATA[<p><strong>用「好」工具</strong></p>
<p>时间宝贵、过有品质的生活，就不要再忍受蹩脚的工具了。</p>
<p>比如，同样是微博客户端，官方的版本有漫长的启动广告，还有作为男士并不喜闻乐见的生理期用品广告；另一方面是很多优秀的第三方微博客户端（如我用的「奇点」），既没有广告、交互还更简洁。</p>
<p>那为什么不用更好的工具呢？</p>
<p><strong>「用好」工具</strong></p>
<p>通常，工具的创造者想的比较用户更多，考虑了各种场景的适配。如果发现正在用的工具无法达到某个目的，在骂娘和寻找替代品之前，最好先花点时间研究下，是不是有自己未发现的点。毕竟，时间宝贵，更换工具也是有成本的。</p>
<hr>
<p><strong>用「好」工具，避免在蹩脚的工具上浪费时间；</strong></p>
<p><strong>「用好」工具，提高效率、节约时间。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0320 - 保持敬畏之心]]></title>
      <url>https://atjason.com/daily/2017-03-20.html</url>
      <content type="html"><![CDATA[<p>今天又试了下，竟然真的找到了 Swift 的模糊日期识别方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span> </span>&#123;  </div><div class="line">  <span class="keyword">public</span> <span class="keyword">var</span> possibleDate: <span class="type">Date</span>? &#123;</div><div class="line">    <span class="keyword">let</span> detector = <span class="keyword">try</span>? <span class="type">NSDataDetector</span>(types: <span class="type">NSTextCheckingResult</span>.<span class="type">CheckingType</span>.date.rawValue)</div><div class="line">    <span class="keyword">return</span> detector?.firstMatch(<span class="keyword">in</span>: <span class="keyword">self</span>, options: [], range: <span class="type">NSRange</span>(location: <span class="number">0</span>, length: (<span class="keyword">self</span> <span class="keyword">as</span> <span class="type">NSString</span>).length))?.date</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>哎，早点怎么没找到。当初花了大力气解决 Kindle 中的模糊日期，现在看来比较亏。唯一安慰自己的是：</p>
<ul>
<li>自己的方案虽然繁琐些，但速度是上述方法的 2.5 倍。</li>
<li>另外，这一方案不能显式地设置 Locale，应用上还有点局限。</li>
</ul>
<p>看来，自己对 Swift 的基础库还是不够熟悉。</p>
<p>要相信现实世界是复杂的，相信程序是复杂的，相信别人做了很多工具，相信自己要学的东西还有很多。如果碰巧解决了问题，要么是在别人工作的基础上，要么是运气好。<strong>保持敬畏之心，才能更虔诚的学习，更用户的做产品。</strong></p>
<hr>
<p>另外，遇到问题，不要一头扎进去解决问题，要先想一想：</p>
<ul>
<li>能不能不让问题出现？</li>
<li>能不能绕过问题？</li>
<li>解决问题的最佳办法是什么？</li>
</ul>
<p>想过上面 3 个问题后，再去解决问题本身。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0319 - 不方便测试的代码，不是好代码]]></title>
      <url>https://atjason.com/daily/2017-03-19.html</url>
      <content type="html"><![CDATA[<p>今天在实现 Klib 导出到印象笔记时，其逻辑比预计的复杂。</p>
<ul>
<li>一方面是由于跟网络相关的操作，总是要处理各种异常。</li>
<li>另一方面是在处理唯一性、合并等问题时，逻辑状态比较多。</li>
</ul>
<p>由于预估不足，再加上要赶进度，就没有进行充分的设计，直接开始代码。结果，基本实现后发现，代码基本很难进行单元测试。因为数据结构的处理、业务逻辑、甚至 UI 交互都混合在一起、耦合的太紧了，导致无法分模块进行测试。</p>
<p>由于无法测试，导致心里还是很慌的。尤其是，在少量数据下测试是正常的，而在大量数量时就有问题，这种情况更慌。既然已经这样了，还用大量数据来发现问题。在解决这些问题后，基本认定功能完成了。如果用户那边遇到了情况，只是遇到后再解决了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0318 - 平衡的艺术]]></title>
      <url>https://atjason.com/daily/2017-03-18.html</url>
      <content type="html"><![CDATA[<ul>
<li>服务器端与客户端计算的平衡</li>
<li>为加快响应时间而额外存储中间计算结果</li>
<li>为减少计算量而将命中率从 100% 下调至 80%</li>
<li>为了增加灵活性而部分牺牲效率</li>
<li>为了增加可靠性而增加冗余代码、牺牲简洁性</li>
<li>…</li>
</ul>
<p>程序中到处都在这种平衡。</p>
<p><strong>没有最佳方案，只有根据实际情况不断调整的、最适合的方案。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0317 - 继续踩坑 Evernote]]></title>
      <url>https://atjason.com/daily/2017-03-17.html</url>
      <content type="html"><![CDATA[<p>坑之一：Evernote 号称可以仅授权单个 Notebook.</p>
<p>出于想把 Klib 做得优雅的考虑，在已经完成全局授权的前提下，我又花时间折腾，希望能仅授权单个 Notebook. 结果，怎么都不行。按照官方的介绍操作，根本就出不了正常的结果。最后，无奈，只能在 Twitter 上联系了 Evernote 官号，然后放弃了。</p>
<p>目前，在使用 4 年前的 Evernote macOS SDK，非常难受。接口封装的不合理，自己完全实现又要花大量时间，纠结。明天继续吧，争取能用最小的代码，完成 Klib 所需的接口。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0316 - 不是用户，很难体会到用户的需求]]></title>
      <url>https://atjason.com/daily/2017-03-16.html</url>
      <content type="html"><![CDATA[<p>最近，带娃出去几次，注意到一些细节：</p>
<ul>
<li>公交车的过道，要考虑推车的宽度</li>
<li>临街店铺前面的路面，已经被汽车压得破败不堪，推车推起来很不爽</li>
<li>很多台阶、台面，都没有供推车、轮椅用的斜坡</li>
<li>列车上报站的声音，大的能直接把婴儿从睡梦中惊醒</li>
<li>有没有母婴室，是好商场的标准之一</li>
<li>药瓶盖必须是儿童难以打开的</li>
<li>…</li>
</ul>
<p>而这些细节，是之前不带娃时根本体会不到的。</p>
<p>如果自己是相关产品的设计者，估计最多能从竞品、调查中得到一些普遍需求，但也绝对无法做出很贴心的设计。大的产品、平台我不知道，但一些小的、具体的产品，设计者最好是产品本身的用户，不然很难有打动人心的设计。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0315 - 小米移动电源，还需要更新吗？]]></title>
      <url>https://atjason.com/daily/2017-03-15.html</url>
      <content type="html"><![CDATA[<p>我其实很长时间都没有关注过移动电源了，主要是这段时间我自己外出的次数很少。只是，今天在准备出门时，才想起这事。而且，我犹豫之后，并没有带，因为到的地方供电不是问题。</p>
<p>但我还是思考了这个问题：<strong>小米移动电源，还需要更新吗</strong>？或者说，还需要频繁更新吗？</p>
<p>就产品而言，我觉得小米移动电源在产品本身、市场占有率、美誉度、盈利等方面，都很不错，确实做到了雷军说的：市场上有两种移动电源：小米、和像小米的。那么，<strong>在此基础上，还能做什么呢？</strong></p>
<p>我不是其产品经理，只需看结果即可。到小米官网上看了最近的移动电源，和我当初买的，有下面的变化：</p>
<ul>
<li>有了 20,000 mAh 的版本，也有其他不同容量的版本</li>
<li>支持 Type-C</li>
<li>有了「高配版」</li>
<li>有了「超薄版」</li>
</ul>
<p>我的一些理解：</p>
<ul>
<li>增加核心功能，如增加容量、Type-C 接口</li>
<li>充分满足细分领域，如不同容量</li>
<li>设法深挖高端用户价值，如高价格的「高配版」</li>
</ul>
<hr>
<p>其实，不止是对于看得见的硬件工具，对于软件的基础工具，也有类似的问题：<strong>当工具本身的基础功能已经完备、做好的前提下，还能做些什么</strong>？最近，长期占据 macOS App Store 付费软件排行榜首的 PDF Expert 出新版了，主要有哪些变化呢？（信息来自 <a href="https://sspai.com/post/35306" target="_blank" rel="external">少数派</a>）</p>
<ul>
<li>完成了从「PDF 阅读器」到「PDF 编辑器」的质变<ul>
<li>官方自我评价：业界领先的 PDF 轻量级编辑应用</li>
</ul>
</li>
<li>没有其他；除了价格从最早的 128 元涨价到了 388 元<ul>
<li>YY：全球12万 Mac 用户 * 388 = ？</li>
</ul>
</li>
</ul>
<p>可见，PDF Expert 的做法是：<strong>转移阵地</strong>。虽说还是 PDF 领域，但其实本质已经发生了重要变化。不过，对于不需要编辑的用户，要面对编辑所带来的界面复杂化，以及不需要的功能导致的高价格，我不是其用户，幸与不幸，未可知。</p>
<hr>
<p>另外，近期印象笔记的全新版本也颇耐人寻味：<strong>简化了</strong>。我接触到的评价基本向好。<strong>如果说此次简化是对的，那么当初复杂化就是错的</strong>。这也从反面警示我们：<strong>面对已经成熟的产品，如果不知道该怎么做，什么都不做，可能比随便做点什么，更好；因为至少不会让软件变得难用。</strong>比如微信在改进方面的「懒惰」</p>
<p>简单回顾下，面对已经成熟甚至优秀的产品、尤其是工具型产品，有哪些可做呢？</p>
<ul>
<li><strong>戒掉贪念，只增强核心功能</strong></li>
<li><strong>出于（迫于）商业考量，迁移产品内涵、扩展外延</strong></li>
<li><strong>什么都不做</strong></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0314 - 喜欢慢慢做事的感觉]]></title>
      <url>https://atjason.com/daily/2017-03-14.html</url>
      <content type="html"><![CDATA[<p>家里一个水龙头漏水，一直没管。今天趁着 Klib 发布后的休息时间，搞定它。</p>
<p>修完，不漏水了，挺满意。看了下时间，竟然有 40 分钟之久，确实没想到。我在修的时候，很放松，慢慢地操作、慢慢地想最好的办法、慢慢地在家里搜罗合适的材料，这感觉，还是很舒服的。如果条件允许，还是 <strong>喜欢这种慢悠悠、细心打磨的过程</strong>。</p>
<p>当然，这只是在条件允许的情况下，一般是没这么多时间的，花点钱买个新的装上了事。<strong>产品的开发也是一样，我也想慢慢打磨，但事实上迫于商业、用户的压力，只能做到差不多就出手</strong>。难免有瑕疵，虽然照顾了至少 90% 的情况，但并没有到完美，算是追求与现实的平衡吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201703 - 《从零开始做运营》]]></title>
      <url>https://atjason.com/book/201703.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/z1s34.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B01914JGGY/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B01914JGGY&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">从零开始做运营</a></p>
<p>这本书断断续续读了很久，主要是期间 Klib 的研发、推广花了大量时间。</p>
<p>虽说是入门书，但感觉还是需要一定运营经验，才能真正有所收获。对我而言，主要的收获如下：</p>
<ul>
<li>普及<ul>
<li>比如，运营的一些基本概念、流程。在业内人士看来，可能是非常初级、不需要介绍的。但对我这个门外汉来说，知道就是力量。</li>
</ul>
</li>
<li>系统性<ul>
<li>这是真正入门一个领域的前提。只有首先有了系统性，才能慢慢的这颗树上不断嫁接、发展，最后完善这颗知识之树。</li>
</ul>
</li>
<li>观点<ul>
<li>作者在书中列出了一些案例，也提供了自己的分析和观点，这是挺有用的。因为学习的开始必然是模仿。有了这些我目前判定为对的东西，跟着模仿，就能更快地建议基本的认知。</li>
</ul>
</li>
</ul>
<p>总的来说，收获不算特别大。但之后如果在运营的某个具体领域继续研究的话，会回过头来重读相关的章节。</p>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<ul>
<li>产品负责生孩子，运营负责养孩子。</li>
<li>一个好的产品经理，需要有“跟到底”的精神。这是真理。</li>
<li>第一，永远不要奢望可以对一无是处的产品进行运营，更别幻想通过运营让这样的产品起死回生甚至走向成功。 第二，永远不要以为产品的设计完美到无需运营，即便是能够实现自运营的产品，也依然需要持续的运营引导才能达到自运营的状态。</li>
<li>（互联网）产品是一项贯穿用户整个生命周期的设计行为。它根据用户的需求而变化，最终完成对用户需求的实现与用户体验的完善。</li>
<li>运营的核心目的只有一个：让产品活得更好、更久。</li>
<li>运营的核心任务归结起来无非两点：流量 [2] 建设，用户运营。</li>
<li>用户运营首先要做的事情，就是掌握用户结构。</li>
<li>用户运营的核心是开源（拉动新用户）、节流（防止用户流失与流失用户挽回）、维持（已有用户的留存）、刺激（促进用户活跃甚至向付费用户转化）。</li>
<li>·运营不是万能的。 ·没有运营是万万不能的。 ·运营和产品是无法割裂的。 ·运营和很多其他岗位都是亲密无间的好伙伴。 ·最高级的运营是自运营。</li>
<li>数据是佐证，是猜测，是推论，数据带来的这些运营可能性需要被验证，并通过后续的数据体现出来。</li>
<li>必须让用户付出一些成本，这样他才会在离开前有所犹豫。</li>
<li>最大程度地展现核心功能、核心价值、核心玩法。</li>
<li>分阶段展示次要功能、次要价值、次要玩法，不要试图全部塞给用户。</li>
<li>持续开源是对的，但是更重要的并不是开源，而是要节流和刺激用户留存。</li>
<li>在当前获取用户成本高企的情况下，不维护好老用户，而一味专注于拉动新用户，这无疑是一件费力不讨好的事情。</li>
<li>获取一个新用户的成本，比维护一个老用户的成本要高得多。</li>
<li>围绕核心业务设计可以获得奖励的用户行为；强调连续行为的重要性；尽量让奖励变得对用户有价值。</li>
<li>细致到极限的产品运营，是腾讯能够这么多年屹立不倒的关键原因。</li>
<li>用少量的用户引导，换取主动的用户进入、活跃、付费、甚至传播，是每个做产品、做运营的人的梦想。这就是自运营。</li>
<li>一个产品，最难做的不是加法；而是减法；最难的不是改变，最难的是坚持。</li>
<li>种子用户不仅仅是传播产品最积极的用户，更是为产品出谋划策、提出建议的用户。</li>
<li>沟通的核心在于准确的倾听后给予有价值的回应。</li>
<li>“供应链”的意思是：产品生产和流通过程中所涉及的原材料供应商、生产商、分销商、零售商以及最终消费者等成员通过与上游、下游成员的连接（linkage）组成的网络结构。</li>
<li>所谓“自运营”，是指建立一些机制和规则，用户通过遵守这些机制，利用这些规则，使得网站的日常运营不再过多地依赖运营人员的引导，实现用户自主运营。</li>
<li>内容什么时候发布最好。 其实我的经验是，不管是早晨通勤时间发布，中午休息时间发布，还是晚上休闲时间发布，这个时间点都不重要。重要的是，要在固定的时间发布内容。如果内容发布的时间固定，长期关注内容的用户会养成定时查看的习惯。</li>
<li>大多数社区的内容生产者是稀少的，而消费内容的用户则占绝大多数。</li>
<li>太在意目标，却忽略了目的。</li>
<li>一个运营者，如果心中永远只有当前的目标，而忽略了行动的目的，那么他终将一无所获。</li>
<li>成本测量原则的预期是：将活动总成本控制在预算总成本以内，不超发，同时单个指标的成本越低越好。</li>
<li>所谓以系统的观念来对待活动策划，是对活动运营人员提出了一个考虑“系统复用”的课题，同时还要求活动运营人员具备周期性活动策划的意识。</li>
<li>在推介内容中加入发送者的照片能带来这种好友之间送礼的感受。</li>
<li>给用户展示“利他”的文案，比“利己”的更容易带来转化。告诉用户“邀请好友可以获得25美元”的效果就不如“给你的好友赠送25美元的旅行经费”更打动人。</li>
<li>环比是本日与前一日的对比、本月与上月的对比、本季度与上季度的对比；同比是今年当日与去年当日的对比、今年当月与去年当月的对比、今年当季度与去年当季度的对比。环比显示短期的数据波动，而同比可以帮我们了解大环境下的数据波动。</li>
<li>运营数据分析的关键不在于数据，而在于分析。</li>
<li>我们在进行数据分析的时候，其实想要了解的不仅仅是数据，而是数据背后的用户。</li>
<li>运营切入产品最好的节点是：产品设计之前。</li>
<li>互联网企业的前进是四个轮子协同运转的结果，这四个轮子是：产品、运营、技术、市场。</li>
<li>如果你常常购物，你一定知道京东6月18日周年庆，淘宝在11月11日会有大狂欢。 这些就是已经养成的用户习惯。</li>
<li>用户习惯的养成需要持续、固化的运营策略和运营节奏。</li>
<li>用户是否需要教育，取决于你的设计。</li>
<li>教育用户的目的是引导用户的预期，使其符合操作后应获得的反馈预期，这是管理用户满意度的一种方法。</li>
<li>Web的流量越多越好，而App的流量越稳定越好。哪怕你只有100个用户，服务做得好，依然有机会拥有10亿用户；反过来，哪怕你有10亿用户，但是用户不稳定，今天来明天走，可能最后连100个用户都留不下。</li>
<li>由于他坚持内容组合，坚持核心产品的原创，他在短短的半年时间收获了12万粉丝。</li>
<li>用户不会花时间在一个相对较小的空间（手机屏幕）仔细阅读活动说明，所以长篇大论是不合适的。</li>
<li>如果你决定建立一个群，最好先找到几个核心人物作为种子，在其他人进来之前先搞定这些人，让他们愿意在群里待着充当“吉祥物”，或者能够活跃群组氛围。总之，首先要汇集一批种子成员。</li>
<li>然后，你需要衡量微信群和QQ群的优劣。微信群现在非常倾向于熟人之间的交流，同时微信群非常不便于管理。QQ群便于管理，但QQ群的活跃度是个极大的问题。群组的差异会导致运营的不同结果，在我看来，除非到了一定阶段，否则根本没有必要建立群组。 因为群组一旦组织，群主就要对群负责。同时群组会耗费很多时间精力，因此，请慎重考虑建立群组。</li>
<li>我一直坚持案例的意义在于如何避免失败，而非如何成功。</li>
<li>我们看到的大多是成功者的案例，其中成功的精髓无法通过表面现象和简单的方法论获得。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《女孩老板》]]></title>
      <url>https://atjason.com/book/Girlboss.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/gq0am.jpg" alt=""></p>
<p>感觉「<a href="https://www.amazon.cn/gp/product/B00XL8T18K/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00XL8T18K&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">女孩老板</a>」这本书两头笔墨比较多：</p>
<ul>
<li>一头是成名前如何放荡不羁，然后快速成长；</li>
<li>另一头是成名后的一个想法、状态。</li>
</ul>
<h2 id="做自己擅长的事"><a href="#做自己擅长的事" class="headerlink" title="做自己擅长的事"></a>做自己擅长的事</h2><p>主人公创业的领域是古董女装，而她自己从小就非常偏爱这一块，所以才会有接下来的坚持、乃至成功。</p>
<h2 id="过自己想要的生活"><a href="#过自己想要的生活" class="headerlink" title="过自己想要的生活"></a>过自己想要的生活</h2><p>主人公知道自己不擅长的领域，进而就规避掉。比如内向、叛逆，这样的性格不擅长交际，但对于躲在屏幕后、在 eBay 及社交媒体上工作、交流，却完全没有问题。</p>
<h2 id="不断演进"><a href="#不断演进" class="headerlink" title="不断演进"></a>不断演进</h2><p>主人公一开始也绝对想象不到目前的成功及状态，而只是由于喜欢及选择，一步步坚持、一步步改进，慢慢变成了现在的样子。</p>
<p>我也是个没有长远规划的人，更习惯于对当下的情况做决策，走好眼下及未来稍远一点的路。有主人公的背书，未来就继续这样吧。</p>
<h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><ul>
<li>当一个人心中只剩下终极目标时，那么他将在前进的过程中错过很多有趣的东西。更好的办法是基于实际情况而不断调整目标，然后逐渐发展。</li>
<li>我创办Nasty Gal的部分原因是我希望得到一份能自给自足而不需要与很多人打交道的工作。</li>
<li>将力量用在你生活中那些积极的事情上，你就会惊讶地发现那么多积极的事情正在发生。</li>
<li>不存在什么因果法则，在其他人失败时，你的生意也未必会取得成功，所以为什么不祈求他们过得更好呢？与此同时，你的心情也会随之变好。</li>
<li>不再把时间浪费在琢磨那些我不喜欢的事情上。你必须用力将那些消极的因子从你的脑子里剔除，就像你把不希望留在家里的废物毫不留情地踢出去一样。</li>
<li>我真的认为正确的事情做起来应该得心应手，身心合一。</li>
<li>当你在微不足道的事情上开始用心时，你就会惊喜地发现，那些大事情经常更容易做成。</li>
<li>钱意味着自由。如果你学会掌控自己的财政，而不是反过来受制于钱，就不会陷入工作、地点和人际关系的窠臼，你厌恶这些的原因，只是因为你负担不起到别处去的成本。学会如何管理自己的钱财，是你在任何时候都要做的最重要的事情。经济处于良好状态，能打开多扇本来拦阻你的大门。经济陷入困境，本来敞开的大门也会在你面前合上。</li>
<li>生活得自由并不意味着生活得好。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0313 - Klib，一不小心又做到了地表最强]]></title>
      <url>https://atjason.com/daily/2017-03-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ww2.sinaimg.cn/large/006tKfTcgy1fcw57tb4ydj3074074jrg.jpg" alt=""></p>
<p>前情回顾</p>
<ul>
<li><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib - 重塑 Kindle 笔记管理</a></li>
<li><a href="https://atjason.com/daily/2017-02-21.html">我是如何把 Klib 带到这个世界的</a></li>
</ul>
<h1 id="说说-Kindle-的笔记"><a href="#说说-Kindle-的笔记" class="headerlink" title="说说 Kindle 的笔记"></a>说说 Kindle 的笔记</h1><p>既然说 Klib 是这个蔚蓝的星球上导入 Kindle 笔记最强的工具，自然要先来说道说道 Kindle 笔记本身。二话不说先上图：</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNc79gy1fdlsjzbovkj30p00hfmyj.jpg" alt=""></p>
<a id="more"></a>
<h2 id="1-My-Clippings-txt"><a href="#1-My-Clippings-txt" class="headerlink" title="1. My Clippings.txt"></a>1. My Clippings.txt</h2><p>首先，所有在 Kindle 设备本身所做的标注、笔记，均位于 <code>Kindle 根目录 &gt; documents &gt; My Clippings.txt</code> 文件中。</p>
<p>支持的书籍：</p>
<ul>
<li>从亚马逊购买的书</li>
<li>自己上传、或推送的书（其实，就是 D 版书）</li>
</ul>
<p>不足：</p>
<ul>
<li>不支持在其他 Kindle App（如 Kindle for iPhone）所做的标注<ul>
<li>注：Klib 发布后，有朋友表示自己明明做了标注（在 iPhone 上）、为什么 Klib 没有导入？其实就是这个原因</li>
</ul>
</li>
<li>每次导入都需要使用 USB 将 Kindle 与电脑连接 </li>
</ul>
<p>注：市面上仅有的一些 Kindle 标注管理工具，其实也就只管理了这一个文件。</p>
<h2 id="2-Amazon"><a href="#2-Amazon" class="headerlink" title="2. Amazon"></a>2. Amazon</h2><p>针对 My Clippings.txt 的不足，怎么解决呢？</p>
<p>既然亚马逊（Amazon）有所有的数据，为什么不从亚马逊导入呢？你太机智了，Klib 此版已经支持从亚马逊无线导入，棒！</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fdlsrjxsm6g30tc0r0b2b.gif" alt=""></p>
<p>好处是：</p>
<ul>
<li>支持在其他 Kindle App（如 Kindle for iPhone）所做的标注</li>
<li>通过网络导入，不需要使用 USB 将 Kindle 与电脑连接 </li>
</ul>
<p>看起来很完美不是？且慢，还是有不足的：</p>
<ul>
<li><em>不支持亚马逊中国区</em><ul>
<li>为什么不支持？因为在 Amazon 全部 13 个国际站点中，唯独 China 没有 Kindle 笔记的网页版本；而 Klib 正是从此网页版导入数据，所以…</li>
<li>感兴趣可以看看我的微博：<ul>
<li><a href="https://weibo.com/2018707532/Ex9CF4KSs" target="_blank" rel="external">https://weibo.com/2018707532/Ex9CF4KSs</a> </li>
<li><a href="https://weibo.com/2018707532/Eyhdj800v" target="_blank" rel="external">https://weibo.com/2018707532/Eyhdj800v</a></li>
</ul>
</li>
</ul>
</li>
<li>不支持自己文档（好吧，就是 D 版）的笔记</li>
</ul>
<p>所以，基本这条路主要适合国际友人 + 正版达人。</p>
<p>PS：请支持正版。</p>
<h2 id="3-Kindle-导出的-html-文件"><a href="#3-Kindle-导出的-html-文件" class="headerlink" title="3. Kindle 导出的 html 文件"></a>3. Kindle 导出的 html 文件</h2><p>听见有朋友说：好，即便我支持正版，可我就是生活在中国这片神奇的土地上，怎么办呢？</p>
<p>不怕，谁叫咱也是中国的独立开发者，自己要为同胞考虑。现在能想到的路，就是在 Kindle for iPhone 等其它客户端，将笔记文件导出为 html 文件，然后 Klib 再导入这个 html 文件。</p>
<p>能解决导入的问题，不足也很明显：</p>
<ul>
<li>每次都需要导出再导入，略麻烦<ul>
<li>不过，考虑几个星期才读完一本书的实际情况，其实也没那么糟</li>
<li>另外，建议使用 Kindle for macOS/PC 导出，操作效率高</li>
</ul>
</li>
</ul>
<h2 id="4-多看"><a href="#4-多看" class="headerlink" title="4. 多看"></a>4. 多看</h2><p>最后，也有很多朋友在 Kindle 上刷了多看系统。自然，Klib 也是要支持的。并且，导入方式和原生的 Kindle 完全相同。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>目前，没有哪一种导入 Kindle 笔记的方式是完美的，而 Klib 支持上述所有导入方式；由此推导出以下结论，此题得证。</p>
<p><strong>Klib，这个蔚蓝的星球上导入 Kindle 笔记最强的工具，没有之一。</strong></p>
<h1 id="再来看看-Klib-此版都有哪些更新"><a href="#再来看看-Klib-此版都有哪些更新" class="headerlink" title="再来看看 Klib 此版都有哪些更新"></a>再来看看 Klib 此版都有哪些更新</h1><p>好的 Kindle 摘要管理工具，当然不止导入这么简单，来看看我憋了这几个星期都做了什么。</p>
<h2 id="在-Kindle-App-中查看上下文"><a href="#在-Kindle-App-中查看上下文" class="headerlink" title="在 Kindle App 中查看上下文"></a>在 Kindle App 中查看上下文</h2><p>这是一个既酷、又炫、还实用的功能。</p>
<p><strong>我们在回顾笔记时，经常会觉得标注的内容太简洁了、需要查看书的原文</strong>。而解析电子书、做一个阅读器，又是一个不可能在短期内完成的任务，怎么办呢？</p>
<p>很巧妙地，<strong>Klib 可以调用 Kindle for macOS 打开电子书、并跳转到标注所在位置</strong>，够贴心吧？</p>
<p><img src="https://ww2.sinaimg.cn/large/006tNc79gy1fdju64ntalg30fo0d84pk.gif" alt=""></p>
<p>注：此功能仅支持在亚马逊购买的书。再次，请支持正版。</p>
<h2 id="在亚马逊中查看更多信息"><a href="#在亚马逊中查看更多信息" class="headerlink" title="在亚马逊中查看更多信息"></a>在亚马逊中查看更多信息</h2><p>有时，我们在回看笔记时，希望重新看下书的目录、书评，亦或是作者写的其他书。怎么办呢？<strong>Klib 可以一键在亚马逊中打开这本书</strong>，立马找到所有信息。</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fdk5wydweeg30ey0dw7wh.gif" alt=""></p>
<h2 id="书籍支持多选、合并"><a href="#书籍支持多选、合并" class="headerlink" title="书籍支持多选、合并"></a>书籍支持多选、合并</h2><p>根据大伙的反馈，在这些时候需要合并多本书：</p>
<ul>
<li>一些网站定期推送的文章，数量多、标题类似</li>
<li>有时重读了一本书，而重读的版本和当初读的不一定相同</li>
</ul>
<p>其实，还有一种情况，就是在导入上述不同来源的笔记时，虽然我尽可能排除重复，但还是有可能会出现书重复的情况，这时就需要合并了。</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fdlr6cg0lhg30ha0c0tvw.gif" alt=""></p>
<p>当然，如果是误操作将书合并了，简单，Command + Z 撤销即可。</p>
<h2 id="使用-Emoji-表示笔记"><a href="#使用-Emoji-表示笔记" class="headerlink" title="使用 Emoji 表示笔记"></a>使用 Emoji 表示笔记</h2><p>如果一本书做了很多标注、笔记，都堆在一起分不清楚怎么办？我想了很多种办法，最后，出于轻量的考虑，使用了如下的办法：</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNc79gy1fdlr6sf99vj30hu0duac1.jpg" alt=""></p>
<p>你看出什么了吗？</p>
<h2 id="导出单本书"><a href="#导出单本书" class="headerlink" title="导出单本书"></a>导出单本书</h2><p>有了这个功能，我们就可以把自己看的一本觉得不错、也做了很多笔记的书，分享笔记给别的朋友。</p>
<p>操作很简单：先选择要导出的书，然后按住 Option 键，在文件菜单中选择「导出所选书籍…」即可。</p>
<p><a href="https://s.toolinbox.net/Klib/Klib_HackersAndPainters.db" target="_blank" rel="external">附上我在《黑客与画家》中所做的笔记</a> </p>
<p>如何导入呢？只有在 Klib 正常导入 Kindle 操作时，选择这个文件即可。</p>
<h2 id="其他一些细节"><a href="#其他一些细节" class="headerlink" title="其他一些细节"></a>其他一些细节</h2><ul>
<li>优化导入速度</li>
<li>删除支持快捷键</li>
<li>标记为已读支持撤销</li>
<li>预览长长的标注时显示滚动条</li>
<li>Tab 键只在书和笔记列表间跳转</li>
<li>…</li>
</ul>
<h1 id="接下来还会有哪些改进？"><a href="#接下来还会有哪些改进？" class="headerlink" title="接下来还会有哪些改进？"></a>接下来还会有哪些改进？</h1><p>其实，这版集中改进了「<strong>导入</strong>」这个主题，下版主要改进「<strong>管理</strong>」这个主题，比如：</p>
<ul>
<li>使用标签、分组管理众多书籍</li>
<li>新建书籍、笔记</li>
</ul>
<p>另外，在「<strong>导出</strong>」部分，计划支持 <strong>印象笔记</strong>。</p>
<h1 id="马上下载-Klib"><a href="#马上下载-Klib" class="headerlink" title="马上下载 Klib"></a>马上下载 Klib</h1><p>目前，虽然 Klib 已经上架 Mac App Store（顺便说一句，Klib 是首款上架的 Kindle 管理工具），但上述改进都尚未更新到线上。目前是公开体验期，欢迎大家免费下载试试。</p>
<p><a href="https://toolinbox.net/html/Klib/DownloadKlib.html" target="_blank" rel="external">&gt;&gt;&gt; 点我免费下载新版 Klib &lt;&lt;&lt;</a> </p>
<p>如果你觉得 Klib 还可以改进，欢迎：</p>
<ul>
<li><a href="https://toolinbox.net/html/feedback.html?lang=cn&amp;app=Klib" target="_blank" rel="external">在这里留言</a></li>
<li><a href="https://telegram.me/toolinbox" target="_blank" rel="external">加入 Telegram 群</a></li>
<li>微信扫码入群：</li>
</ul>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201702 - 《松本行弘的程序世界》]]></title>
      <url>https://atjason.com/book/201702.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/dnta5.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B00M2DKYYA/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00M2DKYYA&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">松本行弘的程序世界</a></p>
<p>这本书如果是基于 Swift 就太好了。不过，即使如此，书中讲的很多编程的思想、原理还是很通用的。比如对正则表达式、字符编码、等部分的介绍，非常值得深入研究时回头再看。</p>
<p>不过，毕竟作者是 Ruby 的作者，是底层思维的牛人；对于我这种肤浅的应用型选手，可能还是更愿意接受相关的思想，比如同样是独立开发者的经历，如何构建一个市场需要、但目前尚属空白的产品，如果提交产品的知名度，等等。</p>
<p>另外，这本书看的时间有些长，前后超过了 20 天，思维会中断，没有连续阅读时的畅快和收获。以后一本书还是尽量在一个星期内阅读完毕。</p>
<p>一些书摘（使用 <a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1000lv4R&amp;ct=klib_me" target="_blank" rel="external">Klib</a> 导出）：</p>
<ul>
<li>程序的重复是一切问题的根源。重复的程序在需要修改的时候，所涉及的范围就会更广，费用也就更高。当多个重复的地方都需要修改时，哪怕是漏掉其中之一，程序也将无法正常工作。所以重复降低了程序的可靠性。</li>
<li>软件开发的最大敌人是复杂性。人类的大脑无法做太复杂的处理，记忆力和理解力也是有限的。</li>
<li>虽然计算机的性能年年在提高，但它的处理能力终究是有限的，而人类理解力的局限性给软件生产力带来的限制则更大。在计算机性能这么高的今天，人们为了找到迅速开发大规模复杂软件的方法，哪怕牺牲一些性能也在所不惜。</li>
<li>对于没有名字的东西，人们几乎不可能认识到它的存在，并对之进行讨论。这种不能用语言表达的知识我们称之为内隐知识。</li>
<li>国外以反斜杠作为转意字符，而日本国内用日元符号作为转意字符。</li>
<li>正则表达式，是表达字符串模式的一种微型语言。正则表达式由字符本身、字符模式、锚点以及重复等组合而成。</li>
<li>介绍几条关于性能优化的格言，第 1 条也是最有名的： 过早的优化是万恶之源。还有一句也说的是这个意思：优化有两条准则：<ul>
<li>别做优化。 </li>
<li>（仅适用于专家）先不要做优化。</li>
</ul>
</li>
<li>性能优化的具体技巧：<ul>
<li>根据测定，发现瓶颈</li>
<li>减少对象</li>
<li>减少方法调用</li>
<li>避开用 Ruby 实现的方法</li>
<li>使用立即值</li>
<li>瓶颈部分用 C 语言记述。</li>
<li>以空间换时间</li>
</ul>
</li>
<li>“锁链的强度取决于最弱的环节”，这是在谈到安全性时经常使用的一句谚语。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0312 - Klib 的核心价值是什么？]]></title>
      <url>https://atjason.com/daily/2017-03-12.html</url>
      <content type="html"><![CDATA[<p>今天看到《<a href="https://www.amazon.cn/gp/product/B00N3NUTOI/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00N3NUTOI&amp;linkCode=as2&amp;tag=ll1ll-23" target="_blank" rel="external">自律型创业</a>》的第 10 步：定义你的核心价值。于是我在想，Klib 的核心价值是什么？</p>
<p>定位：<strong>Klib，Kindle 笔记管理中枢</strong>。</p>
<p>拆分来看：</p>
<ul>
<li><strong>导入方便</strong><ul>
<li><strong>覆盖用户所有的数据源，没有不可导入的笔记</strong><ul>
<li>目前来看，<strong>这一点最适合作为核心价值</strong></li>
</ul>
</li>
<li>方便，能用无线就不使用 USB 连接、能不手动操作就不手动操作</li>
</ul>
</li>
<li><strong>管理灵活</strong><ul>
<li>书的管理：修改、合并、标签、分组、排序等</li>
<li>笔记管理：修改、阅读等</li>
<li>程序本身：交互直接、快捷</li>
</ul>
</li>
<li><strong>导出多样</strong><ul>
<li>格式：纯文本、Markdown、印象笔记、PDF、html、图片等</li>
<li>方便分享</li>
</ul>
</li>
</ul>
<p>另外有个想法，以 Klib 为示例，按照《<a href="https://www.amazon.cn/gp/product/B00N3NUTOI/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00N3NUTOI&amp;linkCode=as2&amp;tag=ll1ll-23" target="_blank" rel="external">自律型创业</a>》中所有步骤走一遍，然后再出篇长文，一定会对自己及他人都有帮助。恩，等 Klib 新版上架了，考虑实施一下。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0311 - 好想换个城市呆一呆]]></title>
      <url>https://atjason.com/daily/2017-03-11.html</url>
      <content type="html"><![CDATA[<p>已有多久没离开过杭州？</p>
<p>已经很难想得清楚，至少有 10 个月吧。这么长时间一直呆在一座城市里，想想都有点小可怕。</p>
<p>其实，即便是呆在杭州，多数时间也都是呆在少数几个地方，去过的地方并不多。<strong>熟悉的地方并不熟悉，陌生的地方依旧陌生</strong>。</p>
<p><strong>生活在一座城，生活在一座笼</strong>。</p>
<p>好想换一个城市呆一呆，呼吸不一样的空气、吃不一样的东西、走不一样的路、看不一样的风景…<strong>期望，竟似一种奢望</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0310 - 技术的坑，产品挖]]></title>
      <url>https://atjason.com/daily/2017-03-10.html</url>
      <content type="html"><![CDATA[<p>最近这些天在改进 Klib，其中很多时间都花在数据结构上。</p>
<p>之前，因为只考虑了 <em>My Clipping.txt</em> 这一种数据源，与之对应的数据结构也比较简单。虽说能满足当时的需求，但扩展性差。这不，这版中，新加了 Kindle 网页版本、Kindle 导出的 html 文件、多看等数据源，单是兼容这些数据就是问题；再加上各个源之间的数据合并，真真是头大死了。修改了数据结构后，还要兼容之前的版本，真是 <strong>麻烦他妈给麻烦开门：麻烦到家了</strong>。</p>
<p>现在来复盘，主要是还是当初产品没设计好，路没走对。这两天正好在看《<strong>自律型创业</strong>》这本书，书中介绍，在产品初期，要进行充分的考察、定位、设计。可我当初，仅仅是因为自己有需求、本着练手的目的，立马就开始代码。结果挖了这么大个坑，现在来慢慢填。如果当初早些看了这本书、充分了解用户主要的诉求，就可以在设计数据结构时，留下足够的提前量、扩展性，就不至于现在这么被动。</p>
<p>当然，这也是没办法的事。<strong>做产品，总是在不断迭代中的</strong>。不过，还是要在项目形式前做足功能，尤其是 <strong>数据结构的设计，一定要有预见性</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0309 - 不能偏居一隅]]></title>
      <url>https://atjason.com/daily/2017-03-09.html</url>
      <content type="html"><![CDATA[<p>好吧，我说的是 Xcode + Swift.</p>
<p>Xcode 是很棒的 IDE，可是（恩，可是）</p>
<ul>
<li>经常闪退</li>
<li>代码提示抽风</li>
<li>代码跳转抽风</li>
<li>狂占资源</li>
<li>…</li>
</ul>
<p>Swift 是很棒的语言，可是（恩，可是）</p>
<ul>
<li>编译慢、结果大，甚至像 Qt 一样需要自带运行库</li>
<li>后端弱（恩，主要是 Linux 支持弱）</li>
<li>官方示例、网上资源少，依旧是 OC 的天下</li>
<li>库少，比如 TryParseDate 的缺少，连十几年前的 C# 都不如，实在是好生痛苦。</li>
<li>变化大，每次版本升级都像换了个语言</li>
<li>…</li>
</ul>
<p><strong>要忍都能忍；可是，为何要忍？</strong></p>
<p>世上还有很多美好的东西：</p>
<ul>
<li>神之编辑器 Emacs 与编辑器之神 Vim，最近势头强势的 Visual Studio</li>
<li>各种优秀的语言，经常出镜的 Python、Go、Ruby，把 () 捧上天的 Lisp，地球上最好的语言 PHP，正在统治地球的 js…</li>
</ul>
<p>在苹果的体系下，选择余地不多；可跳出苹果、放眼望去，一派繁荣气象。恩，偶尔还是要出逃，多接触下新鲜玩意，就当是新玩具喽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0308 - 竞品分流用户的「好处」]]></title>
      <url>https://atjason.com/daily/2017-03-08.html</url>
      <content type="html"><![CDATA[<p>有竞品来挖用户，自然不是什么让人开心的事。不过，换个角度想想，也是有好处的。</p>
<ul>
<li>如果这么容易就被挖走，反而说明不是自己的核心用户。</li>
<li>这样的用户，很可能并不是付费用户。因为一旦付费，一方面就是证明自己当初选择的潜意识，另一方面在金钱上更换是有成本的。</li>
<li>最重要的：<strong>减少非核心用户对核心用户的干扰</strong>。<ul>
<li><strong>每个产品都有自己的调性，并且有喜欢这种调性的忠实用户，这其实是产品的立身之本，尤其是商业上成立的根本。</strong></li>
<li>如果不喜欢这种调性的用户，时不时来唱反调。诸如 xxx 就有某个功能、就是这么做的，你为什么不做、不参考呢？回答这样的问题，是很尴尬的。一方面同行相轻并不是很高尚的事；另一方面，很多时候只是个人偏好问题，并没有绝对高低贵贱之分。</li>
<li>一些相似的例子：一些产品早期有很多忠实用户；后来，出于商业等各种原因，产品要扩大用户群，就会进来很多各种各样的人。这对老用户会是很大的冲激：原来的环境、调性被破坏了，这还是当初我喜欢的产品吗？进而开始有老用户的出逃。<strong>如何有序地引入新用户、如何让不同用户群体间相安无事，这恐怕是很多做社区产品人心中的难题</strong>。</li>
</ul>
</li>
</ul>
<p>当然，希望你别理解为这是我对自己产品的孤芳自赏、裹足不前。<strong>要做好产品，总要了解自己的用户。而要了解自己的用户，总要了解哪些不是自己的用户</strong>。    </p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0307 - 又在提前布局、与快速迭代之间纠结]]></title>
      <url>https://atjason.com/daily/2017-03-07.html</url>
      <content type="html"><![CDATA[<p>今天，在改进 Klib 时面临这样一样选择：数据库的设计，是要 <strong>考虑将来的需求而提前进行优良设计，还是满足现在的需求即可、快速迭代</strong>？</p>
<p>如果提前布局，</p>
<ul>
<li><p>好处是</p>
<ul>
<li>将来上新功能是会比较顺滑</li>
<li>版本之间的兼容性好、测试工作量小、风险低</li>
</ul>
</li>
<li><p>坏处是</p>
<ul>
<li>大大增加目前的工作量</li>
<li>增加程序的复杂度、出错的风险，提前增加了测试工作量</li>
<li>如果将来不上对应的新功能，目前的工作就会变成沉没成本</li>
<li>拖延发布日期，可能会错过重要的运营节点</li>
</ul>
</li>
</ul>
<p>如果选择保守方案，优缺点大致与上述介绍相反。</p>
<p>综合考虑，以目前的进度、我的时间、效率与疲惫程度，暂定后者，即 <strong>快速迭代</strong></p>
<p>拔高了说，<strong>过度设计对创业是个很大的风险</strong>，会极大增加工作量、成本，熬不到春天就已经被拖死。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0306 - 人人都爱多彩]]></title>
      <url>https://atjason.com/daily/2017-03-06.html</url>
      <content type="html"><![CDATA[<p>当你发现素来安静的同事突然在年会上大跳帅气的街舞；<br>当你发现测试同学也能写出优美的代码；<br>当你发现发现某位多年未联系的朋友已经去过十几个国家；<br>当你发现胡歌要去美国深造；<br>当你发现六十多岁的老太投篮命中率 100%；<br>…</p>
<p>我们总会不自觉的侧目、羡慕，内心还有点小激动。</p>
<p>是的，我们都爱多彩；哪怕自己不多彩，也愿意看到、接触多彩，就如我们愿意倾听有故事的人娓娓道来。</p>
<p>恩，除了产品、代码，我也得多些色彩。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0305 - 为简洁买单]]></title>
      <url>https://atjason.com/daily/2017-03-05.html</url>
      <content type="html"><![CDATA[<p>我一直想尝试这样一种收费方式：</p>
<ul>
<li>有全部功能、但交互复杂的版本，免费;</li>
<li>仅必要功能、但交互简洁的版本，收费。</li>
</ul>
<p>听起来很奇怪？</p>
<p>看看下面这两款遥控器，如果你的电视可选这两种，左边免费、右边收费，你选哪个？</p>
<p><img src="https://ps.toolinbox.net/0cq1p.jpg" alt=""></p>
<p>健身房也有类似的反向思维策略：先充值，如果能保证健身的次数，退钱。否则，不退。虽然健身房用这种方式刺激用户，但实际上还是有很多用户因为各种原因无法保证健身次数。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0304 - 自由职业者、独立开发者，是个什么物种？]]></title>
      <url>https://atjason.com/daily/2017-03-04.html</url>
      <content type="html"><![CDATA[<p>当我跟别人说起我是自由职业者、独立开发者，尤其当对方是大公司员工、甚至是中高层领导时，总会被表达这样的想法（或者他们有某种想法，只是没好意思表达出来）：</p>
<ul>
<li>单打独斗是不行的，你总是要加入团队、公司，才能干大事</li>
<li>什么都自己做，可能都做不好吧？</li>
<li>你总不能一直写代码吧，以后怎么办？</li>
<li>自由职业者很自由是吗？</li>
<li>你是受不了公司的约束才出来的吗？</li>
<li><strong>呵呵</strong>…</li>
</ul>
<p>其实，我也只是在这条路上摸索过一段时间，说下我的理解、感想吧。</p>
<ul>
<li><strong>独立开发者并不一定是单打独斗</strong><ul>
<li>比如，创意可能是在跟朋友聊天时产生的，Logo 可能是请人设计的，最开始的测试是热心用户完成的，推广可能是找媒体朋友帮忙的，等等。</li>
<li>这中间有大量的协作。与公司相比，<strong>这样的协作</strong> 本质上是相同的，而且 <strong>可能更难</strong>，因为被协作者并没有同事、上下级关系，大家为什么要配合你？这就要看个人品牌、影响力了。</li>
<li>当然，要做复杂的事，一定要有优秀的团队，这是肯定的。</li>
</ul>
</li>
<li>真的不能一直写代码吗？<ul>
<li>一方面，能不能写辈子代码，这本身是可以讨论的问题。</li>
<li>另一方面，<strong>独立开发者并不只是写代码</strong>。甚至，对于最终成型的产品来说，开发只是其中一部分，其他像创意、设计、测试、运营、推广、等等，可能会占用更多的时间。而做这些事所锻炼的能力，是可以做很多其他事的。</li>
</ul>
</li>
<li><strong>自律才有自由</strong><ul>
<li>自由职业者并不是绝对的自由，而是在自律下的自由。如果不能自控，即使在公司也会偷偷上网玩乐；如果能自控，马路边也能打开电脑解决用户问题。</li>
<li>尤其，自由职业并不意味着懒散，甚至是更忙碌。</li>
</ul>
</li>
<li><strong>自由职业的意义，在于最大化个人价值</strong><ul>
<li>对于公司、组织而言，为了保持一致性，一定会在大家之间取最大公约数。而作为其中的一员，被约掉的可能是自己的个性、爱好；被强加上的，可能只是组织的共性。不恰当的约束，则会限制个人能力的发挥。</li>
<li>自由职业都则可以很好规避这个问题。自己喜欢的、擅长的，多花些时间做；其他的，少花时间、或者外包给别人做。</li>
</ul>
</li>
<li><strong>大，不等于永恒</strong><ul>
<li>一想到大公司，大家很自然会联想到稳定、可靠、持久这样的印象。但，其实大并不意味着稳定，比如诺基亚、摩托罗拉的衰落。</li>
<li><strong>不论是大公司、还是小个体，都需要不断调整自己、适应变化</strong>，没有哪一种具体的形态，能够永远持久。而在就对变化时，小，恰恰是种优势。</li>
<li>大，可能辉煌极胜；小，可能很难死掉。</li>
<li>突然想到刘慈欣的《微纪元》，如果人类像蚂蚁一样大，一辆汽车大小的飞船，就能飞到月球。</li>
</ul>
</li>
<li><strong>创业，活下去最重要</strong><ul>
<li>创业成功，唯一的标准就是活下去、一直活下去。如果死掉了，所谓的学到经验、历练、教育用户、扩大市场总盘子、过往的耀眼，都是浮云。</li>
</ul>
</li>
</ul>
<p>继续赶路、Klib 继续优化中…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0303 - 小众需求领域，是卖方市场]]></title>
      <url>https://atjason.com/daily/2017-03-03.html</url>
      <content type="html"><![CDATA[<p><strong>小众需求领域，更像是卖方市场</strong>：生产者生产出什么商品，消费者才能消费什么商品。反过来理解，<strong>并不是大家有需要，生产者一定会生产。因为需求太小了，生产可能很难收回成本。或者，机会以成本太高，生产者还不如去做大众需求、以赚得更多</strong>。</p>
<p>在这样的前提下、在生产者+消费者整体来看，<strong>更应该保证的是生产者的积极性</strong>，这样才能让这个市场继续下去。</p>
<p>对应到软件的小众需求领域，也是如此。这就可以推导出关于软件支付的个人理解：就当适当偏向于开发者的诉求。比如，订阅可能比买断更适合。一方面开发者的收入可能变得稳定；另一方面开发者才有动力对已经发布的软件进行更新。这样，最终受益的还是消费者。简单想想就好了：把价格作为报酬支付给消费者，他能生产出自己需要的软件吗？</p>
<p>当然，我理解消费者可能短期内不喜欢订阅制，但买断制带来的隐形的「难受」会让大家慢慢接受。比如，有 2 个同类型的 App，一个是订阅、另一个是买断，因为价格的因素选择了买断的 App。但几乎可以肯定，这款 App 后续不会有大的更新，自己用着不爽、App 也不会改进。这种感觉，就像是买了件款式不好、但价格便宜的衣服，虽然买的时候省钱了，但其实很少穿、或者穿上不舒服，那还不如买个自己更喜欢的、经常穿的衣服，性价比更高。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0302 - 开发过程中的混沌期，不可避免]]></title>
      <url>https://atjason.com/daily/2017-03-02.html</url>
      <content type="html"><![CDATA[<p>在开发过程中，尤其是开发前期、面对复杂功能时，会有明显的 <strong>混沌期</strong>。</p>
<p>在这个阶段，</p>
<ul>
<li>有很多事要做，比较杂乱</li>
<li>很难分清各个事情之前的依赖关系、轻重程度</li>
<li>可能做着做着，之前已经做好的功能又被破坏了、甚至都不知道已经破坏了，还在此错误的基础上继续开发、错上加错</li>
<li>有很多变数。比如在开发过程中需求变动，或者发现了之前没有考虑到的功能、不完善的逻辑。这会让本身就困难的开发过程，变得更不稳定。</li>
<li>由于开发过程拖得比较长，一直没有结果，甚至连中间结点也没有，人也一直紧绷着，不能及时放松，很容易觉得厌烦、沮丧、对自己的能力产生质疑，等等</li>
</ul>
<p><strong>而一旦过了混沌期，又会觉得神清气爽，很有满足感</strong>。</p>
<p>而以我的经验，<strong>这样的混沌期不可避免，只是时间长短的问题</strong>。如果明白了这一点，至少在心理上有一定的预期，不会在遇到困难时轻易变得沮丧。</p>
<p>那么，如何缩短这一混沌期、尽快搞定问题呢？由于我刚刚经过了这个状态，简单总结下心得：</p>
<ul>
<li><strong>尽量分割为小任务</strong>。没有谁能一次性解决复杂的问题，都是一步步来。而怎么一步步来？就是要能将大问题量拆分成尽量独立的小任务。</li>
<li><strong>开发各个小功能时，尽量相互隔离</strong>。这时候，<strong>单元测试</strong> 就派上用场了。一旦完成某个功能，立即完善单元测试。在完成新功能时，及时运行所有单元测试。这样，如果之前已经完成的功能被破坏时，能立即发现并修复，而不是成为隐患。</li>
<li><strong>不忘初心</strong>。当开发周期拖得比较长时，很容易忘记最开始要做什么、以及重点是什么。这时候，就要不断回到原点来回顾、反思。另外，一个具体的把关就是，根据初心，尽量预定义出丰富的 <strong>测试用例</strong>。这些测试用例会避免走偏，并且在最后时用户验证</li>
</ul>
<p>继续前行…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0301 - 还在大坑里]]></title>
      <url>https://atjason.com/daily/2017-03-01.html</url>
      <content type="html"><![CDATA[<p>已经在 3 月份了。</p>
<p>可我还是 Klib 多数据源合并的大坑里。</p>
<p>白天还信誓旦旦地说：搞不完今天不睡了。结果，还是没搞完；并且，要去睡了…</p>
<p>感觉还是需要有大块时间来搞这个复杂的逻辑。不然，每次状态切换、恢复现场很花时间哎。另外，由于拖的时间太长，整个节奏都乱了。什么番茄工作法、频繁提交、等等，全都抛到脑后了。</p>
<p>明天，搞定合并、数据库升级。<strong>以此为目标，倒推先做什么、哪些可舍弃</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0228 - 脑力集训]]></title>
      <url>https://atjason.com/daily/2017-02-28.html</url>
      <content type="html"><![CDATA[<p>今天，集中处理了 Klib 从多个源导入时的数据合并问题。确实是复杂，脑子都不够用了。即使加上白板、Excel、纸笔，还只是大体弄清楚了。并没有完全实现，也就不知道是否遗漏了哪些逻辑。</p>
<p>感觉自己处理这种复杂逻辑的能力还有待加强。</p>
<ul>
<li>一方面，大脑容易有限，同时思考复杂折逻辑，很容易有遗漏、错误。</li>
<li>另一方面，还没有找到很好的、帮助具象逻辑思考的外在媒介，相当于内存中的数据无法持久化到研究中，内存也就不能再存储别的东西。</li>
</ul>
<p>处理逻辑的事，确实比较枯燥、也很容易累。今天就这样的吧，明天早起继续。</p>
<p>PS：骄傲的是：上述逻辑，用户几乎是不可知的。如果做到完美，用户完全不可知。这样就对了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0227 - 做不好重要、不紧急的事]]></title>
      <url>https://atjason.com/daily/2017-02-27.html</url>
      <content type="html"><![CDATA[<p>我的一张手机卡有个奇怪的问题：放在手机 A 中可以、在手机 B 中就是不行，能想到的办法就是补卡。<strong>可，一直拖着</strong>。近期，有缘由必须要换卡了，显得很仓促。</p>
<p>我的眼镜有磕损、且度数不够了，要换。<strong>可，一直拖着</strong>。近期，有缘由必须要换卡了，显得很仓促。</p>
<p>哎，<strong>做好重要、不紧急的事，怕是个人事务管理中最难、最容易被忽略的问题吧</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0226 - 试着改变世界]]></title>
      <url>https://atjason.com/daily/2017-02-26.html</url>
      <content type="html"><![CDATA[<p>前几天，<a href="http://m.weibo.cn/1734549517/4075765849336136" target="_blank" rel="external">61 和微博在撕</a>。其结果是，微博不再（至少在某些情况下）不再私处篡改用户的链接地址。</p>
<p>这几天，我在做 Klib 集成 Kindle 其它端笔记时，除了尽量在已有情况的约束下思考可能的的方案、改进体验，<a href="http://m.weibo.cn/2018707532/4079018171133512" target="_blank" rel="external">我还试图通过微博转发的方式，向亚马逊施压、请愿</a>，希望他们能在中国区开放网页版的笔记管理。</p>
<p>虽然，我知道即使这样做，亚马逊做出调整的可能性微乎其微。<strong>但这不一样，至少我做出了努力，在努力让这个世界变得美好一点点</strong>。</p>
<p>这也强化了自己的认知：<strong>不只可以在现实的束缚下跳舞，还可以试着打破现实的束缚，带来更多的可能性；为自己、也为别人</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0225 - 大公司与小需求]]></title>
      <url>https://atjason.com/daily/2017-02-25.html</url>
      <content type="html"><![CDATA[<p><strong>大公司在追求更大利润基数时，会放弃小需求</strong>，这可以理解。</p>
<p>可是，<strong>这些被放弃的需求，并不是没人需要。需求没有大小之分，对需要的人来说，总是非常需要的</strong>。</p>
<p>那么，怎么处理大公司与小需求的矛盾？可以试试 <strong>提高开放性，让更多中小玩家参与</strong>。</p>
<p>比如，对于 Amazon 这家巨无霸，电子书是很小的份额。而在 Kindle 电子书中，电子书的笔记管理更是小中之小。从求教到的 Amazon 前员工得知，在公司内部，这样的需求是排不上优先级的，这也是为什么只有美区才有笔记的网页版、并且一直很烂。并且，<strong>这也是为什么我开发 <a href="https://toolinbox.net/Klib/" target="_blank" rel="external">Klib</a>、并且受大家欢迎的原因</strong>。</p>
<p>可是，<strong>小需求并不意味着没利润</strong>。比如，Clippings.io 这家服务，主打的就是能同步 Amazon 美区的笔记，并且收费 $1.99 每月。当然，<strong>这样的收益根本入不了 Amazon 的法眼，却能养活一个小团队</strong>。更关键的，这个需求的满足，会让 Amazon 自己的用户在使用 Kindle 阅读时，感觉更舒服。</p>
<p>所以，<strong>大公司提高开放性，甚至故意出让部分利润，让更多玩家参与进来，让自己的生态更完善，是对自己、第三方玩家、用户都好的多赢局面</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[201701 - 《编程珠玑》]]></title>
      <url>https://atjason.com/book/201701.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/kgyvg.jpg" alt=""></p>
<p><a href="https://www.amazon.cn/gp/product/B00SFZH0DC/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00SFZH0DC&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external">编程珠玑</a></p>
<p>笔记：</p>
<ul>
<li>时间与空间<ul>
<li>时间换空间。对于可能被重用的中间计算结果，不存储、下次需要时重新计算。</li>
<li>空间换时间。对于可能被重用的中间计算结果，存储、下次需要时不重新计算。</li>
</ul>
</li>
<li>应用与底层<ul>
<li>举两个例子：<ul>
<li>应用型：学会使用 JSON 解析库；</li>
<li>底层型：优化 JSON 解析库的效率；</li>
</ul>
</li>
<li>以目前我的状态，更适合向应用型发展。可以说是堆业务，这可以快速解决实际问题，由此带来的成就感，大于把搜索效率提高一倍这样的成果。</li>
<li>当然，如果效率优化成为业务的核心时，还是会用户去优化底层。</li>
<li>另外，感觉目前大多数产品、大多数开发者都处于应用型、堆业务的状态。这没什么不好，虽然应用型是建立在底层的基础上，但如果没有应用的失去，底层也不会自动发展的。</li>
</ul>
</li>
</ul>
<a id="more"></a>
<p>书摘</p>
<ul>
<li>在节省空间方面无计可施时，将自己从代码中解脱出来，退回起点并集中心力研究数据，常常能有奇效。（数据的）表示形式是程序设计的根本。</li>
<li>使用数组重新编写重复代码。</li>
<li>封装复杂结构。当需要非常复杂的数据结构时，使用抽象术语进行定义，并将操作表示为类。</li>
<li>尽可能使用高级工具。超文本、名字—值对、电子表格、数据库、编程语言等都是特定问题领域中的强大的工具。</li>
<li>编码。对于比较难写的函数，我发现最容易的方法是使用方便的高级伪代码来构建程序框架，然后将伪代码翻译成要实现的语言。</li>
<li>代码调优<ul>
<li>首先确定程序中开销较大的部分，然后进行少量的修改，以提高其运行速度。“代码调优”并不总是恰当的方法，也不太有趣，但是有时候它确实可以使程序的性能大为改观。</li>
<li>代码调优的最重要原理就是尽量少用它。</li>
<li>不成熟的优化是大量编程灾害的根源，它会危及程序的正确性、功能性以及可维护性。当可能的危害影响较大时，请考虑适当将效率放一放。</li>
<li>软件的其他许多性质和效率一样重要，甚至更重要。</li>
</ul>
</li>
<li>性能<ul>
<li>对程序进行性能监视的结果通常类似：多数的时间都消耗在少量的热点代码上，而余下的代码则很少执行。</li>
<li>性能监视可以帮助我们找到程序中的关键区域；对于其他区域，我们遵循有名的格言“没有坏的话就不要修”。</li>
<li>效率问题可以由多种方法来解决。只有在确信没有更好的解决方案时才考虑进行代码调优。</li>
</ul>
</li>
<li>正确理解所遇到的问题。与用户讨论问题产生的背景。问题的陈述通常就包含了与解决方案有关的想法；</li>
<li>提炼出抽象问题。简洁、明确的问题陈述不仅可以帮助我们解决当前遇到的问题，还有助于我们把解决方案应用到其他问题中。</li>
<li>考虑尽可能多的解法。很多程序员很快就发现了问题的“解决方案”，他们只愿意花1分钟的时间思考，然后花一天的时间来写代码，而不是先花1个小时来思考，再用一个小时来写代码。</li>
<li>对程序员的10条建议：<ul>
<li>解决正确的问题</li>
<li>探索所有可能的解决方案</li>
<li>观察数据</li>
<li>使用粗略估算</li>
<li>利用对称性</li>
<li>利用组件做设计</li>
<li>建立原型</li>
<li>必要时进行权衡</li>
<li>保持简单</li>
<li>追求优美</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0224 - 遇到难啃的骨头]]></title>
      <url>https://atjason.com/daily/2017-02-24.html</url>
      <content type="html"><![CDATA[<p>今天试着让 Klib 解析 Kindle 存储的、由其他 Kindle 客户端所产生的笔记时，遇到了搞不下去的困难。</p>
<p>主要是困难在于，<strong>Amazon 并未开放这些数据文件的格式</strong>。并且，这些格式还受 DRM (Digital Rights Management) 加密保护。要读取，即使没有版权、法律上的风险（因为是用户在读取自己会产生的笔记），也确实是不容易。</p>
<p>虽然有 Calibre 这样的开源软件做了类似的事，不过，他们是基于 Python 的。即使翻译到 Swift，也要涉及逆向工程所得到的文件格式。这一过程是很繁琐、花时间，而且极易出错。</p>
<p>可是，如果这关过不去，就面临着「Klib 无法获取用户全部笔记」的尴尬。数据的不完整，会让用户用起来很没有安全感，总担心自己的笔记有遗漏。虽说懂内情的人，可以通过仅在 Kindle 设备上加标注来绕过。不过，毕竟不是所有人都能理解。并且，不让用户在手机等 Kindle 客户端做笔记，也并不是合适的要求。</p>
<p>卡在这个地方了，痛苦中…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0223 - 初为嘉宾]]></title>
      <url>https://atjason.com/daily/2017-02-23.html</url>
      <content type="html"><![CDATA[<p>今天接受少数派的邀请，参加了 Matrix 群讨论，初为线上嘉宾。</p>
<p><strong>主要讨论的是：大家是如何阅读、如何做笔记、如何看待做了笔记而不会回看、如何持久存储笔记、等等问题。</strong></p>
<p>我觉得，在如今这个快消费时代，还有这么一群人能静下心来来，认真的看书，还做笔记，真是不容易。非常愿意跟这样的人交流。</p>
<p>在跟大家的聊天中，也了解到一些大家实际使用 Kindle 的方法、场景，对改进 Klib 提供了更多背景支持，谢谢大家的分享。</p>
<p>最大的遗憾就是，时间的限制，没能跟大家深入交流，深觉可惜。</p>
<hr>
<p>今天的遗憾还有两处：</p>
<ul>
<li>没写代码</li>
<li>没看完《从零开始做运营》</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0222 - 喧嚣过后，归于宁静]]></title>
      <url>https://atjason.com/daily/2017-02-22.html</url>
      <content type="html"><![CDATA[<p>于我而言，<strong>代码是宁静的，运营是喧嚣的</strong>。</p>
<p><strong>而我，偏好于宁静。</strong></p>
<p>从周一中午手动发布到现在，过去了 60 个小时。而这过去的 2 天多里，我几乎只在做一件事：<strong>Klib 的推广</strong>。</p>
<ul>
<li>有半夜起来回消息的疲惫；</li>
<li>有看到用户好评时的高兴；</li>
<li>有看到大家买单时的感动；</li>
<li>有看到 iPic 被抄袭、而抄袭者振振有词时的无语；</li>
<li>有朋友祝贺时的开心；</li>
<li>…</li>
</ul>
<p>很热闹的一段时间，也是对我过去闭门开发的奖励，享受这段时间。</p>
<p>不过，热闹总是会过去；就像是春节总是会过去，大家总要回到自己的学习、工作中，继续原来的行程。</p>
<p>Klib 首发的热闹就快过去了，我也要开始静下心来，认真梳理用户的每条建议，思考接下来的要如何改进 Klib，以期再一次给用户惊艳。</p>
<hr>
<p><strong>再见，Klib 首发；</strong></p>
<p><strong>你好，下一段征程。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0221 - 我是如何把 Klib 带到这个世界的]]></title>
      <url>https://atjason.com/daily/2017-02-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zyvsd.png" alt=""></p>
<p>这里不但有<strong>「Klib 的诞生过程」</strong>，</p>
<p>还有<strong>「独立开发者」</strong>的真实写照，</p>
<p>万字长文，深度干货，请谨慎继续…</p>
<hr>
<p>历时 50 天、横跨 2 年、经过 258 小时的纯手工打造，Klib 终于来到了这个世界。</p>
<p><img src="https://ps.toolinbox.net/5n91p.jpg" alt=""></p>
<p>这两天 Klib 刚刚发布，收到很多用户的好评。赶着手热，记录下 Klib 的诞生历程吧。</p>
<p>Klib 是全新的 Kindle 标注、笔记/书摘管理工具，macOS 平台。</p>
<ul>
<li><a href="https://toolinbox.net/Klib/" target="_blank" rel="external">了解更多</a></li>
<li><a href="https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">Mac App Store 下载</a></li>
</ul>
<a id="more"></a>
<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>2016 年底的时候，我在思考接下来做什么项目，并没有定下来，只是有个大概的方向：<strong>做个稍微大些的</strong>，以及技术上的需求，就是做一个<strong>有界面交互的</strong>。因为之前做的 i 系列工具（<a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iPic</a>、<a href="https://itunes.apple.com/cn/app/id1062139745?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iTimer</a>、<a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iPaste</a>、<a href="https://itunes.apple.com/cn/app/id1102004240?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iHosts</a>）都是非常垂直的，并且都是菜单栏工具，<strong>我想让自己有所突破</strong>。</p>
<p>正巧，当时也给自己定了读书计划，就是<strong>要经常读书，并且读完后要在博客上写文章</strong>。主要自己是独立开发，获取信息的渠道本来就不多，就要<strong>用这种方式强迫自己不断更新</strong>。而要写文章，很重要的内容就是读书时的书摘。我习惯于用 Kindle 读电子书，于是，很直接的需求就是，把  Kindle 中的标注、笔记复制出来，用于写文章。</p>
<p>而我大致搜索了下当时 macOS 平台下的标注管理工具，发现并没有趁手的。于是，就开始了程序员最喜欢做的事：<strong>造轮子</strong>。</p>
<p>时间，正好是 2017 年元旦，详见 <a href="https://atjason.com/daily/2017-01-01.html">当天日记</a>。顺便说一句，<a href="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/">我有每天写日记的习惯，已经坚持几年了</a>，也是为了<strong>逼迫单打独斗的自己，能够保持思考、反省</strong>。</p>
<h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><p>这里借用设计这个名字，只是用以涵盖产品前期的各种思考。确实是有各种思考，如市场环境、商业模式、竞品分析、名字、Logo、做成什么样子、交互、如何发布、怎么运营、时间节点、等等。时间有些早了，这里简单回忆下几个比较重要的点。</p>
<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p><strong>我一向倾向于做简洁的产品，这个工具也是如此</strong>。我最核心的需求就是导出 Kindle 中的笔记，最直观的衍伸就是能持久保存、定期回顾这些笔记。好了，就是这些吧，再多就难做的精简、好用了。重复+小结一下：</p>
<p>定位：<strong>精简的、macOS 平台、Kindle 笔记管理工具</strong></p>
<p>功能集：</p>
<ul>
<li><strong>导出 Kindle 中的笔记</strong></li>
<li><strong>持久保存笔记</strong></li>
<li><strong>方便回顾</strong></li>
</ul>
<h2 id="名字、Logo"><a href="#名字、Logo" class="headerlink" title="名字、Logo"></a>名字、Logo</h2><p>名字好定，因为我开发的工具都是 i 开头的（<a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iPic</a>、<a href="https://itunes.apple.com/cn/app/id1062139745?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iTimer</a>、<a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iPaste</a>、<a href="https://itunes.apple.com/cn/app/id1102004240?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me" target="_blank" rel="external">iHosts</a>），这个自然也是。再加上是 Kindle 相关的，于是就叫：<strong>iKindle</strong>. 当然，你知道最后不是这个名字；这个坑，以后再填。</p>
<p>Logo 也很容易呀，你看我之前产品的 Logo 就知道了：</p>
<p><img src="https://ps.toolinbox.net/ag32m.jpg" alt=""></p>
<p>iKindle 的 Logo 一定是类似下面这个样子的：</p>
<p><img src="https://ps.toolinbox.net/mja9k.jpg" alt=""></p>
<p>当然，你知道，后来也改了。这是后话。</p>
<h2 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h2><p>有了前面的铺垫，就可以考虑具体的交互。</p>
<p>交互一定要直观、符合直觉。开始时，大致的想法是这样的（幸亏我还保留了当时的截图）：</p>
<p><img src="https://ps.toolinbox.net/8szmd.jpg" alt=""></p>
<p>左侧是书列表、右上角是书中笔记列表、右下角是选中笔记的内容、方便编辑。后来当然是不断演变了。</p>
<p><strong>先是书</strong></p>
<p>我一开始就没打开按作者来区分，因为我本人并没有追作者的习惯；并且，即使追，也没必要非得按作者分类，搜索不就可以了。</p>
<p>但是，太多书放在一起，就有了排序的问题。按书名、最后阅读时间、还是别的？其实你会发现，<strong>如果书多，再怎么排序都没用</strong>。那干嘛不让书少点呢？有了，如果只看最近的几本书，比如 3 本，还需要考虑排序吗？那些更早的书，归档起来不就好了，之后能搜索到就行。</p>
<p><img src="https://ps.toolinbox.net/r4m76.jpg" alt=""></p>
<p>于是，这就诞生了 <strong>iKindle 独有的创意：区分当下正在阅读的书、和之前已经阅读的书</strong>。形式上就是把已读的书放在一起，可以折叠隐藏。<strong>恩，挺棒的！</strong></p>
<p><strong>然后是笔记列表</strong></p>
<p>程序员的思考，很直观的就是把所有属性都列出来，比如笔记内容、类型（是标注、还是笔记）、位置、添加日期。这用列表很容易实现。</p>
<p>可问题是，除了笔记内容，后面这些属性会占用大量屏幕内容，却又不重要，只要在我需要的时候能看到就可以了。</p>
<p>于是，那就把它们都隐藏起来好了，隐藏到简介里，这样笔记列表就只显示纯粹的笔记内容。<strong>恩，挺棒的！</strong></p>
<p><strong>再然后就是阅读、编辑当前笔记</strong></p>
<p>你会发现，在最原始的设计中，这部分也占据了大量屏幕、却不得已有大量空白。并且，对于我实际的笔记来看，很多都是一句话的，在列表中就几乎可以展示了，不再需要额外的这个区域。再并且，真正编辑的需求并不大（最多的就是在标注时，前后有不需要的内容、符号），大部分时间只要看就行了。</p>
<p><img src="https://ps.toolinbox.net/ngztt.jpg" alt=""></p>
<p>于是，这部分也被我干掉了。那如果笔记确实很长怎么办呢？我自然想到了 Finder 的快速预览。OK，那就搬过来吧。<strong>恩，挺棒的！</strong></p>
<p><img src="https://ps.toolinbox.net/kab6b.jpg" alt=""></p>
<p><strong>下一个就是搜索</strong></p>
<p>这个并不需要特别设计，跟系统的保持一致好了，不一致反而不好。<strong>恩，挺棒的！</strong></p>
<p><strong>最后，就是整体的交互</strong></p>
<p>我一看，经过上面的改进，这不就是个系统「提醒事项」的样子吗？好吧，那就做成「提醒事项」的样子。<strong>恩，挺棒的！</strong></p>
<p><img src="https://ps.toolinbox.net/3ii7h.jpg" alt=""></p>
<h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p>设计差不多了，就可以码了。<strong>我开发的顺序一般是三步走：数据结构、堆 UI、完成业务逻辑。</strong></p>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>数据结构又主要为三块：Kindle 本身数据结构、内存中数据结构、持久化数据结构。</p>
<h3 id="Kindle-本身数据结构"><a href="#Kindle-本身数据结构" class="headerlink" title="Kindle 本身数据结构"></a>Kindle 本身数据结构</h3><p>好吧，先吐槽一句：<strong>Kindle 的数据结构真垃圾</strong>！至少是开放出来的数据结构真增加，就是一个纯文本，类似于以下的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">史蒂夫•乔布斯传(Steve Jobs:A Biography) (沃尔特•艾萨克森 (Walter Isaacson))</div><div class="line">- 您在位置 #5676-5677的标注 | 添加于 2015年8月22日星期六 下午1:33:54</div><div class="line"></div><div class="line">一家妥善经营的公司能够大量催生创新，远胜于任何一个有创造性的个人。</div><div class="line">==========</div></pre></td></tr></table></figure>
<p>看起来还行是吗？那再来一些多语言版本的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- Your Highlight on Location 1-6 | Added on Thursday, January 5, 2017 4:20:05 PM</div><div class="line">- Ihre Markierung bei Position 6-7 | Hinzugefügt am Mittwoch, 1. Februar 2017 12:21:36</div><div class="line">- Votre surlignement à lʼemplacement 9-12 | Ajouté le mercredi 1 février 2017 12:51:12</div><div class="line">- Tu subrayado en la posición 33-35 | Añadido el miércoles, 1 de febrero de 2017 12:42:10</div><div class="line">- 位置No. 39-42のハイライト |作成日: 2017年2月1日水曜日 13:00:33</div><div class="line">– Ваш выделенный отрывок в месте 45–49 | Добавлено: среда, 1 февраля 2017 г. в 13:12:38</div><div class="line">- 您在位置 #38-39的标注 | 添加于 2017年1月5日星期四 下午4:07:22</div></pre></td></tr></table></figure>
<p>单单是识别其中的日期，就有种想 shi 的冲动：要获取日期文本、识别格式、确定 Locale；另外，还不知道日期所在时区。</p>
<p><img src="https://ps.toolinbox.net/58ar8.jpg" alt=""></p>
<p>这里我做一个小机巧：<strong>数据结构的解析能力可以动态更新。</strong>也即，在二进制程序不变的情况下，可以从云端获取数据的最新解析方式。这样，当用户反馈给我不支持的格式时，我只要更新云端的解析能力，客户端就都可以无痛、后台式更新了。<strong>为自己这个设计点赞！</strong></p>
<h3 id="内存中数据结构"><a href="#内存中数据结构" class="headerlink" title="内存中数据结构"></a>内存中数据结构</h3><p>这个没太多好说的，定义书、笔记的各个属性即可。</p>
<p>一个主要的机巧在于：<strong>如何识别笔记的唯一性？</strong>前面的文本中可以看到，笔记并没有所谓唯一 ID 之类的东西。既然没有，那就把笔记整体、或整体的 Hash 值作为唯一 ID 好了，反正笔记的数据量并不大，<strong>一个人一生的笔记，可能也没有 iPhone 拍的一张图片体积大。</strong></p>
<h3 id="持久化数据结构"><a href="#持久化数据结构" class="headerlink" title="持久化数据结构"></a>持久化数据结构</h3><p>这一步，主要<strong>在结构化存储、和非结构化存储中纠结。</strong>前者数据规整，适合笔记存储，但扩展性差。后者优缺点大致和前者相反。</p>
<p><img src="https://ps.toolinbox.net/xdz0b.jpg" alt=""></p>
<p>最后，我还是选择了结构化存储。具体的，就是 <strong>SQLite</strong>. 一方面笔记类数据实在是太规整了；另一方面，抱着学习的态度，反正我哪种都不熟悉，随便拉一种出来练手吧。</p>
<p>还有一个考量就是：<strong>数据结构的公开性。</strong>数据是用户的、宝贵的，如果使用私有的二进制数据结构，万一哪天要停止维护了，用户就没有任何办法可以解析这些数据。而使用公开的 SQLite 则不怕，任意一款 SQLite 工具都可以查看用户自己生成的数据。<strong>这样做，对用户是负责任的。</strong></p>
<h2 id="堆-UI"><a href="#堆-UI" class="headerlink" title="堆 UI"></a>堆 UI</h2><p>这部分倒没有太多可说的。</p>
<p>一方面就是一些核心控件的用法，如 <code>NSOutlineView</code>, <code>NSTextView</code>, <code>NSPopover</code>, <code>NSSearchField</code>. 其中，<code>Source List</code> 模式的 <code>NSOutlineView</code> 是有些坑的，会出现诸如 UI 刷新不及时、图标丢失等现象。有遇到类似问题的朋友，可以找我聊聊。</p>
<p>另一方面就是界面的细节，如字体、字号、颜色、留白、间距、等等。这方面我倒是偷懒了，因为基本就是「复刻」系统「提醒事项」</p>
<h2 id="实现业务逻辑"><a href="#实现业务逻辑" class="headerlink" title="实现业务逻辑"></a>实现业务逻辑</h2><p><strong>打通数据流</strong></p>
<p>比如，选择右侧书时，右侧笔记列表能相应变化；编辑笔记时，数据能持久化；查看笔记时，能读取正常的数据；等等。是不是听起来都像是废话？恩，就是这么回事，做对就行了。关键是 <strong>代码结构要好，不要有复制代码、严重耦合之类的问题。</strong></p>
<p><strong>用户引导层面</strong></p>
<p>比如，开始时引导用户手动导入、进行过程中引导用户如何操作。这部分我基本没做太多，因为希望程序可以做到无需引导。不过，引导用户导入这一步，做的确实不好，还要再改进。</p>
<p><strong>外围的一些功能</strong></p>
<p>比如，账户系统、日志及反馈系统、等等。这里就不再铺开了。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p>其实，<strong>单元测试是在开发一开始就进行的</strong>。尤其是对数据结构部分，要充分测试。如果这部分没问题，只要程序能跑起来，基本就没有大问题。如果这部分有问题，改 Bug 够喝一壶的。</p>
<p><img src="https://ps.toolinbox.net/ehgey.jpg" alt=""></p>
<p>并且，<strong>要在定义数据结构、完成新功能那一刻，立即完善单元测试。</strong>因为这时候是对代码最熟悉、最清楚、也最愿意写单元测试的时候。错过这一刻，实在是太可惜了。</p>
<h3 id="完善测试用例"><a href="#完善测试用例" class="headerlink" title="完善测试用例"></a>完善测试用例</h3><p>和单元测试一样，<strong>测试用例不是在产品开发结果后补齐，而是在每开发完一个功能逻辑后，立即完善测试用例。</strong>道理一样，因为这个时候是对逻辑理解最透彻、清晰的时候，千万不能错过。</p>
<p><img src="https://ps.toolinbox.net/mp615.jpg" alt=""></p>
<h3 id="版本测试"><a href="#版本测试" class="headerlink" title="版本测试"></a>版本测试</h3><p>单元测试跑一遍，心里就有底了。再加上前面完善的测试用例，版本测试无非就是照着用例跑一遍。</p>
<p>我并没有做自动化测试、持续集成，主要是涉及 UI 的自动化测试并不好做，而且投入很大。对于我这种小项目、独立开发者而言，手动跑跑测试用例，可能是性价比最高的。</p>
<p>值得介绍的一点是，<strong>推荐使用虚拟机进行版本测试</strong>。事先建立好干净的系统、生成镜像。每次测试时，只要将虚拟机恢复到指定的镜像即可。再者，就是可以在当前系统（如 macOS 10.12）中，测试其它版本的系统（如 macOS 10.11）</p>
<h1 id="上架"><a href="#上架" class="headerlink" title="上架"></a>上架</h1><p>自己辛苦做出来的东西，当然是希望越多人用户越好。要触到更多的用户，最直接有效的办法就是 <strong>上架 Mac App Store (MAS)</strong> 了。</p>
<p><img src="https://ps.toolinbox.net/rce4v.jpg" alt=""></p>
<h2 id="内测、公测"><a href="#内测、公测" class="headerlink" title="内测、公测"></a>内测、公测</h2><p>在上架前，要保证自己的产品的可用、好用的，最好的办法就是，先让一部分用户用起来，也就是内测、公测（以下统一称公测）。</p>
<p>特别要强调的是，<strong>公测的目的并不是发现 Bug，这是你自己要做好的事。</strong>公测主要有以下目的：</p>
<ul>
<li><strong>检验市场</strong>：也就是说，这个产品是不是有人需要、有多迫切需要，之前假想的市场是否存在、有多大，等等</li>
<li><strong>检验设计</strong>：如果有人要，那自己做出来的东西是不是他想要的？哪些地方设计的比较好，有没有致命的缺陷？</li>
<li><strong>检验质量</strong>：因为自己能覆盖的情况是有限的，还是要靠真实用户的实际使用来最终检验质量。</li>
</ul>
<p>我的内测主要是在之前的用户群中、V2EX 中，<strong>在此特别感谢参与公测的朋友！</strong></p>
<h2 id="Mac-App-Store"><a href="#Mac-App-Store" class="headerlink" title="Mac App Store"></a>Mac App Store</h2><p>好吧，终于来到 Mac App Store (MAS) 这个大坑。说 MAS 是大坑，主要是以下方面：</p>
<h3 id="沙盒限制"><a href="#沙盒限制" class="headerlink" title="沙盒限制"></a>沙盒限制</h3><p>沙盒会限制很多接口、系统权限的使用，对程序设计、产品交互有明显的影响。</p>
<p>比如，除非用户手动操作（即用操作本身来授权）沙盒不允许产品访问用户的文件系统。这就使用 iKindle 无法在一开始时直接自动导入当前连接的 Kindle 设备，而必需由用户手动操作。这就需要很恰当的引导。而一旦使用过一次，后续就不再需要用户手动操作。这也是为什么 iKindle 后续可以自动导入。</p>
<p>还有一个很关键的：<strong>即使在开发过程中打开了沙盒限制，苹果在审核时还是可能以沙盒为理由拒绝。</strong>虽说苹果准备了齐全的文档来说明这些限制，但一般开发者明显不能完全领会。就像你不可能读完所有法律以后再迈出家门第一步，一定碰到问题再解决问题更实际。好在，这次我没碰到这个问题。</p>
<h2 id="名字"><a href="#名字" class="headerlink" title="名字"></a>名字</h2><p>好吧，来说前文的坑。也许你会奇怪，为什么直到「沙盒限制」用的还是「iKindle」这个名字？是不是打错了？没错，确实是叫 iKindle.</p>
<p>但是，<strong>苹果不允许在 App 名字中出现 Kindle 这个字样</strong>。于是，只能改名了。这真是个痛苦的过程。一方面，想出一个好名字并不容易，我纠结了 N 久（<a href="https://atjason.com/daily/2017-02-15.html">具体可见我的博客</a>），最终写了 <strong>Klib</strong> (<strong>K</strong>indle <strong>lib</strong>rary) 这个名字。</p>
<p>另一方面，所有的东西都是跟名字相关的，比如代码、App 名称、文案、截图、等等。一旦名字改了，所有这些都要改。这是极其繁琐的事，我再也不想做第 2 次。</p>
<p>比如 Logo，变成了下面的样子：</p>
<p><img src="https://ps.toolinbox.net/zyvsd.png" alt=""></p>
<h1 id="发布、推广"><a href="#发布、推广" class="headerlink" title="发布、推广"></a>发布、推广</h1><p>终于，在被拒了 2 次后，Klib 终于顽强上架 Mac App Store.</p>
<p>接下来的问题就是，<strong>怎么让更多人知道 Klib</strong>，也即，如何发布、推广？</p>
<h2 id="Product-Hunt"><a href="#Product-Hunt" class="headerlink" title="Product Hunt"></a>Product Hunt</h2><p>在这一环节，我最没有办法的，就是 <strong>如何在海外推广</strong>。毕竟咱们是中国人，很难打入敌人内部，更别说在外国产生影响力。</p>
<p>怎么办呢？我目前找到最直接有效的方法，就是在 Product Hunt 中有个成功的发布。这样国外的媒体也会在 Product Hunt 中找较好的产品进行报道。所以，<strong>Product Hunt 成了 Klib 走出国门、走向世界的关键</strong>。</p>
<p>Product Hunt 的发布有很多可说的，这里挑几点重要的来说：</p>
<ul>
<li><strong>发布时间</strong><ul>
<li>从星期几的角度，<strong>每周二是最合适的</strong>。因为周二 Product Hunt 的用户量最多，也有充足的时间进入 Product Hunt 的 Weekly Report. 不过，考虑到 Klib 是小众产品，不太可能进入当天的 Top 1. 根据「鸡头与凤尾」的逻辑，我选择美国的周一来发布。</li>
<li>从几点的角度，一种做法是在凌晨 00:00 发布，这样可以充分利用 24 小时进行传播；另一种做法是在早上的时间发布，因为这里媒体人、评测者刚刚起床，可以给他们更多爆光。考虑到我并没认识国外的媒体人，还是 00:00 发布吧。<strong>因为时区的原因，Product Hunt 会在北京时间下午 4 点切换昨天、与今天的产品列表。</strong></li>
</ul>
</li>
<li>名字、标语<ul>
<li>名字就是 Klib 了，重要的是标语。要简洁、要突出产品特色、要抓住用户眼球。</li>
</ul>
</li>
<li>截图<ul>
<li>如果有必要，可以制作动图，虽然我挺讨厌一旦有多个产品都使用动图，会让界面闪啊闪，显得很 Low；但没办法，这确实是能抓用户眼球。并且，Product Hunt 的 Twitter 账户也有专门转发动力的。</li>
<li>基本上，我把把 Mac App Store 的截图重用了。</li>
</ul>
</li>
<li><strong>发布后，立即在首条评论中添加更多信息</strong>。如产品的进一步介绍、未来的规划、联系方式、等等。</li>
<li>转发、扩散。也就是让更多的人点进来看，投票、讨论。尤其是大咖的转发会很有效。<strong>我最大的成绩是 Ben Tossell (Community Lead of Product Hunt) 参与了讨论</strong>。可惜，他并没有转发。<ul>
<li>不过，不要一味的拉票，Product Hunt 有自己的排名算法。</li>
</ul>
</li>
<li><strong>及时回复留言</strong> 。用户的留言，要立即回复（恩，晚上基本可以不睡了，盯着）。并且，可以将用户的回复转发到 Twitter 上，并表示感谢。</li>
</ul>
<p>最终，<a href="https://www.producthunt.com/posts/klib" target="_blank" rel="external">Klib 在 Product Hunt 上获取 200+ 点赞，10 几位国际用户参与讨论</a>，并 <strong>入选当日 Top 10</strong>，基本满意。</p>
<p><img src="https://ps.toolinbox.net/bhl6a.jpg" alt=""></p>
<h2 id="用户群"><a href="#用户群" class="headerlink" title="用户群"></a>用户群</h2><p>Mac App Store 上的好评、留言，自然是非常重要的。而 <strong>最有可能给你好评的，就是你之前产品的用户</strong>。我一开始没有经营自己的用户群，现在回想起来深觉可惜。好在，现在慢慢有了 <a href="https://toolinbox.net/html/iPic/iPicGroup.jpg" target="_blank" rel="external">微信群</a>、<a href="https://t.me/Toolinbox" target="_blank" rel="external">Telegram 群</a>，<strong>也有了一些非常友善的用户，感谢你们！</strong></p>
<h2 id="媒体"><a href="#媒体" class="headerlink" title="媒体"></a>媒体</h2><p>媒体的爆光自然必不可少，他们的影响力是个人无法比拟的。最好是：</p>
<ul>
<li>平时就与媒体朋友保持联系，不要临时抱佛脚；</li>
<li>上线前发体验版本，给他们预留时间准备文案；</li>
<li>上线时及时通知，方便他们安排发布时间；也可以提供兑换码，方便对方做活动。</li>
<li>发布后，也要帮忙转发，并表示感谢。</li>
</ul>
<h2 id="其他影响力"><a href="#其他影响力" class="headerlink" title="其他影响力"></a>其他影响力</h2><p>动用所有可以动用的影响力，让 Klib 触达更多的人。比如让朋友帮忙转发及好评，微博转发抽奖，朋友圈，等等。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="定价"><a href="#定价" class="headerlink" title="定价"></a>定价</h3><p>定价是门玄学，太高没人买、太低自己不划算。目前 <strong>Klib 采用的是免费 + 内购（一次性买断）的方式</strong>。免费是为了方便更多的人使用 Klib、降低门槛。虽然我很想继续尝试订阅模式，无奈用户对订阅始终接受程度不高，且 Klib 本身的属性也不太适合订阅模式，于是采取买断式。</p>
<p>趁这个机会，表达下个人观点：<strong>买断对开发者并不友好，订阅才符合实际</strong>。毕竟通常开发者需要对产品进行持续改进（这并不是说当初发布的产品有问题，而是产品本身有改进），却不能从改进中获得收益，这并不健康。伤害的最终可能还是用户自己的利益，因为开发者一旦坚持不下去而不更新，用户只能使用有待改进的版本。</p>
<p>定价目前是 ￥50，<strong>首发限时半价优惠</strong>，即￥25，入手即赚。</p>
<h3 id="首发的意义"><a href="#首发的意义" class="headerlink" title="首发的意义"></a>首发的意义</h3><p>目前，Klib 是 macOS 平台、首款上架 Mac App Store 的 Kindle 笔记管理工具。这种唯一性是很有意义的。因为没有直接竞品，甚至有一定的定价权。</p>
<p>对用户而言，首发更容易使产品在这一品类中形成定位，后来者要想抢走在用户心智中的定位，就不容易了。</p>
<h3 id="单日销量的意义"><a href="#单日销量的意义" class="headerlink" title="单日销量的意义"></a>单日销量的意义</h3><p>如果单日销量可以使 App 出现在排行榜的前面，会带来一些附加的流量，因为别的用户可能因为榜单的原因多看两眼。</p>
<p>首发第 2 天（第 1 天 App Store 更新太慢，没有数据），<strong>Klib 在中国区、Utilities 这一品类中，Free 排名 22、Grossing 排名 14</strong>，算是不错的成绩了。</p>
<p><img src="https://ps.toolinbox.net/qvhtr.jpg" alt=""></p>
<h1 id="之后"><a href="#之后" class="headerlink" title="之后"></a>之后</h1><p>目前，Klib 算是成功上架 Mac App Store，也收到了很多用户的反馈。接下来，我会继续改进 Klib，如增加多看支持、与 Amazon 中的笔记同步、与 Kindle 其他平台的笔记同步、导出至 Evernote、等等。当然，<strong>我会非常谨慎地加功能，保持 Klib 的精简。</strong></p>
<h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>真的有很多人需要感谢…</p>
<ul>
<li>感谢家人对我做独立开发者的支持（主要是接受不赚钱…）</li>
<li>感谢用户对我的信任</li>
<li>感谢朋友的帮助（比如 <a href="http://kmate.me" target="_blank" rel="external">Kindle Mate 作者</a> 提供多语言支持、<a href="https://dribbble.com/openallen" target="_blank" rel="external">Allen</a> 帮助制作 Logo、<a href="http://www.weibo.com/u/1734549517" target="_blank" rel="external">61</a> 帮忙搞定微博短链）</li>
<li>感谢媒体的报道（点名最先报道的 <a href="http://sspai.com/37581" target="_blank" rel="external">少数派</a>）</li>
<li>感谢所有点赞与批评的朋友</li>
<li>感谢苹果（虽然 MAS 有坑）</li>
<li>感谢 Kindle</li>
<li>当然，感谢 CCTV</li>
</ul>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><strong>希望 Klib 能让大家多读点书、记点笔记</strong>，哪怕只是一点点改变，也是 Klib 的莫大荣幸。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0220 - Klib 正式上架 Mac App Store]]></title>
      <url>https://atjason.com/daily/2017-02-20.html</url>
      <content type="html"><![CDATA[<p><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_home" target="_blank" rel="external"><img src="https://ps.toolinbox.net/zyvsd.png" alt=""></a></p>
<p>历时 50 天、横跨 2 年，Klib 终于上架 Mac App Store!</p>
<p>最初，只是想做一个自己用的小工具。</p>
<p>后来，发现有点意思，就想做的好一点。</p>
<p>慢慢，有一些朋友说，他们也需要类似的工具。</p>
<p>最后，有了现在的 Klib，全新的 Kindle 笔记管理工具。</p>
<p>期间各种不易：孱弱的 Kindle 笔记格式、繁复的多语言、给 App 起名的各种纠结、不得不放弃的「iKindle」…</p>
<p>不管怎样，都过去了，Klib 诞生了。在少数派上被推荐后，收到了很多朋友的好评，比如：</p>
<blockquote>
<p>初体验惊了，这就是我想要的书摘管理工具啊。简单好用易上手，不需要任何提示指南，两栏的界面设计，简洁清晰，一目了然。复制为markdown功能很棒，也喜欢空格键的快速查看功能，点击一下空格键，然后通过上下键便可回顾完一本书的摘录…</p>
</blockquote>
<p>感觉挺满足的。</p>
<p>继续推荐给更多需要 Klib 的人，继续改进 Klib…</p>
<p><a href="https://itunes.apple.com/cn/app/id1196268448?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_home" target="_blank" rel="external"><img src="https://ps.toolinbox.net/evqdg.jpg" alt="Mac App Store"></a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0219 - 拿起 Klib、放下书]]></title>
      <url>https://atjason.com/daily/2017-02-19.html</url>
      <content type="html"><![CDATA[<p>年前在图书馆借的书，今天去还，发现好几本都没看。哎，这段时间都在忙 Kindle 的书摘管理工具，自己却没看太多书，真是讽刺啊。</p>
<hr>
<p>多看的支持算是准完美支持了，经过了 2 个用户的真实验证，均没有问题。两位用户都表示了：有了 Klib，以后会多多做标注、笔记了。</p>
<p>恩，这就是我最想要的结果：<strong>Klib，让你阅读更多</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0218 - Klib 基本支持多看系统]]></title>
      <url>https://atjason.com/daily/2017-02-18.html</url>
      <content type="html"><![CDATA[<p>接连有朋友表示希望 <strong>Klib 支持多看</strong> 系统，那就搞呗。</p>
<p>研究了一下，多看使用的是 XML 格式的数据，比 Kindle 原生的 txt 格式强太多了。而且不需要考虑多语言的问题，做起来也简单很多。</p>
<p>不过，也不是没有问题。比如多看处理笔记的位置和 Kindle 并不一致，使用的是章节 + 偏移的方式，Kindle 使用的类似于绝对位置。而现在 Klib 的数据结构中并没有很完善地处理不同类型的位置；因为位置最重要的作用是在原书中打开，而 Klib 并不打算支持阅读，也就不太需要这个功能。唯一的需求就是按位置排序。在这个前提下，大致知道相对位置就可以了。</p>
<p>经过几个小时的努力，Klib 已基本支持多看系统，还剩一点自动导入机制的完善，以及单元测试、测试用例，明天收尾吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0217 - 继续优化 Klib]]></title>
      <url>https://atjason.com/daily/2017-02-17.html</url>
      <content type="html"><![CDATA[<p>今天主要在 2 方面优化 Klib.</p>
<p><strong>本地化支持</strong></p>
<p>利益于 <a href="http://kmate.me/" target="_blank" rel="external">Kindle Mate</a> 作者提供的真实的、奇怪的用户笔记文件（再次感谢！），Klib 增加了对真实用户的支持。其实也没太多说的，就是一条条记录去匹配。技术难度不太大，但比较烦琐。</p>
<p><strong>优化导入速度</strong></p>
<p>优化后的成绩是：导入 1 万条笔记的文本，用时在 10s 内。对绝大多数用户来说，足够了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0216 - iKindle > Klib]]></title>
      <url>https://atjason.com/daily/2017-02-16.html</url>
      <content type="html"><![CDATA[<p>今天真是丰富的一天。</p>
<p>在经历无数纠结后，终于给 iKindle 起了个新名字：<strong>Klib</strong> (<strong>K</strong>indle <strong>lib</strong>rary). 别跟我说不好听、不好念、不好记，这是我能想到的最好的了。就算不好，也就当起个贱名娃好养吧，任性一把。</p>
<p>给 App 换名真是个极其痛苦的过程，各种东西都要换，比昨天日记里提到的内容还要多。以后再也不想做类似的事了。</p>
<p>Anyway, Klib 终于还是提交了，希望苹果大爷这次给面，顺利通过。我这也是为广大 Kindle 用户谋福利啊。</p>
<p>期间，Kindle Mate 作者给了我很多帮助，还提供了训练识别的 Clippings 文件，非常感谢！1Mhz 君也帮忙给 Klib 起名字（虽然是怕我抢他的名字，哈哈），也一并感谢。</p>
<hr>
<p>另一件事，就是 <a href="https://www.zhihu.com/question/55891041" target="_blank" rel="external">61 爆出了微博替换 iTunes 推广链接中的识别码的事</a>，具体的事我就不在这转述了，大家自己跳过去看。除了围观，才知道原来还有 iTunes 推广分成这事，大家感兴趣 <a href="https://itunes-signup.performancehorizon.com/signup/zh_cn/itunes" target="_blank" rel="external">可以去了解下</a>，我是准备给自己的 App 加尾巴啦~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0215 - 纪念 iKindle 君]]></title>
      <url>https://atjason.com/daily/2017-02-15.html</url>
      <content type="html"><![CDATA[<p>因为苹果大爷不允许 App 名称中包含 <code>Kindle</code>，接连被拒 2 次后，终于要放弃 <code>iKindle</code> 这个名字。</p>
<p>别了，iKindle 君…</p>
<p>换名字真是个麻烦的事：</p>
<ul>
<li>项目名称</li>
<li>Logo</li>
<li>App 名称</li>
<li>截图</li>
<li>描述</li>
<li>官网</li>
<li>媒体资源</li>
</ul>
<p>并且，之前使用 iKindle 埋下的伏笔（如使用 iKindle 发的帖子），也全都作废。 哎，真是伤心。</p>
<p>关键是，新名字想不好呀。自己想了半天，也邀请了 iPic 的用户来讨论，有好多候选：iNotes, iKnow, iClip, iClippings, Kinote, iKan, KWords, indle, IDU, iKeys, imazon, EssayNote, iki, kin it, ikendle, iMemo…</p>
<p>最后比较倾向的是 Kinote，可一方面这是生造词、犯忌讳；另一方面，这和 1Mhz 群的 Knotes 很像，毕竟是同类产品，这样太不好了。哎，纠结的要死，都要精神分裂了。</p>
<p>本来打算今晚重新提交了，因为名字的问题，只能搁置了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0214 - iKindle 发布预热]]></title>
      <url>https://atjason.com/daily/2017-02-14.html</url>
      <content type="html"><![CDATA[<p>今天花了一天时间来准备 iKindle 发布，如联系媒体朋友、准备 Product Hunt 文案、开启豆瓣小组、学习微博抽奖转发、等等。</p>
<p>自己做的东西，马上要出去见人了，很是期待；希望大家能喜欢。</p>
<p>最重要的，希望苹果大叔明天能顺利审核通过，拜托了！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0213 - 深耕存量用户]]></title>
      <url>https://atjason.com/daily/2017-02-13.html</url>
      <content type="html"><![CDATA[<p><strong>流量红利消失的年代，还是得深耕存量用户</strong>。</p>
<p>这不，iKindle 马上要发布了，到哪找用户呢？我准备向 iPic 用户介绍 iKindle，看是否有重叠用户。毕竟都是用 Mac、对我个人可能有一定的认可、偏好精简的应用、等等，有了这些标签，需要 iKindle 的可能性还是有的，总比在马路边找用户要强吧。</p>
<p>当然，这只是「用」存量用户，还是「养」；说白了，就是伺候好现在的用户。比如，快速响应用户的问题，尽量满足用户的需求，平时多通过群等方式来联络感情，等等。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0212 - 不确定的才是问题]]></title>
      <url>https://atjason.com/daily/2017-02-12.html</url>
      <content type="html"><![CDATA[<p>确定的问题，并不是问题，因为我们知道该怎么解决它。</p>
<p><strong>不确定的问题，才是问题</strong>，因为我们不知道该怎么解决它。</p>
<p>不过，确定与不确定，是会变化的。比如，作为程序员，我们碰到技术问题，通常还是比较自信的，相信通过努力总能解决问题。可是，对于怎么增加新用户、怎么把留存提高一倍、怎么让交互更舒适、让配色更好看、等等，这样的运营、设计问题，我们就比较头大。为什么呢？说白了，<strong>还是因为不擅长、不会而已</strong>。</p>
<p>这又涉及到学习的一种阐述：<strong>从舒适区走出来，进入学习区</strong>。如果我们总是感到很自信、舒服，很抱歉，那是因为我们总让自己呆在舒适区中。而在这个区域内，我们只是一遍遍重复自己已经会的、擅长的事，并不能让我们有所精进。</p>
<p>今天花了一天的时间研究了 Product Hunt 发布（还没完），顺便搭建了 <a href="https://telegram.me/toolinbox" target="_blank" rel="external">Telegram 的 Toolinbox 用户群</a>，都是自己之前不擅长的。虽然不舒服，但我知道，这是对的。</p>
<p>今天的最末，发现 Toolinbox 的英文站点的配图竟然有多处错误，而且是非常严重的错误！无法接受的错误！太失败了。i 系列的产品已经多起来了，更容易犯这样的错误。要稳一点，做好、而不是做多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0211 - 中国独立开发者首次面基]]></title>
      <url>https://atjason.com/daily/2017-02-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/dpfoh.JPG" alt=""></p>
<p>今天，杭州的几位独立开发小伙伴，一起聚了下；发现，大家都是伪独立啊 :(</p>
<p>比较遗憾的是，可能大家还不太熟悉的缘故，相互介绍、认识的时间比较多，深度碰撞了少了点。不过，还是感觉挺好的，了解了大家的背景、经历、做过的产品、踩过的坑，还是挺有启发的。比如国外推广的难，苹果编辑推荐的玄，用户留存的痛，等等。</p>
<p>感觉还是要丰富自己，多些点子、经验，这样才有拿得出手的东西、大家才愿意与自己交流。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0210 - iKindle 已提交 Mac App Store]]></title>
      <url>https://atjason.com/daily/2017-02-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ikhtm.jpg" alt=""></p>
<p>在脖痛、眼花、大半夜的时候，iKindle 终于提交 Mac App Store，期待顺利审核。</p>
<p><strong>iKindle，重塑 Kindle 笔记管理</strong></p>
<p>感兴趣，欢迎 <a href="https://toolinbox.net/html/iKindle/DownloadiKindle.html" target="_blank" rel="external">抢先体验</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0209 - 放松与坚持，只在一念间]]></title>
      <url>https://atjason.com/daily/2017-02-09.html</url>
      <content type="html"><![CDATA[<p>想要有大块的时间好好干活，真是不容易。有太多的理由可以放松、放弃。很多时候，做与不做，只要那一遍的一念之差。</p>
<p>此念为：24 小时内提交 iKindle、2 月 15 日发布。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0208 - 晚上想不起来白天做了什么]]></title>
      <url>https://atjason.com/daily/2017-02-08.html</url>
      <content type="html"><![CDATA[<p>最近总是有这样的情况：晚上写日记、回想今天做了什么时，发现都想不起来了…</p>
<p>哭…</p>
<p>老了？记忆力减退？真是吓人啊。</p>
<p>找个理由：今天虽然还是开发 iKindle，但并没有一个明确的主题，都是在完成之前整理的琐碎的事，以至于在回顾时，无法梳理出一个明确的印象。</p>
<p>好吧，既然老、记忆力减退是无法逃避的现状，那就接受吧。比如，完善规划、记录，使用 Focus 的回顾功能，帮助强化对现状的认识，在计划一步做什么时不至于迷失。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0207 - 将个体价值，叠加为群体价值]]></title>
      <url>https://atjason.com/daily/2017-02-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/7b3b3.jpg" alt=""></p>
<p>最近 61 发布的 <a href="https://itunes.apple.com/cn/app/price-tag-ba-ni-xiang-yao/id1166819590?mt=8" target="_blank" rel="external">Price Tag</a> 挺火的，我觉得他的产品思路挺巧的。</p>
<p>Price Tag 最直接的用法是：查询一个 App 的历史价格，更进一步是收到 App 的降价通知。这些都是个体价值。</p>
<p>然而，当用的人多了，就会「涌现」出群体价值。比如，将所有用户的查询聚集在一起，就可以找出大家最近热搜的 Top X 的 App，这就让这个 App 更好玩、有更多的想象空间。</p>
<p>并且，拥有群体价值的 App，本身是正向循环：<strong>用的人越多越有价值、越有价值用的人越多</strong>。这是让人非常羡慕的特性、<strong>不死基因</strong>。</p>
<p>这也启发了我做产品的思路。</p>
<p>比如，<strong>iKindle 目前的定位是个人 Kindle 笔记管理</strong>，在个人这个领域可以扩展到个人所有阅读的笔记中心，但这依然是个人价值的范畴。</p>
<p>如果朝群体价值的方向思考，比如将同一本书不同人的笔记堆叠在一起、列出最新被标注最多的热门书籍、等等，这样的玩法就更有趣。当然，目前已经在产品做了类似的事情，比如 Kindle 本身会列出热门标注、微信阅读、豆瓣阅读、等等。</p>
<p>最后简单引申下「<strong>涌现</strong>」这个概念。</p>
<p>凯文·凯利 在他的书中多次介绍过这个概念。比如烧开水，单个水泡并不意味着什么，但当大量水泡出现时，就「涌现」出「水开了」这个新的概念、状态。<strong>水泡与水开，就是个人价值与群体价值的生动体现</strong>。群体价值虽是个人用户贡献的，又是每个用户自己无法产生的。</p>
<p>PS: 难道这就是互联网思维？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0206 - 大数据、小需求]]></title>
      <url>https://atjason.com/daily/2017-02-06.html</url>
      <content type="html"><![CDATA[<p>大数据号称可以得到全量数据，那就有可能得到所有用户的所有需求。</p>
<p>进而，随着产品的极大丰富，就有可能有足够多的产品，来满足每位用户的、每个需求。届时，也就 <strong>没有所谓的小众需求，需求间人人平等</strong>。</p>
<p>即使这一天不会到来，我相信也是在朝着这个方向发展。而我，继续 <strong>深耕小众市场</strong>，连接这一趋势（好假）</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0205 - 对信息的筛选将成为权力]]></title>
      <url>https://atjason.com/daily/2017-02-05.html</url>
      <content type="html"><![CDATA[<p>随着互联网技术的深入，信息将越来越多、越来越公开、越来越容易获取。<strong>我们从未经历信息如此充沛的时代，我们也尚未适应信息如此充沛的时代。</strong></p>
<p>一个不适应的表现：<strong>我们已经很难从信息中得到自己需要的结论。</strong></p>
<p>比如，你想知道小米手机好不好，怎么办呢？你可以去微博上搜索，会有无数正面的评价，也有无数死全家的评论，到底如何呢？</p>
<p>这至少说明：<strong>我们很难得到全量信息，以分辨出倾向。</strong></p>
<p>比如，你这两天看 CCTV 新闻，会发现有很多美国民众流行示威、反对新晋总统特朗普的「穆斯林入境禁令」之类的报道，不禁会觉得奇怪：难道这届美国政府是能力很强的傻子吗？为什么这么多人反对，还要、还能通过这样的法案。<br>不过，稍微有些思辩能力，你就会想到：不会呀，如果真的是绝大多数人都反对，应该不会通过才对呀？哪些人支持呢、他们是什么态度？很可惜，这样的声音，你无法在 CCTV 听到。</p>
<p>这至少说明：<strong>我们能接受的信息总量是有限的。一旦被某种声音填充，将很难再接受其他信息。</strong></p>
<p>在这样的情况下：</p>
<ul>
<li><strong>谁能筛选出有效信息、为自己所用，将是种能力。</strong></li>
<li><strong>谁能筛选出信息、让别人接受，将是种能力，更是种权力。</strong></li>
</ul>
<p>有哪些好消息呢？<br>技术的进步会改善信息的筛选。比如，如果超级计算机能在 1 秒内分析所有信息、考虑权重、并得出客观的结论，像某 TV 这种春秋笔法式的倾向性报道，将很难有市场。</p>
<p>不过，当所有人拥有相同或相近的技术时，最终的信息走向还是利益博弈的结果、权力的象征。当然，这是句正确的废话。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0204 - 敢于闲下来]]></title>
      <url>https://atjason.com/daily/2017-02-04.html</url>
      <content type="html"><![CDATA[<p><strong>我们都是「闲」不下来的人。</strong></p>
<p><strong>一有时间，忍不住拿出手机，刷刷朋友圈、看看新闻，再加上各种 App、游戏，根本停不下来，永远很忙的样子。</strong><br>有些公司，固定时间让大家加班，保持很忙的状态。可是，<strong>大家在加班时间各种打发时间</strong>，何必呢？</p>
<p>而事实上，<strong>我们并不是真的忙；只是一旦停下来，就会莫名的恐慌</strong>。只是<strong>为了排除内心的孤独、不安、缺少安全感，我们才让手机来麻痹我们、遮掩真相。</strong></p>
<hr>
<p><strong>闲，不是放纵，而是胸有成竹下的放松。</strong></p>
<p><strong>闲，不是什么都不做，而是心态平和的做。</strong></p>
<p>不论读书看报、养花种草，还是锻炼健身、旅游度假，甚至是有节奏的忙碌，都是一种闲，<strong>气定神闲的闲</strong>。</p>
<p><strong>你，闲的下来吗？</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0203 - 专注、高效]]></title>
      <url>https://atjason.com/daily/2017-02-03.html</url>
      <content type="html"><![CDATA[<p><strong>把产品做出来才是真的，其他都是假的。</strong></p>
<p>春节这几天有些放松，没有坚持每天写代码，即使写也是片断、轻松的代码，手变得生了。</p>
<p>今天开始做 iKindle 中较复杂的部分，首先需要对现有的代码进行重构，以适应新的功能。<strong>重构这样的事，需要对代码很熟悉、需要对新设计想的很透彻、需要大块的时间、需要持续的专注</strong>…而今天的自己，明显不在这样的状态。虽然有进展，但也只是时间堆出来的。</p>
<p>要把状态拉回来了，规律作息、适量运动，保持充沛的精力，高效战斗。</p>
<p>说到高效，<strong>如果自己无法集中注意力，就想办法让环境来帮忙</strong>。比如，在家里干活，难免受到各种干扰。下一步计划到外面找个场所办公了，比如还比较热门的联合办公。</p>
<p>不说了，明天搞定 iKindle 的搜索及关联功能，如支持多选书籍。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0202 - 用户视角、与开发者视角]]></title>
      <url>https://atjason.com/daily/2017-02-02.html</url>
      <content type="html"><![CDATA[<p>自己每天都在作为用户使用产品，也在作为开发者在设计产品，二者的感觉差别挺大的。不过，如果能互相借鉴的话，收获不小。</p>
<p>相比之下，<strong>作为用户，其实是挺惬意的</strong>：可以从众多产品中选择自己喜欢的、怎么舒服怎么用、不爽了还可以骂作者。而作为<strong>开发者</strong>就要苦逼很多了，<strong>要照顾产品的方方面面</strong>：需求、设计、开发、测试、运营…</p>
<p>说下今天作为用户的一点体验吧。</p>
<p><strong>需求</strong>：我目前使用 <strong>Omni Focus</strong> 管理产品的开发，一个产品为一个 Project，其中记录了产品所有要做的事。而在做下个版本时，我需要从中挑选中需要做的事。</p>
<p><strong>方案</strong>：经过尝试，我发现搜索虽然只是一个普通的搜索框，但还是很强大的。可以把版本号加在任务的备注、Context 等任意区域，都可以搜索出来。最后选择的方案是：</p>
<p><img src="https://ps.toolinbox.net/xvc0s.png" alt=""></p>
<ul>
<li>树状、系统性整理一个产品所有要做的事</li>
<li>当需要进行下个版本开发时，以版本号创建 Context，这样<ul>
<li>在 Context 页面可以当前版本所有要做的事</li>
<li>不过，我还是偏好在 Project 中通过搜索版本号来查看，这样保留了父节点关系</li>
<li>重要的事，使用星标标出，方便一眼看到重点</li>
</ul>
</li>
<li>如果某个功能推迟到下个版本，将 Context 标记为 Next、或者对应的版本号，方便下一步的工作安排</li>
</ul>
<p>抽象来说，作为用户，我希望的产品形态是：</p>
<ul>
<li><strong>越简单越好</strong>；<strong>尤其是一上来不要给我 N 多东西</strong>，抱歉我适应不了</li>
<li><strong>当需要某个功能时，最好它就在那里</strong>；退一步，我找一找就能找到它</li>
</ul>
<p>根据同理心，大部分人对产品的需求和我也差不多，这样的抽象思想对于设计产品时是很有帮助的。比如，如何取舍功能、如何隐藏复杂性、是否要提供选项，等等。</p>
<p><strong>More is Less</strong></p>
<p>不要给用户太多。产品的设计者总是希望提供更多的配置、功能，希望以此来取悦不同的用户，但实际上会吓跑其他用户。</p>
<p>比如，用户 A 问：这个功能是什么意思？问的同时，他会怀疑自己的智商：为什么我不会用？但实际上，你可能是给用户 B 准备的。即使你告诉用户 A 他不需要，他依然会对自己的智商耿耿于怀，总之是不爽。</p>
<p><strong>一个小技巧</strong>：看一个 App 的复杂度，看的偏好设置有多长就知道了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0201 - 与其关注对手，不如做好自己]]></title>
      <url>https://atjason.com/daily/2017-02-01.html</url>
      <content type="html"><![CDATA[<p>今天遇到点情况，又想起之前朋友做的：你做的东西也不复杂，别人抄袭怎么办？</p>
<p>先说，谁会抄呢？</p>
<ul>
<li>大公司、小团队不会，因为他们看不上，赚的钱还不够塞牙缝</li>
<li>个人可能会抄，但抄了也不怕，如果连个人都干不过，那也就别干了。另外，凡事有成本的，如果做类似产品对他来讲成本高、收益低，他也不会做</li>
</ul>
<p><strong>真正阻止自己做出好产品的，只有自己。</strong></p>
<p>另外，之前博客中提过，要<strong>感谢对手</strong>。对手帮我们增加产品品类在用户认知中的地位，扩大市场、教育用户，启发思路…不过，竞争对手并不能直接帮我们做好产品，不要在其身上花过多的时间，也无需计较对方是否抄袭。<strong>只要加深自己对产品的理解，不断改进，自然立于不败之地。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0131 - WePlay: 从入门到放弃]]></title>
      <url>https://atjason.com/daily/2017-01-31.html</url>
      <content type="html"><![CDATA[<p>今天有个想法：2个、甚至多个手机同时播放同一首歌。</p>
<p>其实想法早就有了，只是没具体研究。自己试了下，使用 2 个 iPhone 放歌，将手机放到两个耳朵边，效果还是挺好的。比如在聚会时，大家的手机都同时放一首歌，效果肯定不错，也挺好玩的。</p>
<p>于是，自己简单构思了流程，就可以做技术可行性研究了。因为是 iOS 开发、自己还不会，就临时学习。还好，这对于研究某个具体的技术点，也够了。</p>
<p>期间，也做了个自己使用的版本。在不考虑易用性等方面，够强可用。</p>
<p>不过，最终还是暂时搁置了。一方面是应用场景确实少；另一方面，也是更重要的，缺少必要的接口。具体的，由于沙盒机制等限制，一个 App 无法控制第三方 App 的音频播放，而这一点是实现 WePlay 不可绕过的点；除非自己实现播放器，而这并不是我愿意做的方式。</p>
<p>虽说没能实现这个点，但也算是锻炼的想法，一下午都挺兴奋的，还被逼着写了平生第一个 iOS App，也是不错的。继续保持想法、试验的节奏，总会找到心仪的美好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0130 - 美好的力量]]></title>
      <url>https://atjason.com/daily/2017-01-30.html</url>
      <content type="html"><![CDATA[<p><strong>美好是这样一种存在：一旦习惯了，就再也回不去了。</strong></p>
<p>对美好的向往，是种力量。</p>
<hr>
<p>打车打到一辆新的、20 多万的中级车，空间大、全家人坐进去很轻松，立马有了买辆车的冲动；而冲动，又变成努力的鸡血。</p>
<p>逛高档商场、摩挲设计精良的商品、畅想自在生活、亲手打造自己的工作台、组建私人影院、去新西兰呆一个月…这些美好的刺激，也能激发前进的内在动力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0129 - 共享已安装 App 列表]]></title>
      <url>https://atjason.com/daily/2017-01-29.html</url>
      <content type="html"><![CDATA[<p>今天有个粗糙的点子，大致列出来记着。</p>
<p><strong>是什么？</strong></p>
<ul>
<li>每个人提供自己使用的 App 列表</li>
<li>每个人可以看到各 App 的累计使用量</li>
</ul>
<p><strong>有什么用？</strong></p>
<ul>
<li>用脚投票，找到热门、好用的 App</li>
<li>社交属性：从 App 这个角度，找到与自己兴趣相投的朋友</li>
</ul>
<p><strong>问题</strong></p>
<ul>
<li>大家没有上传自己信息的动机</li>
<li>冷启动不容易，一开始就需要大量的数据，不然结果参考意义不大。不过，反过来看，能随着时间生长的模式，会随着时间的推移而越来越有价值</li>
<li>只统计安装量，未统计使用频率</li>
</ul>
<p><strong>其他</strong></p>
<ul>
<li>增加分享动机，比如你安装的 App 价值几何</li>
<li>iOS 有类似截图算命的 App，就是通过安装的 App 进行性格分析</li>
<li>App 分发渠道应该会有更全的数据，但他们没有共享的动机；或者说，不会公布很细致的数据。另外，macOS 中有很多未在 App Store 上架的 App</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0128 - 不敢做重要的事]]></title>
      <url>https://atjason.com/daily/2017-01-28.html</url>
      <content type="html"><![CDATA[<p>今天在学习 DevMate 这个开发工具，入门还好，可用着用着，发现是个挺大、挺麻烦的系统，就有些着急。再加上今天是大年初一，也没有大块的时间、不够专注，确实不太适合深度学习。于是，在焦虑与放松中，几个小时过去了，不但没学习，反而更有些焦虑。</p>
<p>好像我一直有这个毛病：碰到重要的、复杂的、需要大块时间做的事，我会下意识的逃避、拖延，借口无非是眼下状态不好、没有大块时间、等以后合适了再好好搞定。但实际上，通常并没有所有的合适的时机，而当初那个重要的事，不是被草草搞定，就是干脆一直搁置。</p>
<p>咬咬牙，既然开启了这个事，就一定要在未来 2 天内完成 DevMate 的学习。同时，对于零散的时间，用看书来填缝。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0127 - 猴年最后一天]]></title>
      <url>https://atjason.com/daily/2017-01-27.html</url>
      <content type="html"><![CDATA[<p>亲亲小猴子，睡觉…</p>
<p>PS：今天我也写代码了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0126 - 播客的软肋]]></title>
      <url>https://atjason.com/daily/2017-01-26.html</url>
      <content type="html"><![CDATA[<p>播客及至音频节点的软肋：信息密度低、不能快进。</p>
<p>如果在高效时间听，浪费时间；<br>如果在低效时间听，很难有大的收获。</p>
<p>比如，听到一个知识点，要扩展了解，就需要先记录，然后有时间后再搜索。但如果是在低效时间（比如运动、打扫卫生、洗衣服时），是不方便记录或扩展研究的。</p>
<p>当然，还是有些办法规避这些缺点。比如在播客介绍中列出本集重点、相关链接、等等，虽不然完全解决，但还是能明显发送的。</p>
<p>恩，播客还是挺有意义的，毕竟总是有很多低效、又无法阅读的时间需要填充。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0125 - iKindle 再思考]]></title>
      <url>https://atjason.com/daily/2017-01-25.html</url>
      <content type="html"><![CDATA[<p>今天 iKindle 公开体验，收获了首批种子用户，初步反馈还是可以的。</p>
<p>接下来，就有两个可能的方向：</p>
<ol>
<li>继续维持原来的方向：专注于 Kindle 设备的笔记管理。<ul>
<li>优点是，因为专注，可以做的更便捷、高效。</li>
<li>缺点是，这注定是一个无比小、无比细分的领域。说的直白一些，几乎无法带来什么收入，几乎是个纯情怀产品。</li>
</ul>
</li>
<li>扩大 iKindle 的应用领域<ul>
<li>比如，支持多看、微信阅读等更多格式笔记，成为用户统一的阅读笔记中心。</li>
<li>这会大大增加产品的复杂度，不仅是需求与交互上的，还是技术上的。</li>
</ul>
</li>
</ol>
<p>目前来看，还是坚持原来的方向，先做好 Kindle 本身的优化，再考虑可能的扩展；情怀就情怀吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0124 - iKindle: 用着很爽的 Kindle 笔记管理 App]]></title>
      <url>https://atjason.com/daily/2017-01-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ww1.sinaimg.cn/large/006tNc79gy1fc263fisr7j3074074aaq.jpg" alt=""></p>
<h1 id="iKindle-是什么？"><a href="#iKindle-是什么？" class="headerlink" title="iKindle 是什么？"></a>iKindle 是什么？</h1><p>iKindle 是管理 Kindle 中标注、笔记的工具，macOS 平台。</p>
<p>俗话说，「不动笔墨不读书」；在 Kindle 上看书时，也会积累很多笔记。如果任由这些笔记流失、或蒙灰，实在是太浪费精华了。怎么办呢？试试 iKindle 吧。</p>
<h1 id="管理，从导入开始"><a href="#管理，从导入开始" class="headerlink" title="管理，从导入开始"></a>管理，从导入开始</h1><p>将你的 Kindle 连接到 Mac 电脑上，选择 Kindle 目录，「开始导入」即可一键导入。</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fc25fp18s7j30t20ihaam.jpg" alt=""></p>
<h1 id="原生交互，未打开、已熟练"><a href="#原生交互，未打开、已熟练" class="headerlink" title="原生交互，未打开、已熟练"></a>原生交互，未打开、已熟练</h1><p>考虑了好几版交互，最后参考了系统原生应用「提醒事项」。非常契合 Kindle 笔记管理，也方便大家快速上手、避免学习新交互所浪费的时间。</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fc25g2bp8tj30t80ij0uy.jpg" alt=""></p>
<a id="more"></a>
<h1 id="体验在细节"><a href="#体验在细节" class="headerlink" title="体验在细节"></a>体验在细节</h1><p>仅仅实现功能，怎能让人满意？更贴心的在细节。</p>
<h2 id="专注于当前正在阅读的书籍"><a href="#专注于当前正在阅读的书籍" class="headerlink" title="专注于当前正在阅读的书籍"></a>专注于当前正在阅读的书籍</h2><p>爱读书的朋友，已读列表会越来越长。如果将所有书混在一个列表中，会失去专注。</p>
<p><img src="https://ww4.sinaimg.cn/large/006tNc79gy1fc25m8tum7j30t80ijtat.jpg" alt=""></p>
<p>将已读书籍放在专门的列表中、并折叠隐藏，一个小小的细节，重新找回注意力。</p>
<h2 id="一条条回顾笔记"><a href="#一条条回顾笔记" class="headerlink" title="一条条回顾笔记"></a>一条条回顾笔记</h2><p>按下空格键，即可以快速查看当前笔记，给你熟悉的感觉。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tNc79gy1fc25mkg5cgj30t80ij3zy.jpg" alt=""></p>
<p>一条条地回顾笔记，帮你深刻掌握读过的书籍。</p>
<h2 id="以-Markdown-格式复制笔记"><a href="#以-Markdown-格式复制笔记" class="headerlink" title="以 Markdown 格式复制笔记"></a>以 Markdown 格式复制笔记</h2><p>好东西要分享；以 Markdown 格式复制笔记，之后可以方便输出至博客等文章中。</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fc25mre5ojj30t80ijdi3.jpg" alt=""></p>
<p>其实，开发 iKindle 的动机，就是我在读完一本书后，会在博客中写读后感，而在 Kindle 中的标注则是其中重要的部分。于是，就需要一个工具，快速以 Markdown 的格式将笔记复制出来；这就是 iKindle 的由来。</p>
<h2 id="全屏，带来酷爽体验"><a href="#全屏，带来酷爽体验" class="headerlink" title="全屏，带来酷爽体验"></a>全屏，带来酷爽体验</h2><p>这感觉难以描述。</p>
<p>尤其是当你有很多书、书中有很多笔记时，全屏下查看笔记的舒爽，只待你自己体验。</p>
<h2 id="键盘侠"><a href="#键盘侠" class="headerlink" title="键盘侠"></a>键盘侠</h2><p>效率工具，自然处处体验效率：</p>
<ul>
<li><code>空格键</code> 快速预览</li>
<li><code>Command + I</code> 查看简介</li>
<li><code>Tab</code> 在书和笔记列表间切换</li>
<li><code>方向键</code> 查看相邻的预览或简介</li>
<li><code>J</code> <code>K</code> 方向键，vimer，你懂的</li>
</ul>
<h1 id="马上体验"><a href="#马上体验" class="headerlink" title="马上体验"></a>马上体验</h1><p><a href="https://toolinbox.net/html/iKindle/DownloadiKindle.html" target="_blank" rel="external">下载 iKindle</a></p>
<p>目前，iKindle 还处于体验期，我会继续改进；如果你想要反馈或者吐槽，欢迎微信扫码入群：</p>
<p><img src="https://toolinbox.net/html/iPic/iPicGroup.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0123 - 帮助别人就是在帮自己]]></title>
      <url>https://atjason.com/daily/2017-01-23.html</url>
      <content type="html"><![CDATA[<p>最近使用了开源库 <a href="https://github.com/SwiftyBeaver/AES256CBC" target="_blank" rel="external">AES256CBC</a>，还是挺方便的：封装了最常使用的 AES 加密方式，还创造式了自定义 iv，值得称赞。</p>
<p>美中不足的是，这库还不成熟，在 macOS 和 Ubuntu 中均有闪退的情况。之前遇到闪退时，自己解决了问题；现在又遇到了闪退。</p>
<p>问题是，当初自己临时解决问题，并没有合并到 AES256CBC 的官方代码中。主要原因是怕花时间。毕竟自己随意改改，代码要求可以不高。但 <strong>要拿出手，就要拿得出手</strong>，这就要对问题深入理解、打磨代码。而在做项目期间，通常是没这个时间的。而等项目结束、有时间了，又懒得弄了。</p>
<p>当初的放松，导致现在的问题：自己相当于另建了一个分支，之后自己再修改，就要手动处理自己的分支和官方分支的合并情况，而这又增加了新的时间成本。</p>
<p>所以，如果当初稍微再花点时间，将自己的修改提交到官方主分支上，能：</p>
<ul>
<li>帮助改进官方库，帮助其他用户</li>
<li>逼迫自己对问题深入了解、打磨自己的代码</li>
<li>避免维持不同分支的麻烦</li>
<li>从这个层面提高自己的影响力</li>
</ul>
<p>看来，虽然花了点时间，但好处多多；恩，以后要多多向开源库提交自己的修改。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0122 - 对程序的敬畏之心]]></title>
      <url>https://atjason.com/daily/2017-01-22.html</url>
      <content type="html"><![CDATA[<p>相信很多开发者都是 <strong>面向 Google 编程</strong>：遇到问题，搜索解决方案；继续遇到问题，如此反复。</p>
<p>对于比较粗浅的问题，这样做确实是可以的。但对于更底层、更复杂的问题，就不是搜索能解决的了。需要的是耐心的研究，花时间研究。并且，要相信很多的问题的复杂度是超出目前自己的能力范围，或者说是时间允许的能力范围。</p>
<p>比如，对于你目前的产品，如果在线人数、业务量翻倍、10 倍、100 倍、乃至更多倍，你目前的程序设计还能支撑吗？你知道怎么解决吗？你觉得 Google 能帮你解决吗？</p>
<p>当然，这并不是说让大家都去研究底层，实用主义也挺好的。只是说，大家在用实用主义编程时，要对程序有敬畏之心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0122 - 应对无法掌控的事]]></title>
      <url>https://atjason.com/daily/2017-01-21.html</url>
      <content type="html"><![CDATA[<p>感觉，<strong>自己的焦虑多数来自于自己无法做的事，或者是自己无法掌控的事。</strong></p>
<p>坏消息是，大多数事自己都做不了、或无法掌控；<br>好消息是，这样的事，做一件、少一件。</p>
<p>虽无法掌控，但毕竟还是可以影响的。进一步，说是事，但其实还是做事的人。这样，问题就演化为如何驱动一个人朝着自己期望的方向做事？</p>
<p><strong>因势利导。</strong></p>
<p>不同的人，能驱动他的东西是不一样的，比如：</p>
<ul>
<li>权利。比如事业单位体系中的小职员，最能驱动他的就是领导的一句话，然后就是纪律、督查。</li>
<li>钱。这种没什么的好说的；如果觉得跟解决的问题相比，花的钱并不算多，那就用钱砸呗。</li>
<li>成就感、虚荣心。一个褒义、一个贬义，但实际的意思差不多的。比如对方就是助人为乐、乐善好施的主。</li>
</ul>
<p>说是能说很多，但其实我在这方面很不擅长，也并不想做这样的事，比如管理、驱动手做事。<strong>与其驱动一个人做事，不如找个不需要驱动的人合作。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0120 - 社交能力退化]]></title>
      <url>https://atjason.com/daily/2017-01-20.html</url>
      <content type="html"><![CDATA[<p>哎，发现都不怎么会跟人打交道了…</p>
<p>说白了，与人交流是种能力，就是需要锻炼的。做的多了，才能更熟练；少了，连保持都难啊。</p>
<p>赶快找人面基吧！</p>
<hr>
<p>下水管漏水了，不开心…<br>需要把时间花在项目以外的、自己不愿意花的地方，不开心…<br>搞定了 iKindle 解析格式能力的自动更新，开心…<br>宝宝手开始抓东西了，开心…</p>
<p>恩，生活就是这样吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0119 - 服务好存量用户]]></title>
      <url>https://atjason.com/daily/2017-01-19.html</url>
      <content type="html"><![CDATA[<h1 id="获取新用户，难"><a href="#获取新用户，难" class="headerlink" title="获取新用户，难"></a>获取新用户，难</h1><p>这一现象有很多的原因，比如，分散用户时间的产品太多了，将产品触达用户面前太难了，能在第一时间打动用户不容易，等等。</p>
<p>尤其是，人口红利的消失。之前，哪怕你的产品没有任何变化，每年新的手机、Mac 电脑用户，都有可能成为你的新用户。而现在，这些新用户的增加停止了，分到自己头上的红利自然也消失了。</p>
<h1 id="存量用户，值得珍惜"><a href="#存量用户，值得珍惜" class="headerlink" title="存量用户，值得珍惜"></a>存量用户，值得珍惜</h1><p>经过前面讲的层层困难，最终成为你的用户，已经是非常宝贵的。<strong>如果让这些已有用户流失，那实在是太可惜了。</strong></p>
<p>要服务好，可以有很多方面；比如，</p>
<ul>
<li>改进产品本身的体验；</li>
<li>增加与用户的直接沟通，让他们觉得自己使用的产品是有温度的、有故事的；</li>
<li>增加用户的参与感。<ul>
<li>比如用户提了新需求，新版本满足这一新需求后，及时通知用户。</li>
<li>注意，最好是一对一的沟通，这样更有效。虽然这样做成本很高，但得到的用户也更忠诚。</li>
</ul>
</li>
</ul>
<h1 id="不能做朋友的用户，放弃"><a href="#不能做朋友的用户，放弃" class="headerlink" title="不能做朋友的用户，放弃"></a>不能做朋友的用户，放弃</h1><p>比如，<strong>单纯因为价格而给差评的用户，我想说：请走开</strong>。说的难听点，他不值得拥有我辛苦做出的、好的产品；说的实在点，他的消费能力还没有上来（恩，就是没钱）。毕竟，明码标价、童叟无欺，如果这都要骂，那请移步奢侈品牌，够他骂个够。</p>
<p>其实，也并非单纯因为他们消费能力差而放弃，而是他们缺乏对他人的包容、理解、支持、尊重。<strong>与其把时间花在这样的人身上，不如服务好那些值得服务的用户。</strong></p>
<p>我相信，<strong>靠自己努力吃饭的手艺人，值得拥有体面的收入。</strong></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0118 - iKindle 要出来见人啦]]></title>
      <url>https://atjason.com/daily/2017-01-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/7dtfg.png" alt=""></p>
<p>历时 <strong>18 天</strong>、<strong>105.6 小时</strong>，iKindle 终于要出来见人啦！</p>
<p>其实，本来只是想随意整整，没想到做着做着觉得还挺有意思，就越来越想把这个小工具做好了。</p>
<p>为什么我知道 105.6 小时这么「精确」的时间？因为我有<strong>记录时间</strong>的习惯啦，这样就可以对自己在各个项目上投入的时间更清楚。<strong>对于自由职业者，时间就是最宝贵的资源</strong>，当然要好好把握了。</p>
<p>其实，以 iKindle 目前的规模，13 个工作日的开发时间确实长了些。换个角度看，真正在设计、开发 iKindle 本身业务的时间，可能只有一半的时间。更多的时间是在学习，比如 UI 开发、SQLite 使用、等等。这次开年的小项目，也算是为未来可能的<strong>「中程序」</strong>练练手。</p>
<p>最后，还比较满意这次设计的 Logo，虽然又是简陋的文字版，谁让咱就这水平呢，也算是和 i 家族的小工具们相响应吧…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0117 - 明确目标、有效行动]]></title>
      <url>https://atjason.com/daily/2017-01-17.html</url>
      <content type="html"><![CDATA[<p>都说浓缩是精华，那这句一定是精华中的精华：</p>
<p><strong>明确目标、有效行动</strong></p>
<p>不管是协作、还是竞争，不管是与人相处、还是自我提高，都离不开这句话。如果展开来说，就感觉像是拿沙子把珍珠盖住，反而淹没了重点。</p>
<p>另，感觉状态有「大小天」的切换：昨天效率还行，干到凌晨 2 点；结果，今天愣是上午 11 点才起床，今天的时间立马少了、变成「小天」了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0116 - UI 编程效率不高]]></title>
      <url>https://atjason.com/daily/2017-01-16.html</url>
      <content type="html"><![CDATA[<p>发现果然还是对界面开发不熟悉啊。今天在做 iKindle 开发时，在界面上花了很多时间。简单回顾了下，主要有以下几个方面。</p>
<h2 id="不熟悉控件的用法"><a href="#不熟悉控件的用法" class="headerlink" title="不熟悉控件的用法"></a>不熟悉控件的用法</h2><p>对比较直觉的用法，自然没有问题。但对于一些较隐晦，却就不知道了。全部看一遍文档，没时间；于是撸起袖子直接开始代码。</p>
<p>于是，要么很容易碰到不会的点、或者问题，然后搜索解决，比较花时间。要么就会有简单接口封装成系统已经支持的复杂接口，做了无用功。</p>
<p>等项目不紧了，慢下来，还是以项目为契机，<strong>完整地学习界面编程；相比于遇到问题、解决问题，整体会省时间</strong>。</p>
<h2 id="对多线程缺乏经验"><a href="#对多线程缺乏经验" class="headerlink" title="对多线程缺乏经验"></a>对多线程缺乏经验</h2><p>在后台编程中，多线程用的相对较少。而在界面开始中，多线程就相当之普遍了。</p>
<p>多线程的这两个点很容易引发问题：</p>
<ul>
<li><strong>数据一致性</strong>。即多个地方都有可能修改一个值，那到底值是什么呢？</li>
<li><strong>执行的先后顺序</strong>。这个是最要命的。<ul>
<li>不习惯多线程的人（比如我），很可能会想当然地理解为程序的执行顺序，即是代码的顺序。但实际上，看似一个简单的接口，也可能会因为多线程的原因推后执行。</li>
<li>而一旦代码的先后顺序错乱、或没有保证，就会有各种奇怪、难重现的问题，修改起来难、且花时间。</li>
</ul>
</li>
</ul>
<p>不过没事，等过了这一关，就不再对界面开发有心理阴影了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0115 - 感谢对手]]></title>
      <url>https://atjason.com/daily/2017-01-15.html</url>
      <content type="html"><![CDATA[<p>说是对手，但其实是与自己很相近的人；不然不会做类似的事、也不会成为对手。</p>
<p>对手在很多方面都是值得感谢的，比如：</p>
<ul>
<li><strong>产品思路</strong>。因为每个人的思路都受限于其经历、能力、认知习惯、等等，总是有局限的。而不同人的思路就可以很好的互补。对手的思路，则是最佳的互补对象。</li>
<li><strong>动力</strong>。突然听到对手融资、发布新版本、招到牛人、等等，是不是像打了鸡血一样，一下子动力爆棚？</li>
<li><strong>教育用户</strong>。<ul>
<li>对手可以帮助加深这个品类在用户认知中的地位；换句话说，在占用用户时间、心智这件事上，帮你打败其他品类的产品。</li>
<li>这比较难懂，举个例子，最近共享单车产品很多，这么多的单车所造就的新闻，会让更多潜在用户认识到这一品类的产品；进而，用户可能会考虑使用共享单车、而不是打车、公交等其他品类的产品。</li>
<li>用户在使用一个产品时，有可能会去找同类中更好的替代品。而如果你恰巧做的比较他们好，就相当于他们帮你拉来了这些用户，开心不？</li>
</ul>
</li>
</ul>
<p>为什么今天会说这个呢？<br>因为今天因为某个竞品，改进了自己的产品，😂</p>
<p>恩，感谢对手。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0114 - 注意力管理]]></title>
      <url>https://atjason.com/daily/2017-01-14.html</url>
      <content type="html"><![CDATA[<p><strong>为什么我们总是喜欢把时间花在无聊的事上？</strong></p>
<p>比如我，今天的大部分时间都花在了 iKindle 开发上；间隙时间（比如在马桶上），并不想去看一些费脑的东西（如长篇文章、英文、需要记忆或操作的内容、等等），而是更愿意看一些轻松的（如新闻、搞笑视频、朋友圈、等等）</p>
<p>当然，我也知道做这些事情，更像是在打发时间，对要做的事、对自己的提高没什么太大帮助。可为什么管不住自己呢？</p>
<p><strong>问题出在注意力上。</strong></p>
<p>我们的<strong>注意力</strong>是有限的，或者说，<strong>在有限时间内是会消耗殆尽的</strong>。当缺少注意力时，我们就不愿意再做些费脑的事了。</p>
<p>那怎么办呢？就是要<strong>管理注意力</strong>。</p>
<p>比如，注意力有个特性：<strong>可以较快恢复</strong>。对此的应用是，把大块的任务尽量分成适当的小块，每做完小块任务后，放松一下；连续做了几块任务后，彻底放松下。有没有听起来很熟悉？没错，这就是<strong>番茄工作法</strong>的原理。</p>
<p>另外一个就是：<strong>在注意力集中时，做需要注意力集中的、比较复杂的事</strong>。要做到这一点，又和任务管理联系起来了。因为，<strong>只有任务管理的好，才可能在注意力不集中时，很快地找到不太需要集中注意力就能做的事</strong>。这是目前自己做的还不好的地方。可以利用 OmniFocus 的场景功能来标注此类任务。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0113 - 保持创意]]></title>
      <url>https://atjason.com/daily/2017-01-13.html</url>
      <content type="html"><![CDATA[<p>除了 iKindle 开发，今天最大的收获来自这篇 <a href="http://sspai.com/36909" target="_blank" rel="external">对「极光词典」作者的采访</a></p>
<h1 id="保持创意"><a href="#保持创意" class="headerlink" title="保持创意"></a>保持创意</h1><blockquote>
<p>我的 Reminders 中有一个「创意」列表。每当我有一个新需求，或想到一个新创意，我就会在这个列表中创建一条新 todo 并记录下来。</p>
<p>记录下来后，或有空闲时间时，我会通过 Google 和 App Store 寻找现成的解决方案。如果有并且能做的很好，我可能就会使用那款产品，并把创意 todo 标记为完成。如果没有，我则会考虑自己来实现。</p>
</blockquote>
<p>恩，这个方法好，立马在自己的 OmniFocus 中加个「创意」清单。</p>
<h1 id="当创意不那么新"><a href="#当创意不那么新" class="headerlink" title="当创意不那么新"></a>当创意不那么新</h1><p>另一个重要的收获来自微博上这篇报道的评论：</p>
<blockquote>
<p>所以这个事情只说明一个道理：不要因为市场上已经存在了什么，就不去做了~也不要总想着做点别人没有想到的~</p>
</blockquote>
<p>确实是这样。比如，在作者开始做词典时，市场上已经有大量的词典 App，还要做吗？作者如是说：</p>
<blockquote>
<p>我理想中的词典应用的使用流程很简单：1. 输入词句；2. 查看释义；3. 查下一个（如果有）。但是，市面上的词典应用被我用了个遍后，我就发现，能把这个流程做到流畅的几乎没有，仅有的一两个又没有足够美观的界面。于是我就为我自己打造了极光词典。</p>
</blockquote>
<p>所以，创意新不新不是最重要的；重要是，自己对产品有没有更深的理解，是否能通过自己的打磨把产品做到极致。而要达到这一点，作者的一个理解是：</p>
<blockquote>
<p>做你真正想做的产品，做你自己也需要使用、也乐于使用的产品。</p>
</blockquote>
<p>总体看下来，发现和作者有很多相同的理念，决定勾搭一下。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0112 - 少做非标件]]></title>
      <url>https://atjason.com/daily/2017-01-12.html</url>
      <content type="html"><![CDATA[<p>在做 iKindle 项目时，有个点是预览书籍。本来最佳实践是使用系统的 Quick Look，无奈这路子还挺复杂；并且，可能也会在沙盒的时候遇到麻烦。</p>
<p>于是乎，开始自己模拟实现 Quick Look；<br>于是乎，开始入坑了…</p>
<p>界面样式、交互、动画、等等，看起来很简单的东西，但真要做出来，还是很难的。关键，这部分只是产品的一小部分，为了这一小部分花费大量时间，并不划算。并且，由于很难 100% 模拟，做出来的交互会让人感觉很廉价、不专业。</p>
<p>现在大的样子已经做出来，暂时先不动了（既不切换至 Quick Look，也不继续增加相似度），等体验版做出来的，到时看大伙的反应再说吧。</p>
<p>恩，尽量少做非标准件。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0111 - 数组与链表]]></title>
      <url>https://atjason.com/daily/2017-01-11.html</url>
      <content type="html"><![CDATA[<p>不是在说数据结构，而是在说两种模式、状态。</p>
<p>数组模式，在一开始就知道所有：类型、地址、容量、等等。优点是效率高，缺点是不易变动。</p>
<p>链表呢，很不同。在意的是每时每刻，不知道未来的路有多长，也不一定知道过去；而只在意当下、与下一步。有此两样，但可开路搭桥、一往无前。</p>
<p>想想，我更多的是链表模式。</p>
<p>原来，人生也是由数据结构和算法组成的呀 😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0110 - 一次只做一件事，做好]]></title>
      <url>https://atjason.com/daily/2017-01-10.html</url>
      <content type="html"><![CDATA[<p>本来这两天在很开心地开发 iKindle，结果半路杀出来 iPic…</p>
<p>这两天爆出来，iPic 在上传至默认的微博图床时，有可能失败。在几位热心的 iPic 用户帮忙之后，终于解决了这个问题。</p>
<p>可是，有个比较纠结的事：既然已经出 iPic 新版了，要不要顺便再做点功能呢？如果做，就需要花时间，并且会更长时间地打断 iKindle 的进展。如果不做，有可能使 iPic 的迭代周期过于频繁，对于程序的稳定、及运营并不利。</p>
<p>最后决定：尽快上架 iPic，解决用户的问题，这是第一位的。然后抽身，全力继续 iKindle 开发。目前 iPic 新版已提交审核，期望明天能顺利上架。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0109 - 被奇怪的对手打败]]></title>
      <url>https://atjason.com/daily/2017-01-09.html</url>
      <content type="html"><![CDATA[<p>当前这个博客，用了很长时间的 Next 主题，挺喜欢的。</p>
<p>可，有个致命的问题：分享至微信朋友圈时，会因为 JS 被微信重排页面，导致页面很久才出来、或者有异常。</p>
<p>在 Next 的 Github Issues 中，已经有多位用户提了这个问题。可，由于作者是台湾人，可能本身并没有这样的困扰，所以一直未把这个问题当问题，虽然这对于大陆的用户是极大的问题。</p>
<p>由于这个问题，我甚至开始考虑换主题了。</p>
<p>看来打败 Next 主题的，可能并不是别的主题，而是微信。</p>
<p>同行竞争并不危险，看不见的杀手才可怕。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0108 - 又遇到兴奋的感觉]]></title>
      <url>https://atjason.com/daily/2017-01-08.html</url>
      <content type="html"><![CDATA[<p>今天找到了 iKindle 的最佳设计，感觉真爽！</p>
<p>真想早点把设计稿拿出来跟大家分享，可惜考虑到保密的因素，暂时先忍着吧。最近一段时间有的忙了，争取在年前拿出体验版、年后正式上线。</p>
<p>另外，今天还面基了一个独立开发者，其主要代表作有『开垦世界』，很受好评。跟我的经历有些相似，却比我年轻很多，备感压力、要努力啊。以后还得经常和不同的人接触，碰到思想、杂交出新想法。</p>
<p>还有，在和这个朋友讨论过程中，坚定了做 Toolinbox 粉丝群的想法。其实之前一直有这个想法，只是担心运营这样的群太花时间。现在来看，还是利大于弊。主要可以通过工具把一群志同道合的人聚在一起，其价值不止于方便推广 Toolinbox 系列产品，还可能孕育出奇妙的东西。比如罗辑思维，通过把读书人连接在一起，就带来了非常多的可能性。</p>
<p>恩，要成为连接他人的节点；连接的人越多，自己的价值越大。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0107 - 享受静谧]]></title>
      <url>https://atjason.com/daily/2017-01-07.html</url>
      <content type="html"><![CDATA[<p>今天有个时刻，很安静，让我觉得很享受。</p>
<p>从图书馆打车回来，路上我在车后排睡着了。车是 Polo，空间不大，却反而有一种包裹感、安全感。外面在下雨、交通有些堵，可我却不用担心开车、路线、错过目的地、等等，可以安安静静的睡着。</p>
<p>真的很享受这种安静的感觉，可以快速的回血、恢复心力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0106 - 今天状态不错]]></title>
      <url>https://atjason.com/daily/2017-01-06.html</url>
      <content type="html"><![CDATA[<p>今天状态不错，主要是两方面。</p>
<p>一方面是阅读、学习的劲头。自己在用 Kindle 看书，看了 Rudy 作者的《松本行弘的程序世界》，目前看的是他对面向对象的理解，其中穿插了一些 Ruby 的语法等介绍。确实对面向对象的理解又深了一些，比如面向对象这种模式出现的意义、目的在于简化复杂度，同时增加软件开发效率、增大规模。</p>
<p>另一方面就是 iKindle 的进展。虽说进展其实并不算快，但清除了几个知识盲区，比如类似于 Finder 侧边栏的实现，也发现 Apple 官方开始提供更多的、基于 Swift 的代码示例。这种感觉挺爽：在不会之前总是有些怕，并且这个不会会给设计、开发带来恐惧与实质上的麻烦。而一旦搞定，就好像又打开了一扇窗、手里多了一样兵器，爽。</p>
<p>明天继续 iKindle 的界面开发。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0105 - 想好再做]]></title>
      <url>https://atjason.com/daily/2017-01-05.html</url>
      <content type="html"><![CDATA[<p>尤其是程序底层接口部分，想好再做。</p>
<p>花 1 分钟想，然后花 1 天实现；<br>花 1 小时想，然后花 1 小时实现。</p>
<p>有时急躁，不自然的就会陷入第 1 种错误的状态。这次在处理 iKindle 底层部分就有很明显的这个问题。由于需求没有明确，导致交互没明确，进而也导入数据结构不明确、变动，这也导致底层接口变动了几次。</p>
<p>另外，由于这个引入了 SQLite 这个新的变量，导致进度不容易把握。不过，就是要经常走出自己的舒适区，才能学到新东西。</p>
<p>好在，今天差不多把 iKindle 的数据部分搞定，明天开发改进 UI 部分，又是一个不擅长的领域…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0104 - 做对事的感觉]]></title>
      <url>https://atjason.com/daily/2017-01-04.html</url>
      <content type="html"><![CDATA[<p>先说做不对事的感觉。</p>
<p>今天花了 4 个多小时在开发 iKindle，感觉并不好。</p>
<ul>
<li>在技术方面，由于事先没有很好的顶层设计，也即接口设计不良，导致在开发过程中要改接口，一些代码反复调整，时间被浪费、效率不高。</li>
<li>一直在纠结是否要引入 SQLite 这个对这个产品而言适合、却略显复杂的变量。最后还是说服自己使用，本着对产品长期负责、和学习的态度。目前已经实现的差不多的。不过，这样犹豫、不确定，会极大的分散注意力。</li>
<li>总感觉没在做最重要的事。又或者说，更重要的事还没想清楚，不重要的事做的再好，心里也不踏实。具体的说，就是产品的功能与交互。目前的原则的，在没想清楚的情况下，只做自己本人需要的、以及稍加思考就确定需要的功能。交互以接近原生、简洁为纲。</li>
</ul>
<p>做对事的感觉，很玄妙，说不清楚。但一定是舒服的。而且，做的事就像在堆积木，能感觉一直在有效累加、而不是绕圈子、走弯路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0103 - 简化的能力]]></title>
      <url>https://atjason.com/daily/2017-01-03.html</url>
      <content type="html"><![CDATA[<p>在每个项目开始的时候，会有很多的可能性、选择：做什么、不做什么、怎么做、做成什么样子、使用哪种技术、产品的定位是什么、起什么名字、如何推广、如何获取第一批用户、等等。</p>
<p>如何从这些不确定性中，确定出做什么呢？</p>
<p>往玄了说，就是找出做对事的感觉。<br>比较简单的说，就是化繁为简的能力，也即找出最必要的事、部分，用最简单可靠的方式实现。</p>
<p>喜欢这种在一堆不确定性中，确定下来的过程。尤其如果找到了那么「唯一解」、「最佳方案」时，感觉很爽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0102 - 自律]]></title>
      <url>https://atjason.com/daily/2017-01-02.html</url>
      <content type="html"><![CDATA[<p>今天重新开始记录时间，发现明显更有节奏感了。</p>
<p>在没有记录时间时，由于是自由职业，没有上司、业绩、流程等约束，容易放松，或者做到哪算哪。在记录时间后，可以更清晰的了解自己在干什么。同时，如果配合目标管理、蕃茄工作法，效果会更好。</p>
<p>同时，时间管理另外一个好处是：衡量一件事的时间成本。对于自由职业者，时间是最宝贵的资源，将时间花在什么地方也是最值得考虑的事。回头看在一件事上累计花费的时间，可以回顾自己的效率、这件事值不值得做、等等，这对于加深对自己能力的了解、后续的计划、等等，是很有好处的。</p>
<p>另一件事，昨天才说的要做个小 App: iKindle，方便在 macOS 上管理 Kindle 中的标注，结果评论里被告知在 16 天前有同行发布了类似的产品。哎，有种宝贝被人偷走的感觉…不过，简单试用了下，感觉不太对自己的胃口，也不能高效满足上述需求。于是，还是会继续完善这个小产品。</p>
<p>同时，也发现自己在大的界面的处理上能力还很差，包括设计、实现。之前的 App 主要是托盘型的，对界面的要求不高。趁着 iKindle 这个机会，练练处理界面的能力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0101 - 2017 小计划]]></title>
      <url>https://atjason.com/daily/2017-01-01.html</url>
      <content type="html"><![CDATA[<h1 id="一个「中」程序"><a href="#一个「中」程序" class="headerlink" title="一个「中」程序"></a>一个「中」程序</h1><p>也即，开发一个中等规模、可以定价至 $19.99 的 macOS App，类比就是 MWeb.</p>
<h1 id="一个小工具"><a href="#一个小工具" class="headerlink" title="一个小工具"></a>一个小工具</h1><p>今天，开始做一个小工具：Kindle 的标注管理。</p>
<p>需求的来源是，今年希望能坚持读书计划。每次读书后，需要在博客中记录读书笔记。读书笔记中，除了自己的理解、读后感，还要记录在 Kindle 标记的、值得反复阅读的位置。</p>
<p>目前，有网页版本的 Clippings.io，还有 Windows 版的 Kindle Mate，但还没有合适的 macOS 版。所以，花点时间整个小工具，一举多得：</p>
<ul>
<li>练手，主要是 macOS 界面开发。</li>
<li>节约时间，帮助自己养成读书、笔记的习惯。</li>
<li>提高影响力，给有同类需求的朋友一个可选的工具。</li>
</ul>
<p>另外，新年伊始，确实是养成习惯的好时机。除了上面的读书计划，还要坚持记录时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1231 - 2016 报告]]></title>
      <url>https://atjason.com/daily/2016-12-31.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2ylvy.jpg" alt=""><br>分别上架了 iPic、iPic Mover、iPaste、iTimer、iHosts 这 5 个 macOS App.</p>
<p><img src="https://ps.toolinbox.net/re93e.jpg" alt=""><br>实现了某路由器的产品化尝试。</p>
<p><img src="https://ps.toolinbox.net/twpjt.jpg" alt=""><br>有了一个可爱的宝宝。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1230 - 与其想，不如去经历]]></title>
      <url>https://atjason.com/daily/2016-12-30.html</url>
      <content type="html"><![CDATA[<p>最近在想接下来做什么产品，几乎没有想法。</p>
<p>感觉，想是想不出来的。一定要去经历，经历不同的生活、工作状态、情趣、好玩…在一样的生活中找到兴奋点，找到可以改进的地方。</p>
<p>不能总呆在自己的舒适圈中，要接触、理解新的方式。</p>
<p>总之，需要刺激。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1229 - 彻底搞定了服务问题]]></title>
      <url>https://atjason.com/daily/2016-12-29.html</url>
      <content type="html"><![CDATA[<p>问题表现：</p>
<ul>
<li>基于 Swift + Ubuntu + Vapor 的服务经常崩溃</li>
</ul>
<p>解决办法：</p>
<ul>
<li>调试：使用 gdb 分析 core dump，找到崩溃的代码地址。</li>
<li>原因：是 <a href="https://github.com/SwiftyBeaver/AES256CBC" target="_blank" rel="external">AES256CBC.swift</a> 在调用 Linux 进程时，「偶尔」会导致 libswiftCore.so 崩溃。</li>
<li>办法：替换生成随机数的方式，最后使用的是：</li>
</ul>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">generate</span>(<span class="title">_</span> <span class="title">upperBound</span>: <span class="title">UInt32</span> = <span class="title">UInt32</span>.<span class="title">max</span>) -&gt; <span class="title">UInt32</span> </span>&#123;</div><div class="line">    #<span class="keyword">if</span> os(<span class="type">Linux</span>)</div><div class="line">        srandom(<span class="type">UInt32</span>(clock()))</div><div class="line">        <span class="keyword">return</span> <span class="type">UInt32</span>(random()) % upperBound</div><div class="line">    #<span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> arc4random_uniform(upperBound)</div><div class="line">    #endif</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>涉及主题：</p>
<ul>
<li>gdb 调试</li>
<li>ulimit、prlimit 更新 core dump 大小限制</li>
<li>Swift + Ubuntu 下的随机数</li>
<li>分析 Linux 日志、日志分割</li>
<li>服务的生产环境、测试环境</li>
<li>Nginx 简单防 DDOS，即限制总连接数、单位时间请求数</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1228 - 解决问题，不抱怨]]></title>
      <url>https://atjason.com/daily/2016-12-28.html</url>
      <content type="html"><![CDATA[<p>与其把时间花在抱怨、吐槽上，不如想想怎么解决。</p>
<p>另外，目前 Swift 后端是使用 Vapor，计划还是了解下 Perfect.</p>
<p>另外，也了解下 Swift 在 Ubuntu 中的 Bug、特殊处理。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1227 - iPic 意外入选少数派年度榜单]]></title>
      <url>https://atjason.com/daily/2016-12-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/9m5d6.jpg" alt=""></p>
<p><a href="http://sspai.com/topic/2016/" target="_blank" rel="external">2016 少数派年度盘点</a>，iPic 意外入选「值得关注的国内独立应用」</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1226 - 陷到坑里了]]></title>
      <url>https://atjason.com/daily/2016-12-26.html</url>
      <content type="html"><![CDATA[<p>服务器端还真是个坑：</p>
<ul>
<li>Swift 对 Ubuntu 支持不好，有莫名的 Crash</li>
<li>即使对 Nginx 加了访问限制，但仍有 Open too many files 这样的错误</li>
<li>日志：分割、监控</li>
</ul>
<p>哎，花了挺长时间，暂停一下吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1225 - 服务器被攻击]]></title>
      <url>https://atjason.com/daily/2016-12-25.html</url>
      <content type="html"><![CDATA[<p>今天收到的圣诞节礼物（如果这也算的话）：服务器被攻击。</p>
<p>近期新版 iPic 上线，使用了某台服务器提供 api 接口。在监控接口的健康状况时，发现有很多失败的情况。仔细检查，发现有 “Too many open files” 这样的错误，很典型的被 DDOS 攻击的表现。</p>
<p>哎，至于嘛…</p>
<p>现在想想，可能之前就已经被攻击了，只是因为没有提供 api 接口服务，自己也没认真去关注，攻击就攻击呗。现在有了服务，就得保证服务的稳定；而服务器的稳定，则是服务稳定的前提。</p>
<p>怎么办呢？</p>
<ul>
<li>完善日志。也就是说，明确到底发生了什么。如果是攻击，IP 来自何方，等等。</li>
<li>nginx 配置简单的防 DDOS，也就是限制每个 IP 单位时间的请求次数、总连接数。</li>
<li>增大服务器连接数。这个没办法增加，已经是最大了：65535</li>
</ul>
<p>最后 YY 下：如果是正常访问导致这个错误，该有多少用户、该多开心啊…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1224 - 被娃改变了很多习惯]]></title>
      <url>https://atjason.com/daily/2016-12-24.html</url>
      <content type="html"><![CDATA[<p>比如：</p>
<ul>
<li>以前晚上几乎不吃夜宵；现在不吃晚上肯定抗不住。</li>
<li>以前睡着比较慢、容易醒；现在倒头就睡、踹都不一定醒。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1220 - 正版的代价]]></title>
      <url>https://atjason.com/daily/2016-12-20.html</url>
      <content type="html"><![CDATA[<p>近期要给 iPic 上压缩功能，其实之前已经做好了，但漏了版权这一重要环节。在给 pngquant 作者邮件联系授权时，发现需要每年支付 $950，这实在是一笔不小的开支。</p>
<p>于是乎，开始满世界寻找免费的替代品，却又在对比后发现 pngquant 是最优选择（除了价格）。其实，免费是很贵的，因为需要花很多时间去选择、比较。如果不是授权费太贵，真的想直接付费算了。</p>
<p>我相信，市面上很多集成 pngquant 的软件并没有获得授权。不过，我倒是很愿意接受这种麻烦，因为这是正版意识的体现，我骄傲。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1219 - 选择是件很花时间的事]]></title>
      <url>https://atjason.com/daily/2016-12-19.html</url>
      <content type="html"><![CDATA[<p>如果手上有 500 万，可选的理财方式会有很多；进而，就会很纠结，消耗心力、时间。</p>
<p>可如果一旦确定了，比如用于买房，那就不再纠结、不需要在选择上浪费时间；进而，就可以把精力用于新的事情上。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1218 - 时间减半法]]></title>
      <url>https://atjason.com/daily/2016-12-18.html</url>
      <content type="html"><![CDATA[<p>不知道做哪件事、不知道先做哪件事，试试时间减半法：如果原来有 2 天空余时间，现在假设只有 1 天。如果还不能决定，试试只有半天。</p>
<p>时间的减少，会逼迫我们选择更重要的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1214 - 抓不住重点，会焦虑]]></title>
      <url>https://atjason.com/daily/2016-12-14.html</url>
      <content type="html"><![CDATA[<p>最近事情比较杂，有小孩的事，有现有产品的事，还要考虑可能的新产品。</p>
<p>但，感觉都没有做好。</p>
<p>还是要抓住重点。重点的事做好了，至少不会太焦虑。其他的事，就算做不好也问题不大。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1209 - 切身感受到 https 和加密的重要性]]></title>
      <url>https://atjason.com/daily/2016-12-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2f0lh.jpg" alt=""></p>
<p>今天发现，iPic 中某个网络接口被人盗用。由于这个接口在正式产品中使用而无法关闭，感觉真难受。</p>
<p>有了这次教训，切身感受到 https 和加密的重要性。数据不加密，就像是在互联网上裸奔，对用户是非常不负责任的做法。</p>
<p>明天争取给 iPic 加上非对称加密，现在看来主要的困难在于 Ubuntu 环境中的 Swift 的代码库比较少，和 macOS 下的兼容性也比较差，这会给实在开发带来很多额外的麻烦。如果实在不行，就只能改用简单的对称加密了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1208 - iPic Mover 上架 Mac App Store]]></title>
      <url>https://atjason.com/daily/2016-12-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/c86dx.png" alt=""></p>
<p><a href="https://itunes.apple.com/cn/app/id1183822957?ls=1&amp;mt=12" target="_blank" rel="external">iPic Mover</a>，一个超小众的图床搬家工具，希望需要迁移图片的朋友喜欢。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1206 - 图床迁移至 https]]></title>
      <url>https://atjason.com/daily/2016-12-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1iag3.jpg" alt=""></p>
<p>前几天已经把网站升级至 https，不过，其中的图片并未迁移。</p>
<p>今天，使用自己开发的小工具 iPic Mover 将图片迁移至支持 https 的图床。</p>
<ul>
<li>国内：使用七牛云，其中 https 流量需要付费，尚不确定会带来多少流量，观察观察。</li>
<li>国外：使用 Flickr，主要是为了省钱，而且想来 Flickr 在国外的速度应该不会慢。</li>
</ul>
<p>看着这可爱的小绿锁，开心 😁</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1204 - 图床搬家神器 iPic Mover 首秀]]></title>
      <url>https://atjason.com/daily/2016-12-04.html</url>
      <content type="html"><![CDATA[<p>在 Markdown 中插图很麻烦；还好，<a href="https://toolinbox.net/iPic/" target="_blank" rel="external">iPic</a> 解决了这个问题。</p>
<p>可是，已有 Markdown 文件中的图片该如何迁移呢？</p>
<p>不怕，现在有了 iPic Mover :)</p>
<p><img src="https://ps.toolinbox.net/ly9cx.png" alt=""></p>
<h1 id="iPic-Mover-是什么？我需要吗？"><a href="#iPic-Mover-是什么？我需要吗？" class="headerlink" title="iPic Mover 是什么？我需要吗？"></a>iPic Mover 是什么？我需要吗？</h1><p>先来看看这几个场景，你有没有遇到过？</p>
<p>１. <strong>批量将本地图片上传至图床，并更新链接、删除本地图片</strong></p>
<ul>
<li>很多 Markdown 编译器都支持插入本地图片，但很少支持上传图片至图床。</li>
<li><a href="http://www.typora.io/" target="_blank" rel="external">Typora</a> 除外，因为它集成了 iPicUploader，在插入本地图片时，可以调用 iPic 上传。</li>
</ul>
<p>２. <strong>更换图床</strong></p>
<ul>
<li>比如，最近流行升级至 https，而原来的图床很可能不支持 https，这就需要更换图床</li>
</ul>
<p>３. <strong>WordPress 迁移至 Markdown 时，迁移图片</strong></p>
<ul>
<li>Markdown 可谓风头正劲，可 WordPress 也是昔日王者。将 WordPress 迁移至 Markdown 时，比较痛苦的是 WordPress 中上传的图片资源怎么办？</li>
<li>此功能正在开发中…</li>
</ul>
<p>４. <strong>压缩已有图片</strong></p>
<ul>
<li>曾经年少轻狂，上传几 MB 的图片，眼都不眨一下。现在看看流量账单，心疼啊。可是，要把所有文章中的图片下载、压缩、再上传、更新图片链接，麻烦啊 :(</li>
<li>下个版本即将支持…</li>
</ul>
<p>如果你遇到过上面的麻烦，恭喜，iPic Mover 就是为你准备的。</p>
<a id="more"></a>
<h1 id="如何使用-iPic-Mover"><a href="#如何使用-iPic-Mover" class="headerlink" title="如何使用 iPic Mover ?"></a>如何使用 iPic Mover ?</h1><p>二话不说先上图：</p>
<p><img src="https://ps.toolinbox.net/71a25.gif" alt=""></p>
<p>可以看出，只要选择 Markdown 的根目录即可，iPic Mover 自动帮你：</p>
<ul>
<li>找到所有 Markdown 文件</li>
<li>找到 Markdown 文件中所有图片</li>
<li>上传图片</li>
<li>更新 Markdown 文件中的图片链接</li>
</ul>
<p>当然，还有几个可选项：</p>
<ul>
<li>迁移图片前复制文件夹或文件<ul>
<li>如果选定，则仅在复制的 Markdown 文件中更新图片链接。原有的 Markdown 文件将不被修改。这个主要是为了测试使用。</li>
<li><strong>注意：</strong>强烈建议在迁移前备份原始文件</li>
</ul>
</li>
<li>仅上传本地图片<ul>
<li>默认会将所有图片迁移至新图床。如果选定，则仅上传本地图片、不上传已经在云上的图片</li>
</ul>
</li>
<li>上传后删除本地图片文件<ul>
<li>如果你不希望本地残留无用的图片，可以勾选。上传失败的本地图片文件不会被删除。</li>
</ul>
</li>
</ul>
<h1 id="iPic-Mover-是如何工作的？"><a href="#iPic-Mover-是如何工作的？" class="headerlink" title="iPic Mover 是如何工作的？"></a>iPic Mover 是如何工作的？</h1><p>除了上面介绍的，核心的，iPic Mover 是通过调用 iPicUploader 来上传图片。具体可见：<a href="https://toolinbox.net/iPic/iPicUploader.html" target="_blank" rel="external">图床神器 iPic 免费开放上传服务：iPicUploader</a></p>
<p>由于需要调用 iPic 来上传图片，iPic Mover 在运行时会检测 iPic 是否安装。如果未安装，会提示在 Mac App Store 下载。</p>
<h1 id="下载-iPic-Mover"><a href="#下载-iPic-Mover" class="headerlink" title="下载 iPic Mover"></a>下载 iPic Mover</h1><p>说到最后，终于来重点了：</p>
<p><a href="https://toolinbox.net/html/iPicMover/download.html" target="_blank" rel="external">&gt;&gt;&gt; 点我下载 iPic Mover &lt;&lt;&lt;</a></p>
<p>马上试试吧。有 Bug、想吐槽，<a href="https://toolinbox.net/html/feedback.html?lang=zh-Hans&amp;app=iPicMover" target="_blank" rel="external">点这里跟我聊聊</a>，期待你的反馈。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1203 - 搞定 Sparkle]]></title>
      <url>https://atjason.com/daily/2016-12-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lxavy.jpg" alt=""></p>
<p>程序中自动升级是个挺麻烦的事。还好，有了 Sparkle，事情变得简单了。</p>
<p>根据 Sparkle 官方教程一步步走下来，还挺顺利的。有 2 个需要注意的地方：</p>
<ul>
<li><code>sparkle:shortVersionString</code> 对应 XCode 中的 <code>Build</code>, <code>sparkle:shortVersionString</code> 对应 XCode 中的 <code>Version</code></li>
<li>本地化更新日志：官方说是在 <code>xml:lang</code> 中使用 2 个字母表示的国家，但实际是 <code>zh-Hans</code> 这样的完整标识符。试了好多遍，终于试出来了，感叹我的坚持和机智。</li>
</ul>
<p>以下是 Sparkle 中的 AppCase 示例，供参考。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">rss</span> <span class="attr">version</span>=<span class="string">"2.0"</span> <span class="attr">xmlns:sparkle</span>=<span class="string">"http://www.andymatuschak.org/xml-namespaces/sparkle"</span> <span class="attr">xmlns:dc</span>=<span class="string">"http://purl.org/dc/elements/1.1/"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">channel</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>iPic Mover's Changelog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>Most recent changes with links to updates.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">language</span>&gt;</span>en<span class="tag">&lt;/<span class="name">language</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">item</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">title</span>&gt;</span>Version 0.1.0<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">description</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">                &lt;![CDATA[</div><div class="line">                &lt;ul&gt;</div><div class="line">                    &lt;li&gt;Feature 1&lt;/li&gt;</div><div class="line">                    &lt;li&gt;Feature 2&lt;/li&gt;</div><div class="line">                &lt;/ul&gt;</div><div class="line">                ]]&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">description</span> <span class="attr">xml:lang</span>=<span class="string">"zh-Hans"</span>&gt;</span></div><div class="line">                &lt;![CDATA[</div><div class="line">                &lt;h3&gt;新功能&lt;/h3&gt;</div><div class="line">                &lt;ul&gt;</div><div class="line">                    &lt;li&gt;功能 1&lt;/li&gt;</div><div class="line">                    &lt;li&gt;功能 2&lt;/li&gt;</div><div class="line">                &lt;/ul&gt;</div><div class="line"></div><div class="line">                &lt;a href="https://toolinbox.net"&gt;了解更多&lt;/a&gt;</div><div class="line">                ]]&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pubDate</span>&gt;</span>Sat, 03 Dec 2016 19:20:11 +0000<span class="tag">&lt;/<span class="name">pubDate</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enclosure</span> <span class="attr">url</span>=<span class="string">"http://localhost/~jason/iPicMover/iPicMover_v0.1.0.dmg"</span> <span class="attr">sparkle:version</span>=<span class="string">"10"</span> <span class="attr">sparkle:shortVersionString</span>=<span class="string">"0.1.0"</span> <span class="attr">type</span>=<span class="string">"application/octet-stream"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">sparkle:minimumSystemVersion</span>&gt;</span>10.11<span class="tag">&lt;/<span class="name">sparkle:minimumSystemVersion</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">channel</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">rss</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1126 - 网站升级至 https]]></title>
      <url>https://atjason.com/daily/2016-11-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/fv1yv.jpg" alt=""></p>
<p>一口气升级 4 个网站：</p>
<ul>
<li><a href="https://atjason.com">atjason.com</a></li>
<li><a href="https://en.atjason.com" target="_blank" rel="external">en.atjason.com</a></li>
<li><a href="https://toolinbox.net" target="_blank" rel="external">toolinbox.net</a></li>
<li><a href="https://en.toolinbox.net" target="_blank" rel="external">en.toolinbox.net</a></li>
</ul>
<p>明天还得进行图床搬家。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1125 - 网站迁移至自己的服务器]]></title>
      <url>https://atjason.com/daily/2016-11-25.html</url>
      <content type="html"><![CDATA[<p>一口气升级 4 个网站：</p>
<ul>
<li><a href="http://atjason.com">atjason.com</a></li>
<li><a href="http://en.atjason.com" target="_blank" rel="external">en.atjason.com</a></li>
<li><a href="http://toolinbox.net" target="_blank" rel="external">toolinbox.net</a></li>
<li><a href="http://en.toolinbox.net" target="_blank" rel="external">en.toolinbox.net</a></li>
</ul>
<p>明天还得继续适配 https，并且进行图床搬家。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1124 - 升级至 https]]></title>
      <url>https://atjason.com/daily/2016-11-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/s9zhz.jpg" alt=""></p>
<p>https 比 http 安全，这是大家都知道的；<br>https 比 http 麻烦，这也是大家都知道的。</p>
<p>于是，http 迟迟不能升级至 https.</p>
<p>可是，像苹果这种有调性的公司，强制在 2017 年提交的 App 中，必须使用 https.于是，我的几个 macOS App、包含相关的网站，都要进行 https 迁移了。</p>
<p>其实，自己的 App 或网站升级至 https，其实还好。关键是并不能保证依赖的第三方服务也已经升级至 https. 目前，影响最大的就是微博图床的上传接口不支持 https，这甚至要影响到是否要放弃微博作为 iPic 默认的图床的重要决策。</p>
<p>要非常明确苹果是否可以对第三方服务设置 Exception，并尽量做最少的事情，解决这个问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1123 - 该从哪突破呢？]]></title>
      <url>https://atjason.com/daily/2016-11-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lv0ff.jpg" alt=""></p>
<p>目前的状况比较困顿，不知道该从哪个方向突破，做事情也不是太集中注意力、效率不高。这个状态不能持久啊。</p>
<p>其实，可选的事情也不少：</p>
<ul>
<li>深入学习 Swift 及其相关的库</li>
<li>学习基于 Swift 的开源项目</li>
<li>深入学习 Cocoag</li>
<li>找一个小项目，保持手热</li>
<li>学习 iOS 开发</li>
<li>继续改进已有产品，尤其是 iPic</li>
<li>已有产品的运营、推广</li>
<li>走出去，和不同的人接触，开阔思路、寻找方向 </li>
<li>清理已经积累的琐事</li>
</ul>
<p>如果是用逆向思维，从 macOS 生产力工具这个方向，反过来推演目前要做的事，其实这些事情都是可以做的。</p>
<p>不管怎样，不能停，方向是在变化中慢慢显现出来的，要不断积累、不断制作变化，然后在变化在寻找方向。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1122 - 又是微博 Cookie]]></title>
      <url>https://atjason.com/daily/2016-11-22.html</url>
      <content type="html"><![CDATA[<p>之前更新微博 Cookie 的文案还是有问题，主要是 Cookie 过期、更新的机制不完善。</p>
<p>期间，试了 headless browser，本是很好的方案。无奈基于 Swift 的 headless browser 尚不完善，主要是 Cookie 的机制不完善。无奈，重新开始更新 Cookie 的完善。</p>
<p>代码基本完成，静等 24 小时后能不能正常更新。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1121 - 小家伙生病好可怕]]></title>
      <url>https://atjason.com/daily/2016-11-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/pa4jt.jpg" alt=""></p>
<p>今天小家伙貌似有些低烧，一直哭，怎么哄都没用，几乎束手无措了，好可怕。</p>
<p>还好睡了一大觉后正常了，第一次生病就这么有惊无险的度过了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1120 - 抱粗腿]]></title>
      <url>https://atjason.com/daily/2016-11-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/bl1jv.png" alt=""></p>
<p>集成 iPic 的新版 Typora 今天上线了，抱了第 1 个粗腿。</p>
<p>接下来，以此为基础，继续抱别的粗腿，并开始在国外支持 iPic，发扬光大 😂</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1119 - 太封闭了]]></title>
      <url>https://atjason.com/daily/2016-11-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1m248.jpg" alt=""></p>
<p>点子，是想不出来的；产品，一定是在解决现实问题的同时产生的。</p>
<p>多走出去，多接触不同的人和事，激发灵感。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1118 - 单干一周年]]></title>
      <url>https://atjason.com/daily/2016-11-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/sfmaq.jpg" alt=""></p>
<p>不知不觉，已经从上家公司离职一年了。在这一年中，尝试了几个项目：</p>
<ul>
<li><a href="http://appsites.io" target="_blank" rel="external">AppSites.io</a>，目前处于搁置状态</li>
<li>4 个 macOS App：<a href="https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12" target="_blank" rel="external">iPaste</a>, <a href="https://itunes.apple.com/cn/app/id1062139745?ls=1&amp;mt=12" target="_blank" rel="external">iTimer</a>, <a href="https://itunes.apple.com/cn/app/id1102004240?ls=1&amp;mt=12" target="_blank" rel="external">iHosts</a>, <a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12" target="_blank" rel="external">iPic</a>. 个人感觉最成功的是 iPic</li>
<li>EAWiFi. 考虑到政策风险，目前处理放养状态</li>
</ul>
<p>新的一年开始，方向是：macOS 平台、中型、生产类工具。类比：MWeb、iTerm、Bear，期待一年后的样子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1117 - 小处着手]]></title>
      <url>https://atjason.com/daily/2016-11-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/5j0ke.jpg" alt=""></p>
<p>目前的打算是，找到一个中型的 macOS 项目。</p>
<p>可是，项目越大，越需要时间去寻找、调研、评估。而在此之前，不能停下来等。更好的做法是，找些小的项目练练手，保持手感、对程序的感觉，边练边找。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1107 - 不怕慢，就怕站]]></title>
      <url>https://atjason.com/daily/2016-11-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hu8c1.jpg" alt=""></p>
<p>再忙也要每天写代码</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1106 - 责任]]></title>
      <url>https://atjason.com/daily/2016-11-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zenpj.jpg" alt=""></p>
<p>不止是自己一个人的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1105 - 漏掉的，可能是更重要的]]></title>
      <url>https://atjason.com/daily/2016-11-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lf291.jpg" alt=""></p>
<p>影响事情有很多因素、同时会有很多节点需要考虑，我们通常会关注自己认为的重要因素、节点。但其实上，过份关注这部分，可能会让我们减少对其他部分的关注、减少精力。而最后，很可能这些未被关注的东西，反而是影响更大的。</p>
<p>换个角度：不必纠结；你所纠结的，未必值得纠结；与其纠结，不如决断、放下、继续赶路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1104 - 做大事，都不容易]]></title>
      <url>https://atjason.com/daily/2016-11-04.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ecyex.jpg" alt=""></p>
<p>做项目，不易；<br>带团队，不易；<br>开公司，不易；</p>
<p>要做点大事，都不易。</p>
<p>老老实实做我的小事吧…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1103 - 撸好微博后端]]></title>
      <url>https://atjason.com/daily/2016-11-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ubyoa.jpg" alt=""></p>
<p>终于，还是改进了微博后端，iPic 应该可以安生一段时间了。</p>
<p>发现，Vapor 终究还是不成熟。同样的代码，有时运行正常、有时有问题，找不到什么规律，连给官方报 Bug 都不知道该怎么描述。哎，有些伤心，毕竟已经选择了 Vapor 这个坑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1102 - 做家务真花时间]]></title>
      <url>https://atjason.com/daily/2016-11-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lhdry.jpg" alt=""></p>
<p>今天打扫了厨房，发现真是个工程，不知觉用了大半天，做家务真是花时间啊。</p>
<p>楼上提前一周剖了，我们也快了，开始紧张了…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1101 - iPic 搞定上传前压缩图片]]></title>
      <url>https://atjason.com/daily/2016-11-01.html</url>
      <content type="html"><![CDATA[<p>iPic 现已上传前压缩图片，支持的图片格式：<code>jpg</code>、<code>png</code>、<code>gif</code>；以下是分别使用的压缩库，在此致谢！</p>
<ul>
<li><a href="https://github.com/tjko/jpegoptim" target="_blank" rel="external">jpegoptim</a></li>
<li><a href="https://pngquant.org/" target="_blank" rel="external">pngquant</a></li>
<li><a href="https://www.lcdf.org/gifsicle/" target="_blank" rel="external">gifsicle</a></li>
</ul>
<p>采用有损压缩，压缩后肉眼几乎无法看出区别，却可明显降低图片尺寸。使用压缩后的图片，既可以节省图片的存储空间，还可以加快图片加载速度、节省流量。</p>
<p>原始图片：<br>384,171 bytes<br><img src="https://ps.toolinbox.net/cn03g.png" alt=""></p>
<p>压缩后图片：<br>113,159 bytes，压缩至原尺寸的 <strong>29.5%</strong><br><img src="https://ps.toolinbox.net/j9it3.png" alt=""></p>
<p>如果我不说，你能看出上面哪张图片是压缩过的吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1031 - 又生疏了]]></title>
      <url>https://atjason.com/daily/2016-10-31.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/0u7v6.jpg" alt=""></p>
<p>久不写代码；本打算今天搞定 iPic 上传前压缩，却发现一个小问题都能卡住很久。这感觉，真难受。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1030 - iPic 新需求：上传前压缩]]></title>
      <url>https://atjason.com/daily/2016-10-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/jgox1.jpg" alt=""></p>
<p>恩，至少我是有需求的。现在每天的博客中都是有图的，虽然图本身已经很小了，但能更小，当然是更好的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1029 - 感谢困难]]></title>
      <url>https://atjason.com/daily/2016-10-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/klboh.jpg" alt=""></p>
<p>困难才能激发我们自己都无法相信的创造力，感谢困难。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1028 - 淡定]]></title>
      <url>https://atjason.com/daily/2016-10-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/33x8b.jpg" alt=""></p>
<p>今天在写代码时，碰到一个极其诡异的问题。明明应该是对的，却怎么都不对。前后折腾了几个小时，都没有搞定。既浪费了时间，也消耗了精力。</p>
<p>结果，向高手求助时，对方分分钟就解决了。</p>
<p>问题奇不奇怪，跟自己的能力有很大关系。所以，遇到奇怪的问题，淡定一点，别急着骂问题，先反思是不是自己能力的问题。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1027 - 哎，忘了给服务器烧香]]></title>
      <url>https://atjason.com/daily/2016-10-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/cg2jp.jpg" alt=""></p>
<p>之前有个产品的服务器端由朋友做的，然而：</p>
<ol>
<li>今天服务器挂了</li>
<li>他今天有事，不可能修复</li>
</ol>
<p>于是，哭…</p>
<p>哎，实在是没办法，自己撸起袖子上，暂时干出了个服务器端，够强可以维持局面。还好前段时间学习了 Swift 后端编程，不然真不知道该找哪个角落去哭。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1025 - 木工活]]></title>
      <url>https://atjason.com/daily/2016-10-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/0osqr.jpg" alt=""></p>
<p>今儿个又做了点木工，给家里的厨柜、抽屉做了隔板，做刨的时候，还把手磨破了。</p>
<p>喜欢这种动手的感觉，尤其是纯定制的，绝对 100% 满足个性化需求，比在淘宝上搜到的东西称心很多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1025 - 煲汤新武器：砂锅]]></title>
      <url>https://atjason.com/daily/2016-10-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/wm6oz.jpg" alt=""></p>
<p>最近厨房入了个新家伙：砂锅。做排骨汤、鱼汤、鸡汤啥的，很适合 :)</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1023 - 路由器进入 V8 时代]]></title>
      <url>https://atjason.com/daily/2016-10-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/rhdjf.jpg" alt=""></p>
<p>自此，</p>
<ul>
<li>支持独立 IP</li>
<li>可以为每位用户分配不同的 IP</li>
</ul>
<p>有了后端，能做的事就是多。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1023 - 一个 ! 多花了一个多小时]]></title>
      <url>https://atjason.com/daily/2016-10-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/vczvr.jpg" alt=""></p>
<p>在 bash 中对字符串进行拼接、进而验证 sha256sum 时，就是因为字符串中有个 <code>!</code> 有问题、没有就好了。折腾了很久都没搞定，最后还是想办法去掉了这个 <code>!</code>.</p>
<p>哎，这就是程序员中经典的 <code>明明应该是对的，怎么就不对呢？</code></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1022 - 后端初见成效]]></title>
      <url>https://atjason.com/daily/2016-10-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hxhac.jpg" alt=""></p>
<p>Swift + Vapor 真是个好东西啊。</p>
<p>今天花了一天的时间，就搞定了：</p>
<ul>
<li>熟悉 Vapor</li>
<li>使用 Vapor 搭建简单的后端</li>
<li>客户端可以请求以获取数据</li>
<li>通过 Header 进行简单的身份识别</li>
<li>部署到服务器的 Nginx 容器中</li>
<li>申请 ssl 证书并应用</li>
<li>使用 supervisor 监控服务以保持运行</li>
<li>使用 Git 管理代码</li>
</ul>
<p>当然，还有很多事情没做，比如：</p>
<ul>
<li>接口宕机监控</li>
<li>访问日志、及更详细的数据统计</li>
<li>使用真正的账户系统进行验证</li>
<li>Git 提交后即自动部署</li>
</ul>
<p>总的来说，对今天的战果挺满意。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1021 - 起步后端]]></title>
      <url>https://atjason.com/daily/2016-10-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/54b3v.jpg" alt=""></p>
<p>仔细想想，还真没做过后端的事；翻墙路由器需要后端支持，算是个练手的机会吧，开撸。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1020 - 不知道干什么的时候，先干点什么]]></title>
      <url>https://atjason.com/daily/2016-10-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/uci1z.jpg" alt=""></p>
<p>大脑这东西，不怕忙，就怕不忙。让大脑忙起来，它就会更高效地处理事情。反而，如果一直闲着上，大脑效率就越低，越不想做什么。</p>
<p>不知道干什么的时候，先忙起来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1019 - iPic 换『芯』上架]]></title>
      <url>https://atjason.com/daily/2016-10-19.html</url>
      <content type="html"><![CDATA[<p>如果你 <a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12" target="_blank" rel="external">在 macOS App Store 下载 iPic</a>，可能会觉得和之前 iPic 并无太大不同。但其实，iPic 内在已经有了很大变化。</p>
<h1 id="iPic-Swift-3-0"><a href="#iPic-Swift-3-0" class="headerlink" title="iPic + Swift 3.0"></a>iPic + Swift 3.0</h1><p><img src="https://ps.toolinbox.net/lvl9n.jpg" alt=""></p>
<p>是的，第 1 个主要的变化就是，iPic 已经适配了 Swift 3.0. 说实话，这对于普通用户确实是透明、无感的。但了解 Swift 3.0 的朋友会知道，这样的适配代码会有大量的调整，<a href="https://www.v2ex.com/t/311048" target="_blank" rel="external">还有很多隐藏的坑</a>。并且，由于代码的变化，App 每个犄角旮旯的功能都需要进行仔细的测试。</p>
<a id="more"></a>
<h1 id="iPicUploader-Inside"><a href="#iPicUploader-Inside" class="headerlink" title="iPicUploader Inside"></a>iPicUploader Inside</h1><p><img src="https://ps.toolinbox.net/0gquc.jpg" alt=""></p>
<p>第 2 个主要的变化是，集成了 <a href="https://github.com/toolinbox/iPicUploader" target="_blank" rel="external">iPicUploader</a>. 同样，对于 iPic 的普通用户来说，这是透明、无感的。不过，集成 iPicUploader 的意义在于：别的 App 也可以通过调用 iPic 来上传图片、并保存 Markdown 链接。</p>
<p>比如，你偏爱某款 Markdown 编辑器、而它又不支持上传图片。你可以邀请编辑器的作者来集成 iPicUploader. 这样，你在使用 Markdown 编辑器写作时，只要将图片拖拽至编辑器，编辑器自动调用 iPic 上传图片、保存 Markdown 格式链接、插入图片，一切就像将图片拖入 Word / Pages 中自然。</p>
<p>目前，已经在和某款 Markdown 编辑器（暂不提名字）合作，等这个产品新版上线了，再来告诉大家。如果你有想支持的 App，也欢迎和我、或者和 App 的作者联系。</p>
<h1 id="功能上的变化"><a href="#功能上的变化" class="headerlink" title="功能上的变化"></a>功能上的变化</h1><h2 id="支持七牛华南、北美节点"><a href="#支持七牛华南、北美节点" class="headerlink" title="支持七牛华南、北美节点"></a>支持七牛华南、北美节点</h2><p>同样，对大家是透明、无感的，只要在配置七牛图床时，填写 Bucket 即可。对于如何区分 Bucket 所在地区，交给 iPic 来做好了。</p>
<h2 id="支持复制图床"><a href="#支持复制图床" class="headerlink" title="支持复制图床"></a>支持复制图床</h2><p>为了安全，图床的 Secret Key 信息是使用 * 隐藏显示的。而对于 S3 这种一旦生成 Secret Key、就不能再次查看的服务，就会有些不便：除非在某个地方记录 Secret Key，不然就无法使用其添加多个图片。</p>
<p><img src="https://ps.toolinbox.net/tqcnv.jpg" alt=""></p>
<p>现在，有了图床的「复制」功能，只要复制已有的图床、然后再编辑 Bucket 名称即可。安全与便利兼得。</p>
<h1 id="马上升级"><a href="#马上升级" class="headerlink" title="马上升级"></a>马上升级</h1><p><a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12" target="_blank" rel="external">下载图床神器 iPic</a></p>
<p>如果你觉得 iPic 还不错，麻烦下载后顺手 <code>给个好评</code> 之前好评过的朋友，也麻烦更新下评论内容（这样评论才会出现在最新版中）你知道这对 iPic 很有帮助，也能让更多的朋友发现 iPic；谢谢你的帮忙。</p>
<p>当然，如果你想要反馈或者吐槽，都欢迎 <a href="http://toolinbox.net/html/feedback.html?lang=cn&amp;app=iPic" target="_blank" rel="external">跟我聊聊</a></p>
<p>希望 iPic 能成为你使用 Markdown 写作时的插图好帮手。</p>
<p><img src="https://ps.toolinbox.net/hbiv4.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1018 - 运营入门]]></title>
      <url>https://atjason.com/daily/2016-10-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/uzv52.jpg" alt=""></p>
<p>自己累计也做了好几款产品了，其中有几个自己还觉得拿得出手，但销量上总没什么起色，搞得自己都不知道到底是产品本身有问题、还是运营推广有问题。</p>
<p>准备花点时间学习下产品的运营推广。正好接下来的时间中，可能很难有大块的时间来写代码、研究大的问题，那就正好用零散的时间来做运营推广吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1017 - 义乌行]]></title>
      <url>https://atjason.com/daily/2016-10-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/l9orl.jpg" alt=""></p>
<p>今天去义乌推广路由器，可耻得一台都没有推销出去…</p>
<p>惆怅了，该怎么继续呢？</p>
<p>先搁着，明天改进并提交 iPic</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1016 - 6.6 元包邮]]></title>
      <url>https://atjason.com/daily/2016-10-16.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/arsr8.jpg" alt=""></p>
<p>今天在淘宝买点了小东西，6.6 元包邮。是电商不好做，还是我太嫩看不懂？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1015 - 灰色产业好难受]]></title>
      <url>https://atjason.com/daily/2016-10-15.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ekkfl.jpg" alt=""></p>
<p>今天开始在公开渠道推广，可是，好郁闷。因为是灰色地带，政府管制很严，像 58、赶集、淘宝这些地方，帖子都发不了。哎，难受…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1014 - 淘宝的门道好多]]></title>
      <url>https://atjason.com/daily/2016-10-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1d1iw.jpg" alt=""></p>
<p>今天把翻墙路由器发布到淘宝，结果过了很久一直是已过期或下架状态。开始以为是上架要点时间，可后来等了几个小时还是没上架，就联系了客服（晚上 10 点，居然还有客服在线，牛）被告知是因为商品涉嫌违规，需要人工审核。</p>
<p>哎，审核就审核，为什么没有通知呢？</p>
<p>在与客服妹子聊天的过程中，居然审核通过、变正常了，奇怪，毫无道理可言。</p>
<p>结束聊天后，又编辑了宝贝；结果，又变成待审核了。一查，原来是审核过的宝贝，如果再次编辑，就又会进入审核状态。哎，我那个悔啊…</p>
<p>好啊，淘宝也就是试试水，不折腾了，老实等着审核。</p>
<p>淘宝的门道真是多啊…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1013 - 好久没有惊喜]]></title>
      <url>https://atjason.com/daily/2016-10-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/x565s.jpg" alt=""></p>
<p>没碰到什么意外，没什么意想不到的惊喜，有些没劲。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1012 - 高效干活的感觉真爽]]></title>
      <url>https://atjason.com/daily/2016-10-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/iy997.jpg" alt=""></p>
<p>话说，昨天给自己挖了个坑，可一直没时间好好搞定。今天，终于有了不被打扰的大块时间，很高效、放心地搞定了这个问题。</p>
<p>不被打扰、认真干活、还出成果，这感觉，真爽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1011 - 给自己挖了个坑]]></title>
      <url>https://atjason.com/daily/2016-10-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/i5jif.jpg" alt=""></p>
<p>翻墙服务器是可以自动升级的，主要是为了应对不断增高的墙。昨晚，我很高兴地放了个升级版本；结果，今天早上发现：完了，升级包有问题，而用户已经自动升级到有问题的版本了。</p>
<p>哎，一声叹息…</p>
<p>今天一整天都在补救，还没完全搞定，明天还得继续。关键的，做不到完全恢复原状，有些情况只能忍了。</p>
<p>以后没有必要，不应用自动升级。除非有严重问题，或者用户主动要求。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1010 - 时间太容易溜走]]></title>
      <url>https://atjason.com/daily/2016-10-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/q1d1h.jpg" alt=""></p>
<p>今天出去寄快递、买点东西，1 个多小时就过去了。</p>
<p>哎，时间啊，太容易溜走了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1009 - 闲鱼是个好地方]]></title>
      <url>https://atjason.com/daily/2016-10-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/j7zxx.jpg" alt=""></p>
<p>最近家里收拾东西，找到几个不用的东西，都是好好的，扔了可惜，可偏偏已经用不到了。</p>
<p>后来，竟然在闲鱼上卖掉了几件，感觉不错。即不浪费东西，又能收点小钱，挺好的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1008 - 喜欢打磨产品的感觉]]></title>
      <url>https://atjason.com/daily/2016-10-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/sgga0.jpg" alt=""></p>
<p>越打磨，对产品越熟悉、技能越强、越知道该怎么改进；<br>越打磨，产品越好、感觉越爽、回报越高、越想继续打磨。</p>
<p>喜欢这种正向循环。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1007 - iPic + Swift 3]]></title>
      <url>https://atjason.com/daily/2016-10-07.html</url>
      <content type="html"><![CDATA[<p>我怂了，花了半个国庆假期为图床神器 iPic 适配 Swift 3，却不敢上架 macOS App Store…</p>
<p><img src="https://ps.toolinbox.net/n473i.jpg" alt=""></p>
<p>macOS Sierra 发布有些天了，Swift 3 也是同期发布的。这几天手痒把 XCode 升级了，同时也将 iPic 适配 Swift 3；本打算 1 天搞完的，结果…哎，说多都是泪…</p>
<p>就是因为之前没觉得是多大的事，也就没好好的总结，随意写点感受，供大家娱乐。</p>
<a id="more"></a>
<h1 id="Swift-3-0-Language-Changes"><a href="#Swift-3-0-Language-Changes" class="headerlink" title="Swift 3.0 Language Changes"></a>Swift 3.0 Language Changes</h1><p>Swift 官网有 <a href="https://swift.org/blog/swift-3-0-released/" target="_blank" rel="external">关于 Swift 3.0 变化的介绍</a>，其中列举了 100 多项变化。壮着胆子看了一遍，实在是水平有限，只是其中几项算是彻底搞懂，其他也就有个感觉。</p>
<p>此路不通。</p>
<h1 id="XCode-转换工程"><a href="#XCode-转换工程" class="headerlink" title="XCode 转换工程"></a>XCode 转换工程</h1><p>于是，撸起袖子上，直接让 XCode 转换工程，升到 Swift 3</p>
<p>这一下，代码是炸了锅了。没有一个文件不修改，简直惨不忍睹；直接编译通过就更别想了。本来还想仔细看看所有变动，借机理解下 Swift 3 的变化。结果，看着看着，看着那似乎永远看不完的变化，放弃了。努力编译通过，提交了。</p>
<p><em>苦难就是从这里开始的。</em></p>
<p><strong>忠告</strong>：后来的朋友，如果有时间的话，还是建议一个个变化看过去。不懂、或者需要较多时间消化的，建议先打个标记。等一遍快速看完后，再来一遍、一遍又一遍。总之，这是你理解 Swift 3 变化的最好时机，切记。</p>
<p>说回来，由于没有仔细看每一处变化，导致心里很慌：不知道哪有雷啊。虽然单元测试也努力跑通了，但就是跑通的太快了，反而更慌了。</p>
<h1 id="深坑在细节"><a href="#深坑在细节" class="headerlink" title="深坑在细节"></a>深坑在细节</h1><p>『大体能跑通』，这其实是很不靠谱的。需要花费大量时间搞定的，可能是其中某一个细节问题。</p>
<p>我遇到的一个是：base64 编码。现象是 iPic 怎么都不能上传图片至 Flickr，错误原因是生成的 Token 错误。可之前就是这么干的呀？最痛的地方在于， Flickr 生成 Token 是个巨复杂的过程（下图稍微感受下），其中每个步骤都可能出错，这就意味着每个步骤都要仔细过；偏偏之前偷懒这部分单元测试不全（哎…）于是，开始了漫长的调试。</p>
<p><img src="https://ps.toolinbox.net/hmngf.jpg" alt=""></p>
<p>最后的原因是，之前的 base64 相关的编码结果中，<code>:</code> 是被转义的，而新的代码（即被 XCode 转换、而我没仔细看的代码），貌似 <code>:</code> 没有被转义，导致 Token 无效（未严格验证原因，总之解决问题了…）</p>
<p><strong>忠告</strong>：单元测试、自动化测试不能偷懒。99.99% 的情况下，我们做不到测试驱动开发，但还是要在开发每个功能后、在对这个功能最熟悉的时候，补全单元测试、测试用例。</p>
<p><strong>小技巧</strong>：在功能完成后，写单元测试其实还算简单。先把单元测试的架子搭好，正确值留白；然后直接运行，肯定会出错。关键，XCode 会给出正确值。这时，只要把 XCode 的值复制到正确值即可，相对还算轻松。</p>
<h1 id="简单最好"><a href="#简单最好" class="headerlink" title="简单最好"></a>简单最好</h1><p>代码逻辑、架构什么的，越简单越好。</p>
<p>一方面，逻辑越简单，漏洞越少。进而，测试用例什么的都少。现在完整测试一遍 iPic 要吐半升血…</p>
<p>另一方面，简单容易理解啊。等过几个月再看当初的代码，理解上一定是吃力的。</p>
<p><strong>感受</strong>：为了简单，可以放弃一个边缘 Case；有些错误，就算知道也不一定改，因为改了会让整体变复杂、用户却不一定能得到好处，其实并不划算。</p>
<h1 id="稳定大于效率"><a href="#稳定大于效率" class="headerlink" title="稳定大于效率"></a>稳定大于效率</h1><p>如果一种方案开发效率、运行效率高，但维护成本也高；另一种方案刚好相反，现在的我会选择后一种。宁愿低效也不愿背上沉重的维护成本。</p>
<p>这话说出去可能脸红，但总好过程序发布几个月后发现问题，而自己那时却没时间修复、或者已经看不懂以前的代码，要好。</p>
<h1 id="说了这么多，还是怂了"><a href="#说了这么多，还是怂了" class="headerlink" title="说了这么多，还是怂了"></a>说了这么多，还是怂了</h1><p>虽然仔细的测试了、虽然没发现什么严重的问题，但还是不敢上架 macOS App Store，还是自己多用几天，也扔出来让大伙拍拍砖：</p>
<p><a href="http://toolinbox.net/html/DownloadiPic.html" target="_blank" rel="external">下载适配 Swift 3 的图床神器 iPic</a></p>
<h1 id="那个啥，啥是-iPic？"><a href="#那个啥，啥是-iPic？" class="headerlink" title="那个啥，啥是 iPic？"></a>那个啥，啥是 iPic？</h1><p>哦，这事啊；</p>
<p>iPic 可以自动上传图片、保存 Markdown 链接，给你前所未有的插入体验（图片）；支持微博、七牛、又拍、阿里云、S3、Imgur、Flickr 等一票图床。总之各种爽，谁用谁知道。</p>
<p>具体看 <a href="http://toolinbox.net/iPic/" target="_blank" rel="external">图床神器 iPic 操作动画</a></p>
<p><img src="https://ps.toolinbox.net/gdwow.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1006 - 云里雾里写代码]]></title>
      <url>https://atjason.com/daily/2016-10-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/r56x7.jpg" alt=""></p>
<p>今天写代码，总感觉云里雾里的。出去玩了下，坐着写代码时，感觉背痛、胳膊痛。</p>
<p>哎，这是老了吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1005 - 项目切换成本很高]]></title>
      <url>https://atjason.com/daily/2016-10-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/tus2s.jpg" alt=""></p>
<p>前几天在改进 EAWiFi，这几天因为 Swift 3 和七牛新开华南节点的原因，重新开始写代码，却发现非常没有感觉，也很低效。</p>
<p>如果一直在做一件事，自己就对其比较熟悉，手比较热，做起事来也比较快。而如果搁置了一段时间，对这件事生疏了，再拿起来就需要时间重新进入角色，这中间的转换成本是很高的 ，也是很大的浪费。</p>
<p>看来，还是要确定一个相对较大的项目，持续的做，这样累积优势、保持高效、做出精品。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1004 - 一个冒号引发的故事]]></title>
      <url>https://atjason.com/daily/2016-10-04.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/dlguo.jpg" alt=""></p>
<p>迁移至 Swift 3 时，iPic 始终无法上传至 Flickr，可之前都是好好的呀？</p>
<p>重复了无数遍：不可能呀 之后，终于在很仔细的对比输出后，发现 Swift 3 在网址编码时，不再对冒号（：）进行编码，而 Flickr 服务器端肯定是编码的，导致双方不一致，验证失败。</p>
<p>看来 Swift 3 升级后应该提供详细的说明书；不过可能即使有说明书，大家也不会看。也许程序员注定就是要爬这些坑的吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1003 - Swift 3]]></title>
      <url>https://atjason.com/daily/2016-10-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/e5ujz.jpg" alt=""></p>
<p>今天开始适配 Swift 3，哎，够强把 iPic 跑起来了，可还没仔细看 Swift 3 的所有新特性。</p>
<p>还有一个『坏消息』，七牛新增了华南节点，使用新的上传地址。为此，iPic 不得不出新版本了，目标是假期结束前上架。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1002 - 保持学习]]></title>
      <url>https://atjason.com/daily/2016-10-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/tjcbe.jpg" alt=""></p>
<p>这几天开始忙 EAWiFi 的事，结果核心业务：macOS 开发倒是耽误了。</p>
<p>明天开始，要保证每天写代码。可能做不了需要大块时间的项目，但可以做些零碎的事，比如学习 Swift 3.0、基于 Swift 的后端编程、XCode 效率提升、等等。</p>
<p>另外，今天装上了移动宽带的电视盒子，看了许久没看的《新闻联播》，并看了 CCTV 9 的超级工程，感觉中国的铺路建桥技术很震撼。关键是，这些是自己不会主动寻找的信息。之前都是用 iPad 搜索视频、投放到电视上看，这样总能看自己喜欢看的东西。但问题是，这样手触到的信息都是在自己兴趣范围内的，而对于更广阔的其他信息，被自己自动屏蔽了。有了这样的随机信息接收窗口，可以扩大信息接收的种类。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1001 - 搞定老大难问题]]></title>
      <url>https://atjason.com/daily/2016-10-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/0tpgv.jpg" alt=""></p>
<p>今天搞定了两个老大难问题：</p>
<ul>
<li>SS 服务器统计流量、在线用户</li>
<li>SSH 会话超时</li>
</ul>
<p>第 1 个问题，本打算花很长时间研究的，结果很顺利的就搞定了。第 2 个问题倒不是什么难的问题，只是拖了很久，搁在心里总觉得很麻烦，结果也是很快就搞定。</p>
<p>心情甚是愉悦！</p>
<p>晚上跟老婆一起下象棋，发现都是百年不下棋的水平，竟然杀得难解难分。不过，也正是水平接近，下起来才有意思。有空再来一盘 :)</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0930 - 核心竞争力]]></title>
      <url>https://atjason.com/daily/2016-09-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/i1paj.jpg" alt=""></p>
<p>让创业的人去找工作，让工作的人去创业。换个环境、换个考核标准，是拷问核心竞争力的有效方式。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0929 - 只做最少的事]]></title>
      <url>https://atjason.com/daily/2016-09-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/y274p.jpg" alt=""></p>
<p>在改进 EAWiFi 时，其实有很多事情可以做、可以做很久。</p>
<p>但其实，并不是所有事情都需要做。或者说，至少现在并不需要。只要做眼下最需要做的部分，能把事情向前推进即可。</p>
<p>关键是拿到最终的结果，也即销售。如果没有销售出去，做再多改进也是无用功。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0928 - 要么尽兴、要么不干]]></title>
      <url>https://atjason.com/daily/2016-09-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/syhj6.jpg" alt=""></p>
<p>喜欢做，就去做；做，就做得尽兴。</p>
<p>不喜欢，做不好；做不好，不喜欢。</p>
<p>你选哪个？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0927 - 完美与可靠]]></title>
      <url>https://atjason.com/daily/2016-09-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/9ms0p.jpg" alt=""></p>
<p>技术造型时，尽量选择完美的方案。高效、稳定、适应各种情况、等等。</p>
<p>但实际上，很难有完美的方案，不同方案都有其缺点、不适应的情况。于是，怎么在不同文案中组合、选择呢？</p>
<p>答案是：<strong>工程可选性</strong></p>
<p>是的，工程上的选择，也许不完美、不高效、不精致，但一定要稳定可靠、能适应最多的情况、维护成本低。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0926 - 低效 -> 沮丧]]></title>
      <url>https://atjason.com/daily/2016-09-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lmt56.jpg" alt=""></p>
<p>这两天在研究 EAWiFi 中的 DNS 优化，因为各种事情打断，效率有些低，关键一直没有产出。</p>
<p>在这种状态下，在处理 iPaste &amp; iTimer 发布的事时、在处理日常的一些琐事时，很容易发脾气，稍有不顺就感觉沮丧。</p>
<p>果然还是发展能解决问题。如果一直势如破竹地在前进，在前进路上就算碰到点挫折，也会很有信心、耐心地干掉它。</p>
<p>所以，关键还是要有产出，持续不断的产出。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0925 - 重新提交 iPaste & iTimer]]></title>
      <url>https://atjason.com/daily/2016-09-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lunab.jpg" alt=""></p>
<p>本打算今天同时上线 iPaste &amp; iTimer、并开始运营，结果出了问题。</p>
<p>还好小心先发了 iTimer，然后立即测试，发现了问题：已有付费用户在升级至免费+内购的新版本后，无法自动升级为高级账户。</p>
<p>修复代码后，今天又重新提交了 iPaste &amp; iTimer，期待明晚顺利上线。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0924 - 重启 EAWiFi]]></title>
      <url>https://atjason.com/daily/2016-09-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ccl9w.jpg" alt=""></p>
<p>改进 EAWiFi 多个环节，比如 DNS 速度、SS 稳定性、等等。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0923 - 精算时间]]></title>
      <url>https://atjason.com/daily/2016-09-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/f69dq.jpg" alt=""></p>
<p>以前一起觉得记录时间太麻烦、记录本身花的时间太多。</p>
<p>现在观念变了，一定要记录时间，尤其是对自由职业者。只有记录时间，才能精算时间成本，才能明确某件事的时间投入成本是多少、是否值得投入、是否应该继续投入。</p>
<p>不过，目前并没有发现完全趁手的时间记录方案。准备先用 Excel 来记录，等软件方案确定了，再转移。总之，不能以没找到方案为理由不记录时间。</p>
<p>如果你的钱是老婆在管，你无需为钱记账；</p>
<p>如果你的时间是老板在管，你无需为时间记账；</p>
<p>精算时间，自由职业者的基本功。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0922 - iPaste & iTimer]]></title>
      <url>https://atjason.com/daily/2016-09-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/jd3rf.jpg" alt=""><br>今天高压工作一天，终于提交了 iPaste &amp; iTimer，下周发布！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0921 - 斜杠青年]]></title>
      <url>https://atjason.com/daily/2016-09-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/tcq57.jpg" alt=""></p>
<p>斜杠青年，指的是这样一个人群：他们不满足单一职业和身份的束缚，而是选择一种能够拥有多重职业和多重身份的多元生活。这些人在自我介绍中会用斜杠来区分，例如，“XX，产品经理/设计师/开发/测试/运营”，故称斜杠青年。</p>
<p>这句话说的好：<strong>在认知盈余的时代，人人都可以成为斜杠青年</strong>。</p>
<p>成为一个领域的专家，并不意味着在别的领域是白痴；换句话说，既可以是一个领域的专家，也可以在另一个领域花 20% 的时间、掌握 80% 的i知识。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0920 - 先搭框架、再补细节]]></title>
      <url>https://atjason.com/daily/2016-09-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/bmu1y.jpg" alt=""></p>
<p>今天改版 iTimer，总是感觉进度很慢，自己不满意、没有成熟感。</p>
<p>仔细想想，其中有这么一点教训：因为陷在某个细节中，而细节的不确定性、反复，又消耗了很多时间和精力。而把其他可以做的事像堆栈一样压在心里，时间长了，心会很累，堆栈也会溢出。</p>
<p>更好的做法是，先把总体的框架搭出来，然后按部就班一个个完成。在做的过程中，如果碰到大的问题，可能要重新调整节奏；而如果只是小问题，则可以先记下来，回头再来搞定。这样，可以保证总体的节奏是顺畅的。</p>
<p>定好数据结构、堆出 UI、完善业务逻辑，这也是自己总结的、增加新功能的顺序，感觉挺顺手的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0919 - 答案在心里]]></title>
      <url>https://atjason.com/daily/2016-09-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/cjwke.jpg" alt=""></p>
<p>今天去博库书城，虽然书城很大、书很多，但自己感兴趣的，还是自己感兴趣的书；这可能就是所谓的路径依赖吧。</p>
<p>本来是想通过获取新鲜信息来寻找灵感，但发现答案其实还是在内心深处。不过，外在的刺激还是有用的。比如，包装精美的书、个中观点，还是能刺激自己梳理内心杂乱、或者被掩盖的想法。在这样的刺激下，内心变得平静，开始安静地思考，梳理焦躁的情绪，找到最能让自己满足的想法、思路。</p>
<p>周期性的接受外在新鲜的刺激，可以更加看清内心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0918 - 怡情]]></title>
      <url>https://atjason.com/daily/2016-09-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/eiswi.jpg" alt=""></p>
<p>比如，买个喜欢的东西，做点喜欢的事，换个地方呆着…</p>
<p>简单调节下状态，别让心情一直是直线。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0917 - 干瘪]]></title>
      <url>https://atjason.com/daily/2016-09-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/yegru.jpg" alt=""></p>
<p>今天都不知道能写点什么，生活和思想都太干瘪了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0915 - 最重要的，反倒最容易忽视]]></title>
      <url>https://atjason.com/daily/2016-09-16.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/3td8f.jpg" alt=""></p>
<p>呼吸很重要，却很容易被忽视。</p>
<p>工作、生活中的很多事也是这样。总会有各种边缘的事发生、总会有各种状况与状态，你到底如何选择、放弃哪个，很容易被眼下的、耳朵里听到的东西所影响。可最重要的，却可能是最沉默的，因而很容易被忽略。</p>
<p>没事多想想初心，决策前多想想最重要的、最不能放弃的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0915 - 中秋佳节、团团圆圆]]></title>
      <url>https://atjason.com/daily/2016-09-15.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hhllb.jpg" alt=""></p>
<p>今天敲定了 2 个产品名及其 Logo:</p>
<ul>
<li>Daily Clipboard | 贴贴板 &gt; iPaste</li>
<li>Attention Timer | 意念钟 &gt; iTimer</li>
</ul>
<p>目前，所有产品的 Logo 都统一为圆形，也正好契合今天团团圆圆的中秋节。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0914 - 时间是多还是少]]></title>
      <url>https://atjason.com/daily/2016-09-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1b9wt.jpg" alt=""></p>
<p>美国人一年花在看电视上的时间大约2 000亿个小时，而这几乎是2 000个维基百科项目一年所需要的时间。</p>
<p>我们着急的时候，一刻也不想耽搁，却会花大把大把的时间做无谓的消遣。早知如此，当时还着急个毛线？</p>
<p>既然知道我们还会浪费更多的时间，着急的时候，不必那么着急；<br>如果已经在后悔之前浪费的时间，不妨少一些消遣，做点什么。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0913 - 限定条件]]></title>
      <url>https://atjason.com/daily/2016-09-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/lsvai.jpg" alt=""></p>
<p>做题长大的我们，问题是习惯于命题作文：你出题、我来解题。</p>
<p>而现实则是开放的。有很多问题，可就是没人给你出题。当然了，还是有人出题的。比如，你在一家公司工作，老板交待的任务，就是命题。</p>
<p>但终究，还是要自己出题；而这，更需要能力，也就是常说的：一个好问题，比回答更重要。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0912 - 经济学中的比较优势]]></title>
      <url>https://atjason.com/daily/2016-09-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2vq8m.jpg" alt=""></p>
<p>如果一个绝对强国，啥啥的生产效率都比别国强，那他还需和别国贸易吗？</p>
<p>可能并不好回答。不急，再看一个更直白的类比：</p>
<p>如果一个老板，啥啥的干活效率都比较别人强，那他还需要花钱雇人吗？</p>
<p>如此，最开始的问题也就容易回答了。其背后的原理：经济学中的比较优势。</p>
<p>反过来一个问题：如果一个人啥啥都不如别人，他还有机会吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0911 - 实干倒逼愿景]]></title>
      <url>https://atjason.com/daily/2016-09-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/3m6sz.jpg" alt=""></p>
<p>有长期的目标、愿景，细分为行动，并驱动前行；这是逆向。</p>
<p>开始时，并未想清楚未来，但撸起袖子先干起来。在干的过程中，慢慢摸索，找到感觉，并开始思考稍远一点、远一点、再远一点的方向；这是正向。</p>
<p>如果还没有愿景、或者目标尚未清晰，不妨先干起来，边干边想。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0910 - 开放]]></title>
      <url>https://atjason.com/daily/2016-09-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/5lneb.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0909 - 不管可以不管的事]]></title>
      <url>https://atjason.com/daily/2016-09-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2oc2w.jpg" alt=""></p>
<p>我们要操心的事已经够多了。</p>
<p>一件事，如果可以不用自己管，就不管好了。</p>
<p>把 腾出的精力，管好自己该管的事。这样做，是对自己该管的、可以不管的事，最负责作的做法。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0908 - 苹果没发新 Mac]]></title>
      <url>https://atjason.com/daily/2016-09-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xs8io.jpg" alt=""></p>
<p>今天早上看了苹果今年的秋季发布会。哎，没发布新 Mac；本来还指望着发新 Mac 会带来更多销量、带动 iPic 的销量，结果却没有。</p>
<p>今天本打算上午重构完贴贴板、下午开始做新功能。结果一天都没重构完。哎，这节奏，太慢了。要加油、加油、加油！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0907 - 螺旋式上升]]></title>
      <url>https://atjason.com/daily/2016-09-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/v0tsq.jpg" alt=""></p>
<p>今天正式开始改进贴贴板。</p>
<p>可是，发现很难在以前代码的基础上修改、或加新功能；毕竟是大半年前的代码了，现在感觉之前写的代码太差了。无奈，改进的第一步：重构。</p>
<p>不过，回过头来看，这代码已经是当时自己的最佳水平了。而经过了这大半年的练习、实践，自己的代码水平也有所提高，自然就觉得之前的代码差了。换句话说，我已经不再是之前的我、已经有所提升了。</p>
<p>这是典型的螺旋式上升。因为我绕了一圈，又回来做之前做过的事。这样相同的事情对比会更明显。</p>
<p>恩，学习就应该是这样的：不断学习、不断改进、不断巩固、继续探索。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0906 - 信息需要交流，资源需要互换]]></title>
      <url>https://atjason.com/daily/2016-09-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/dos9t.jpg" alt=""></p>
<p>今天和 Mac 玩儿法的 Frank 聊，他无意间提到了在使用腾讯企业邮箱免费版。这个信息对他来说是廉价、甚至免费的，而对我来说就很有用，我立马也使用腾讯企业邮箱搭建了自有域名的邮箱。</p>
<p>另外，我也帮 Bear 联系了国内的少数派、Mac 玩儿法、爱范儿等国内媒体。对我来讲，这成本并不高；而对于意大利的 Bear 来说，是很困难、很有价值的事。同样的，他们也为我提供了一个在国外宣传的网站列表。虽然没有直接帮我宣传，但也是帮助很大了。</p>
<p>信息需要交流，资源需要互换。这样我们可以互通有无，利用对方的优势、弥补自己的劣势；在不影响对方利益的前提下，增加自己的利益；也就是，共赢。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0905 - iPic 开始抱大腿啦]]></title>
      <url>https://atjason.com/daily/2016-09-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zu2x7.jpg" alt=""></p>
<p>好吧，是这样的，iPic 完善了上传服务：iPicUploader；今天，开始和一些 Markdown 编辑器作者联系。其中有几个已经勾搭上了，之后应该就会有 <strong>Powered by iPic</strong> 的 Markdown 编辑器问世啦。</p>
<p>期间，Bear 的负责人问我：<em>We usually struggle to get noticed by Chinese websites or blogs, do you have any hint or website to recommend ?</em></p>
<p>看来，国际 App 对于如何在中国推广，就像我们对于如何在国际推广一样：惆怅。感觉这会是一个机会：帮助国内 App 在国际推广、尤其是帮助国际 App 在国内推广。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0903 - iPic 上传服务出炉：iPicUploader]]></title>
      <url>https://atjason.com/daily/2016-09-04.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/6kmj6.jpg" alt=""></p>
<p>iPic 做的是比较基础的事：把图片上传至云存储。之所以说基础，是因为一些别的 App 也会需要这样的功能，比较 Markdown 编辑器。所以，一起想着能开放 iPic 的上传能力，让别的 App 也能调用 iPic 上传图片。</p>
<p>经常各种试错，终于出炉了上传服务：iPicUploader；同时，也是生平第一个 <a href="https://cocoapods.org/?q=ipicuploader" target="_blank" rel="external">CocoaPod 项目</a>。并且，提供了完整的示例代码，包括拖动上传、选择图片文件上传、复制粘贴上传等示例。</p>
<p>最后，整个项目开源、并托管在 GitHub 中：<a href="https://github.com/toolinbox/iPicUploader" target="_blank" rel="external">iPicUploader</a>。明天开始宣传，希望更多的人来用 iPicUploader，大家一起做更有趣的应用。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0902 - 信息的缺失]]></title>
      <url>https://atjason.com/daily/2016-09-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/wmonq.jpg" alt=""></p>
<p>杭州这几天在举办 G20，不过，貌似我对 G20 本身好像还真没什么了解。仔细想了下，可能是我获取信息的渠道主要是 IT 相关的，还真没有社会、经济之类的，所以对 G20 知之甚少。</p>
<p>不过，这样是不对的。在主要获取 IT 类信息的同时，也要做主能获取其他各行业的重要新闻。暂时又下载了今日头条、网易新闻等客户端，回头再过滤下信息的渠道，集中到 Feedly 的 RSS 订阅中，争取保持在一个入口获取所有信息的习惯。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0902 - 以服务的标准做产品]]></title>
      <url>https://atjason.com/daily/2016-09-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/7knxy.jpg" alt=""></p>
<p>这里说的是技术产品和技术服务。</p>
<p>iPic 可以上传图片，这是一个层次。<br>iPic 可以开放上传服务，别的 App 可以通过调用 iPic 来上传图片，这是另一个层次。</p>
<p>自己用的代码，可以龌龊一些。而一旦要开放出去给别人用，标准自然要高很多。</p>
<p>总不能写很搓的代码吗？<br>总不能用很蹩脚的实现吗？<br>API 名称总要起得顺畅点吧？<br>多线程及回调要好一点吧？<br>单元测试总要有吧？<br>…</p>
<p>想着你做的东西要开放，然后以这个为标准来要求产品的代码。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0901 - 无压下的自我调节]]></title>
      <url>https://atjason.com/daily/2016-09-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/u2815.jpg" alt=""></p>
<p>首先，这里的无压并不是完全没有压力，主要是指没有外部压力，尤其是没有项目直接相关的外部压力。</p>
<p>尤其是指自由职业者开发自己的产品，这样的状态；也和创业初期比较像。</p>
<p>这种无压的自由状态，会带来很多的不确定。比如，什么时候发布、发布的频繁、做到什么程度、某个 Bug 是否可以不改、Logo 是否好看、等等。这些人多的不确定性累加起来，会让事情变得漂移不定、难以把握。</p>
<p>混沌中求平稳。想要把全部的不确定性都确定下来，是不可能的。只能求在某一短暂的时间内，取得暂时的平衡。比如，立项初期集中做各种可行性研究，项目中期专注于技术细节，发布前后集中搞运营。</p>
<p>没有压力，目标就是很好的驱动。比如，定个下周一发布的日期，可以没有道理地定这样的时间点，然后便可以在有限的时间内，哪些事情更重要、先做什么、做到什么程度、等等。总之，目标的驱动力在于，强制把某些不确定性（比如截止时间）给确定下来，进而，确定性会让一些关联的情事变得清晰，这种约束会让很多事情更容易做决定。</p>
<p>近期的目标是：完善 iPic 的上传服务，推广到少数几个关联产品中。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0831 - iPic 1.2.0 上架]]></title>
      <url>https://atjason.com/daily/2016-08-31.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/w27g2.jpg" alt=""></p>
<blockquote>
<p>使用了三分钟之后决定马上订阅，太好用了。<br>平时很少给应用好评的；但是这次不但要给、还要发个邮件赞一下。你做的这些个东西 吼哇！</p>
</blockquote>
<p>今天 iPic 1.2.0 上架 Mac App Store，贴几个用户的评论激励下自己。</p>
<p>运营结果喜忧参半。</p>
<p>如果从相对数字来看，新增用户的付费订阅比例还是挺高的，说明用过 iPic 的人还是觉得不错的，是他们需要的东西、做的也符合他们的期望。</p>
<p>如果从绝对数字来看，新增的用户并不多。原因可能是多方面的，可能是 iPic 的受众确实少，可能是 V2EX 中需要 iPic 的用户已经挖掘的差不多了，可能是宣传的渠道太窄了，等等吧。看来还是要想办法扩大 iPic 的影响力。</p>
<p>不过，我还是知道，iPic 是个小众产品，我不会为了多那么一点点用户，而去加一堆鸡肋功能、而让 iPic 变得难用。</p>
<p>值得一提的是，这个版本是做了减法的：去掉了『自动上传』功能、去掉了『打开 iPic 快捷键』现在看起来没什么用户反对，算是成功的。这也是我很自豪的一点：对产品有自己的理解和判断、敢于做减法。恩，坚持这一点。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0830 - 做有潜力的事]]></title>
      <url>https://atjason.com/daily/2016-08-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/u9ov2.jpg" alt=""></p>
<p>如果有一件事：</p>
<ul>
<li>一件比较成熟、甚至有些夕阳的味道，但能很快赚到钱；</li>
<li>一件比较新鲜，未来不确定性大，可能会有很大发展，也可能会死掉</li>
</ul>
<p>选哪一个？</p>
<p>我会选择有潜力的。即使死掉，也好过抱着越来越衰老的事情一起死掉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0829 - iPic 1.2.0 提交 Mac App Store]]></title>
      <url>https://atjason.com/daily/2016-08-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/fuo9q.jpg" alt=""></p>
<p>持续奋斗了 2 天，终于把 iPic 1.2.0 提交 Mac App Store 了，希望能顺利通过。</p>
<p>发现测试真的很花时间。比如，测试一个版本，发现了问题，修复了再测试，那之前测过的问题还要再测吗？理论上是要测试的，因为修复可能会破坏已有的功能；可这实在是太花时间了。还有就是，测试用例真的很多。尤其 iPic 现在支持的图床多想来了，完整的测试一遍要花好几个小时。</p>
<p>看来要好好完善下单元测试，并考虑可能的功能测试。这样可以自动测试大部分可重复的测试，人工仅测试一些很难自动化、或者需要思考判断的部分。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0828 - 节奏没搞好]]></title>
      <url>https://atjason.com/daily/2016-08-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/y999w.jpg" alt=""></p>
<p>最近明确苹果发布会日期，临时决定下周发布、今天提交。于是，今天忙了一天，干掉了几个大问题，也砍掉了几个不太重要的功能和 Bug。遗憾的是，在晚上测试的时候，发现了几个较为严重的问题，心虚了，只好推迟一天发布。</p>
<p>这次是个比较重要的发布，之前一直打算在苹果发布会当天发布的。后来想想，这样做的意义也不是很大。并且，那时大家的精力都被发布会所占用，自然会影响 iPic 的宣传。另一方面，现有的用户不满意体验版的方式，希望线上版也早点更新。想想，还是提前发布吧。</p>
<p>于是，就打乱了原生的节奏。而新的节奏，明显太赶了。搞得又累、风险又高。下次不能这样了，公测版、发布节点要规划好，有节奏、低风险。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0827 - 干了一天 Amazon S3]]></title>
      <url>https://atjason.com/daily/2016-08-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/q1ge4.jpg" alt=""></p>
<p>Amazon S3 的 Authorisation 算法 真 是 复 杂！</p>
<p>基本上，有一半的时间都在在和验证算法战斗。不过 S3 比较成熟、开放，网上有很多关于 S3 的代码实现。但没有一个是可以拿来就用的。于是，结合官方文档、多个开源代码，终于组合出适合 iPic 的 S3 代码库。</p>
<p>Amazon S3 真是鼻祖啊，国内比如阿里云 OSS、美团云，基本是接口级模仿 Amazon S3. 我的 iPic 先是实现了阿里云 OSS，然后在实现 Amazon S3 时，简直把代码复制一份都能用。不过，好在验证算法没 S3 那么变态。</p>
<p>可惜的是，S3 在国内基本是不靠谱的状态。使用测试软件，可以发现在国内有一大半都无法访问，真是悲催。</p>
<p><img src="https://ps.toolinbox.net/qrq0v.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0826 - 解决问题与寻找机会]]></title>
      <url>https://atjason.com/daily/2016-08-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/n4rkg.jpg" alt=""></p>
<p>把现有产品的所有问题都解决掉，也只是让现有产品更完美。</p>
<p>可是，这样就够了吗？</p>
<p>很可能，还需要更多。比如，当完美的现有产品赚的钱还不够时，就需要想办法赚更多的钱。这时，更重要的就是寻找新的机会。</p>
<p>并且，发展可以掩盖问题、甚至可以解决问题。也就是说，如果找到了新机会，现有的问题可能会迎刃而解、甚至不需要解决。</p>
<p>在完善现有产品时，别忘了寻找新的机会。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0825 - 组合技能]]></title>
      <url>https://atjason.com/daily/2016-08-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/x333j.jpg" alt=""></p>
<p>一种是在单一领域成为专家；另一种是在两个领域成为半专家，然后在这两个领域间跨界、融合。这两种方式，哪种更具可能性？我看好后一种。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0824 - 目标的力量]]></title>
      <url>https://atjason.com/daily/2016-08-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/v6n2n.jpg" alt=""></p>
<p>目标可以激励自己<br>比如爬山，如果只是漫无目的在爬，很容易累。而如果有了目标，比如山顶，在爬的过程中会更有动力。</p>
<p>目标可以帮自己聚集<br>一直在忙，可一直忙并不见得是好事。战术上的勤奋，可能只是战略上的懒惰。有了目标，可以帮自己聚集：只做达到目标的必要事情、剔除掉不重要的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0823 - 爽，还是得来自成就感]]></title>
      <url>https://atjason.com/daily/2016-08-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/vzjpm.jpg" alt=""></p>
<p>今天看了《谍影重重 5》，不知道是不是期望值太高的原因，并没有预期中的爽。</p>
<p>但我觉得，还是跟最近项目的状态有关。iPic 出了一点状态，一直没彻底搞定，心一直放不下来。再加上下一个“大项目”还没有着落，也一直感觉不踏实。</p>
<p>看来，要真正的爽，还是得来自成就感。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0822 - 用户是朋友]]></title>
      <url>https://atjason.com/daily/2016-08-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/r8xot.jpg" alt=""></p>
<p>用户不是上帝、也不是小白鼠，用户是朋友。</p>
<p>开发者和用户之间是平等的，这也是为什么我在跟用户沟通时，一直使用 <code>你</code> 而不是 <code>您</code>。大家需要互相尊重、互相信任。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0821 - 搞定 WeiboDaemon]]></title>
      <url>https://atjason.com/daily/2016-08-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/9dgb0.jpg" alt=""></p>
<p>差不多 2 天的时间，搞定了 WeiboDaemon；一些特性：</p>
<ul>
<li>后台每 1 小时刷新、并上传 Cookie</li>
<li>可验证 Cookie 是否有效</li>
<li>支持同时登录多个微博账户</li>
<li>默认开机自启动</li>
</ul>
<p>工具虽小，但做的还算精致，而且差不多解决了目前的问题。恩，很开心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0820 - 工具控]]></title>
      <url>https://atjason.com/daily/2016-08-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/5wi6s.jpg" alt=""></p>
<p>iPic 需要使用微博 Cookie，而微博又使用验证码的方式禁止机器模拟登录，没办法只能用人工的方式登录了。</p>
<p>可是，天长日久，这样的维护成本实在是接受不了。于是，自己折腾了个小工具：手工登录后，定期在后台更新页面，保持 Cookie 有效。</p>
<p>其实，这样的事情价值并不大，更多的是在钻空子，所以事情本身没什么好总结的。不过，做一个工具，自动化地替自己做事情，这种感觉还是很不错的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0819 - 国外的 SaaS 服务都好贵]]></title>
      <url>https://atjason.com/daily/2016-08-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/qvk1r.jpg" alt=""></p>
<p>今天发现被 GrooveHD 这个产品给坑了：</p>
<ul>
<li>之前没注意到使用其 API 也是高级功能</li>
<li>在试用期内使用 API，未提示其是高级功能</li>
<li>试用期到期前、到期后，未提示账户已禁用</li>
</ul>
<p>结果，很长一段时间，没有收到 iPic 的用户反馈。没想到，是账户被禁用的原因。</p>
<p>于是，找了一圈替代品。发现：都好贵啊。动不动一个月都要几十美金，实在是支付不起，难道国外这些 SaaS 服务都这么赚吗？</p>
<p>最后，找到了 <a href="https://www.helpscout.net/" target="_blank" rel="external">Help Scout</a>，并且，其 Beacons 是免费的。利用这一点，自己建立了 <a href="http://toolinbox.net/html/feedback.html" target="_blank" rel="external">Feedback</a> 页面，且支持本地化。除了不支持模块/产品划分（高级账户才有的功能），其他都挺满意的。希望以后不要有莫名其妙的坑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0818 - 正确做事的感觉]]></title>
      <url>https://atjason.com/daily/2016-08-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ke5zn.jpg" alt=""></p>
<ul>
<li>拥抱新技术，不死守旧技术、尤其是本身有缺陷的技术</li>
<li>适度优化，但不过度优化</li>
<li>尽量减少维护成本，最好不需要维护</li>
<li>保持精简，杜绝臃肿</li>
<li>每写一个功能，就完善其单元测试</li>
<li>不做让少数人爽、而让多数人不爽的事</li>
<li>…</li>
</ul>
<p>这些都是正确做事的方法。保持这种感觉很好、很重要。事情做对了，只要做就可以了，其他都不用考虑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0817 - 网络的问题，真头大]]></title>
      <url>https://atjason.com/daily/2016-08-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xfivy.jpg" alt=""></p>
<p>EAWiFi 这边，不同的宽带情况差异很大。</p>
<p>iPic 这边，上传至七牛时，移动宽带慢得要死，走国外代理反而更快。</p>
<p>哎，一旦跟网络环境扯上关系，真是头大。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0816 - 万事开头难，开头就不难]]></title>
      <url>https://atjason.com/daily/2016-08-16.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/z2wai.jpg" alt=""></p>
<p>据说，拖延症的一个原因是，因为怕事情太难、或做不好，而不愿意开始。</p>
<p>这时候，解决的办法是，立即开始。别管什么效率、别管什么方法、别管能不能做完，随手抓起一件具体的事，做就可以了。</p>
<p>做着做着，自己就会慢慢有感觉，知道接下来要做什么、知道先做什么、知道怎么做。</p>
<p>另外，当状态不好的时候，换个环境，看些打鸡血的书（要持续看，至少看半小时），很有效。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0815 - 一松泻千里]]></title>
      <url>https://atjason.com/daily/2016-08-15.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ukf3b.jpg" alt=""></p>
<p>本来打算今天搞定阿里 OSS 集成的；结果，一松懈，一天就过去了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0814 - 少出错]]></title>
      <url>https://atjason.com/daily/2016-08-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zvdpd.jpg" alt=""></p>
<p>今天看了奥运会乒乓球男单决赛，很明显的感觉是，张继科输在失误上。当然，说是失误，也可能是能力上的问题。不过，也确实是有不太应该的失误。</p>
<p>做事、做产品也是一样，机会总是有的，关键是能不能抓住。错过一些机会也不是太大的的问题，但不能一直错过，尤其是到手的机会一定要转化成实际的东西。</p>
<p>努力做好眼前的事，也才有资格考虑更长远的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0813 - 使用靠谱的服务]]></title>
      <url>https://atjason.com/daily/2016-08-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/geu4o.jpg" alt=""><br>今天收到大量用户的反馈：iPic 无法上传至默认的图床。</p>
<p>这是个雷，还是炸了。</p>
<p>iPic 默认使用微博图床，而微博并没有完全开放这一点。所以 iPic 是使用了类似 Hack 的技术实现这一点。而微博最近调整了其 API，导致这一 Hack 失效，最终导致了 iPic 功能上的失败。</p>
<p>暂时使用别的办法绕过去了，但毕竟不是长久之计。看来以后还是要选择靠谱的服务，不然就是在给自己挖坑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell let 命令]]></title>
      <url>https://atjason.com/Shell/let.html</url>
      <content type="html"><![CDATA[<p>let 命令是 BASH 中用于计算的工具，用于执行一个或多个表达式，变量计算中不需要加上 $ 来表示变量。如果表达式中包含了空格或其他特殊字符，则必须引起来。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">let</span> arg [arg ...]</div></pre></td></tr></table></figure>
<p>实例：<br>自加操作：let no++<br>自减操作：let no–<br>简写形式 let no+=10，let no-=20，分别等同于 let no=no+10，let no=no-20。</p>
<p>以下实例计算 a 和 b 两个表达式，并输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="built_in">let</span> a=5+4</div><div class="line"><span class="built_in">let</span> b=9-3 </div><div class="line"><span class="built_in">echo</span> <span class="variable">$a</span> <span class="variable">$b</span></div></pre></td></tr></table></figure>
<p>以上实例执行结果为：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">9 6</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 文件包含]]></title>
      <url>https://atjason.com/Shell/source.html</url>
      <content type="html"><![CDATA[<p>Shell 也可以包含外部脚本。这样可以很方便的封装一些公用的代码作为一个独立的文件。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">. filename   <span class="comment"># 注意点号(.)和文件名中间有一空格</span></div><div class="line"><span class="comment"># or</span></div><div class="line"><span class="built_in">source</span> filename</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 函数]]></title>
      <url>https://atjason.com/Shell/func.html</url>
      <content type="html"><![CDATA[<p>shell中函数的定义格式如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[ <span class="keyword">function</span> ] funname [()]</div><div class="line">&#123;</div><div class="line">    action;</div><div class="line">    [<span class="built_in">return</span> int;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>说明：</p>
<ol>
<li>可以带function fun() 定义，也可以直接fun() 定义。</li>
<li>返回值，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。return后跟数值n(0-255)；调用方法和取得返回值之间，不能有任何操作，不然取不到return的值。</li>
</ol>
<p>注意：所有函数在使用前必须定义。这意味着必须将函数放在脚本开始部分，直至shell解释器首次发现它时，才可以使用。调用函数仅使用其函数名即可。</p>
<a id="more"></a>
<h1 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h1><p>在Shell中，调用函数时可以向其传递参数。在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数…</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">add</span></span>() &#123;</div><div class="line">	a=<span class="variable">$1</span></div><div class="line">	b=<span class="variable">$2</span></div><div class="line">	<span class="built_in">return</span> $((<span class="variable">$a</span>+<span class="variable">$b</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line">add 1 2</div><div class="line">result=$? <span class="comment"># Get result of func by $?</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$result</span></div></pre></td></tr></table></figure>
<p>注意，$10 不能获取第十个参数，获取第十个参数需要${10}。当n&gt;=10时，需要使用${n}来获取参数。</p>
<h2 id="向函数传递数组变量"><a href="#向函数传递数组变量" class="headerlink" title="向函数传递数组变量"></a>向函数传递数组变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">a=(1 2 3)</div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;a[*]&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">sum</span></span>()&#123;</div><div class="line">  <span class="built_in">echo</span> parameters : <span class="string">"<span class="variable">$@</span>"</span> </div><div class="line">  <span class="built_in">local</span> the_sum=0</div><div class="line">  <span class="keyword">for</span> num <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span></div><div class="line">  <span class="keyword">do</span></div><div class="line">    <span class="comment">#the_sum=$(($the_sum + $num))</span></div><div class="line">	<span class="built_in">let</span> the_sum+=<span class="variable">$num</span></div><div class="line">  <span class="keyword">done</span></div><div class="line">  <span class="built_in">echo</span> <span class="variable">$the_sum</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">sum <span class="variable">$&#123;a[*]&#125;</span></div></pre></td></tr></table></figure>
<h1 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h1><p>默认仅能使用 return 返回 (0,255) 范围内的数值。</p>
<p>如果需要函数返回数值以外类型的值，可以在函数调用之前，定义变量（这个就是全局变量）。在函数内部就可以直接修改，然后在执行函数就可以读出修改过的值。</p>
<p>另外，也可以使用 echo 的方式来获取其他类型的返回值。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">say_hello</span></span>() &#123;</div><div class="line">	name=<span class="variable">$1</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"Hello <span class="variable">$1</span>"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">result=`say_hello <span class="string">"Tom"</span>`</div><div class="line"><span class="built_in">echo</span> <span class="variable">$result</span></div></pre></td></tr></table></figure>
<h2 id="函数返回数组变量"><a href="#函数返回数组变量" class="headerlink" title="函数返回数组变量"></a>函数返回数组变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">a=(1 2 3)</div><div class="line"></div><div class="line"><span class="function"><span class="title">plus2</span></span>()&#123;</div><div class="line">  <span class="built_in">echo</span> parameters : <span class="string">"<span class="variable">$@</span>"</span></div><div class="line">  <span class="built_in">local</span> newarray=(`<span class="built_in">echo</span> <span class="string">"<span class="variable">$@</span>"</span>`)</div><div class="line">  <span class="built_in">local</span> element=<span class="string">"<span class="variable">$#</span>"</span></div><div class="line">  <span class="comment">#local i</span></div><div class="line">  <span class="keyword">for</span> (( i = 0; i &lt; <span class="variable">$element</span>; i++ ))</div><div class="line">  &#123;</div><div class="line">    newarray[<span class="variable">$i</span>]=$[ <span class="variable">$&#123;newarray[$i]&#125;</span> * 2 ]    </div><div class="line">  &#125;</div><div class="line">  <span class="built_in">echo</span>  new value:<span class="variable">$&#123;newarray[*]&#125;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">result=`plus2 <span class="variable">$&#123;a[*]&#125;</span>`</div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;result[*]&#125;</span></div></pre></td></tr></table></figure>
<h1 id="函数内部变量"><a href="#函数内部变量" class="headerlink" title="函数内部变量"></a>函数内部变量</h1><p>如果需要定义自己变量，可以在函数中定义：local 变量=值 ，这时变量就是内部变量，它的修改，不会影响函数外部相同变量的值</p>
<h1 id="删除函数"><a href="#删除函数" class="headerlink" title="删除函数"></a>删除函数</h1><p>像删除变量一样，删除函数也可以使用 unset 命令，不过要加上 .f 选项，如：<code>$unset .f function_name</code></p>
<h1 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h1><p>如果你希望直接从终端调用函数，可以将函数定义在主目录下的 .profile 文件，这样每次登录后，在命令提示符后面输入函数名字就可以立即调用。</p>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 流程控制]]></title>
      <url>https://atjason.com/Shell/workflow.html</url>
      <content type="html"><![CDATA[<h1 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h1><p>if else-if else 语法格式：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> condition1</div><div class="line"><span class="keyword">then</span></div><div class="line">    <span class="built_in">command</span>1</div><div class="line"><span class="keyword">elif</span> condition2 </div><div class="line"><span class="keyword">then</span> </div><div class="line">    <span class="built_in">command</span>2</div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">command</span>N</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>注意：sh的流程控制不可为空。如果else分支没有语句执行，就不要写这个else。</p>
<p>写成一行（适用于终端命令提示符）：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ $(ps -ef | grep -c <span class="string">"ssh"</span>) <span class="_">-gt</span> 1 ]; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">"true"</span>; <span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>甚至可以忽略 if 等结构，更加简写：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">a=1</div><div class="line">b=1</div><div class="line"></div><div class="line">[ <span class="variable">$a</span> == <span class="variable">$b</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"<span class="variable">$a</span> equals <span class="variable">$b</span>"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>以下实例判断两个变量是否相等：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">a=10</div><div class="line">b=20</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> == <span class="variable">$b</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"a 等于 b"</span></div><div class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> <span class="_">-gt</span> <span class="variable">$b</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"a 大于 b"</span></div><div class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> <span class="_">-lt</span> <span class="variable">$b</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"a 小于 b"</span></div><div class="line"><span class="keyword">else</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"没有符合的条件"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<h1 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h1><p>for循环一般格式为：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN</div><div class="line"><span class="keyword">do</span></div><div class="line">    <span class="built_in">command</span>1</div><div class="line">    <span class="built_in">command</span>2</div><div class="line">    ...</div><div class="line">    <span class="built_in">command</span>N</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>写成一行：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN; <span class="keyword">do</span> <span class="built_in">command</span>1; <span class="built_in">command</span>2… <span class="keyword">done</span>;</div></pre></td></tr></table></figure>
<p>例如，顺序输出当前列表中的数字：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> loop <span class="keyword">in</span> 1 2 3 4 5</div><div class="line"><span class="keyword">do</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"The value is: <span class="variable">$loop</span>"</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>遍历数组：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">files_list=(</div><div class="line">a.txt</div><div class="line">b.txt</div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;files_list[@]&#125;</span>"</span></div><div class="line"><span class="keyword">do</span></div><div class="line">        <span class="built_in">echo</span> <span class="variable">$file</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>使用 C 语言风格的循环：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> (( i = 0; i &lt; 3; i++ )) &#123;</div><div class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> condition</div><div class="line"><span class="keyword">do</span></div><div class="line">    <span class="built_in">command</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>以下是一个基本的while循环：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">index=1</div><div class="line"><span class="keyword">while</span> ((<span class="variable">$index</span>&lt;=3)); <span class="keyword">do</span></div><div class="line">        <span class="built_in">echo</span> <span class="variable">$index</span></div><div class="line">        </div><div class="line">        <span class="built_in">let</span> <span class="string">"index++"</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line">index=1</div><div class="line"><span class="keyword">while</span> [ <span class="variable">$index</span> -le 3 ]; <span class="keyword">do</span></div><div class="line">        <span class="built_in">echo</span> <span class="variable">$index</span></div><div class="line">                </div><div class="line">        index=$((<span class="variable">$index</span>+1))    </div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h2 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="literal">true</span></div><div class="line"><span class="keyword">do</span></div><div class="line">    <span class="built_in">command</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="case"><a href="#case" class="headerlink" title="case"></a>case</h1><p>下面的脚本提示输入1到4，与每一种模式进行匹配：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'输入 1 到 4 之间的数字:'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'你输入的数字为:'</span></div><div class="line"><span class="built_in">read</span> aNum</div><div class="line"><span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></div><div class="line">    1)  <span class="built_in">echo</span> <span class="string">'你选择了 1'</span></div><div class="line">    ;;</div><div class="line">    2)  </div><div class="line">    <span class="built_in">echo</span> <span class="string">'你选择了 2'</span></div><div class="line">    ;;</div><div class="line">    3)  </div><div class="line">    	<span class="built_in">echo</span> <span class="string">'你选择了 3'</span></div><div class="line">    ;;</div><div class="line">    4)  <span class="built_in">echo</span> <span class="string">'你选择了 4'</span> ;;</div><div class="line">    *)  <span class="built_in">echo</span> <span class="string">'你没有输入 1 到 4 之间的数字'</span></div><div class="line">    ;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure>
<h1 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h1><h2 id="break命令"><a href="#break命令" class="headerlink" title="break命令"></a>break命令</h2><p>break 跳出循环；如果是多重循环，仅跳出 break 所在的循环。</p>
<h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><p>continue 仅跳出当次循环。</p>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell printf 命令]]></title>
      <url>https://atjason.com/Shell/printf.html</url>
      <content type="html"><![CDATA[<p>printf 命令模仿 C 程序库（library）里的 printf() 程序。标准所定义，因此使用printf的脚本比使用echo移植性好。<br>printf 使用引用文本或空格分隔的参数，外面可以在printf中使用格式化字符串，还可以制定字符串的宽度、左右对齐方式等。<br>默认printf不会像 echo 自动添加换行符，我们可以手动添加 \n。</p>
<p>printf 命令的语法：<code>printf  format-string  [arguments...]</code><br>参数说明：<br><code>format-string</code>: 为格式控制字符串<br><code>arguments</code>: 为参数列表。<br>实例如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash </span></div><div class="line"><span class="built_in">printf</span> <span class="string">"%-10s %-8s %-4s\n"</span> 姓名 性别 体重kg  </div><div class="line"><span class="built_in">printf</span> <span class="string">"%-10s %-8s %-4.2f\n"</span> 郭靖 男 66.1234 </div><div class="line"><span class="built_in">printf</span> <span class="string">"%-10s %-8s %-4.2f\n"</span> 杨过 男 48.6543 </div><div class="line">执行脚本，输出结果如下所示：</div><div class="line">姓名     性别   体重kg</div><div class="line">郭靖     男      66.12</div><div class="line">杨过     男      48.65</div></pre></td></tr></table></figure>
<ul>
<li>%s %c %d %f都是格式替代符</li>
<li>%-10s 指一个宽度为10个字符（-表示左对齐，没有则表示右对齐），任何字符都会被显示在10个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。</li>
<li>%-4.2f 指格式化为小数，其中.2指保留2位小数。</li>
</ul>
<a id="more"></a>
<p>更多实例：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash </span></div><div class="line"><span class="comment"># format-string为双引号</span></div><div class="line"><span class="built_in">printf</span> <span class="string">"%d %s\n"</span> 1 <span class="string">"abc"</span></div><div class="line"></div><div class="line"><span class="comment"># 单引号与双引号效果一样 </span></div><div class="line"><span class="built_in">printf</span> <span class="string">'%d %s\n'</span> 1 <span class="string">"abc"</span> </div><div class="line"></div><div class="line"><span class="comment"># 没有引号也可以输出</span></div><div class="line"><span class="built_in">printf</span> %s abcdef</div><div class="line"></div><div class="line"><span class="comment"># 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用</span></div><div class="line"><span class="built_in">printf</span> %s abc def</div><div class="line"></div><div class="line"><span class="built_in">printf</span> <span class="string">"%s\n"</span> abc def</div><div class="line"></div><div class="line"><span class="built_in">printf</span> <span class="string">"%s %s %s\n"</span> a b c d e f g h i j</div><div class="line"></div><div class="line"><span class="comment"># 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替</span></div><div class="line"><span class="built_in">printf</span> <span class="string">"%s and %d \n"</span></div></pre></td></tr></table></figure>
<p>执行脚本，输出结果如下所示：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1 abc</div><div class="line">1 abc</div><div class="line">abcdefabcdefabc</div><div class="line">def</div><div class="line">a b c</div><div class="line">d e f</div><div class="line">g h i</div><div class="line">j  </div><div class="line"> and 0</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell echo命令]]></title>
      <url>https://atjason.com/Shell/echo.html</url>
      <content type="html"><![CDATA[<h1 id="显示普通字符串"><a href="#显示普通字符串" class="headerlink" title="显示普通字符串:"></a>显示普通字符串:</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"It is a test"</span></div></pre></td></tr></table></figure>
<h1 id="显示转义字符"><a href="#显示转义字符" class="headerlink" title="显示转义字符"></a>显示转义字符</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"\"It is a test\""</span></div></pre></td></tr></table></figure>
<p>结果将是:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"It is a test"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="显示变量"><a href="#显示变量" class="headerlink" title="显示变量"></a>显示变量</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name=<span class="string">"Tom"</span> </div><div class="line"><span class="built_in">echo</span> <span class="string">"Hello <span class="variable">$name</span>"</span></div></pre></td></tr></table></figure>
<h1 id="显示换行"><a href="#显示换行" class="headerlink" title="显示换行"></a>显示换行</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"OK! \n"</span> <span class="comment"># -e 开启转义</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"It it a test"</span></div></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">OK!</div><div class="line"></div><div class="line">It it a <span class="built_in">test</span></div></pre></td></tr></table></figure>
<h1 id="显示不换行"><a href="#显示不换行" class="headerlink" title="显示不换行"></a>显示不换行</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"OK! \c"</span> <span class="comment"># -e 开启转义 \c 不换行</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"It is a test"</span></div></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">OK! It is a <span class="built_in">test</span></div></pre></td></tr></table></figure>
<h1 id="显示结果定向至文件"><a href="#显示结果定向至文件" class="headerlink" title="显示结果定向至文件"></a>显示结果定向至文件</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"It is a test"</span> &gt; myfile</div></pre></td></tr></table></figure>
<h1 id="原样输出字符串，不进行转义或取变量-用单引号"><a href="#原样输出字符串，不进行转义或取变量-用单引号" class="headerlink" title="原样输出字符串，不进行转义或取变量(用单引号)"></a>原样输出字符串，不进行转义或取变量(用单引号)</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'$name\"'</span></div></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$name</span>\<span class="string">"</span></div></pre></td></tr></table></figure>
<h1 id="显示命令执行结果"><a href="#显示命令执行结果" class="headerlink" title="显示命令执行结果"></a>显示命令执行结果</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> `date`</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 基本运算符]]></title>
      <url>https://atjason.com/Shell/operator.html</url>
      <content type="html"><![CDATA[<h1 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h1><p>Tutorial: <a href="https://linuxacademy.com/blog/linux/conditions-in-bash-scripting-if-statements/" target="_blank" rel="external">Conditions in bash scripting</a></p>
<h1 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h1><p>原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。<br>expr 是一款表达式计算工具，使用它能完成表达式的求值操作。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">val=`expr 1 + 2`</div><div class="line"></div><div class="line">n1=1</div><div class="line">n2=2</div><div class="line"><span class="built_in">echo</span> `expr <span class="variable">$n1</span> + <span class="variable">$n2</span>`</div></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>表达式和运算符之间要有空格，例如 1+2 是不对的，必须写成 1 + 2</li>
<li>完整的表达式要被 ` ` 包含。</li>
</ul>
<p>另外，使用 $(()) 可对表达式进行简单计算</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> $((5+4))                   <span class="comment">#返回9</span></div></pre></td></tr></table></figure>
<p>另外，还可使用 <a href="./let.html">let 命令</a></p>
<a id="more"></a>
<h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><p>下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：</p>
<ul>
<li><code>+</code> 加法    <code>expr $a + $b</code> 结果为 30。</li>
<li><code>-</code> 减法    <code>expr $a - $b</code> 结果为 10。</li>
<li><code>*</code> 乘法    <code>expr $a \* $b</code> 结果为  200。</li>
<li><code>/</code> 除法    <code>expr $b / $a</code> 结果为 2。</li>
<li><code>%</code> 取余    <code>expr $b % $a</code> 结果为 0。</li>
<li><code>=</code> 赋值    a=$b 将把变量 b 的值赋给 a。</li>
<li><code>==</code> 相等。用于比较两个数字，相同则返回 true。    <code>[ $a == $b ]</code> 返回 false。</li>
<li><code>!=</code> 不相等。用于比较两个数字，不相同则返回 true。    <code>[ $a != $b ]</code> 返回 true。</li>
</ul>
<p>注意：</p>
<ul>
<li>乘号 <code>*</code> 前边必须加反斜杠 <code>\</code>才能实现乘法运算；</li>
<li>条件表达式要放在方括号之间，并且要有空格，例如: <code>[$a==$b]</code> 是错误的，必须写成 <code>[ $a == $b ]</code></li>
</ul>
<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><p>关系运算符只支持数字，不支持字符串，<strong>除非字符串的值是数字</strong>。<br>下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：</p>
<p>使用 [] <strong>注意</strong>：[] 与操作符之间要有空格，使用变量需使用 $</p>
<ul>
<li><code>-eq</code>    检测两个数是否相等;    <code>[ $a -eq $b ]</code> 返回 false。</li>
<li><code>-ne</code>    检测两个数是否相等;    <code>[ $a -ne $b ]</code> 返回 true。</li>
<li><code>-gt</code>    检测左边的数是否大于右边的；<code>[ $a -gt $b ]</code> 返回 false。</li>
<li><code>-lt</code>    检测左边的数是否小于右边的；<code>[ $a -lt $b ]</code> 返回 true。</li>
<li><code>-ge</code>    检测左边的数是否大等于右边的；<code>[ $a -ge $b ]</code> 返回 false。</li>
<li><code>-le</code>    检测左边的数是否小于等于右边的；<code>[ $a -le $b ]</code> 返回 true。</li>
<li><code>==</code>、<code>!=</code> 也是可用的</li>
</ul>
<p>使用 (()) <strong>注意</strong>：(()) 与操作符之间可以没有空格，使用变量可以不使用 $</p>
<ul>
<li><code>==</code>   等于，如：<code>(( a == b ))</code></li>
<li><code>!=</code>  不等于，如：<code>(( a != b ))</code></li>
<li><code>&lt;</code>   小于，如：<code>(( a &lt; b ))</code></li>
<li><code>&lt;=</code>  小于等于，如：<code>(( a &lt;= b ))</code></li>
<li><code>&gt;</code>   大于，如：<code>(( a &gt; b ))</code></li>
<li><code>&gt;=</code>  大于等于，如：<code>(( a &gt;= b ))</code></li>
</ul>
<h1 id="布尔运算符"><a href="#布尔运算符" class="headerlink" title="布尔运算符"></a>布尔运算符</h1><p>下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：</p>
<ul>
<li><code>!</code>    非运算，表达式为 true 则返回 false，否则返回 true。    <code>[ ! false ]</code> 返回 true。</li>
<li><code>-a</code>    与运算，两个表达式都为 true 才返回 true。    <code>[ $a -lt 20 -a $b -gt 100 ]</code> 返回 false。</li>
<li><code>-o</code>    或运算，有一个表达式为 true 则返回 true。    <code>[ $a -lt 20 -o $b -gt 100 ]</code> 返回 true。</li>
</ul>
<h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><p>以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:</p>
<ul>
<li><code>&amp;&amp;</code>    逻辑的 AND    <code>[[ $a -lt 100 &amp;&amp; $b -gt 100 ]]</code> 或 <code>[ $a -lt 100 ] &amp;&amp; [ $b -gt 100 ]</code> 返回 false<ul>
<li>注意与布尔运算符 <code>-a</code> 的区别：需要使用双 [[]]</li>
<li><strong>推荐使用</strong> <code>[ $a -lt 100 ] &amp;&amp; [ $b -gt 100 ]</code>，因为结构更清晰</li>
</ul>
</li>
<li><code>||</code>    逻辑的 OR <code>[[ $a -lt 100 || $b -gt 100 ]]</code> 或 <code>[ $a -lt 100 ] || [ $b -gt 100 ]</code> 返回 true<ul>
<li>注意与布尔运算符 <code>-o</code> 的区别：需要使用双 [[]]</li>
</ul>
</li>
</ul>
<h1 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h1><p>下表列出了常用的字符串运算符，假定变量 a 为 “abc”，变量 b 为 “efg”：</p>
<ul>
<li><code>=</code>、或 <code>==</code>    检测两个字符串是否相等，<code>[ $a = $b ]</code> 返回 false</li>
<li><code>!=</code>    检测两个字符串是否不相等，<code>[ $a != $b ]</code> 返回 true</li>
<li><code>-z</code>    检测字符串长度是否为0，<code>[ -z $a ]</code> 返回 false</li>
<li><code>-n</code>    检测字符串长度是否不为0，<code>[ -n $a ]</code> 返回 true</li>
<li><code>str</code>    检测字符串是否不为空，<code>[ $a ]</code> 返回 true</li>
</ul>
<h1 id="文件测试运算符"><a href="#文件测试运算符" class="headerlink" title="文件测试运算符"></a>文件测试运算符</h1><p>文件测试运算符用于检测 Unix 文件的各种属性。常见属性检测描述如下：</p>
<ul>
<li><code>-d file</code>    检测文件是否是目录，如果是，则返回 true。<code>[ -d $file ]</code> 返回 false。</li>
<li><code>-f file</code>    检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。<code>[ -f $file ]</code> 返回 true。</li>
<li><code>-r file</code>    检测文件是否可读，如果是，则返回 true。<code>[ -r $file ]</code> 返回 true。</li>
<li><code>-w file</code>    检测文件是否可写，如果是，则返回 true。<code>[ -w $file ]</code> 返回 true。</li>
<li><code>-x file</code>    检测文件是否可执行，如果是，则返回 true。<code>[ -x $file ]</code> 返回 true。</li>
<li><code>-s file</code>    检测文件是否为空（文件大小是否大于0），不为空返回 true。<code>[ -s $file ]</code> 返回 true。</li>
<li><code>-e file</code>    检测文件（包括目录）是否存在，如果是，则返回 true。<code>[ -e $file ]</code> 返回 true。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 传递参数]]></title>
      <url>https://atjason.com/Shell/param.html</url>
      <content type="html"><![CDATA[<p>我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，0 为执行的文件名（包含路径，如果有路径的话），1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推……</p>
<p>另外，还有几个特殊字符用来处理参数：</p>
<ul>
<li><code>$0</code>    为执行的文件名（包含路径，如果有路径的话）</li>
<li><code>$n</code>    n 为1、2、3…获取第1、2、3…个参数</li>
<li><code>$#</code>    传递到脚本的参数个数</li>
<li><code>$*</code>    以一个单字符串显示所有向脚本传递的参数。</li>
<li><code>$@</code>    与$*相同，区别见下面的介绍。</li>
<li><code>$$</code>    脚本运行的当前进程ID号</li>
<li><code>$!</code>    后台运行的最后一个进程的ID号</li>
<li><code>$-</code>    显示Shell使用的当前选项，与set命令功能相同。</li>
<li><code>$?</code>    显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。</li>
</ul>
<p><code>$*</code> 与 <code>$@</code> 区别：</p>
<ul>
<li>相同点：都是引用所有参数。</li>
<li>不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 “ * “ 等价于 “1 2 3”（传递了一个参数），而 “@” 等价于 “1” “2” “3”（传递了三个参数）。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 数组]]></title>
      <url>https://atjason.com/Shell/array.html</url>
      <content type="html"><![CDATA[<p>bash支持一维数组（不支持多维数组），并且没有限定数组的大小，初始化时不需要定义数组大小。<br>数组元素的下标</p>
<ul>
<li>由 0 开始编号，应大于或等于0</li>
<li>可以不使用连续的下标</li>
<li>下标的范围没有限制</li>
<li>获取数组中的元素要利用下标</li>
</ul>
<h1 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h1><p>在Shell中，用括号来表示数组，数组元素用”空格”符号分割开。定义数组的一般形式为：<code>数组名=(值1 值2 ... 值n)</code>，例如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">array_name=(value0 value1 value2 value3)</div><div class="line"></div><div class="line">array_name=(</div><div class="line">value0</div><div class="line">value1</div><div class="line">value2</div><div class="line">value3</div><div class="line">)</div></pre></td></tr></table></figure>
<p>还可以单独定义数组的各个分量：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array_name[0]=value0</div><div class="line">array_name[1]=value1</div><div class="line">array_name[n]=valuen</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="读取数组"><a href="#读取数组" class="headerlink" title="读取数组"></a>读取数组</h1><p>读取数组元素值的一般格式是：<code>${数组名[下标]}</code> 例如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">valuen=<span class="variable">$&#123;array_name[n]&#125;</span></div></pre></td></tr></table></figure>
<p>使用@符号可以获取数组中的所有元素，例如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[@]&#125;</span></div></pre></td></tr></table></figure>
<h1 id="获取数组的长度"><a href="#获取数组的长度" class="headerlink" title="获取数组的长度"></a>获取数组的长度</h1><p>获取数组长度的方法与获取字符串长度的方法相同，例如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 取得数组元素的个数</span></div><div class="line">length=<span class="variable">$&#123;#array_name[@]&#125;</span></div><div class="line"><span class="comment"># 或者</span></div><div class="line">length=<span class="variable">$&#123;#array_name[*]&#125;</span></div><div class="line"><span class="comment"># 取得数组单个元素的长度</span></div><div class="line">lengthn=<span class="variable">$&#123;#array_name[n]&#125;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 字符串]]></title>
      <url>https://atjason.com/Shell/string.html</url>
      <content type="html"><![CDATA[<p>字符串是shell编程中最常用最有用的数据类型。字符串可以用单引号，也可以用双引号，也可以不用引号；区别如下。</p>
<h1 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str=<span class="string">'this is a string'</span></div></pre></td></tr></table></figure>
<p>单引号字符串的限制：</p>
<ul>
<li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</li>
<li>单引号字串中不能出现单引号（对单引号使用转义符后也不行）。</li>
</ul>
<h1 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">your_name=<span class="string">'qinjx'</span></div><div class="line">str=<span class="string">"Hello, I know your are \"<span class="variable">$your_name</span>\"! \n"</span></div></pre></td></tr></table></figure>
<p>双引号的优点：</p>
<ul>
<li>双引号里可以有变量</li>
<li>双引号里可以出现转义字符</li>
</ul>
<a id="more"></a>
<h1 id="拼接字符串"><a href="#拼接字符串" class="headerlink" title="拼接字符串"></a>拼接字符串</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">your_name=<span class="string">"qinjx"</span></div><div class="line">greeting=<span class="string">"hello, "</span><span class="variable">$your_name</span><span class="string">" !"</span></div><div class="line">greeting_1=<span class="string">"hello, <span class="variable">$&#123;your_name&#125;</span> !"</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$greeting</span> <span class="variable">$greeting_1</span></div></pre></td></tr></table></figure>
<h1 id="获取字符串长度"><a href="#获取字符串长度" class="headerlink" title="获取字符串长度"></a>获取字符串长度</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">string=<span class="string">"abcd"</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#string&#125;</span> <span class="comment">#输出 4</span></div></pre></td></tr></table></figure>
<h1 id="提取子字符串"><a href="#提取子字符串" class="headerlink" title="提取子字符串"></a>提取子字符串</h1><p>以下实例从字符串第 2 个字符开始截取 4 个字符：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">string=<span class="string">"runoob is a great site"</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string:1:4&#125;</span> <span class="comment"># 输出 unoo</span></div></pre></td></tr></table></figure>
<h1 id="查找子字符串"><a href="#查找子字符串" class="headerlink" title="查找子字符串"></a>查找子字符串</h1><p>查找字符 “i 或 s” 的位置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">string=<span class="string">"runoob is a great company"</span></div><div class="line"><span class="built_in">echo</span> `expr index <span class="string">"<span class="variable">$string</span>"</span> is`  <span class="comment"># 输出 8</span></div></pre></td></tr></table></figure>
<p><em>注意</em>： 以上脚本中 “`” 是反引号，而不是单引号 “‘“，不要看错了哦。</p>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 变量]]></title>
      <url>https://atjason.com/Shell/variant.html</url>
      <content type="html"><![CDATA[<h1 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h1><p>使用一个定义过的变量，只要在变量名前面加美元符号即可，如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">your_name=<span class="string">"qinjx"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"I'm <span class="variable">$&#123;your_name&#125;</span>."</span></div></pre></td></tr></table></figure>
<p>变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界。推荐给所有变量加上花括号（尤其是变量后面没有空格、而是其他字符时），这是个好的编程习惯。</p>
<h1 id="只读变量"><a href="#只读变量" class="headerlink" title="只读变量"></a>只读变量</h1><p>使用 readonly 命令可以将变量定义为只读变量：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">myUrl=<span class="string">"http://atjason.com"</span></div><div class="line"><span class="built_in">readonly</span> myUrl</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="删除变量"><a href="#删除变量" class="headerlink" title="删除变量"></a>删除变量</h1><p>使用 unset 命令可以删除变量，变量被删除后不能再次使用。unset 命令不能删除只读变量。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">myUrl=<span class="string">"http://www.runoob.com"</span></div><div class="line"><span class="built_in">unset</span> myUrl</div></pre></td></tr></table></figure>
<h1 id="Shell-注释"><a href="#Shell-注释" class="headerlink" title="Shell 注释"></a>Shell 注释</h1><p>以”#”开头的行就是注释，会被解释器忽略。<br>sh里没有多行注释，只能每一行加一个#号。如果在开发过程中，遇到大段的代码需要临时注释起来，过一会儿又取消注释，怎么办呢？<br>每一行加个#符号太费力了，可以把这一段要注释的代码用一对花括号括起来，定义成一个函数，没有地方调用这个函数，这块代码就不会执行，达到了和注释一样的效果。</p>
<h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><ul>
<li><a href="http://www.runoob.com/linux/linux-shell-include-file.html" target="_blank" rel="external">菜鸟教程</a></li>
<li><a href="http://www.runoob.com/try/runcode.php?filename=helloworld&amp;type=bash" target="_blank" rel="external">bash 在线工具</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0812 - 学会外包]]></title>
      <url>https://atjason.com/daily/2016-08-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/3ulwj.jpg" alt=""></p>
<p>学会外包，只是形式。真正要学会的是，只做核心业务。</p>
<p>今天心里简单核算了下 EAWiFi 的投入，发现比之前预想的要多很多。而且，很多精力都花在了服务器的搭建和维护上。而这部分并不是整个项目的核心部分，而且也很容易外包出去，即使用现有的服务。如果当初这么做的话，明显可以降低前期投入、加快进度。</p>
<p>一个人的精力有限，能做的事也非常有限。所以，一定要只做最核心的部分，做精、做专。其他的，外包出去。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0811 - 要做精，钻进去]]></title>
      <url>https://atjason.com/daily/2016-08-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/g4m0z.jpg" alt=""></p>
<p>本来以为 EAWiFi 已经比较完善了，结果遇到了几个用户的实际问题，发现之前一些明显的漏洞需要改进。解决问题后，又觉得更好了。但我知道，当碰到新的实际问题后，就又会发现现在觉得完美的东西，有明显的错误。</p>
<p>没有长时间的的浸淫，是不可能成为专家、也不可能做出精品的。只有亲自经历了用户遇到的各种实际问题，并不断地想满足用户需求的新方法、改进已有的设计，才能让产品越来越好。</p>
<p>要做精品，沉下心、钻进去。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0810 - 有问题是好事]]></title>
      <url>https://atjason.com/daily/2016-08-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/gwtrn.jpg" alt=""></p>
<p>今天发现了 EAWiFi 中的一个问题，并不好解决，花了挺长时间。</p>
<p>不过，后来想想，出现问题是好事，至少让我知道之前一些奇怪的现象是为什么。而解决这些问题后，让我对产品逻辑、内存机理有了更深的理解，也对产品的正常运行更有信心。</p>
<p>恩，出现问题并不可怕；它恰恰是让我们了解事物本质、改进产品的好机会。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0809 - 状态来了要抓住]]></title>
      <url>https://atjason.com/daily/2016-08-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hrlu8.jpg" alt=""></p>
<p>不是所有时间效率都很高。尤其是软件开发，有时状态就很差、什么都不不想干，而有时就很有激情，熬夜都不叫事。</p>
<p>状态来了要抓住，努力向前冲。状态不好就休息，干点别的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0808 - 专注]]></title>
      <url>https://atjason.com/daily/2016-08-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/mphgo.jpg" alt=""></p>
<p>放弃非核心业务</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0807 - 用金钱换时间]]></title>
      <url>https://atjason.com/daily/2016-08-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xsmoa.jpg" alt=""></p>
<p>如果重新买 MBP，一定买高配的。确实会贵些，但节约的时间绝对值得。</p>
<p>今天在 VMWare 中安装 macOS Sierra Beta 3，真是慢啊。不管是从网络下载，还是从硬盘中复制，都慢到无法忍受的时间。最后，花了近 2 个小时才将环境搭好；本来可以正常休息的，结果要熬夜，真不划算。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 搜索]]></title>
      <url>https://atjason.com/Git/7.5_Search.html</url>
      <content type="html"><![CDATA[<h1 id="Git-Grep"><a href="#Git-Grep" class="headerlink" title="Git Grep"></a>Git Grep</h1><p>Git 提供了一个 grep 命令，你可以很方便地从提交历史或者工作目录中查找一个字符串或者正则表达式。 </p>
<p>grep 一些选项：</p>
<ul>
<li>-n, 输出 Git 所找到的匹配行行号</li>
<li>–count, 输出概述的信息</li>
<li>-p, 查看匹配的行是属于哪一个方法或者函数</li>
<li>–and, 在同一行同时包含多个匹配</li>
<li>–break 和 –heading, 使输出更加易读</li>
</ul>
<a id="more"></a>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Looks for time_t in all tracked .c and .h files in the working directory and its subdirectories.</div><div class="line">git grep &apos;time_t&apos; -- &apos;*.[ch]&apos;</div><div class="line">           </div><div class="line"># Looks for a line that has #define and either MAX_PATH or PATH_MAX.</div><div class="line">git grep -e &apos;#define&apos; --and \( -e MAX_PATH -e PATH_MAX \)</div><div class="line">           </div><div class="line"># Looks for a line that has NODE or Unexpected in files that have lines that match both.</div><div class="line">git grep --all-match -e NODE -e Unexpected</div></pre></td></tr></table></figure>
<h1 id="Git-日志搜索"><a href="#Git-日志搜索" class="headerlink" title="Git 日志搜索"></a>Git 日志搜索</h1><p>或许你不想知道某一项在 哪里 ，而是想知道是什么 时候 存在或者引入的。 git log 命令有许多强大的工具可以通过提交信息甚至是 diff 的内容来找到某个特定的提交。</p>
<p>例如，如果我们想找到 ZLIB_BUF_MAX 常量是什么时候引入的，我们可以使用 -S 选项来显示新增和删除该字符串的提交。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git log -SZLIB_BUF_MAX --oneline</div></pre></td></tr></table></figure>
<p>如果你希望得到更精确的结果，你可以使用 -G 选项来使用正则表达式搜索。</p>
<h2 id="行日志搜索"><a href="#行日志搜索" class="headerlink" title="行日志搜索"></a>行日志搜索</h2><p>在 git log 后加上 -L 选项即可调用，它可以展示代码中一行或者一个函数的历史。</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: stash]]></title>
      <url>https://atjason.com/Git/7.3_Stash.html</url>
      <content type="html"><![CDATA[<p>有时，当你在项目的一部分上已经工作一段时间后，所有东西都进入了混乱的状态，而这时你想要切换到另一个分支做一点别的事情。 问题是，你不想仅仅因为过会儿回到这一点而为做了一半的工作创建一次提交。 针对这个问题的答案是 git stash 命令。</p>
<p>储藏会处理工作目录的脏的状态 - 即，修改的跟踪文件与暂存改动 - 然后将未完成的修改保存到一个栈上，而你可以在任何时候重新应用这些改动。</p>
<h1 id="储藏：stash"><a href="#储藏：stash" class="headerlink" title="储藏：stash"></a>储藏：stash</h1><ul>
<li><code>git stash save</code>: 储藏工作，或简写为 <code>git stash</code><ul>
<li><code>git stash -u</code>: -u means –include-untracked, 也储藏未跟踪文件</li>
</ul>
</li>
<li><code>git stash list</code>: 查看所有储藏</li>
<li><code>git stash apply stash@{2}</code>: 恢复某储藏，<code>git stash pop</code> 可快速恢复最近的储藏</li>
<li><code>git stash drop stash@{2}</code>: 移除某储藏工作</li>
<li><code>git stash branch &lt;branch_name&gt;</code>: 从储藏创建一个分支</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 引用]]></title>
      <url>https://atjason.com/Git/7.1_Ref.html</url>
      <content type="html"><![CDATA[<h1 id="提交区间"><a href="#提交区间" class="headerlink" title="提交区间"></a>提交区间</h1><p>当你有很多分支时，这对管理你的分支时十分有用，你可以用提交区间来解决 “这个分支还有哪些提交尚未合并到主分支？” 的问题。</p>
<h2 id="双点"><a href="#双点" class="headerlink" title="双点"></a>双点</h2><p>最常用的指明提交区间语法是双点。 这种语法可以让 Git 选出在一个分支中而不在另一个分支中的提交。 例如，你有如下的提交历史：</p>
<p><img src="https://ps.toolinbox.net/hfxpt.jpg" alt=""></p>
<p>你想要查看 experiment 分支中还有哪些提交尚未被合并入 master 分支。 你可以使用 <code>git log master..experiment</code> 来让 Git 显示这些提交。反过来，如果你想查看在 master 分支中而不在 experiment 分支中的提交，你只要交换分支名即可。 </p>
<p>另一个常用的场景是查看你即将推送到远端的内容：<code>$ git log origin/master..HEAD</code><br>这个命令会输出在你当前分支中而不在远程 origin 中的提交。 </p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0806 - 量化时间]]></title>
      <url>https://atjason.com/daily/2016-08-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/wxx6v.jpg" alt=""></p>
<p>最近又重新有了这个想法：统计、量化自己的时间。</p>
<p>触发是《奇特的一生》这本书，虽然我并不想像主人公那样详尽的记录时间，但也想大概记录下，看自己在不同项目、事情上所花费的时间。</p>
<p>有了这些数据，就可以有更进一步的思考，比如项目的投入回报比，在哪些领域投入的时间还不够多，等等。</p>
<p>进而，也打算入个手环，记录自己更多的数据。比如运动、睡眠等情况。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 分支]]></title>
      <url>https://atjason.com/Git/3.1_BasicBranch.html</url>
      <content type="html"><![CDATA[<h1 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git branch dev</div><div class="line">$ git checkout dev</div><div class="line"></div><div class="line"># Merge into one command</div><div class="line">$ git checkout -b dev</div><div class="line"></div><div class="line"># Create branch with commit</div><div class="line">$ git branch branchname &lt;sha1-of-commit&gt;</div></pre></td></tr></table></figure>
<h1 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b dev</div><div class="line">$ git merge master</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b master</div><div class="line"># Could only delete when dev was merged</div><div class="line">$ git branch -d dev</div><div class="line"># If really need to delete a branch which wasn&apos;t merged, use -D.</div><div class="line"># Note: It&apos;s dangerous, be careful.</div><div class="line">$ git branch -D dev</div></pre></td></tr></table></figure>
<h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"># 查看所有分支</div><div class="line">$ git branch</div><div class="line"></div><div class="line"># 查看远程分支</div><div class="line">$ git branch --remote</div><div class="line"></div><div class="line"># 如果需要查看每一个分支的最后一次提交，可以运行 git branch -v 命令：</div><div class="line">$ git branch -v</div><div class="line">  iss53   93b412c fix javascript issue</div><div class="line">* master  7a98805 Merge branch &apos;iss53&apos;</div><div class="line">  testing 782fd34 add scott to the author list in the readmes</div><div class="line"></div><div class="line"># 如果想要查看设置的所有跟踪分支，可以使用 git branch 的 -vv 选项。 这会将所有的本地分支列出来并且包含更多的信息，如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后或是都有。</div><div class="line">$ git branch -vv</div><div class="line">  iss53     7e424c3 [origin/iss53: ahead 2] forgot the brackets</div><div class="line">  master    1ae2a45 [origin/master] deploying index fix</div><div class="line">* serverfix f8674d9 [teamone/server-fix-good: ahead 3, behind 1] this should do it</div><div class="line">  testing   5ea463a trying something new</div><div class="line"></div><div class="line"># --merged 与 --no-merged 这两个有用的选项可以过滤这个列表中已经合并或尚未合并到当前分支的分支。</div><div class="line">$ git branch --merged</div><div class="line">$ git branch --no-merged</div></pre></td></tr></table></figure>
<h1 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h1><p>远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 <code>git ls-remote (remote)</code> 来显式地获得远程引用的完整列表，或者通过 <code>git remote show (remote)</code> 获得远程分支的更多信息。</p>
<p>远程跟踪分支是远程分支状态的引用。 它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。</p>
<p>它们以 (remote)/(branch) 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 origin/master 分支。 </p>
<h2 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h2><p>如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 <code>git push (remote) (branch)</code>，如 git push origin serverfix</p>
<h2 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h2><p>当 git fetch 命令从服务器上抓取本地没有的数据时，本地不会自动生成一份可编辑的副本（拷贝）、也不会修改工作目录中的内容。换一句话说，这种情况下，不会有一个新的 serverfix 分支 - 只有一个不可以修改的 origin/serverfix 指针。可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上：<code>git checkout -b serverfix origin/serverfix</code></p>
<p>然而，有一个命令叫作 git pull 在大多数情况下它的含义是一个 git fetch 紧接着一个 git merge 命令。 如果有一个像之前章节中演示的设置好的跟踪分支，不管它是显式地设置还是通过 clone 或 checkout 命令为你创建的，git pull 都会查找当前分支所跟踪的服务器与分支，从服务器上抓取数据然后尝试合并入那个远程分支。</p>
<p>由于 git pull 的魔法经常令人困惑所以通常单独显式地使用 fetch 与 merge 命令会更好一些。</p>
<h2 id="跟踪分支"><a href="#跟踪分支" class="headerlink" title="跟踪分支"></a>跟踪分支</h2><p>从一个远程跟踪分支检出一个本地分支会自动创建一个叫做 “跟踪分支”（有时候也叫做 “上游分支”）。 跟踪分支是与远程分支有直接关系的本地分支。 如果在一个跟踪分支上输入 git pull，Git 能自动地识别去哪个服务器上抓取、合并到哪个分支。</p>
<p>当克隆一个仓库时，它通常会自动地创建一个跟踪 origin/master 的 master 分支。 然而，如果你愿意的话可以设置其他的跟踪分支 - 其他远程仓库上的跟踪分支，或者不跟踪 master 分支。 最简单的就是之前看到的例子，运行 <code>git checkout -b [branch] [remotename]/[branch]</code></p>
<p>如果想要将本地分支与远程分支设置为不同名字，你可以轻松地增加一个不同名字的本地分支的上一个命令：<code>git checkout -b sf origin/serverfix</code></p>
<p>设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支，你可以在任意时间使用 -u 或 –set-upstream-to 选项运行 git branch 来显式地设置：<code>git branch -u origin/serverfix</code></p>
<h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin --delete serverfix</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 标签]]></title>
      <url>https://atjason.com/Git/2.6_Tag.html</url>
      <content type="html"><![CDATA[<p>比较有代表性的是使用标签来标记发布结点（v1.0 等等）</p>
<h1 id="列出标签"><a href="#列出标签" class="headerlink" title="列出标签"></a>列出标签</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git tag</div><div class="line">v0.1</div><div class="line">v1.3</div><div class="line"></div><div class="line">$ git tag -l &apos;v1.8.5*&apos;</div><div class="line">v1.8.5</div><div class="line">v1.8.5-rc0</div><div class="line">...</div></pre></td></tr></table></figure>
<p>这个命令以字母顺序列出标签；但是它们出现的顺序并不重要。</p>
<a id="more"></a>
<h1 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h1><p>Git 使用两种主要类型的标签：</p>
<ul>
<li>轻量标签（lightweight），很像一个不会改变的分支 - 它只是一个特定提交的引用。</li>
<li>附注标签（annotated），是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。</li>
</ul>
<p>通常建议创建 <strong>附注标签</strong>，这样你可以拥有以上所有信息；但是如果你只是想用一个临时的标签，或者因为某些原因不想要保存那些信息，轻量标签也是可用的。</p>
<h2 id="附注标签"><a href="#附注标签" class="headerlink" title="附注标签"></a>附注标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag -a v1.4 -m &apos;my version 1.4&apos;</div></pre></td></tr></table></figure>
<p>-m 选项指定了一条将会存储在标签中的信息。</p>
<p>通过使用 <code>git show v1.4</code> 命令可以看到标签信息与对应的提交信息。</p>
<h2 id="轻量标签"><a href="#轻量标签" class="headerlink" title="轻量标签"></a>轻量标签</h2><p>创建轻量标签，不需要使用 -a、-s 或 -m 选项，只需要提供标签名字：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag v1.4-lw</div></pre></td></tr></table></figure>
<h2 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git tag -d v1.4-lw</div><div class="line"></div><div class="line"># delete tag on remote</div><div class="line">git push origin :refs/tags/v1.4-lw</div></pre></td></tr></table></figure>
<h1 id="后期打标签"><a href="#后期打标签" class="headerlink" title="后期打标签"></a>后期打标签</h1><p>假设提交历史是这样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git log --pretty=oneline</div><div class="line">15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch &apos;experiment&apos;</div><div class="line">9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile</div></pre></td></tr></table></figure>
<p>现在，假设在 v1.2 时你忘记给项目打标签，也就是在 “updated rakefile” 提交。 你可以在之后补上标签。 要在那个提交上打标签，你需要在命令的末尾指定提交的校验和（或部分校验和）:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag -a v1.2 9fceb02</div></pre></td></tr></table></figure>
<h1 id="共享标签"><a href="#共享标签" class="headerlink" title="共享标签"></a>共享标签</h1><p>默认情况下，git push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git push origin [tagname]</div><div class="line">$ git push origin v1.5</div><div class="line"></div><div class="line"># --tags 选项会把所有不在远程仓库服务器上的标签全部传送到那里</div><div class="line">$ git push origin --tags</div></pre></td></tr></table></figure>
<h1 id="检出标签"><a href="#检出标签" class="headerlink" title="检出标签"></a>检出标签</h1><p>在 Git 中你并不能真的检出一个标签，因为它们并不能像分支一样来回移动。 如果你想要工作目录与仓库中特定的标签版本完全一样，可以使用 git checkout -b [branchname] [tagname] 在特定的标签上创建一个新分支：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b version2 v2.0.0</div></pre></td></tr></table></figure>
<p>当然，如果在这之后又进行了一次提交，version2 分支会因为改动向前移动了，那么 version2 分支就会和 v2.0.0 标签稍微有些不同，这时就应该当心了。</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 远程仓库]]></title>
      <url>https://atjason.com/Git/2.5_Remote.html</url>
      <content type="html"><![CDATA[<h1 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h1><p><code>git remote -v</code> 命令，会显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/schacon/ticgit</div><div class="line">$ cd ticgit</div><div class="line">$ git remote -v</div><div class="line">origin	https://github.com/schacon/ticgit (fetch)</div><div class="line">origin	https://github.com/schacon/ticgit (push)</div></pre></td></tr></table></figure>
<a id="more"></a>
<p><code>git remote show [remote-name]</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ git remote show origin</div><div class="line">* remote origin</div><div class="line">  Fetch URL: https://github.com/schacon/ticgit</div><div class="line">  Push  URL: https://github.com/schacon/ticgit</div><div class="line">  HEAD branch: master</div><div class="line">  Remote branches:</div><div class="line">    master                               tracked</div><div class="line">    dev-branch                           tracked</div><div class="line">  Local branch configured for &apos;git pull&apos;:</div><div class="line">    master merges with remote master</div><div class="line">  Local ref configured for &apos;git push&apos;:</div><div class="line">    master pushes to master (up to date)</div></pre></td></tr></table></figure>
<h1 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h1><p><code>git remote add &lt;shortname&gt; &lt;url&gt;</code> 添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写（即 shortname）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git remote add pb https://github.com/paulboone/ticgit</div><div class="line">$ git remote -v</div><div class="line">origin	https://github.com/schacon/ticgit (fetch)</div><div class="line">origin	https://github.com/schacon/ticgit (push)</div><div class="line">pb	https://github.com/paulboone/ticgit (fetch)</div><div class="line">pb	https://github.com/paulboone/ticgit (push)</div></pre></td></tr></table></figure>
<h1 id="从远程仓库中抓取与拉取"><a href="#从远程仓库中抓取与拉取" class="headerlink" title="从远程仓库中抓取与拉取"></a>从远程仓库中抓取与拉取</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Download to local (i.e., .git/FETCH_HEAD)</div><div class="line">git fetch [remote-name]</div><div class="line"># Merge to local current branch. If need to merge to other branch, first checkout to it.</div><div class="line">$ git merge origin/next</div><div class="line"></div><div class="line"># The 2 commands above could be merged to:</div><div class="line">$ git pull origin next</div><div class="line"># Or just git full if the configuration is fine.</div></pre></td></tr></table></figure>
<p>如果你使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。 </p>
<p>如果你有一个分支设置为跟踪一个远程分支，可以使用 git pull 命令来自动的抓取然后合并远程分支到当前分支。 默认情况下，git clone 命令会自动设置本地 master 分支跟踪克隆的远程仓库的 master 分支（或不管是什么名字的默认分支）。 运行 git pull 通常会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支。</p>
<h1 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git push [remote-name] [branch-name]</div><div class="line"></div><div class="line"># Push to the master branch of origin</div><div class="line">$ git push origin master</div><div class="line"></div><div class="line"># -u means save the upstream configuration. Next time could just use git push</div><div class="line">$ git push -u origin master</div><div class="line">$ git push</div></pre></td></tr></table></figure>
<h1 id="远程仓库的移除与重命名"><a href="#远程仓库的移除与重命名" class="headerlink" title="远程仓库的移除与重命名"></a>远程仓库的移除与重命名</h1><p>例如，想要将 pb 重命名为 paul，可以用 git remote rename 这样做：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git remote rename pb paul</div><div class="line">$ git remote</div><div class="line">origin</div><div class="line">paul</div></pre></td></tr></table></figure>
<p>值得注意的是这同样也会修改你的远程分支名字。 那些过去引用 pb/master 的现在会引用 paul/master。</p>
<p>如果要移除一个远程仓库，可以使用 <code>git remote rm</code> </p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 撤销]]></title>
      <url>https://atjason.com/Git/2.4_Undo.html</url>
      <content type="html"><![CDATA[<h1 id="取消提交"><a href="#取消提交" class="headerlink" title="取消提交"></a>取消提交</h1><p>如果一不小心提交了本不打算提交的内容，可使用下面的命令撤销最近一次的提交。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset --soft HEAD~</div></pre></td></tr></table></figure>
<h1 id="重新提交"><a href="#重新提交" class="headerlink" title="重新提交"></a>重新提交</h1><p>有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行带有 –amend 选项的提交命令尝试重新提交：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend</div></pre></td></tr></table></figure>
<p>这个命令会将暂存区中的文件提交。 如果自上次提交以来你还未做任何修改（例如，在上次提交后马上执行了此命令），那么快照会保持不变，而你所修改的只是提交信息。</p>
<a id="more"></a>
<h2 id="取消暂存区的文件"><a href="#取消暂存区的文件" class="headerlink" title="取消暂存区的文件"></a>取消暂存区的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git reset HEAD &lt;file&gt;</div><div class="line">git unstage &lt;file&gt;</div></pre></td></tr></table></figure>
<h2 id="撤消工作目录中已修改的文件"><a href="#撤消工作目录中已修改的文件" class="headerlink" title="撤消工作目录中已修改的文件"></a>撤消工作目录中已修改的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout &lt;file&gt;</div></pre></td></tr></table></figure>
<p><strong>IMPORTANT</strong><br>你需要知道 git checkout [file] 是一个危险的命令，这很重要。 你对那个文件做的任何修改都会消失 - 你只是拷贝了另一个文件来覆盖它。 除非你确实清楚不想要那个文件了，否则不要使用这个命令。</p>
<p>如果你仍然想保留对那个文件做出的修改，但是现在仍然需要撤消，我们将会在 Git 分支 介绍保存进度与分支；这些通常是更好的做法。</p>
<p>记住，在 Git 中任何 已提交的 东西几乎总是可以恢复的。 甚至那些被删除的分支中的提交或使用 –amend 选项覆盖的提交也可以恢复（阅读 <a href="https://git-scm.com/book/zh/v2/ch00/_data_recovery" target="_blank" rel="external">数据恢复</a> 了解数据恢复）。 然而，任何你未提交的东西丢失后很可能再也找不到了。</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 提交历史]]></title>
      <url>https://atjason.com/Git/2.3_CommitHistory.html</url>
      <content type="html"><![CDATA[<p>git log 有许多选项可以帮助你搜寻你所要找的提交， 接下来我们介绍些最常用的。</p>
<ul>
<li>-p，显示每次提交的内容差异</li>
<li>-n，仅显示最近 n 次提交</li>
<li>–stat，显示每次提交的、简略的统计信息</li>
<li>–oneline，<code>--pretty=oneline</code> 的简写</li>
<li>–pretty，指定格式，有一些内建的子选项：oneline, short，full 和 fuller。但最有意思的是 format，可以定制要显示的记录格式。 </li>
<li>–graph，添加了一些ASCII字符串来形象地展示你的分支、合并历史</li>
<li>–grep，仅显示含指定关键字的提交，如 <code>git log --grep=&quot;test&quot;</code></li>
<li>-S，仅显示添加或移除了某个关键字的提交，如 <code>git log -Sfunction_name</code></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 记录每次更新到仓库]]></title>
      <url>https://atjason.com/Git/2.2_RecordChanges.html</url>
      <content type="html"><![CDATA[<p>文件的状态：已跟踪或未跟踪。 已跟踪的状态可能处于未修改，已修改或已放入暂存区。 </p>
<p><img src="https://ps.toolinbox.net/yfdej.jpg" alt=""></p>
<h1 id="检查当前文件状态"><a href="#检查当前文件状态" class="headerlink" title="检查当前文件状态"></a>检查当前文件状态</h1><p>要查看哪些文件处于什么状态，可以用 git status 命令，其输出十分详细，但其用语有些繁琐。 如果你使用 git status -s 命令或 git status –short 命令，你将得到一种更为紧凑的格式输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git status -s</div><div class="line">?? LICENSE.txt</div><div class="line">A  lib/git.rb</div><div class="line">M README</div><div class="line">MM Rakefile</div></pre></td></tr></table></figure></p>
<ul>
<li>新添加的未跟踪文件前面有 ?? 标记</li>
<li>新添加到暂存区中的文件前面有 A 标记</li>
<li>修改过的文件前面有 M 标记<ul>
<li>M 有两个可以出现的位置，出现在右边的 M 表示该文件被修改了但是还没放入暂存区，出现在靠左边的 M 表示该文件被修改了并放入了暂存区</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="跟踪新文件"><a href="#跟踪新文件" class="headerlink" title="跟踪新文件"></a>跟踪新文件</h1><p>使用命令 <code>git add</code> 开始跟踪一个文件。git add 命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件。</p>
<h1 id="暂存已修改文件"><a href="#暂存已修改文件" class="headerlink" title="暂存已修改文件"></a>暂存已修改文件</h1><p>要暂存这次更新，需要运行 <code>git add</code> 命令。 这是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等。</p>
<p>实际上 Git 只不过暂存了你运行 git add 命令时的版本， 如果你之后又有修改，需要重新运行 git add 把最新版本重新暂存起来。</p>
<h1 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h1><p>一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。 来看一个实际的例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># 忽略所有以 .o 或 .a 结尾的文件</div><div class="line">*.[oa]</div><div class="line"></div><div class="line"># 忽略所有以波浪符（~）结尾的文件</div><div class="line">*~</div><div class="line"></div><div class="line"># no .a files</div><div class="line">*.a</div><div class="line"></div><div class="line"># but do track lib.a, even though you&apos;re ignoring .a files above</div><div class="line">!lib.a</div><div class="line"></div><div class="line"># only ignore the TODO file in the current directory, not subdir/TODO</div><div class="line">/TODO</div><div class="line"></div><div class="line"># ignore all files in the build/ directory</div><div class="line">build/</div><div class="line"></div><div class="line"># ignore doc/notes.txt, but not doc/server/arch.txt</div><div class="line">doc/*.txt</div><div class="line"></div><div class="line"># ignore all .pdf files in the doc/ directory</div><div class="line">doc/**/*.pdf</div></pre></td></tr></table></figure>
<p>文件 .gitignore 的格式规范如下：</p>
<ul>
<li>所有空行或者以 ＃ 开头的行都会被 Git 忽略。</li>
<li>可以使用标准的 glob 模式匹配。</li>
<li>匹配模式可以以（/）开头防止递归。</li>
<li>匹配模式可以以（/）结尾指定目录。</li>
<li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li>
</ul>
<p>所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。</p>
<ul>
<li>问号（?）只匹配一个任意字符</li>
<li>在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）</li>
<li>使用两个星号（<em>) 表示匹配任意中间目录，比如 `a/*</em>/z<code>可以匹配</code>a/z<code>,</code>a/b/z<code>或</code>a/b/c/z`等。</li>
</ul>
<p>GitHub 有一个十分详细的针对数十种项目及语言的 .gitignore 文件列表，你可以在 <a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a> 找到。</p>
<h1 id="查看修改"><a href="#查看修改" class="headerlink" title="查看修改"></a>查看修改</h1><p>要查看工作目录已经修改、但还没有暂存的修改，不加参数直接输入 <code>git diff</code></p>
<p>要查看已暂存、将要提交的内容，可以用 <code>git diff --staged</code></p>
<p>要查看两次提交、或再个 tag 间的不同，可以用 <code>git diff 255de80 f3199</code></p>
<h2 id="Git-Diff-的插件版本"><a href="#Git-Diff-的插件版本" class="headerlink" title="Git Diff 的插件版本"></a>Git Diff 的插件版本</h2><p>如果你喜欢通过图形化的方式或其它格式输出方式的话，可以使用 git difftool 命令来用 Araxis ，emerge 或 vimdiff 等软件输出 diff 分析结果。 使用 git difftool –tool-help 命令来看你的系统支持哪些 Git Diff 插件。</p>
<h1 id="提交更新"><a href="#提交更新" class="headerlink" title="提交更新"></a>提交更新</h1><p>在 <code>git commit</code> 命令后添加 -m 选项，将提交信息与命令放在同一行，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;Story 182: Fix benchmarks for speed&quot;</div></pre></td></tr></table></figure></p>
<h2 id="跳过使用暂存区域"><a href="#跳过使用暂存区域" class="headerlink" title="跳过使用暂存区域"></a>跳过使用暂存区域</h2><p>尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。 Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -a -m &apos;added new benchmarks&apos;</div></pre></td></tr></table></figure></p>
<h1 id="移除文件"><a href="#移除文件" class="headerlink" title="移除文件"></a>移除文件</h1><p>要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交。 可以用 <code>git rm</code> 命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。<br>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），或者使用 <code>git unstage</code> 来撤销暂存。</p>
<p>另外一种情况是，我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 为达到这一目的，使用 <code>--cached</code> 选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git rm --cached README</div></pre></td></tr></table></figure></p>
<p>git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式。 比方说：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git rm log/\*.log</div></pre></td></tr></table></figure></p>
<p>注意到星号 * 之前的反斜杠 \， 因为 Git 有它自己的文件模式扩展匹配方式，所以我们不用 shell 来帮忙展开。 此命令删除 log/ 目录下扩展名为 .log 的所有文件。 </p>
<h1 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h1><p>要在 Git 中对文件改名，可以这么做：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git mv file_from file_to</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git: 获取 Git 仓库]]></title>
      <url>https://atjason.com/Git/2.1_GetGit.html</url>
      <content type="html"><![CDATA[<h1 id="在现有目录中初始化仓库"><a href="#在现有目录中初始化仓库" class="headerlink" title="在现有目录中初始化仓库"></a>在现有目录中初始化仓库</h1><p>进入该项目目录并输入：<code>git init</code></p>
<p>该命令将创建一个名为 .git 的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的骨干。</p>
<p>通过 git add 命令来实现对指定文件的跟踪，然后执行 git commit 提交：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add *.c</div><div class="line">git add LICENSE</div><div class="line">git commit -m &apos;initial project version&apos;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="克隆现有的仓库"><a href="#克隆现有的仓库" class="headerlink" title="克隆现有的仓库"></a>克隆现有的仓库</h1><p>克隆仓库的命令格式是 git clone；如果你想在克隆远程仓库的时候，自定义本地仓库的名字，你可以使用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/libgit2/libgit2 mylibgit</div></pre></td></tr></table></figure></p>
<p>这将执行与上一个命令相同的操作，不过在本地创建的仓库名字变为 mylibgit。</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0805 - 买椟还珠]]></title>
      <url>https://atjason.com/daily/2016-08-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/e4c6g.jpg" alt=""></p>
<p>事情是这样的：</p>
<blockquote>
<p>准备学 Git<br>使用 Markdown 做笔记<br>发布到 GitBook 上<br>集成到 GitHub 中</p>
</blockquote>
<p>已经绕了一大圈、时间也花得差不多了，发现 Git 还没学…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0804 - 空]]></title>
      <url>https://atjason.com/daily/2016-08-04.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/pmg23.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0803 - 试试就知道]]></title>
      <url>https://atjason.com/daily/2016-08-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/h5kbk.jpg" alt=""></p>
<p>很多时候我们在网上查，这个怎么样、哪个好？通常是得不到答案。</p>
<p>通常，更靠谱的是：自己试一试。而且，试的成本，很多时候比我们想象的要低。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0802 - 用户就是责任]]></title>
      <url>https://atjason.com/daily/2016-08-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/svh62.jpg" alt=""></p>
<ul>
<li>从一个点子、到技术可行性研究，不一样；</li>
<li>从技术可选性研究通过、到最小原型，不一样；</li>
<li>从最小原型、到可运营的产品，不一样；</li>
<li>从可运营的产品、到有 1 位用户，不一新；</li>
<li>从 1 位用户、到 2 位用户，不一样；</li>
<li>从 2 位用户、到 10 位用户，不一样；</li>
<li>从 10 位用户、到 100 位用户，不一样；</li>
<li>从 100 位用户、到 1000 位用户，不一样；</li>
<li>…</li>
</ul>
<p>用户就是责任。用户越多、责任越重。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0801 - 寻找原力]]></title>
      <url>https://atjason.com/daily/2016-08-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1slqn.jpg" alt=""></p>
<p>产品推广不力、状态不佳，寻找原力中…</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0731 - 转眼就到 7 月底]]></title>
      <url>https://atjason.com/daily/2016-07-31.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/b95gc.jpg" alt=""></p>
<p>只刻 7 月初上架了 iPic ，还没做什么，转眼就到月底了。</p>
<p>期间，做的最大的事也就是 EAWiFi 了。不过，也只是做了比最小原型多一点的程度。而且，也并没有完全推出去。</p>
<p>感觉时间过得太快了，有压力了。早上，定出了 8 月份要做的 6 件事。远的也不想、想了也是徒增焦虑。关注眼下、做好 8 月份这 6 件事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0730 - 历史包袱]]></title>
      <url>https://atjason.com/daily/2016-07-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/sseoo.jpg" alt=""></p>
<p>新版 macOS Sierra 已经开始公测，一些朋友已经开始使用新版了。而之前开发的几款 MacApp，出现不同程度的不兼容的问题。于是，要一个个再撸一遍了。</p>
<p>看来是，是时候考虑开发一个中型的 App 了。不然总是这些小的，维护成本也不低，开发的性价比就显得太低了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0729 - 几件事同时做]]></title>
      <url>https://atjason.com/daily/2016-07-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/peqnp.jpg" alt=""></p>
<p>几件事同时做，感觉也不错。</p>
<p>今天上午本打算做 iPic 改进，可实际上效率很低，可能和这几天持续做 iPic 开发有关。</p>
<p>无奈，下午切换到 EAWiFi，没想到效率还不错，也没犯什么低级错误。于是，到了晚上，EAWiFi 基本又上了个台阶，达到稳定的 v3 版本。挺开心。</p>
<p>有几件事切换着，可避免大脑的某一区域疲劳，也算是别样的“劳逸结合”。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0728 - 要被拍死的感觉]]></title>
      <url>https://atjason.com/daily/2016-07-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/grnyg.jpg" alt=""></p>
<p>今天看到别人分享的一个 App: <a href="http://www.v2ex.com/t/295433" target="_blank" rel="external">Snipaste</a>，明显有一种长江后浪拍前浪、要被拍死的感觉。</p>
<p>人家可是一名在校大学生啊。</p>
<p>在 V2EX 上分享一天内就有几百个回复，。软件本身异常强大，虽说已经强大到复杂的程度，但对于截图软件来说，一些少量的高级操作，还是有很强的使用场景和吸引力的。</p>
<p>已经跟作者联系，看能不能一起合作开发 Mac 版。多和年轻人接触，也让自己变年轻。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0727 - 提前完成任务了怎么办？]]></title>
      <url>https://atjason.com/daily/2016-07-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/fm1wm.jpg" alt=""></p>
<p>今天早上计划了今天要搞定的 iPic 的几件事，结果不到傍晚就搞定了。之后，就感觉没有动力、不想干活了；休息吧。</p>
<p>今天，小米发布了笔记本。从消费者的角度，感觉是很舒服的，至少多了个选择。外观确实很精致（且不论像谁、抄谁的疸），在一堆黑塑料的笔记本们中，确实比较出众。</p>
<p>像笔记本这么成熟、成熟到已经微利的行业，只要用心做，还是能做出精品、还是有机会的。同样，在软件领域，多的是粗糙的软件、也多的是机会，就看自己是否用心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0726 - 不能写一天代码]]></title>
      <url>https://atjason.com/daily/2016-07-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/20pui.jpg" alt=""></p>
<p>今天集中精力改进 iPic 中七牛、又拍等图床的支持。上午、下午持续代码，效率还不错。等到了晚上，明显感觉不行了。主要了是感觉到累，脑子转不动，效率自然就降低了。虽然最后通过延长时间的方式（即熬夜）把事情做完了，但感觉并不爽。</p>
<p>以后要注意调节了。一天可分为上午、下午、晚上三大块。最好是选择其中 2 块来持续工作，另一块时间用来做别的事情，调节大脑不同区域工作，更有效率。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0725 - 几个星期没写代码，手生了]]></title>
      <url>https://atjason.com/daily/2016-07-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/gr2ei.jpg" alt=""></p>
<p>iPic 上架后，花了几个星期折腾 EAWiFi. 今天重新开始改进 iPic，发现写代码时明显手生了。</p>
<p>还是要专注，做一件事、一直做，才能成为这个领域的专家，高效地干活，做出精品。</p>
<p>赚钱的渠道有很多，也会有很多的诱惑。要能抵制这些诱惑，坚持做自己擅长的，做出精品 Mac App</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0724 - Bong 3 手环初体验]]></title>
      <url>https://atjason.com/daily/2016-07-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/bm5iu.jpg" alt=""></p>
<p>周四下单，周日终于寄到了，这速度，真不算快。</p>
<p>从功能上讲，我对手环主要有两个需求：看时间、记录频数。</p>
<ul>
<li>看时间是刚需，因为毕竟已经戴手环了，基本也不会再戴手表了。所以，还是需要看时间的。</li>
<li>步数，主要是大概记录上当天的运动量，督促自己保持运动。</li>
</ul>
<p>目前来看，Bong 3 基本还是满足需求的。不满意的地方：</p>
<ul>
<li>翻腕看时间这个功能，有时不灵敏，即翻了手腕、时间却不出来，又不能用手点一下就出来，不舒服。而且，会等待约 1 秒后再出来，这也是比较难受的地方。</li>
<li>测心率这个功能，本来挺好的，可以在测心率期间，手腕必须是抬着的。一旦放下，测量就停止了。或者可能还在继续测量，但毕竟屏幕暗了，也就看不到了。</li>
</ul>
<p>核心的功能做不精，其他做再精也没用，甚至会减分。目前，我打 69 分。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0723 - 别太在意]]></title>
      <url>https://atjason.com/daily/2016-07-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/bkytt.jpg" alt=""></p>
<p>周四的时候抢了 Bong 3 手环，直到今天才寄出来。在此期间，查了我好几次快递状态，希望能早点发货、早点收到。但我相信，负责 Bong 3 发货的、忙碌的官方人员，一定不会感受到我的感受。</p>
<p>今天，有个 iPic 用户提了一个需求，是去掉上传至七牛云时去掉日期前缀。感情也很强烈，说是很需要这个功能、没有就会很难受。但其实，我并不觉得这是个很难受的地方，甚至可以是自己太纠结而自找难受。</p>
<p>其实，我们在意的东西，在别人看来，通常并没什么。另外，即使是现在在意的东西，等得到后、或过段时间至回头来看，也没当初那么在意了，甚至会为当初那么在意而觉得可笑。</p>
<p>少一份执意，多一分轻松</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0722 - 微信公众号 + iPic]]></title>
      <url>https://atjason.com/daily/2016-07-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/nidhp.jpg" alt=""></p>
<p>今天看了下微信公众号后台，是开放 API 的，也即可以使用 iPic 上传图片至微信公众号的图片素材中。恩，不错， 很不错。</p>
<p>不过，由于微信公众号发文章的限制，使用流程还不是很顺畅，能起到的作用也不是很大。需要再好好研究下，找到最佳使用流程。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0721 - 浪费时间好心疼]]></title>
      <url>https://atjason.com/daily/2016-07-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/86w7g.jpg" alt=""></p>
<p>今天有去医院，不注意丢了病历，到家才发现。于是又返回医院去找，结果还没找到。</p>
<p>最关键的是，上午已经坐在电脑前开始干活了，又不得不离开，浪费了几个小时，也浪费了很好的状态，实在是太心疼了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0720 - 一不小心成“公众人物”了]]></title>
      <url>https://atjason.com/daily/2016-07-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/r4s4h.jpg" alt=""><br>今天，上了爱范儿的 Mind 访谈节目，算是在公众面前小露了个脸：<a href="http://www.ifanr.com/688040" target="_blank" rel="external">这个独立开发者，开发出 4 款产品，1 款被苹果推荐</a> 感谢介绍。</p>
<p>而且，一不小心发现了一个模仿 iPic 的 App 上架 Mac App Store. 图床神器 iPic 这么快就被致敬，有些不适应。简看了下，目前做的还比较一般。不过，也能明显感受到压力，我也要加紧了，不然很容易被模仿、被超越。</p>
<p>另外，一不小心主看了 MWeb 最近的排名，哇噻，火得不行，直接出现在分类的图标中。别忘了，售价 ￥50 呢。有动力、有目标了，先榜样看齐，iPic 也要做到分类图标、编辑推荐！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0719 - 花点时间打磨自己的工具]]></title>
      <url>https://atjason.com/daily/2016-07-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ge422.jpg" alt=""></p>
<p>如果你去菜场买肉，你会发现他们的刀非常锋利，你也会经常发现他们在磨刀。</p>
<p>程序员也是一样，每过一段时间，我们就要花点时间打磨自己的工具。在之前的开发过程中，可能会有一些用得不顺手的地方。但因为项目进度的原因，都忍了。当项目不是很紧张的时候，回头看看那些之前用得不顺手、效率不不高的地方，花点时间打磨一下，对自己接下来的工作非常有帮助。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0718 - 搞定另外两台翻墙路由器]]></title>
      <url>https://atjason.com/daily/2016-07-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/u5y3g.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0717 - 搞定 ShadowSocks & fail2ban]]></title>
      <url>https://atjason.com/daily/2016-07-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/jaaub.jpg" alt=""></p>
<p>今天主要搞定：<a href="http://atjason.com/IT/ss_fail2ban.html">使用 fail2ban 保护 ShadowSocks</a></p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 fail2ban 保护 ShadowSocks]]></title>
      <url>https://atjason.com/IT/ss_fail2ban.html</url>
      <content type="html"><![CDATA[<p>如果大家在自己的 VPS 上搭 ShadowSocks，总会有贱人来扫描、破解。使用 fail2ban，可以有效地屏蔽这些贱人的 IP，提高安全性。</p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li>本文不是 ShadowSocks 或 fail2ban 的科普贴，假定大家已经安装，并对二者有基本的了解</li>
<li>本文使用 ShadowSocks 是多用户版、不是单用户版 </li>
<li>本文服务器端为 Ubuntu 16.04 LTS</li>
</ul>
<h1 id="ShadowSocks-端设置"><a href="#ShadowSocks-端设置" class="headerlink" title="ShadowSocks 端设置"></a>ShadowSocks 端设置</h1><p>注：我这里 ShadowSocks 是安装在 <code>/usr/local/shadowsocks</code> 中，下面的文件是和此路径相关的，大家需要根据自己的情况调整路径。</p>
<a id="more"></a>
<h2 id="配置-ShadowSocks-的日志"><a href="#配置-ShadowSocks-的日志" class="headerlink" title="配置 ShadowSocks 的日志"></a>配置 ShadowSocks 的日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /usr/local/shadowsocks/config.py</div></pre></td></tr></table></figure>
<p>更新日志相关的部分：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#LOG CONFIG</span></div><div class="line">LOG_ENABLE = <span class="keyword">True</span></div><div class="line">LOG_LEVEL = logging.ERROR</div><div class="line">LOG_FILE = <span class="string">'/var/log/shadowsocks.log'</span></div></pre></td></tr></table></figure>
<p>注意：需要手动创建 <code>/var/log/shadowsocks.log</code>，并保证运行 ShadowSocks 的账户有写权限。</p>
<h2 id="调整-ShadowSocks-输出的日志"><a href="#调整-ShadowSocks-输出的日志" class="headerlink" title="调整 ShadowSocks 输出的日志"></a>调整 ShadowSocks 输出的日志</h2><p>为什么要调整？这和下文介绍的 fail2ban 有关。fail2ban 要求日志以日期开头，但并不能智能识别所有的日期格式、也不支持为其配置日期格式。所以，需要配置 ShadowSocks 输出的日志格式能被 fail2ban 支持。更多 fail2ban 自定义 filter 中正则表达式的介绍，请 <a href="http://www.fail2ban.org/wiki/index.php/MANUAL_0_8" target="_blank" rel="external">参考这里</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cp /usr/local/shadowsocks/servers.py /usr/local/shadowsocks/servers.py.bak</div><div class="line">vi /usr/local/shadowsocks/servers.py</div></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>修改自己不熟悉的配置文件前，先备份，始终是好习惯。</li>
<li>这里是 <code>servers.py</code>（即多用户版），不是 <code>server.py</code></li>
</ul>
<p>将以下输出日志的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logging.basicConfig(format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,datefmt=<span class="string">'%Y, %b %d %a %H:%M:%S'</span>,filename=config.LOG_FILE,level=config.LOG_LEVEL)</div></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logging.basicConfig(format=<span class="string">'%(asctime)s %(levelname)s %(message)s'</span>,datefmt=<span class="string">'%Y-%m-%d %H:%M:%S'</span>,filename=config.LOG_FILE,level=config.LOG_LEVEL)</div></pre></td></tr></table></figure>
<p>改动并不大：</p>
<ul>
<li>将 <code>%Y, %b %d %a</code> 改为 <code>%Y-%m-%d</code>，以实际日期示例：将 <code>2016, Jul 17 Sun</code> 改为 <code>2016-07-17</code></li>
<li>去掉代码行的输出：<code>%(filename)s[line:%(lineno)d]</code></li>
</ul>
<h2 id="重启-ShadowSocks"><a href="#重启-ShadowSocks" class="headerlink" title="重启 ShadowSocks"></a>重启 ShadowSocks</h2><p>因为这和你启动 ShadowSocks 的方式有关，这里就不提供示例代码了。</p>
<h2 id="创建-ShadowSocks-错误日志"><a href="#创建-ShadowSocks-错误日志" class="headerlink" title="创建 ShadowSocks 错误日志"></a>创建 ShadowSocks 错误日志</h2><p>比如，你可以故意在 ShadowSocks 客户端设置错误的密码，然后尝试使用 ShadowSocks 代理访问，应该就会在 VPS 端产生错误日志。</p>
<p>然后，检查 ShadowSocks 日志 <code>/var/log/shadowsocks.log</code> 是否有类似下面的错误信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2016-07-17 18:05:03 ERROR can not parse header when handling connection from 112.10.137.6:20463</div></pre></td></tr></table></figure>
<p>至此，ShadowSocks 端的设置就结束了。</p>
<h1 id="fail2ban-端设置"><a href="#fail2ban-端设置" class="headerlink" title="fail2ban 端设置"></a>fail2ban 端设置</h1><h2 id="创建-ShadowSocks-过滤器"><a href="#创建-ShadowSocks-过滤器" class="headerlink" title="创建 ShadowSocks 过滤器"></a>创建 ShadowSocks 过滤器</h2><p>fail2ban 默认并没有设置 ShadowSocks 过滤器（当然了，只有天朝才需要梯子；而 fail2ban 并不是国人开发的，自然没有这种多余的东西），需要我们按照 fail2ban 的规则来创建。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/fail2ban/filter.d/shadowsocks.conf</div></pre></td></tr></table></figure>
<p>添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[INCLUDES]</div><div class="line">before = common.conf</div><div class="line"></div><div class="line">[Definition]</div><div class="line">_daemon = shadowsocks</div><div class="line">failregex = ^\s+ERROR\s+can not parse header when handling connection from &lt;HOST&gt;:\d+$</div><div class="line">ignoreregex =</div></pre></td></tr></table></figure>
<p>其中，<code>failregex</code> 就是用来过滤日志中尝试破解 ShadowSocks 的正则表达式。另外，你可以在命令行中测试正式表达式是否正确。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fail2ban-regex &apos;2016-07-17 17:27:37 ERROR can not parse header when handling connection from 112.10.137.6:20238&apos;     &apos;^\s+ERROR\s+can not parse header when handling connection from &lt;HOST&gt;:\d+$&apos;</div></pre></td></tr></table></figure>
<p>输出如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Running tests</div><div class="line">=============</div><div class="line"></div><div class="line">Use   failregex line : ^\s+ERROR\s+can not parse header when handling con...</div><div class="line">Use      single line : 2016-07-17 17:27:37 ERROR can not parse header whe...</div><div class="line"></div><div class="line"></div><div class="line">Results</div><div class="line">=======</div><div class="line"></div><div class="line">Failregex: 1 total</div><div class="line">|-  #) [# of hits] regular expression</div><div class="line">|   1) [1] ^\s+ERROR\s+can not parse header when handling connection from &lt;HOST&gt;:\d+$</div><div class="line">`-</div><div class="line"></div><div class="line">Ignoreregex: 0 total</div><div class="line"></div><div class="line">Date template hits:</div><div class="line">|- [# of hits] date format</div><div class="line">|  [1] Year(?P&lt;_sep&gt;[-/.])Month(?P=_sep)Day 24hour:Minute:Second(?:,Microseconds)?</div><div class="line">`-</div><div class="line"></div><div class="line">Lines: 1 lines, 0 ignored, 1 matched, 0 missed [processed in 0.00 sec]</div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><code>Date template hits:</code> 是指该日志中有满足格式的日期，这也是为什么之前要更新 ShadowSocks 输出的日志格式。</li>
<li><code>Failregex: 1 total</code> 是指有一条满足条件的日志被找到。</li>
</ul>
<h2 id="更新-fail2ban-配置"><a href="#更新-fail2ban-配置" class="headerlink" title="更新 fail2ban 配置"></a>更新 fail2ban 配置</h2><p>接下来，需要告诉 fail2ban 来检查 ShadowSocks 日志、并更新 iptables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/fail2ban/jail.local</div></pre></td></tr></table></figure>
<p>添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[shadowsocks]</div><div class="line">enabled = true</div><div class="line">filter = shadowsocks</div><div class="line">port = 10000:20000</div><div class="line">logpath = /var/log/shadowsocks.log</div><div class="line">maxretry = 5</div><div class="line">bantime = 43200</div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li><code>port</code> 为端口范围，设定为 ShadowSocks 所监听的端口范围</li>
</ul>
<h2 id="重启-fail2ban"><a href="#重启-fail2ban" class="headerlink" title="重启 fail2ban"></a>重启 fail2ban</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service fail2ban restart</div></pre></td></tr></table></figure>
<p>查看 fail2ban 中 ShadowSocks 监控的状态：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo fail2ban-client status shadowsocks</div></pre></td></tr></table></figure>
<p>会有类似下面的输出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Status for the jail: shadowsocks</div><div class="line">|- Filter</div><div class="line">|  |- Currently failed:	0</div><div class="line">|  |- Total failed:	949</div><div class="line">|  `- File list:	/var/log/shadowsocks.log</div><div class="line">`- Actions</div><div class="line">   |- Currently banned:	1</div><div class="line">   |- Total banned:	1</div><div class="line">   `- Banned IP list:	112.10.137.6</div></pre></td></tr></table></figure>
<p>可以看出，上面日志中的 IP <code>112.10.137.6</code> 已经被屏蔽。</p>
<p>或者，也可以通过 iptables 来查看：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo iptables -S</div></pre></td></tr></table></figure>
<p>其中，会有类似下面的记录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A f2b-shadowsocks -s 112.10.137.6/32 -j REJECT --reject-with icmp-port-unreachable</div></pre></td></tr></table></figure>
<p>至此，全文结束。</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0716 - 搞定 iptables]]></title>
      <url>https://atjason.com/daily/2016-07-16.html</url>
      <content type="html"><![CDATA[<p>今天最大的成绩就是，搞定了一直觉得很麻烦、很神秘的 itables: <a href="http://atjason.com/en/IT/iptables.html">http://atjason.com/en/IT/iptables.html</a></p>
<p>另外，DigitalOcean 的文档确实不错，都比较浅显易懂，顿时对 DO 的印象好了很多，以后 VPS 考虑在 DO 上建。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0715 - 被 Vultr 搞郁闷了]]></title>
      <url>https://atjason.com/daily/2016-07-15.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xzn5v.jpg" alt="2016-07-15_21:09:04.jpg"></p>
<p>本来这几天搞服务器效率就不是很高，结果下午突然发现服务器连不上了。进去一看：被 Vultr 给挂了！</p>
<p>之前，Vultr 确实给我发邮件了。不过，由于一直在忙着配置服务器，给忽略了。关键是，关服务器的理由让我难以接受：对方需要我添加新的支付方式，还要提供银行卡的拍照信息、证件照等信息。可我明明已经使用 Paypal 支付了，为什么还要验证这些信息？谁难保证我的这些敏感信息不被泄漏。</p>
<p>被 Vultr 恶心到了，等里面的钱用完了，迁移至 DigitialOcean 或其他云服务。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0714 - EAWiFi 手册]]></title>
      <url>https://atjason.com/daily/2016-07-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/sjcj9.jpg" alt=""></p>
<p>今天效率不高，主要就是完成了 <a href="https://eawifi.net/" target="_blank" rel="external">EAWiFi 手册</a></p>
<ul>
<li>使用了 https，避免内容被审查</li>
<li>图床使用七牛，支持 https</li>
<li>使用 Hexo + Next，和已有博客系统一致</li>
<li>通过 Coding.net 中转</li>
<li>一键部署：同步内容至 Coding.net、从 Coding.net 下载至网站</li>
<li>增加联系我们</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0713 - 愉悦的一天]]></title>
      <url>https://atjason.com/daily/2016-07-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zkebv.jpg" alt=""></p>
<p>早上，明确了今天的目标、要做的事、午后顺序。</p>
<p>然后，按照这个节奏，实现了目标：做好一个 EAWiFi 路由器、基本搭好 SS 后台。</p>
<p>制定计划、实现目标，愉悦，就是这么简单。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0712 - 服务器是个大坑]]></title>
      <url>https://atjason.com/daily/2016-07-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/wjkgc.jpg" alt=""><br>今天折腾了一在的 SS 服务器， 可耻的还没搞定。</p>
<p>服务器真是个大坑。各种软件、各种配置，尤其很多还混在一起，脑子都成糊了。</p>
<p>是坚持、还是放弃，是个问题。</p>
<p>已经做到这里了，明天再给一天，必须告一段落。注意是告一段落，不一定是全部做完。先把所有要做的事列出来，然后按优先级排序，先做重要的事。最后，不重要的做不完，只能放弃了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0711 - 不要抱残守缺]]></title>
      <url>https://atjason.com/daily/2016-07-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/kccrd.jpg" alt=""></p>
<p>今天开始折腾 SS 服务器，其中有个任务是建立面板。三轮摩托车之前用过 AMH，自然就继续用。但由于最新版是每月 6 元的价格，觉得这是一次性的投入，想省下这笔钱，就试着继续使用免费的旧版本。</p>
<p>结果，却花了大量时间。先是这个版本在最新的 Ubuntu 16.04 上不支持，碰到安装问题，一个个搜索、解决。终于搞定安装问题了，在安装其它软件时，又遇到问题：默认安装的 PHP 版本太低了，其它软件不支持。实在不想在这事上再浪费时间，果断放弃。</p>
<p>依然还不想在这事上花钱，就找了另一个面板：LNMP.org 尤其是看到最新版是今年 6 月刚出的，果断上手。现在还在安装，但最新版总是更可靠些。而且，即使有问题，作者、或者别的用户也更可能提供解决方案，不用自己一个个去搜索。恩，这感觉不错。</p>
<p>要与时俱进，不要抱残守缺。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0710 - 自动翻墙路由器搞定一半]]></title>
      <url>https://atjason.com/daily/2016-07-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/iicol.png" alt=""></p>
<p>今天，基本把路由器部分搞定了，只剩下自动生成不同用户的配置文件、并根据配置文件生成路由器固件。可以预见，也就是一个小时的事。</p>
<p>明天，可以全力开搞服务器部分。要注意边想、边研究，边研究、边记录。</p>
<ul>
<li>限期 2 天</li>
<li>基本目标：配置单个优化后的 SS 服务器</li>
<li>争取：多服务器间共享账户</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0709 - 自动翻墙路由器渐入佳境]]></title>
      <url>https://atjason.com/daily/2016-07-09.html</url>
      <content type="html"><![CDATA[<p>今天折腾了一天的自动翻墙路由器，基本搞定了在路由器端上外网的主体问题。明天继续完善剩下的事情，并补全测试用例。</p>
<p>再一次感受到，从通过技术可行性研究、到成熟的产品，中间还差着非常多。既然已经在这事上花了不少时间、也还算看好这事，就尽力去做吧，争取能弄出个样子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0708 - 放空]]></title>
      <url>https://atjason.com/daily/2016-07-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2d48g.jpg" alt=""></p>
<p>今天放空，没做什么事。</p>
<p>晚上看了《第 2 情书》，挺好看的。不好意思的是，是从网上下载的、没去影院付费支持。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0707 - 腰突然痛了]]></title>
      <url>https://atjason.com/daily/2016-07-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/h97vb.jpg" alt=""></p>
<p>早上起床，突然发现一侧的腰很痛。也不能说很痛，就是总感觉不舒服，尤其动到某种姿势时，很痛。</p>
<p>不知道是不是睡觉姿势不对？但很可能是最终坐的时间太长了，尤其天气热，并没有靠在棒子上，导致腰部没有支撑，长期处于紧张的状态，就出现了问题。</p>
<p>最简单的办法，要舍得开空调，这样才可能把背靠在棒子上、减轻腰部压力。再有，就是要多运动了，不能太长时间坐着不动。</p>
<p>没想到这么早就开始有腰部的问题，哎</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0706 - 从一个山峰，到另一个山峰]]></title>
      <url>https://atjason.com/daily/2016-07-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zn814.jpg" alt="2016-07-06_23:13:17.jpg"></p>
<p>爬到山顶，感觉是很好的：山风拂面、俯看全城。</p>
<p>可这种感觉并不持久，你也不能总呆在山顶。接下来要做的事是：下山、爬另一座山峰。</p>
<p>iPic 1.1.0 上线，反响很好，这是一座山峰。回顾之前所有经历的艰难，已经看不见；要看见的，是爬到另一座山峰的路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0705 - 做一个好产品，感觉真好]]></title>
      <url>https://atjason.com/daily/2016-07-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/yhcny.jpg" alt=""></p>
<p>iPic 上架后，收到一边倒的好评。周围的朋友也表示：真心喜欢。</p>
<p>这种感觉，真好！</p>
<p>回顾起来，感觉这几点算是经验吧：</p>
<ul>
<li>真需求。不论强弱，至少是真需求，也就是说，大家确实是需要这个东西、这个东西确实能给大家带来便利。</li>
<li>精简、高效。iPic 可以集成更多功能，但这样反而会让更主要的功能被冲淡、变得不好用。所以，我一起坚持把 iPic 的功能限定在图片上传，并不做图片管理，也不会做文件上传这种横向的功能。</li>
<li>充分内测。同一个功能，自己的使用场景，和别人是不一样的；进而，自己所习惯的交互，和别人也是不一样的。充分内测，可以发现这些地不一样，找到最大化公约数，也就是更多人都能接受的实现方式。</li>
<li>充分测试。这像是废话，但是，也是很容易被忽略的地方：软件不能有严重的问题。回顾 iPic 所有的反馈，没有人说碰到功能上的问题。当然，最严重的是升级不成功（这个确实是很烦的事，下个版本要着重改善），但这其实更多程度上是 App Store 本身的问题、而不是 iPic 的问题。总之，好的产品质量，避免用户给出差评。</li>
</ul>
<p>至于运营、推广，我倒不觉得做得很好。并且，媒体愿意报道 iPic，更多是认可 iPic 本身的功能，以及大家对 iPic 的评价。</p>
<p>继续改进 iPic，继续做出用户愿意手动点赞的产品。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0704 - iPic 正式上架]]></title>
      <url>https://atjason.com/daily/2016-07-04.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/kmspu.jpg" alt=""></p>
<p>经过 2 个月的努力，iPic 终于上架 Mac App Store！</p>
<p>在 V2EX 等平台做推广，还比较受欢迎。对 App 本身，用过的人评价都还不错。</p>
<p>对于收费模式，就有些问题。App 采用的是 免费 + 订阅模式。而订阅模式在国内还不是很能被接受，大家总感觉自己会被一直收钱，却不会意识到这会让首次支付降低、等等好处。最后，没办法，为了让销量好些，不得不五折销售。虽然销量好些了，但明显收被腰斩，算是赔本赚吆喝吧。</p>
<p>明天再花半天时间做运营，开始花精力做自动翻墙路由器。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0703 - 即将上架 iPic]]></title>
      <url>https://atjason.com/daily/2016-07-03.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/d0ivg.jpg" alt=""></p>
<p>忙了整整 2 个月，终于要上架 iPic 了，有点小激动。</p>
<p>虽然上架过程中出了点小意外，导致并不完美。但既然已经发生，也就接受了。</p>
<p>现在，唯一期待的是上架后一切顺利，不要有严重的问题，比如无法上传图片。然后就是期待大家能喜欢，要是能选择订阅就更好啦，嘿嘿。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0702 - 感觉线下消费不景气啊]]></title>
      <url>https://atjason.com/daily/2016-07-02.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/2hkax.jpg" alt=""></p>
<p>今天去逛街，感觉 1 楼、2 楼这种定位高的楼层，人很少。而像负 1 楼这种定价便宜的楼层，人还算可以。</p>
<p>感觉大家消费受价格的影响还是很大的。虽然好的东西，有牌子、品质好，但是没办法，现实中大家受价格的影响还是很大。</p>
<p>不经常出门，坐了公交车，感觉有些晕车；不是老老实实呆家里舒服。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0701 - 不作死就不会死]]></title>
      <url>https://atjason.com/daily/2016-07-01.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/nrc2f.jpg" alt=""></p>
<p>今天干了件很晕的事：不小心发布了还没做好的 iPic. 当时那个郁闷啊，科想把手续剁了。</p>
<p>终于，还是找到了补救的办法，不至于让事情太糟。</p>
<p>其实，也没什么大不了的，天不会塌，即使出了问题也总有补救的办法。</p>
<p>太累了，就不要干活了，至少不要干关键的、重要的活。不然，出了问题，弥补的时间会远大于做这点事所带来的收益。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0630 - 优雅的代码]]></title>
      <url>https://atjason.com/daily/2016-06-30.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/k7t78.jpg" alt=""></p>
<p>今天整整写了一天代码。虽然还想写，无奈眼睛和脖子受不了了。可惜的是，Imgur 还是没有全部搞完，虽然主体已经好了。</p>
<p>早上的时候想的挺好，计划上午搞完，后来推迟到下午，结果晚上也没搞定。又一次认识到：从通过技术可行性研究，到写出优雅的代码、尤其是在复杂业务情况下的优雅代码，差得远。</p>
<p>回顾今天做的事，整体的节奏、方法还是对的，虽然也多走了一些弯路。可能还是经验和能力的问题的，感觉只需要一半的时间就应该能完成今天干的事。</p>
<p>继续磨练，坚持、继续加油！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0629 - 拳不离手]]></title>
      <url>https://atjason.com/daily/2016-06-29.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/tmw1a.jpg" alt=""></p>
<p>这几天一直忙测试、写文案、推广，好几天都没写代码了。</p>
<p>这个状态是不对的。毕竟我本质上是开发者，最核心的能力还是写代码。首先要把东西做出来，这都是一切的根本，是 1000… 前面的 1 。有了这个 1，后面的运营、推广这些 0 才能意义。</p>
<p>另外，总感觉 Imgur 的实现是半成品，都不好意思去推广。明天，充分实现 imgur 的集成，后天晚上重新提交。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0628 - 最难的时刻：推广]]></title>
      <url>https://atjason.com/daily/2016-06-28.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/qyb7b.jpg" alt="2016-06-28_22:35:54.jpg"></p>
<p>iPic 昨天提交上架 Mac App Store、今天被拒。不过不是很担心，已经改好又提交了，应该问题不大。</p>
<p>问题大的是，如何推广。毕竟开发都在自己的设计和掌握中，出不了太大的问题。而运营、推广，则完全在自己控制范围外了。虽然国内有少数败家媒体可以帮忙宣传，但在国外就几乎是一片空白。只能像无头苍蝇一样到处去找 Mac 论坛、网站，然后发帖、发邮件，完全不知道对方会不会回复。</p>
<p>看来自己之前在运营上下的功夫太少了，现在到了补课的时候了。今天就这样吧，期待明天醒来看到审核通过的好消息，然后继续研究如何做海外推广。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0627 - 提交上架总是有些慌乱]]></title>
      <url>https://atjason.com/daily/2016-06-27.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/iesjs.jpg" alt="2016-06-27_23:46:41.jpg"></p>
<p>今天提交 iPic 上架 Mac App Store.</p>
<p>虽然之前已经上架了 3 款 Mac App，但在上架前后，问题有些慌乱。毕竟事情太多太杂，比如 App 名称、关键字、描述、截图、测试、运营文案、等等。相比而言，在开发的时候，虽然难度大些，但一次只需要处理一件事，更专注、也不慌乱。</p>
<p>也许这也是难以避免的，甜蜜的麻烦吧，毕竟看着自己辛苦做的 App 终于要面世了，心里还是很开心的 ^_^</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0626 - 信自己]]></title>
      <url>https://atjason.com/daily/2016-06-26.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/17pul.jpg" alt="2016-06-26_22:03:55.jpg"></p>
<p>有些事情，并没有道理；<br>很多东西，也并没有标准。</p>
<p>到底谁好谁坏，可能根本说不清楚。怎么选？选自己认同的。</p>
<p>尤其是自已做的东西，既然说不清楚，干嘛不用自己看着舒服、自己喜欢的方案。如果你不喜欢，出门右转，再见。</p>
<p>相信自己，毕竟自己在这件事上花了很多时间、心思，其中不得不考虑的地方，并不是随便瞥一眼的人能明白的。</p>
<p>信自己，得永生。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0625 - 不可知]]></title>
      <url>https://atjason.com/daily/2016-06-25.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/eg0xb.jpg" alt="2016-06-25_22:52:14.jpg"></p>
<p>今天折腾 Mac App 内购的事，内购真是个大坑。还没开始，就被坑在一个地方：Invalid Product.</p>
<p>网上查有一堆资料，也有一堆原因导致这个错误。关键的是，出错后没有任何提示信息，导致均价查起，只能正向一个个检查错误。更关键的，还是“等待 24 小时后再试”、“重启电脑” 这样的方案，真的是没有办法的办法。</p>
<p>软件是如此复杂，我们不可能知道其中所有的细节；但其实也没必要知道，只要能想办法绕过坑，解决当下的问题，也是可以的。暂且留下已知的问题，将来某一天，可能答案自己就会浮现出来。</p>
<p>不可知，不知。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0624 - 开放自己的资源]]></title>
      <url>https://atjason.com/daily/2016-06-24.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ln9li.jpg" alt="2016-06-24_21:30:51.jpg"></p>
<p>总是太把自己的资源当回事。帮人转发个东西，就觉得帮了别人多大的忙似的。</p>
<p>另一方面，我们又特别想使用别人的资源，比如让别人转发个东西；尤其想免费使用。</p>
<p>别太小气了，开放自己的资源。只有自己有足够有价值的资源可以给别人转换时，才有人愿意来转换我们的资源。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0623 - 思想要碰撞]]></title>
      <url>https://atjason.com/daily/2016-06-23.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/zxi6o.jpg" alt="2016-06-23_22:43:04.jpg"></p>
<p>今天和几个朋友一起吹牛，最后吹出一个我们都比较看好的项目：房屋测量工具。</p>
<p>也就是可以快速测量房屋的尺寸，并生成 CAD 文件，包含房屋的基本框架。这样可以节约设计师大量重复性的测绘工作，节约绘制基础框架的时间。</p>
<p>思想还是要碰撞的，这样才能想出新的东西。如果单单是我自己，可能永远也想不到这个市场。另外，软件和传统行业结合，也是很好的思考方向。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0622 - 不欠今天的债]]></title>
      <url>https://atjason.com/daily/2016-06-22.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/xzq5e.jpg" alt="2016-06-23_22:43:35.jpg"></p>
<p>昨天晚上发布搞得比较晚，没有写每天的文章。结果今天又有突发性事件，导致又到很晚才回家。昨天的任务变成的今天的负担。</p>
<p>不轻易把今天的事拖到明天，这样可以给明天一个轻松的开始。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0621 - 高手不是懂得多]]></title>
      <url>https://atjason.com/daily/2016-06-21.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ld415.jpg" alt="2016-06-21_23:12:28.jpg"></p>
<p>高手不是懂得多，而是学得快。</p>
<p>技术迭代那么快，市场需求变化那么快 … 之前会什么，可能不再像以前那么重要；重要的是，能快速学习、跟上变化、适应新环境。</p>
<p>“你是做什么的”，这个问题将越来越难以界定，也会更少被问起。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0620 - 把难题放一放]]></title>
      <url>https://atjason.com/daily/2016-06-20.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1nqgn.jpg" alt=""></p>
<p>前几天解决一个难题，折腾了很久都没搞定。没办法，只能放一放。</p>
<p>今天又来搞，比较顺利就解决了。</p>
<p>之后，碰到难题，如果折腾了很久都没搞定、又不是立即要解决了，就先放一放。】等过些时间，换了脑子后，再来解决，说不定就有新的办法、就能顺利解决了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0619 - 别迷失在非必要条件中]]></title>
      <url>https://atjason.com/daily/2016-06-19.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hxpr3.jpg" alt=""></p>
<p>今天注册微信公众号，想用一个独立的邮件注册，就去注册 Gmail 账户。结果 Gmail 注册不顺利，花了 1 个多小时都没搞定，还让心情很差。最后还是随便用个邮箱注册了。</p>
<p>其实，现在想想，一个恰当的邮件并不是注册微信公众号的必要条件，更重要的是微信号、是注册本身。不管什么邮箱，先注册了再说。</p>
<p>事情上，这种事情经常发生。这种所谓的完美主义，却让我们远离目标，在不重要的分支上越走越远，消耗精力、心情。</p>
<p>以后要特别警惕，不管是在分支上走得顺与不顺，都要经常提醒自己：我的目标是什么、现在做的事是实现目标最重要的条件吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0618 - 对不起眼睛]]></title>
      <url>https://atjason.com/daily/2016-06-18.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/9fis0.jpg" alt=""></p>
<p>再搞不出点什么，都对不起自己的眼睛。</p>
<p>最近又感觉视力下降。哎，这个职业啊，整天对头电脑，视力下降是必然的。</p>
<p>拿这么宝贵的资本，如何都不换点什么，真是太不值了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0617 - 远方的宁静]]></title>
      <url>https://atjason.com/daily/2016-06-17.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/q3xu4.jpg" alt=""></p>
<p>追梦路上，<br>是否因别的诱惑而心猿意马？<br>是否被困难阻挠而心生退意？</p>
<p>心有远方的宁静，就不会在意路途的喧嚣</p>
<p>即使目标变得模糊，至少还有光荣与梦想</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0616 - 不能做到哪算哪]]></title>
      <url>https://atjason.com/daily/2016-06-16.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/63m9j.jpg" alt=""></p>
<p>做事，还是需要目标感、方向感。</p>
<p>做到哪算哪，在不出问题时还好，一出问题就比较麻烦。比如，目标一拖在拖、持续工作导致低效率、等等。</p>
<p>更严重的，一直在忙碌的状态，还会掩盖上面的问题。</p>
<p>做事时可以有一定自由发挥空间，但不能离目标太远、太偏离方向。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0615 - 先搭框架、再填充]]></title>
      <url>https://atjason.com/daily/2016-06-15.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/hby0s.jpg" alt=""></p>
<p>先搭框架、再填充。要先考虑总体的设计，然后：</p>
<ul>
<li>根据大的设计，逐步向下推进、细化。</li>
<li>在考虑的过程中，分化出一个个可做的点时。</li>
<li>每做完几个点后，重新从更高的视角、从框架的层面来审视，看有没有问题、重新评估中接下来做什么。</li>
</ul>
<p>如果一上来就沉迷在细节中，很可能发现不了架构上的缺陷、或者说可改进的地方。另外，会对总体缺少把控，这也是项目管理者不愿看到的情况。</p>
<p>当然，在最开始的技术可行性研究阶段，可以先着重研究没不确定的点。等整体上没有大的不确定的点时，就可以开始做总体设计了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0614 - 大气一点]]></title>
      <url>https://atjason.com/daily/2016-06-14.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/f605v.jpg" alt=""></p>
<p>批评容易，建设很难。做人，大气一点。</p>
<p>不管是生活、还是工作，总会有很多让我们不满意的地方。找出其中不合理的地方、并骂之，容易。但要真的把你放到那个位置上、思考问题的解决办法，并不容易。</p>
<p>所以，给在那些位置上的人们多些宽容。多考虑如何解决问题、如何改进，和挖空心思考虑如何吐槽更刻薄比之，更有意义。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0613 - 在一个地方摔倒，换个地方爬起来]]></title>
      <url>https://atjason.com/daily/2016-06-13.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/3l3wf.jpg" alt=""></p>
<p>程序员总会碰到这样的情况：明明是对的，怎么就是不对？</p>
<p>这时候，通常已陷入一种困境。如果继续研究，会效率很低、浪费时间；更关键的，会让心情变得很糟糕，变得很烦燥、厌恶编程。</p>
<p>出现这种情况，可能是是思维陷入某种陷阱中，可能因为忽略了某个关键因素导致的，可能是由于知识盲区而没考虑到某一点，也可能是所依赖的环境的 Bug 导致的。</p>
<p>在这种情况下，建议是：换脑。要么让大脑彻底的放松，什么都不想；要么是做点完全不同的事情，让大脑不同的区域工作。等状态切换过来了，再去攻克这个问题。</p>
<p>其实，在你休息、或做别的事情时，大脑也会在潜意识里思考之前的问题，很可能给你带来意想不到的方案。即使没有，在换脑后，大脑会恢复敏捷；更关键的，心情也会平复下来，可以以更好的状态来解决之前的问题。</p>
<p>这样做，看似耽误了进度、浪费了时间，其实很可能不是。如果在思维的泥潭里继续挣扎，可能会浪费更多的时间，不信你回想下自己之前碰到过的类似事情。</p>
<p>下次再碰到这种情况：换脑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0612 - 在大的世界里，有小的天地]]></title>
      <url>https://atjason.com/daily/2016-06-12.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ivk0m.jpg" alt=""></p>
<p>相信大多数人都认同，未来是在向更大、更复杂、更网络化的方向发展。即使如此，依然会有小的天地。</p>
<ul>
<li><p>比如刘慈欣的小说《微观世界》，就讲述了这样一个故事：一次地球灾难之后，正常人类死绝了、仅存一人。而演化出小到需要放大镜才能看到的新人类。这样的人类对资源的消耗极小，也就更容易生存。一瓶罐头，就可以够他们的一个城市吃一个月；他们的宇宙飞船也只有小木棍那么大。</p>
</li>
<li><p>《蚊人》这部电影中，也讲述了人在变小之后所具务的神奇力量。</p>
</li>
<li><p>就像地球上的氧气，绝大多数由海洋里几乎看不到的藻类所产生的。离开这些小小的藻类，看似强大的人类却会灭绝。</p>
</li>
<li><p>比如人类对于小小的癌细胞、艾滋病，依然无能为力。</p>
</li>
</ul>
<p>这次在京东众筹，我也有点小感受。一个大的、复杂的产品，需要筹更多的钱，才能养活那个养活它的团队，才能让自己生存下去（换个角度，是我们在给产品加功能，还是产品自己为了生存下去，逼着我们给它加功能？）。而一个小的产品，甚至小到养活一个独立开发者的钱，就可以让其生存下去，并不断演化。</p>
<p>小和大，究竟谁的竞争力更强？要谈竞争力，首先要让自己生存下去。更具生存能力的存在，更具竞争力。更大，可能意味着更强，也可能意味着更脆弱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0611 - 被认可]]></title>
      <url>https://atjason.com/daily/2016-06-11.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/3plmn.jpg" alt=""></p>
<p>从小的教育，使得我们追求被认可：做某某事，就可以得到小红花。</p>
<p>一旦没有了小红花，我们该做什么呢？做得对不对呢？</p>
<p>没有人一直能给我们判断，总归要自己判断。我们不能一直为别人做事，总要为自己做。</p>
<p>为了被认可而做事，是幼稚；<br>做事后追求被认可，是不成熟；</p>
<p>被认可，是别人觉得有用后的感叹。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0610 - 回归正常生活]]></title>
      <url>https://atjason.com/daily/2016-06-10.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/l0ip6.jpg" alt=""></p>
<p>马上要结束度假式探亲，要回归正常生活了。</p>
<p>什么是正常生活呢？</p>
<p>生活本是多彩、多变的，可我们对变化的恐惧、对效率的追求，使得我们自己给自己圈了个圈，生活在圈内，稳定、安全、相对高效。不轻易跳出这个圈子、不轻易改变自己的生活。</p>
<p>正常生活，只是生活的一个切片。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0609 - 多试试新东西]]></title>
      <url>https://atjason.com/daily/2016-06-09.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/yp09x.jpg" alt=""></p>
<p>想当初 Android 手机刚流行时，自己却觉得这玩意又贵又不好用，还不如把钱花在更好的笔记本上。结果 …</p>
<p>众筹流行时，自己并未否认其价值，却没有及时抓住机会，试试几个众筹项目。结果，现在去众筹时没有经验，而且众筹也没有之前人气高。</p>
<p>现在在流行直播，自己还是沉浸在网红秀下线的陈旧理解中，殊不知已经有小米直播无人机发布会、罗振宇直播卖书这些高大上的东东。</p>
<p>多试试新东西，万一抓住了下一个大机会呢？把总盯着自己已经会的、难度小的、旧的东西，也别总是用已有的旧观念去看待新东西。</p>
<p>多试试新东西。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0608 - 只要坚持，就不会落很远]]></title>
      <url>https://atjason.com/daily/2016-06-08.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/1oljt.jpg" alt="2016-06-08_07:58:12.jpg"></p>
<p>即便是与高手竞争，只要坚持，就不会落很远。</p>
<p>只要不下牌桌，就总还有机会。</p>
<p>当然，要按照自己的节奏来。生活不是竞赛，生活就是生活，按照自己的节奏过日子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0607 - iPic 在 Indiegogo 上开始众筹]]></title>
      <url>https://atjason.com/daily/2016-06-07.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/w62qt.jpg" alt="2016-06-07_22:07:03.jpg"><br><a href="https://igg.me/at/ipic/" target="_blank" rel="external">iPic 终于上架 Indiegogo 了！</a></p>
<p>没有做很多功课，只要按照官网的要求提交材料，包括文案、截图、视频等素材。也没有很好地考虑怎么预热、营销、首日推广、等等，算是一次盲试，也当是积累经验教训吧。</p>
<p>不过，立马就遇到了在国内的问题：网站打开慢、支持不方便、英文网站、等等。看来还是要在国内上众筹。淘宝竟然不达标，只能在京东上众筹了。这次要更慎重些，考虑得更全面些，争取有个不错的成绩。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0606 - 几乎搞定 Indiegogo 众筹]]></title>
      <url>https://atjason.com/daily/2016-06-06.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/z397b.jpg" alt="2016-06-07_08:21:54.jpg"></p>
<p>本来打算 iPic 在 KickStarter 上众筹的，无奈它必须是指定的国家才能参与。于是转向 Indiegogo.</p>
<p>折腾了 2 天，终于差不多了。期间包括制作视频、写英文文案等，虽然视频依然是凑活的。本打算在 MacBook Pro 仅剩下 5% 的电量时提交的，无奈 PayPal 的验证还没有通过，故而不能在今天提交，遗憾啊。</p>
<p>希望上线后能顺利筹到启动资金吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0605 - 闲着没事，去浪、也别去加功能]]></title>
      <url>https://atjason.com/daily/2016-06-05.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/qnanq.jpg" alt=""></p>
<p>一个产品的核心功能，通常在其最小原型阶段已经实现了。</p>
<p>后续堆积的功能，会随着边际效应价值递减。</p>
<p>更糟糕的，反而会削弱核心功能。比如，交互上的复杂会让核心功能更难用。</p>
<p>如果实在要加，开辟新的产品线也要优于在已有产品中增加功能。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0604 - 未竟全功，不爽]]></title>
      <url>https://atjason.com/daily/2016-06-04.html</url>
      <content type="html"><![CDATA[<p>今天本来有望在一天内搞定 iPic 对又拍云的支持，可惜晚上有点事情，导致没有搞完，不爽啊。</p>
<p>做事拿到结果、完成关键节点很重要，这可以保证做事是有节奏的。<br>比如，昨天我就把 iPic 的上传服务告一段落，今天就可以全心地做又拍云。假如今天把又拍云搞定，明天就可以全心地做别的事情。这样的节奏是很好的，既高效、在节点切换过程中心情是愉悦的。</p>
<p>虽然今次节奏被打乱了，不过更加也意识到了节奏的重要性。以后要注意保持这种高效的节奏。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0603 - 基本完成了 iPic 上传服务]]></title>
      <url>https://atjason.com/daily/2016-06-03.html</url>
      <content type="html"><![CDATA[<p>从此，iPic 不仅是个独立的图床 App，也将自己的图床能力开放出去，方便第三方应用来调用。</p>
<p>明显感觉，开发 App 与开发服务的难度不在一个量级。</p>
<ul>
<li>开发 App，自己完全可控。对于不太好实现的地方，可以使用投机的方式处理。</li>
<li>开发服务则不同，所有地方都是符合标准、尽善尽美。<ul>
<li>要充分测试，保证没有问题；</li>
<li>要稳定可靠，不给第三方应用带来麻烦；</li>
<li>要有多种开发接口，方便不同的人调用；</li>
<li>要有详细的文档，方便开发者上手；</li>
<li>要有技术支持，尤其是第三方应用线上有问题时，要及时跟进；</li>
</ul>
</li>
</ul>
<p>总之，感觉目前做服务还不太成熟，要等 iPic 本身已经成熟稳定时再推广。目前只是完成个最小原型，试探潜在合作者的态度。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0602 - 持续干了一天活，效率低]]></title>
      <url>https://atjason.com/daily/2016-06-02.html</url>
      <content type="html"><![CDATA[<p>看来还是技术底子差些，今天干了一天活，其中大部分是在学习新东西，边上网搜索、边码代码。这种不仅效率低，学到的东西也不扎实。偶尔这样还可以，但如果长期、持续这种状态，得不偿失。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0601 - 开放与合作]]></title>
      <url>https://atjason.com/daily/2016-06-01.html</url>
      <content type="html"><![CDATA[<p>今天 Typora 的作者找到我，说要跟 iPic 合作。我觉得这个点子挺好的：我专注于图片上传、合作伙伴专注于 Markdown 编辑器。</p>
<p>这是个启发，除了 Typora ，可以考虑和更多的 Markdown 编辑器合作，甚至是其他的编辑器。但要保证自己的开放性、强健性，这样对方地愿意跟自己合作。</p>
<p>更进一步的，一个人的能力毕竟是有限的、能干成的事也是有限的。只有跟大家一起合作，才会有更多可能性，给用户带来更多的便利。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0531 - 越成功，包袱越重]]></title>
      <url>https://atjason.com/daily/2016-05-31.html</url>
      <content type="html"><![CDATA[<p>七年最近上线了新的存储区域。这醒好事，可却因为对之前产品的兼容有问题而被骂。</p>
<p>如果问题出现在一个还在开发过程的产品中，可能不是什么大的问题，改掉就是了。<br>可是，偏偏出现在生产环境中，问题就严重了：没有哪个开发者愿意看到因为别人的原因而导致自己的产品不能正常工作、而被用户骂。</p>
<p>产品发展时间越长、越成功，所背的包袱越重。</p>
<p>联想到正在开发中的 iPic ，如果做不到准完美的程度，绝不上架。毕竟在体验期有问题大家还能接受，可还不是上架了、甚至是收费了，那问题可就大了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0530 - 差点忘了黄金原则]]></title>
      <url>https://atjason.com/daily/2016-05-30.html</url>
      <content type="html"><![CDATA[<p>今天在做 iPic 对Imgur 的支持。经过初步的研究，发现这是个很大的坑，几乎想放弃。</p>
<p>但又想了想，导致这个事情比较复杂的原因是要考虑的因素比较多。如果仅考虑主要的因素、服务有这个需求的用户中的主流用户，事情就简化了许多。况且，目前还只是验证需求的阶段，没必要做的很完善。</p>
<p>于是，经过简化，顺便在睡觉前完成了这一功能，感觉挺不错。</p>
<p>黄金原则：用最少的时间，做最重要的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0529 - 保持手热]]></title>
      <url>https://atjason.com/daily/2016-05-29.html</url>
      <content type="html"><![CDATA[<p>正所谓拳不离手、曲不离口，尤其是写代码，必须每天都写，保持手热。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0528 - 创意不需要规律，但做事需要]]></title>
      <url>https://atjason.com/daily/2016-05-28.html</url>
      <content type="html"><![CDATA[<p>还是呆在稳定的、自己熟悉的环境里，效率高。</p>
<p>今天出远门，开启度假式旅游。是很新鲜，接触不同的人和事。可是，也有不好的地方：比如不能规律作息，会觉得困；比如没有稳定的网络环境，一些操作习惯都被打破了。</p>
<p>创意，在变化中捕捉；<br>执行，在稳定中前行。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0527 - 喜欢做技术可行性研究]]></title>
      <url>https://atjason.com/daily/2016-05-27.html</url>
      <content type="html"><![CDATA[<p>产品的生命周期有很多环节，现在很喜欢开始的这个环节：技术可行性研究。</p>
<p>这是一个接触新事物的过程。<br>这个阶段，接触的是自己不了解的领域、不熟悉的技术。这种接触新东西的过程，让人很兴奋、很愉悦。</p>
<p>这是一个创造新事物的过程。<br>期间，杂交各种技术、构想各种可能性，也会迸发出让自己也兴奋的点子。</p>
<p>喜欢做新的、有挑战性的事，然后让其成为经验、变得自然。然后再去征服更新的世界。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0526 - iPic 开始收到各种需求]]></title>
      <url>https://atjason.com/daily/2016-05-26.html</url>
      <content type="html"><![CDATA[<p>这是好事，大家开始用 iPic 了，也就开始不断有真实的需求了。</p>
<p>下一步，就到了产品经理最纠结的时候：需求的取舍。做哪些功能、放弃哪些功能、把产品做成什么样子、怎么做。</p>
<p>最开始时很简单，怎么做都是对的；没有历史包袱，不会即使改好了、还是被已经习惯旧的用户骂。</p>
<p>但做着做着，这种优势就没有了，就有了用户、有了包袱，开始戴着镣铐跳舞。</p>
<p>看三步，走一步。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0525 - iPic 第二个体验版释出]]></title>
      <url>https://atjason.com/daily/2016-05-25.html</url>
      <content type="html"><![CDATA[<p>其实准确的说，并不是今天释出的，而是明天凌晨 1:30 …</p>
<p>这个版本主要还是 2 个目的：</p>
<ul>
<li>验证需求的市场，也即什么人、有多少人需要这样的产品</li>
<li>获取需求，也即大家具体需要什么样的功能、怎么样操作</li>
</ul>
<p>不管怎样，这又是一个自己也会经常使用的工具，希望真的能把它打造成图床神器、图床里的 No. 1 ~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0524 - 今天没什么想法]]></title>
      <url>https://atjason.com/daily/2016-05-24.html</url>
      <content type="html"><![CDATA[<p>今天熬夜把 iPic 中传图的功能做好了，但并不满足，因为没什么想法。</p>
<p>这几天连续地干活，一方面效率已经明显降低了；另一方面，没有时间学习和思考。这是很不对劲的状态。</p>
<p>再加把劲，争取明天把 iPic 的新体验版做出来，然后重新回到每天学习、干活、思考的节奏中。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0523 - 推广有方]]></title>
      <url>https://atjason.com/daily/2016-05-23.html</url>
      <content type="html"><![CDATA[<p>之前觉得推广不好做，现在想想还是没找对用户。</p>
<p>比如，我定位 iPic 的主要用户是博主、编辑、运营，那么，接下来就从这三类人群中找用户。</p>
<ul>
<li>对于博客，可以找知名博客、在 hexo 等博客系统的论坛中找。</li>
<li>对于编辑，一篇编辑出手的文章中都会有编辑本人的联系方式，直接联系就可以了。</li>
<li>对于运营，可以在产品自己的运营渠道中找联系方式，也可以在可能是他们发出的软文中找。</li>
</ul>
<p>关键还是用户定位明确，然后再找用户容易了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0522 - 做别人看不懂的东西，首先少了一堆竞争者]]></title>
      <url>https://atjason.com/daily/2016-05-22.html</url>
      <content type="html"><![CDATA[<p>我在朋友圈介绍自己做的东西，会有朋友说：你说的都是啥，咋都看不懂？</p>
<p>的确，不是他们所处的领域，确实会不了解。虽然不能让他们帮忙好评，可也有好的一面：他们不可能是我的竞争者。</p>
<p>同样的，即使是在圈子内，如果你做的东西不太容易让人理解，有时候并不是坏事。可能是因为你做的东西比较新、或者是自己的思路，别人不太了解。但这并不一定是坏事。坚持下去，说不定以后会有一堆模仿者。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0521 - 没有小众需求]]></title>
      <url>https://atjason.com/daily/2016-05-21.html</url>
      <content type="html"><![CDATA[<p>没有小众需求，只有没找到小众的需求。</p>
<p>一个需求，哪怕再小众，也有迫切需要它的人群中。在这个群体中，这一需求就是大众需求、主流需求。</p>
<p>所以，判断一个需求是否小众、是否要放弃，要看它所对应的的群体，能否支撑起你所期望的赢利能力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0520 - 软件世界里的小国寡民]]></title>
      <url>https://atjason.com/daily/2016-05-20.html</url>
      <content type="html"><![CDATA[<p>世界趋于大不同。</p>
<p>用 Windows 的人不用 Mac，用 Mac 的人不用 Linux，用 Linux 的人不用 Unix … 还有 FreeBSD、OpenBSD、Soloaris … 这些你可能根本没听过的名字，但你能看到这条消息，有可能离不开它们默默在幕后的工作。</p>
<p>有了 Facebook，又有了 Twitter；有了 Twitter，又有了微博；有了微博，又有了微信 … 没有一款软件能收割所有用户、终结需求的多样性。</p>
<p>多样性一定会是趋势，会越来越充分。就如同我依然不理解的二次元，以及 95 后对 90 后的 BS ~</p>
<p>多样性会分化出一个个小群体，在一个群体看来不屑一顾的东西，在另一个群体可能被奉若神灵。一个群体可能只能几万人，可几万人的付费用户，养活一个小的开发团队也差不多了。换个角度，几万人众筹后雇佣了这个开发团队，开发出自己喜欢的软件、为自己服务。</p>
<p>社区经济、群体经济很火，那群体软件呢？</p>
<p>软件世界里的小国寡民。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0519 - 不只为输赢，也为光荣与梦想]]></title>
      <url>https://atjason.com/daily/2016-05-19.html</url>
      <content type="html"><![CDATA[<p>这两天听了刘慈欣的《光荣与梦想》，有点小感触。</p>
<p>我们一直沉浸在输赢、物质、等等这些现实的东西中，可对于光荣、梦想、荣耀这类精神上的追求，渐渐都被忽略了。</p>
<p>做产品也是一样，一方面我们追求功能强大、界面华丽；另一方面又在追求用户量、留存率、转化率这些东西，而对于产品的本质、深层次的意义、为什么存在、走向何方这样的问题，慢慢就想不起来了。</p>
<p>可是，物质总有满足的一天。比如你想要赚到多少多少钱、达到多少用户量，只要努力，总能得到的。可得到了之后呢？是得到后的空虚吗？有可能，不然不会有很多明星、富豪吸毒，因为空虚。</p>
<p>这时，就要向内去看一下，自己内在的追求是什么、自己的光荣与梦想是什么。这，让自己有别于行尸走肉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0518 - 要让别人骂]]></title>
      <url>https://atjason.com/daily/2016-05-18.html</url>
      <content type="html"><![CDATA[<p>今天开源了 <a href="https://github.com/atjason/MacGoogleAnalytics" target="_blank" rel="external">在 Mac 中使用 Google Analytcis</a> 的代码，结果被人 BS 了，因为实现很垃圾。但我很开心，因为对方让我知道了更优雅的实现。</p>
<p>要让别人骂，不然你还以为自己很牛的样子。</p>
<p>每个领域都有精英，当自己刚进入这个领域时，肯定很菜。而高手在民间，跟大家学，才能学到更宽泛、更精深的知识。</p>
<p>不过，心态要好。</p>
<ul>
<li>没有谁一开始就很牛，总是从糟糕开始的。现在差点没关系，关键是以后能变好。</li>
<li>别人的骂，即使是恶意的，也可能是对你有帮助的。要宽容别人的骂，注重其中能让自己提高的部分。</li>
</ul>
<p>这个次开源真是让我受益匪浅，对开源也用了更深的理解：开源，不只是共享出自己的东西免费让别人用，更是大家一起做好一个东西、做一个更好的东西。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0517 - 用户不是越多越好]]></title>
      <url>https://atjason.com/daily/2016-05-17.html</url>
      <content type="html"><![CDATA[<p>更准确的说，高质量的用户越多越好。</p>
<p>今天公开体验 iPic，并没有公开下载链接，而是要用户先发一封邮件，然后才能得到下载链接。这样做的好处是：</p>
<ul>
<li>过滤掉打酱油的，只获取真正有需求的用户</li>
<li>了解产品、需求的真实被需要程度，也就过滤掉杂音</li>
<li>得到用户的邮箱，方便日后做更进一步的交流</li>
<li>形成小圈子。得到这个产品的用户，尤其是觉得它比较好用后，会有一种优越感，甚至会把人分成 2 类：用过这个产品的、没用过这个产品的</li>
</ul>
<p>当然，坏处就是，没有看起来漂亮的用户数字。</p>
<p>感觉这个方式还是不错的，但还要后手。准备明、后天跟进用户的使用情况，比如有没有用啊、遇到什么问题啊、等等。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0516 - 要坚持，要熟练]]></title>
      <url>https://atjason.com/daily/2016-05-16.html</url>
      <content type="html"><![CDATA[<p>用了不到 2 天就完成了 iPic 的最小原型开发，还包括设计 Logo、运营，都不敢相信自己的速度。</p>
<p>很大的原因有 2 个： 熟练、重用。</p>
<ul>
<li>因为最近一起在进行 Mac 开发，对这部分代码还比较熟悉，所以动起手来比较快。</li>
<li>另一个更重要的原因，就是重用了。因为很多用到的模块都可以直接从原来的项目中搬过来，所以速度会非常快。</li>
</ul>
<p>要坚持，这样才熟练；<br>要熟练，这样才高效。</p>
<p>正是这种高效、快速响应，才是核心竞争力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0515 - 技术无可炫耀，可炫耀的是产品]]></title>
      <url>https://atjason.com/daily/2016-05-15.html</url>
      <content type="html"><![CDATA[<p>今天研究了好几项技术：Swift 与 JavaScript 互相调用、JavaScript 中生成File Object、等等。可是，单独哪个技术都没什么价值，对别人都是无用的。</p>
<p>只有当这些技术组合出产品，对别人有用、那才是真正有用。</p>
<p>哪怕是纯技术，也要有产品化的产出。比如代码库、插件、等等。这样都是别人可用的东西。</p>
<p>产品化，让技术变得有价值。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0514 - 接下来做哪个产品呢？]]></title>
      <url>https://atjason.com/daily/2016-05-14.html</url>
      <content type="html"><![CDATA[<p>今天花了大半天的时间研究“iPic - 图床神器”，结果有些失望。</p>
<p>从需求与应用场景来看，主要的用户还是博主，在写文章、发论坛时，插图的需求产多。可是，毕竟现在博客已经不流行了，很多人根本就没有写过博客；而目前写博客的人，很多也渐渐放弃了。毕竟网上查到的知名博客也已经很久没有更新了。</p>
<p>对于新兴的博客程序，如 hexo，很多也差不多解决了图的问题。有像 MWeb 这样的程序，本身已经集成了将图上传至七牛、又拍等空间中。单独做图床服务的空间显然是不大的。</p>
<p>如果当做长尾市场来做，应该还是有点市场。不过，毕竟不是强需求，很可能又要面对收惨淡的境况。而且，跟网络、API相关的服务，其维护成本是比较高的。因为网络服务的 API 可能是会变化的。如果变化，软件也要相应是更新。有时，甚至是服务的 Bug 导致软件不能用，用户也会认为是软件的问题，要求更新、或者直接给差评。</p>
<p>真是有些纠结，明天再犹豫一天。估计还是会做的，先花 3 天左右的时间出个微博的最小原型版，然后拿到 V2EX 等渠道给大家试用，看大家的反馈再决定要不要继续吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0513 - iHosts 放弃支持 OS X 10.10]]></title>
      <url>https://atjason.com/daily/2016-05-13.html</url>
      <content type="html"><![CDATA[<p>放弃，需要勇气。</p>
<p>都说要做减法、专注于重要的事。可真要割舍，总是舍不得。</p>
<p>iHosts 中 OS X 10.10 的用户仅有 8%，说多不多、说少也不少。最近在开发新功能时，发现在 OS X 10.10 中有 Bug。本打算解决，但后来想了想，这不是违背了“花更少的时间、做更重要的事”这一原则了吗？与其花时间改这个平台下的 Bug，不如花时间改进新平台上的功能。</p>
<p>再加上，马上要开 WWDC 了，估计新版本的 OS X 会发布。更重要的是，发现 OS X 10.10 平台没有人付费，所以，果断放弃了，哈哈。</p>
<p>放弃之后，感觉好爽啊，立马觉得时间多出来了。于是，很爽地用这个时间做了 <a href="https://github.com/atjason/MacGoogleAnalytics" target="_blank" rel="external">Google Analytics for Mac</a> 这个很早就想做的开源项目。</p>
<p>这个放弃的开头不错，以后继续学习放弃！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0512 - 花更少的时间，做更重要的事]]></title>
      <url>https://atjason.com/daily/2016-05-12.html</url>
      <content type="html"><![CDATA[<p>这几天在看《每周工作 4 小时》，其中反复强调的就是这个观点。</p>
<h2 id="做更重要的事"><a href="#做更重要的事" class="headerlink" title="做更重要的事"></a>做更重要的事</h2><p>这点容易理解，但其实难的是实践。我们总是不自觉地把所有事情都揽在自己身上，有事放在心里就觉得不爽，就想把事情做掉是。或者交给别人不放心，忍不住自己去做。</p>
<h2 id="花更少的时间"><a href="#花更少的时间" class="headerlink" title="花更少的时间"></a>花更少的时间</h2><p>这点我们通常意识不到，因为忙碌会掩盖事情的真相。当我们在忙碌时，就觉得很充实，就意识不到问题。其实，轻松、自然才应该是正常的状态。过于忙碌，很可能是我们不够高效，或者重点抓得还不够好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0511 - 最优方案，一定是优雅的]]></title>
      <url>https://atjason.com/daily/2016-05-11.html</url>
      <content type="html"><![CDATA[<p>事情要做的漂亮，代码要写的优雅。好的产品，骨子里透着优雅。</p>
<p>内在美、外在美，通常是一致的、相关的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0510 - 路是自己走的，走自己的路]]></title>
      <url>https://atjason.com/daily/2016-05-10.html</url>
      <content type="html"><![CDATA[<p>有很多发财的路，有很多精彩的生活方式。可，只有一种最适合自己，自己只能走一条路。</p>
<p>也许很低调，也许没有荣华。但，至少坦然，内心宁静。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0509 - 选择开源软件，还是付费软件？]]></title>
      <url>https://atjason.com/daily/2016-05-09.html</url>
      <content type="html"><![CDATA[<p>各有好坏。</p>
<h1 id="好的开源软件"><a href="#好的开源软件" class="headerlink" title="好的开源软件"></a>好的开源软件</h1><p>比如我现在博客使用的 Hexo，最开始是台湾同胞开发的。开源后，现在有很多的人为其开发插件、主题，网上也有很多关于 Hexo 的使用教程、案例。一方面便利软件本身已经很不错，另一方面在使用过程中如果遇到问题，不仅可以看官方的教程，还可以参考网友的解决方案。这是很可靠、放心、舒服的体验。</p>
<h1 id="差的开源软件"><a href="#差的开源软件" class="headerlink" title="差的开源软件"></a>差的开源软件</h1><p>GitHub 上有很多开源软件，大可以免费下载使用。不过，事实上，很多软件其实是作者学习、练手过程中的产物，后续也没有更新、维护。用这样的软件就有很大的风险，一方面可能会遇到问题，另一方面碰到问题后没有办法解决，毕竟作者甚至几年都没有更新了，网上也很少有用户。这种软件还是敬而远之的好。</p>
<h1 id="好的付费软件"><a href="#好的付费软件" class="headerlink" title="好的付费软件"></a>好的付费软件</h1><p>比如 Sketch，虽然很贵，但确实好用，甚至都已经成了设计界的行业标准。丰厚的收入，可以保障开发团队的维持和继续开发，也可以使用消费者得到持续的改进。</p>
<h1 id="差的付费软件"><a href="#差的付费软件" class="headerlink" title="差的付费软件"></a>差的付费软件</h1><p>比如近期买的一款软件，这里就不点名批评了。毕竟软件都有不如意的地方，如果开发团队都不准备改、或者改的速度慢，那用起来也是很难受的。尤其付费后通常会让自己提高心理预期，在这种情况下碰到软件的问题，心情可能更容易变糟。</p>
<h1 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h1><p>总之，究竟怎么选，没有绝对的标准。但有这么几点还是可以供大家参考：</p>
<ul>
<li>选择较成熟的。也就是说，软件的底子要好，不要有太多的问题。</li>
<li>选择迭代快的。前面说较成熟，反过来理解就是可以有些问题。但是，一定要能快速修改、快速改进。</li>
<li>选择用户多的。这通常意味着网上会有充足的教程，也会有人把自己踩过的坑记录下来。有了这些资料，会让自己遇到问题时更容易解决。</li>
</ul>
<p>当然，开发者也是人、也需要生存、也需要收入。鼓励大家为软件付费（不论是直接购买付费软件，还是赞助开源软件），这样才能可持续发展：开发者做出越来精品的软件、消费者为软件付费、开发者继续改进、消费者享受更加精良的软件。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0508 - 战术上的勤奋，不能替代战略上的懒惰]]></title>
      <url>https://atjason.com/daily/2016-05-08.html</url>
      <content type="html"><![CDATA[<p>看起来很忙、很勤奋，就一定好？</p>
<p>不见得。</p>
<p>也许是劲使错地方了。</p>
<p>尤其是时间、精力非常有限时，做什么、不做什么，这种选择就显得很重要。</p>
<ul>
<li>做自己擅长的、坚持做、更擅长。</li>
<li>对于不擅长的、不是重点的事，能外包就外包、能用钱解决就用钱解决。</li>
<li>节省下来的时间、精力，做自己擅长的、坚持做、更擅长。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[iHosts 上架总结]]></title>
      <url>https://atjason.com/IT/iHostsMacAppStoreExperience.html</url>
      <content type="html"><![CDATA[<p>iHosts 已经上架几天了，上架后的效果挺满意：</p>
<ul>
<li>中国区、开发者工具分类，最高排名第 2，且被分类页编辑推荐</li>
<li>日本区、开发者工具分类，最高排名第 4</li>
<li>被媒体发现并报道，比如日本媒体</li>
</ul>
<p><img src="https://ps.toolinbox.net/qkla3.jpg" alt=""></p>
<p><img src="https://ps.toolinbox.net/92r3m.jpg" alt=""></p>
<p>至少比之前上架的 App 效果好些，简单梳理下可能的原因、经验。</p>
<h1 id="免费"><a href="#免费" class="headerlink" title="免费"></a>免费</h1><p>免费应该是永远的大杀器。比如限免时，即使不用的软件，大家也会先下载、再删掉，这样万一以后用到就可以免费使用。</p>
<p>注意有一点，如果 App 免费 + 内购，就要小心处理。如果用户完全认为这个 App 是免费的，当用着用着碰到内购时，会非常反感，进而很可能给差评；至少也会给收费带来影响。这个度就要自己摸索了，通常需要一些言语上的技巧。</p>
<a id="more"></a>
<h1 id="Logo-amp-Name"><a href="#Logo-amp-Name" class="headerlink" title="Logo &amp; Name"></a>Logo &amp; Name</h1><p>在 Mac App Store 中，在用户打开 App 前，首先看到的就只有 Logo 和名称。能不能诱导用户点击进去，关键就看这一点了。</p>
<p><img src="https://ps.toolinbox.net/n1xqr.jpg" alt=""></p>
<p>关于 Logo，这涉及到美学，不好说好看不好看。但有一点，一定要有 Mac 的味道。什么时 Mac 的味道？简单，多看看 Mac 原生应用的图标。简单的说就是 2 种：</p>
<ul>
<li>拟物化图标；比如 Contacts, Pages, etc</li>
<li>圆形图标，比如 Safari, iTunes, etc</li>
</ul>
<p>我没有功力设计拟物化图标，就只能做简单的圆形图标。坦白说，模仿了几个元素：</p>
<ul>
<li>EI Captitan 图标的外框</li>
<li>EI Captitan 图标的内部比例</li>
<li>Mac App Store 图标的渐变色</li>
</ul>
<p>其实中间还做了好几版其它的，比如填充色 + 白色前景色。最后选择了下面这款，自己还挺喜欢的。</p>
<p><img src="https://ps.toolinbox.net/lwtzy.jpg" alt=""></p>
<p>然后是名称。名称一定要简洁、好记。看到很多 App 生怕别人不知道这个 App 是干嘛的，用了很长的字符串作为名称（最多 255 个字符）。但其实，很长、尤其是有 … 的名称，会让人觉得很臃肿。尤其在这种背景衬托下，简洁的名字更有冲击力。</p>
<p>iHosts 这个名字我也挺喜欢，i 开头有苹果的味道，Hosts 则正是这款 App 的核心功能。</p>
<h1 id="应用市场描述、截图"><a href="#应用市场描述、截图" class="headerlink" title="应用市场描述、截图"></a>应用市场描述、截图</h1><p>描述、截图是用户打开 App 后看到的信息，也是决定要不要下载的最后因素。</p>
<p><img src="https://ps.toolinbox.net/p2wka.jpg" alt=""></p>
<p>这部分我做的也不好，不过还是觉得有几点可以说。重点还是要</p>
<ul>
<li>简洁</li>
<li>突出重点</li>
</ul>
<p>对于描述，苹果做是比较差的：文字小、不支持格式化。可以说，没有人有耐心看完又小、又长的文字，尤其是大段的、长长的句子。所以，能短就短。</p>
<p>相对来讲，图就比较重要了。至少从面积上讲，截图就占了整个 Mac App Store 页面的一半左右。同样的，要突出重点，一张图说一个目的就可以了，字可以大大的。不要用一堆的、或很多个描述挤在一张图上，除非你是刻意要强调这个 App 的功能很多（虽然我还是不赞同）。</p>
<h1 id="上架时机"><a href="#上架时机" class="headerlink" title="上架时机"></a>上架时机</h1><p>通常，大家都建议在周五上架，因为那是大家玩手机比较多的时机。可是这对于 Mac 应用并不合适。我建议大家在周一上架，原因有几个：</p>
<ul>
<li>新上架的应用会出现在分类首位，这也是苹果给新 App 提供的最佳爆光时间。能霸占的时间，完全取决于这段时间有没有别的 App 上架。</li>
<li>对于用电脑的人，大部分还是工作日。周末大家都会有活动，用手机比较多，不太会继续抱着电脑干活。所以，在工作日出现在分类新品中最实惠，而周一上架，就可以让这个时间持续更长时间。</li>
</ul>
<h1 id="首日下载及好评"><a href="#首日下载及好评" class="headerlink" title="首日下载及好评"></a>首日下载及好评</h1><p>上面说，</p>
<blockquote>
<p>在 Mac App Store 中，在用户打开 App 前，首先看到的就只有 Logo 和名称。</p>
</blockquote>
<p>其实并不准确，用户还可以看到评分。看看下面的图，在一堆没有评分的 App 中，有评分、且评分亮眼的 iHosts 是不是很突出？</p>
<p><img src="https://ps.toolinbox.net/n1xqr.jpg" alt=""></p>
<p>怎么提高首日下载呢？</p>
<ul>
<li>上架前预热。比如在论坛中发内测版，上架后提示大家去下正式版。</li>
<li>动用你的影响力，让你能接触到的人都去下载、给好评。</li>
<li>媒体报道，但这通常需要花点钱了。</li>
</ul>
<p>要特别注意跟进负面评价。好事不出门、坏事传千里。还不是评论中出现负面评价，不仅会拉低评分，还会让其他看评论的潜在用户受影响。一旦出现负面评价，要想办法跟这个用户联系，争取让他改评价。当然，如果碰到恶意差评，基本是没什么办法的，最多是点击其没有帮助、申诉。但很抱歉，这很可能已经过了上架黄金期。</p>
<h1 id="不能有-Bug"><a href="#不能有-Bug" class="headerlink" title="不能有 Bug"></a>不能有 Bug</h1><p>这看起来是废话，但却很容易被忽略。因为在没有上架之前，你的软件没有被大规模使用、没有碰到用户实际环境，很可能潜在的问题没被发现。如果上架了、影响了一批用户，如果他们在愤怒之下给了你很多差评，那你的上架就肯定是个失败。甚至我觉得，在这种情况下可以考虑下架、换个 ID 后重新上架。</p>
<p>那怎么办呢？最后在上架之前有内测，让尽可能多的用户在他们的电脑环境中使用，发现你的电脑中无法重现的问题。</p>
<h1 id="推广"><a href="#推广" class="headerlink" title="推广"></a>推广</h1><p>我基本没做推广，只是些感受：</p>
<ul>
<li>要找对受众。不是所有人都是你的用户，最好找你的潜在用户扎堆的地方推广。</li>
<li>要注意长期效果。推广通常是一推就有、不推没有，要注意推广结束后还能带来的效果。比如，要注意搜索引擎优化，在软文的标题就使用核心关键字。也就是说，你觉得用户最有可能搜索哪些关键字找到这类软件，就在标题中使用这类关键字。这样，即使推广的效果失去了，这样的软件放在网上还是能积累势能。之后用户在搜索时，很可能看到这篇文章、带来流量。</li>
<li>要注意投入产出。推广得到的用户，通常留存率会比一般渠道低。进而，在综合考虑付费转化率的情况下，考虑投入的钱是否值得。对于独(qiong)立(diao)开发者来讲，尤其是慎重。</li>
</ul>
<h1 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h1><p>好了，说了这么多，不知道会不会饿死师傅。比如，如果大家都周一上架，也就没有用了。核心的还是要做好产品。</p>
<p>大家都来做其实更好。更多开发者进入、做出更好的产品、吸引更多的用户、把盘子做大、有更多的投资 … 这样事情才会进入正循环。</p>
<p>最后的最后，如果你觉得这篇文章对你有用，欢迎到 Mac App Store 搜索 iHosts、或者 <a href="http://ex.toolinbox.net/ga/url.html?utm_medium=ihosts&amp;utm_source=blog&amp;id=UA-26569268-10&amp;url=https%3a%2f%2fitunes.apple.com%2fcn%2fapp%2fid1102004240%3fls%3d1%26mt%3d12" target="_blank" rel="external">点我点我点我</a> 免费下载，给个 5 星好评哦，感谢 ~</p>
<p><a href="http://ex.toolinbox.net/ga/url.html?utm_medium=ihosts&amp;utm_source=blog&amp;id=UA-26569268-10&amp;url=https%3a%2f%2fitunes.apple.com%2fcn%2fapp%2fid1102004240%3fls%3d1%26mt%3d12" target="_blank" rel="external"><img src="https://ps.toolinbox.net/gp9xw.jpg" alt="Mac App Store"></a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0507 - 终于把网站搬家了]]></title>
      <url>https://atjason.com/daily/2016-05-07.html</url>
      <content type="html"><![CDATA[<p>真是不容易啊，一口气给 4 个网站搬家：</p>
<ul>
<li><a href="atjason.com">atjason.com</a></li>
<li><a href="atjason.com/en/">atjason.com/en/</a></li>
<li><a href="toolinbox.net">toolinbox.net</a></li>
<li><a href="toolinbox.net/en/">toolinbox.net/en/</a></li>
</ul>
<p>这还不包括我主动放弃的一个网站：<a href="itguwen.net">itguwen.net</a></p>
<p>随意说点关键字，大家感受下：GitHub 多账户、Hexo、Next 主题、搜索引擎收录、数据统计、图床、多语言、自动发布、404、RSS、站内搜索、去掉 Google 相关链接、评论、检查死链、移动设备优化 …</p>
<p>整整花了 2 天时间，太不划算了。可是，谁让花钱也买不到趁手的工具，只能自己造轮子了。好在框架搭了，以后慢慢填充内容。</p>
<p>PS: 感觉不好用的软件还有很多、可造的轮子还有很多，还是有机会的，继续搞~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[GitHub 多账户并存]]></title>
      <url>https://atjason.com/IT/GitHub%20%E5%A4%9A%E8%B4%A6%E6%88%B7%E5%B9%B6%E5%AD%98.html</url>
      <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li>假设你已经正常使用 user1@gmail.com 作为 GitHub 的账户，希望添加 user2@gmail.com 作为 GitHub 的另一个账户。</li>
<li>假定 user1@gmail.com 是更经常使用的账户，user2@gmail.com 只是为了测试或较少使用。</li>
</ul>
<h1 id="创建新的-ssh-密钥"><a href="#创建新的-ssh-密钥" class="headerlink" title="创建新的 ssh 密钥"></a>创建新的 ssh 密钥</h1><p>可以使用 ssh-keygen 来创建新的 ssh 密钥：</p>
<p><code>ssh-keygen -C &quot;user2@gmail.com&quot;</code></p>
<p>创建过程中，假定使用 /Users/YOURNAME/.ssh/id_rsa2 作为存储路径，并且 ssh 密钥的密码为空。</p>
<p>创建后，将 id_rsa2.pub 也即公钥添加到 user2@gmail.com 对应的 GitHub 账户中。</p>
<a id="more"></a>
<h1 id="配置-ssh-的-config"><a href="#配置-ssh-的-config" class="headerlink" title="配置 ssh 的 config"></a>配置 ssh 的 config</h1><p>编辑 ~/.ssh/config，添加类似下面的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># user1</div><div class="line">Host github.com</div><div class="line"> HostName github.com</div><div class="line"> User git</div><div class="line"> IdentityFile ~/.ssh/id_rsa</div><div class="line"></div><div class="line"># user2</div><div class="line">Host github.cn</div><div class="line"> HostName github.com</div><div class="line"> User git</div><div class="line"> IdentityFile ~/.ssh/id_rsa2</div></pre></td></tr></table></figure>
<p>编辑后，测试连接是否成功。如果成功，会有类似下面的提示：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> ssh -T git@github.com</div><div class="line">Hi user1! You've successfully authenticated, but GitHub does not provide shell access.</div><div class="line"><span class="meta"></span></div><div class="line">$ ssh -T git@github.cn</div><div class="line">Hi user2! You've successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure>
<p>核心原理就是，当 ssh 尝试访问某域名时，会尝试和 config 中 <code>Host</code> 对应的记录匹配。如果匹配成功，就会使用该记录中 <code>HostName</code> 的值作为真正的域名、以及使用 <code>IdentityFile</code> 对应的私钥进行配对。这样，既可以实现把 <code>github.cn</code> 当作 <code>github.com</code> 访问、又可以匹配到正常的私钥。 </p>
<p>这里，<code>github.cn</code> 只是个代号，你可以使用任何其它你喜欢的域名。</p>
<h1 id="对-git-项目使用适当的-ssh-连接"><a href="#对-git-项目使用适当的-ssh-连接" class="headerlink" title="对 git 项目使用适当的 ssh 连接"></a>对 git 项目使用适当的 ssh 连接</h1><p>前面提到，假定 user1@gmail.com 是更经常使用的账户，这样我们可以设置该账户为全局默认的 git 账户。通常，你已经这么设置了。不过，如果可以通过下面的命令再次设置以确认。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &apos;user1&apos;</div><div class="line">git config --global user.email &apos;user1@gmail.com&apos;</div></pre></td></tr></table></figure>
<p>而对于不经常使用的、需要使用 user2@gmail.com 账户的 git 仓库，则需要手动设置当前仓库的账户信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --local user.name &apos;user2&apos;</div><div class="line">git config --local user.email &apos;user2@gmail.com&apos;</div></pre></td></tr></table></figure>
<p>并且，需要修改仓库地址。比如，如果原来的仓库地址是：<br><code>git@github.com:user2/test.git</code></p>
<p>则需要修改为：<br><code>git@github.cn:user2/test.git</code></p>
<p>设置结束后，可以分别到使用不同账户的仓库进行测试。</p>
<p>至此，结束。</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0506 - 不要跟不买软件的 IT 人玩耍]]></title>
      <url>https://atjason.com/daily/2016-05-06.html</url>
      <content type="html"><![CDATA[<p>因为有些事情，不买软件的人永远不懂。</p>
<p>买了软件，你会希望软件 0 bug、希望文档完善、希望技术支持及时、希望很多很多 …</p>
<p>进而，当你在销售软件的时候，才能感受到用户可能需要的东西、感受到用户的期望、感受到用户的情绪，也才能把产品做好、把技术支持做好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0504 - 整合信息的能力]]></title>
      <url>https://atjason.com/daily/0504%20-%20%E6%95%B4%E5%90%88%E4%BF%A1%E6%81%AF%E7%9A%84%E8%83%BD%E5%8A%9B.html</url>
      <content type="html"><![CDATA[<p>构想出现在没有、做出来后有人需要的东西，这应该是产品经理的重要职责。而完成这一职责，需要有很强的整合信息的能力。</p>
<h2 id="要有能力接触到信息"><a href="#要有能力接触到信息" class="headerlink" title="要有能力接触到信息"></a>要有能力接触到信息</h2><p>虽说现在是信息爆炸的时代，但信息越上是多，找到有效信息的难度就越大，越需要寻找、筛选信息的能力。</p>
<h2 id="对信息要有敏感度"><a href="#对信息要有敏感度" class="headerlink" title="对信息要有敏感度"></a>对信息要有敏感度</h2><p>信息并不是撒在地上等着去捡的东西，它通常隐匿在不起眼的事务、细节中。要对自己所关注的事务有足够的敏感度，这样在接触到可能的信息时，才有足够的嗅觉发现它。</p>
<h2 id="要将信息积累为知识"><a href="#要将信息积累为知识" class="headerlink" title="要将信息积累为知识"></a>要将信息积累为知识</h2><p>信息是流动的、新鲜的。但要加工信息、利用信息，并不只是需要信息本身，需要结合之前接触到的信息、学习到的知识，也即要有之前的积累。那就需要自己有能力、有机制，持续不断地将自己接触到的信息沉淀为知识，在以后需要的时候能随时调用。</p>
<h2 id="经常练习、经常发酵"><a href="#经常练习、经常发酵" class="headerlink" title="经常练习、经常发酵"></a>经常练习、经常发酵</h2><p>孤立的信息价值不大，把不同的信息交织在一起，才有可能擦出火药，组合出新的、有价值的东西。要经常做这样的练习。比如构想出现在没有、做出来后有人需要的东西。哈哈，又绕回来了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0503 - iHosts 终于上架 Mac App Store了]]></title>
      <url>https://atjason.com/daily/0503%20-%20iHosts%20%E7%BB%88%E4%BA%8E%E4%B8%8A%E6%9E%B6%20Mac%20App%20Store%E4%BA%86.html</url>
      <content type="html"><![CDATA[<p>真是不容易啊。从最开始的点子，到最终上架为成型的产品，中间经历了各种变数，尤其是最后的提交被 Mac App Store 拒掉。能上架真心不易。</p>
<p>今天略带幸福感得做了一天运营。因为自己有信心产品做得不错，所以可以很安心地跟用户吹牛、很自信地说服用户使用自己的产品，这种感觉真好。</p>
<p>不过，这个状态不能持续太久，毕竟还是要继续赶路的。运营只是推广和维护目前已有的产品，更重要的是优化已有的产品、构思出新的产品。以后要压缩每天花在运营上的时间，把更多的时间用来学习、构思。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0502 - 做透]]></title>
      <url>https://atjason.com/daily/0502%20-%20%E5%81%9A%E9%80%8F.html</url>
      <content type="html"><![CDATA[<p>最近购买了FarBox的服务，却发现它在搜索引擎优化方面做得非常差。瞬间对其印象很糟糕，即使其它比如同步做得很好。</p>
<p>对于一个垂直领域，一定要做透，把这个点的方方面面都做好，这样才能成为极品。通常，工具都是垂直领域、很小的领域，这个领域能玩的花活并不多，翻来覆去就是那些事情。如果少了某些功能，或者做得不到位，总是会被当小辫子揪住不放。一旦被问到“为什么没这个功能”这样问题就很难受。如果有一方面做得不好，那即使其它方面做得很好，也会因这个短板而前功尽弃。</p>
<p>如果只做一点，就一定要做透、做到极致。不是情怀，是现实。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0501 - 软件为何如此廉价]]></title>
      <url>https://atjason.com/daily/0501%20-%20%E8%BD%AF%E4%BB%B6%E4%B8%BA%E4%BD%95%E5%A6%82%E6%AD%A4%E5%BB%89%E4%BB%B7.html</url>
      <content type="html"><![CDATA[<p>每次逛街都想不通一个问题：为什么一件T恤可以卖几百元，而复杂到操作系统级别的软件，也才能卖到这个价钱。</p>
<p>是什么让曾经造原子弹的的计算机及其软件，到了今天如此廉价的地步？</p>
<p>原因自然是很多的，感觉比较直接有这几方面的原因，先记着，以后慢慢想。</p>
<p>同行“恶意竞争”<br>当然，这里的恶意竞争是打引号的。比如微信，这么好用的软件，免费。你让那些做得不好的软件还怎么好意思收费？这种大厂的做法，把整个行业的模式都改变了，都演变成了通过免费获取用户，然后通过其它方式再从用户身上获取利润。可是，并不是每个产品、每个团队都可以以这种方式生存。</p>
<p>获取成本<br>大家直觉上判断是，不容易获得的东西，更具价值。比如，一听说是手工打造的东西，就会觉得更难做出来、更花时间，所以也更贵。而获取软件实在是太简单了，只是用手点一下，自动下载、安装。这种简单的过程，很难让人感觉贵起来。</p>
<p>知识产权<br>这跟获取成本也很有关系。盗版那么普遍，没有谁会知道原来操作系统是要买的。</p>
<p>售后服务<br>比如，我们在一家服装店里买衣服，我们心里都有潜意识，有了问题可以来这家让找他们；而软件则很难有这样的印象。就拿做得比较好的 iOS App Store，用户所拥有的权利也就是退款、评价，跟本就不知道跟自己交易的对方是谁、长什么样、好不好沟通、出了问题有没有人管。这样的状态，让人很难有安全感，也很难愿意在这样的感觉下花钱。</p>
<p>不了解<br>我们通常会有自己的价值判断体系，根据一个物品在自己认知体系里的位置来给它定价。而对于软件，绝大多数人是不了解的，不知道它背后有多复杂。在没有办法理解的情况下，也就没办法给它定价。进而，又在周围环境的影响下、在微信这样的免费软件的使用经验下，根据“经验”推出软件都是免费的这样的推论。</p>
<p>不管怎样，软件的廉价是现状。要么不在软件圈里混；要混，就要尊重这一现实，在现实的条件下，想办法生存、赚钱。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0430 - 充分利用优势]]></title>
      <url>https://atjason.com/daily/0430%20-%20%E5%85%85%E5%88%86%E5%88%A9%E7%94%A8%E4%BC%98%E5%8A%BF.html</url>
      <content type="html"><![CDATA[<p>有优势不用，是傻。</p>
<ul>
<li>如果你有家世，就利用你的家世</li>
<li>如果你有智商，就利用你的智商</li>
<li>如果你有人脉，就利用你的人脉</li>
<li>如果你肯努力，就利用你的努力</li>
</ul>
<p>总之，充分利用你的优势。与其弥补自己的短处，不如把自己的长处发挥到极致。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0429 - 还是得多运动]]></title>
      <url>https://atjason.com/daily/0429%20-%20%E8%BF%98%E6%98%AF%E5%BE%97%E5%A4%9A%E8%BF%90%E5%8A%A8.html</url>
      <content type="html"><![CDATA[<p>出点汗，洗个澡，躺床上，真舒服啊~</p>
<p>今天又去骑龙井，下山的感觉好爽。有点紧张和刺激，又能感受到扑面的春风，还骑车过了九溪，这种感觉不去体验是很难想象得到的。</p>
<p>呆在家里写代码是一种感觉，出去玩又是一种感觉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0428 - 停下来时，不知所措]]></title>
      <url>https://atjason.com/daily/0428%20-%20%E5%81%9C%E4%B8%8B%E6%9D%A5%E6%97%B6%EF%BC%8C%E4%B8%8D%E7%9F%A5%E6%89%80%E6%8E%AA.html</url>
      <content type="html"><![CDATA[<p>前段时间一直在忙 iHosts 上架的事，等到上架之后，状态一直不好，找不到感觉。</p>
<p>现在想想，可能是缺少一个仪式感的结束，并且没有充分地放松，总在一个不清晰的状态下，等着之前的惯性在运行。</p>
<p>彻底放松，好好想想还剩下些什么事，又要做哪些新的事，找到高效的感觉。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0427 - 如果不能按想的方式活，就会按活的方式想]]></title>
      <url>https://atjason.com/daily/0427%20-%20%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E6%8C%89%E6%83%B3%E7%9A%84%E6%96%B9%E5%BC%8F%E6%B4%BB%EF%BC%8C%E5%B0%B1%E4%BC%9A%E6%8C%89%E6%B4%BB%E7%9A%84%E6%96%B9%E5%BC%8F%E6%83%B3.html</url>
      <content type="html"><![CDATA[<p>话虽有些拗口，但简直是至理名言，应该刻在桌子上当座右铭啊。</p>
<p>人受环境的影响是非常大的，包括我们的想法、在做什么、是什么样的人；甚至可以说，我们只是环境的代言人、傀儡。</p>
<p>不过，我们自然不愿意甘心做傀儡，那就要有自己的想法，并且有能力、有魄力、有毅力按自己的想法去活。通常，这很难。不过，好在通常是开头比较难。当你一旦走上了正路、已经差不多按自己的想法在生活了，后面等着你的就是更深刻的自由、更深刻的幸福。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0426 - 资本的思路]]></title>
      <url>https://atjason.com/daily/0426%20-%20%E8%B5%84%E6%9C%AC%E7%9A%84%E6%80%9D%E8%B7%AF.html</url>
      <content type="html"><![CDATA[<p>如果你现在打算开饭店，一个月大概能赚1万，可其中8千要支付给大厨，你会怎么办？是继续雇用这个大厨，还是自己做大厨？</p>
<p>如果继续启用大厨，就是资本的思路。</p>
<p>虽然看起来自己的收少了，可是却节约了大量的时间。有了这些时间，你可以再开一家饭店、开更多家，这样到赚到的钱就不止是1万了。</p>
<p>我们平时也是，不要太看中一点钱。总觉得与其花钱让别人做，还不如自己来，还能省点钱。如果总是用这种思路思考问题，那就只能永远做具体事务。</p>
<p>如果能跳出这种思维，学会以用资本的思路，就可以少做些具体的事，把更多的时间用在更有价值的事。比如创造世上还没有的东西、组织已有的东西而生成新的东西、等等。</p>
<p>资本的思路；能通过资本就可以让别人做的事，就让别人做。节约出来的时间自己再去做更有创造性的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0425 - 节奏、节奏、还是节奏]]></title>
      <url>https://atjason.com/daily/0425%20-%20%E8%8A%82%E5%A5%8F%E3%80%81%E8%8A%82%E5%A5%8F%E3%80%81%E8%BF%98%E6%98%AF%E8%8A%82%E5%A5%8F.html</url>
      <content type="html"><![CDATA[<p>最近一直都在忙iHost的具体开发，好久没有系统性的学习知识、接触新事物了，要切换回正常的节奏了。</p>
<p>厚积才能薄发。如果只发、不积累，就发得无力、没什么可发。要有意思地积累想法、增加见识，让大脑保持兴奋，这才是更有层次、更有意思的事。</p>
<p>另外，要强化这种意识：凡事具体具象的事，它的意义层次就低。比如iHosts，它最有意义的部分就是开始时的想象，想着如何实现、如何做技术可行性研究、如果争取上架、等等，这些从无到有的过程，是最有价值的。而一旦这些都已经定了、只是把它实现，层次就低了。<br>不是说具体的实现就没有意义，而是说，有更有意义事。要尽量缩短做具体事情的时间，增加抽象思维、从无到有创造事物的时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0424 - iHosts 终于提交上架啦！]]></title>
      <url>https://atjason.com/daily/0424%20-%20iHosts%20%E7%BB%88%E4%BA%8E%E6%8F%90%E4%BA%A4%E4%B8%8A%E6%9E%B6%E5%95%A6%EF%BC%81.html</url>
      <content type="html"><![CDATA[<p>真是不容易啊！</p>
<p>看了下历史记录，第一行代码是4月9日写的，到今天整整半个月。不过，实际上在此之前就花了比较多的时间酝酿和准备，比如一些技术点，已经用别的小项目进行验证和练习，这才使得开发进展变快（虽然好像对于这么个小工具来说并不快）。</p>
<p>现在最大的担忧就是不知道能不能上架。因为毕竟涉及到修改系统的Hosts、涉及到权限，还是很有可能被苹果拒掉。事实上，现在 Mac App Store上没有一款 Hosts 管理软件，祈祷吧~</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0423 - 被一个开源库给坑了]]></title>
      <url>https://atjason.com/daily/0423%20-%20%E8%A2%AB%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E5%BA%93%E7%BB%99%E5%9D%91%E4%BA%86.html</url>
      <content type="html"><![CDATA[<p>在做应用内支付时，开始时觉得官方的API太得杂了，做起来比较花时间，就想着找开源库来做这个事。找到了一个，看接口还挺简单的，就拿来用了。</p>
<p>谁知这却掉进一个大坑。这个库本身有问题，也有设计不合理的地方。问题倒还好，甚至能自己解决掉，但设计示合理的地方就很难绕过去。花了大量时间在折腾这个库上面，现在回过头来看，所花的时间，甚至都不如自己好好看官方的API，自己来实现了。</p>
<p>以后要慎重使用别人的库，尤其是对支付这种核心的功能。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0422 - 总是一个节奏，会疲惫]]></title>
      <url>https://atjason.com/daily/0422%20-%20%E6%80%BB%E6%98%AF%E4%B8%80%E4%B8%AA%E8%8A%82%E5%A5%8F%EF%BC%8C%E4%BC%9A%E7%96%B2%E6%83%AB.html</url>
      <content type="html"><![CDATA[<p>最近在折腾Mac App应用内付费的事。事情本身比较复杂，再加上自己是从头开始学，所以持续了很长时间，一直没有完结，又不好换个事情做。很被动，很疲惫。</p>
<p>今天终于换了个事情做，立马觉得很轻松，很有新鲜感，进而效率也比较高。</p>
<p>以后，不要持续做一件事太长时间。每隔几天，就切换个新的小主题做，这样能不断刺激自己的新鲜感，保持效率。尤其是避免长期陷在某个坑里，低效地挣扎，是大忌。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0421 - 要坚持，放弃只在一念间]]></title>
      <url>https://atjason.com/daily/0421%20-%20%E8%A6%81%E5%9D%9A%E6%8C%81%EF%BC%8C%E6%94%BE%E5%BC%83%E5%8F%AA%E5%9C%A8%E4%B8%80%E5%BF%B5%E9%97%B4.html</url>
      <content type="html"><![CDATA[<p>现在计划每天写一点，看似很容易，实则很容易放弃。</p>
<p>比如经常干活到很晚，这暑假已经很想去睡觉了，还要写吗？不写的话，马上就可以去睡觉。写的话，还要在坚持一会。就这一点点坚持，很容易就做不到了，毕竟一天不写，自己好像也不会有什么损失。</p>
<p>确实是有困难的，毕竟总会有意外情况发生。一个靠谱的应对办法就是，如果有想法，就多储备一些，甚至写好放着。这样万一哪天实在是没时间、或没什么想法，就把草稿中的文章拿出来应急。</p>
<p>但是，决不能赊账。如果今天没写、又没有草稿，必须写。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0420 - 着急赶路，别把表弄丢了]]></title>
      <url>https://atjason.com/daily/0420%20-%20%E7%9D%80%E6%80%A5%E8%B5%B6%E8%B7%AF%EF%BC%8C%E5%88%AB%E6%8A%8A%E8%A1%A8%E5%BC%84%E4%B8%A2%E4%BA%86.html</url>
      <content type="html"><![CDATA[<p>今天把表弄丢了，还挺喜欢那块表的，不开心</p>
<p>事情是这样的，着急出门，甚至都不想浪费时间来戴表，所以把手表装在上衣里就飞奔出门了，想着到车上了再戴。结果，到车上时发现，表不见了。车子已经走了点路，并且确实着急去目的地，也就没下车回头去找（虽然也不见得能找到，说不定已经被人捡了）。</p>
<p>丢表之后，更闹心了，一路上都在想这事，各种在身上找，一遍遍地想，如果不怎样，就不会丢；如果不那样，就不会丢；如果…</p>
<p>回过头来看，着急想把一个件事做快，结果搞坏了另一件事；搞错了另一件事，既耽误了时间，还影响了心情，更有可能搞坏另另一件事。不能太慌张啊。</p>
<p>你，着急赶路时，有没有把表弄丢了？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0419 - 经验，还是沉没成本]]></title>
      <url>https://atjason.com/daily/0419%20-%20%E7%BB%8F%E9%AA%8C%EF%BC%8C%E8%BF%98%E6%98%AF%E6%B2%89%E6%B2%A1%E6%88%90%E6%9C%AC.html</url>
      <content type="html"><![CDATA[<p>花了时间学习某项技术，如果之后又被再次使用，则是经验，否则就是沉没成本，或者说是浪费。</p>
<p>时间有限，每天能做的事也很有限。所以要尽量学习以后也会用到的技能，这样才是不断积累，不至于看起来很忙碌、实则没有积累，只是在堆积沉没成本。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0418 - 明明应该对的，怎么还是不对？]]></title>
      <url>https://atjason.com/daily/0418%20-%20%E6%98%8E%E6%98%8E%E5%BA%94%E8%AF%A5%E5%AF%B9%E7%9A%84%EF%BC%8C%E6%80%8E%E4%B9%88%E8%BF%98%E6%98%AF%E9%94%99%E7%9A%84%EF%BC%9F.html</url>
      <content type="html"><![CDATA[<p>今天又碰到了开发过程中经常碰到的神奇情况：明明应该是对的，怎么还是不对？把所有能试的方法都试了，却还是不行。</p>
<p>知道最后怎么解决的的吗？答案是：重启电脑</p>
<p>真是无语啊。</p>
<p>下次再碰到这种神奇的问题，放一放，先去搞别的事，回过头来再看时，说不定就很容易解决了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0417 - 强势的政府]]></title>
      <url>https://atjason.com/daily/0417%20-%20%E5%BC%BA%E5%8A%BF%E7%9A%84%E6%94%BF%E5%BA%9C.html</url>
      <content type="html"><![CDATA[<p>杭州承办G20，处处体现的着政府的强势。</p>
<p>该不该承办G20、该不该对市政进行大规范的整改、整改的费用从哪里出、整改成什么样子、等等吧。</p>
<p>可是，政府就是做得大张旗鼓、理直气壮。我们的政府是一个需要对上负责，但不需要对下问责的形态。</p>
<p>好吧，其实这个话题我也说不了，毕竟不是圈子里的，最多也只是抱怨；安心做自己的小尼民吧。</p>
<p>数字游民。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0416 - 自己做的东西，容忍度高]]></title>
      <url>https://atjason.com/daily/0416%20-%20%E8%87%AA%E5%B7%B1%E5%81%9A%E7%9A%84%E4%B8%9C%E8%A5%BF%EF%BC%8C%E5%AE%B9%E5%BF%8D%E5%BA%A6%E9%AB%98.html</url>
      <content type="html"><![CDATA[<p>最近自己尝试蒸馒头，结果比较失败，蒸出来的不好吃。可是，因为是自己做的，容忍度比较高，还都吃了；某人则完全不吃。</p>
<p>想了下，对软件也是一样。自己做的产品，容忍度比较高，对其中不好的地方也能接受。还有部分原因是，因为知道软件的正常使用方式，即使可能有问题，也会被自己下意识地避免掉。而实际的用户则不会这样。他们一方面对软件的要求会比较高，不太接受比如运行时的故障。同时，他们也不太熟悉软件正确使用方式，可能会出现不会用、或者导致错误结果的用法。</p>
<p>结果就是，自己觉得自己做的东西还不错，但用户就是不买账。</p>
<p>自己突破这个困境呢？<br>首先，自己要提高审美，并且提高对自己产品的要求。不到达自己认可的标准，不出手。另外，更简单粗暴的方式就是，让别人来用。最好是自己的朋友、同时又是这个软件的潜在用户。让他们用段时间，然后来采访，看有哪些好的、不好的地方，应该怎么改进。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0415 - 太慢了]]></title>
      <url>https://atjason.com/daily/0415%20-%20%E5%A4%AA%E6%85%A2%E4%BA%86.html</url>
      <content type="html"><![CDATA[<p>这两天的速度太慢了。</p>
<p>虽然一直在干活，但明显感觉效率不高。虽然有工作时长带来的产出，但太少了，都不好意思跟人说，也太对不起现在安逸、舒适的工作环境了。</p>
<p>要加速，要非常非常的集中注意力，高效、高效、高效！</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0414 - 又感到运营的压力了]]></title>
      <url>https://atjason.com/daily/0414%20-%20%E5%8F%88%E6%84%9F%E5%88%B0%E8%BF%90%E8%90%A5%E7%9A%84%E5%8E%8B%E5%8A%9B%E4%BA%86.html</url>
      <content type="html"><![CDATA[<p>今天把iHosts发给2个潜在用户体验，发现对方反应并不是很积极，又感到运营的压力了。</p>
<p>感觉运营最重要的是：<strong>找到潜在用户</strong>。并不是所有人对你的产品都有兴趣。只有真正需要这一产品、满足他们某一需求的人，才愿意花一点点精力和时间来看一眼，然后再决定要不要继续尝试。在这样注意力涣散的时代，妄想用用户不在意的东西是挤占用户的时间，几乎是不可能的。</p>
<p>还有个深深的想法：下个产品一定要做强需求！做这种小众需求、长尾市场，总感觉好难受、推广起来很累。如果是强需求，定位又抓得很准，相信推广起来会容易些。</p>
<p>另外，运营对于产品的把握还是有帮助的。自己精心打磨的细节，在用户眼里可能只是在很忙的情况下、很不经意的瞥一眼。所以，最重要的是突出重点，把最主要的功能做到极致。太多太复杂的功能反而会把用户吓到。另外就是，细节也要做好。即使用户只是一瞥，可如果有问题，还是很容易被感知到的，就像是白纸上的一个黑点。一旦给用户留下了不用心的印象，就很难再改变了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0413 - 大力放松]]></title>
      <url>https://atjason.com/daily/0413%20-%20%E5%A4%A7%E5%8A%9B%E6%94%BE%E6%9D%BE.html</url>
      <content type="html"><![CDATA[<p>最近持续搞了很长时间的iHosts开发，感觉有些累了。虽然在时间的堆积下，进展比较明显，已经基本把程序给做出来了。但明显感觉效率开始下降，在做的过程中学到的东西也开始变少了。</p>
<p>赶快把项目做到一个可以拿出去给别人用的程度，然后彻底的放松。之后，再以全新的状态做剩下的功能，以及根据用户的反馈来改进。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0412 - 随便做个Logo吧]]></title>
      <url>https://atjason.com/daily/0412%20-%20%E9%9A%8F%E4%BE%BF%E5%81%9A%E4%B8%AALogo%E5%90%A7.html</url>
      <content type="html"><![CDATA[<p>今天给iHosts做个菜单栏中的Folder图标。本来觉得挺简单的，结果前前后后做了2、3个小时，还不是很满意。终于明白设计师的这个痛了：不要跟我说：“随便给我做个Logo吧”。</p>
<p>要做好个图标，至少在要这2方面做好：</p>
<ul>
<li>知道什么样的图标是好图标<br>也就是说，知道做成什么样子。这就要培养审美能力，看看不同的图标、好的设计。另一方面，还要有能力设想这个图标出现在实现应用场景中的样子。因为图标并不是孤立的，要结果实际的使用场景，才能最终判断图标好还是不好。</li>
<li>把图标做出来<br>这主要就是说对工作软件的熟练使用能力。要有自己趁手的工具，经常用、用熟练，做的时候才能事半功倍。</li>
</ul>
<p>感谢Sketch这个工具，既能做原型，还能做图标，简单双强大，棒！希望自己早日做出个这样的工具 ^_^</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0411 - 保持主线不分叉]]></title>
      <url>https://atjason.com/daily/0411%20-%20%E4%BF%9D%E6%8C%81%E4%B8%BB%E7%BA%BF%E4%B8%8D%E5%88%86%E5%8F%89.html</url>
      <content type="html"><![CDATA[<p>在开发的时候，很容易碰到这样的情况：本来要解决问题A，结果搞着搞着发现有个问题B，觉得不是很大问题、想顺手搞掉，结果又发现了问题C … 最后，发现问题A还没有搞定，却摊开了一大堆别的问题。</p>
<p>这种过于分发散的方式不太好。主要是摊子太大了，很难在短时间内搞完。而总是搞不完问题、没有一个个中间节点、不能及时提交一个完整的状态，对于心理的压力还是挺大的。就像是堆栈一样，毕竟是容量是有限的。一旦堆栈溢出了，再想恢复现场、继续工作就挺难的。</p>
<p>怎么办呢？以蕃茄工作法为例，在开始一个番茄时钟前，明确下这个蕃茄种主要做什么，然后专注于这个问题。在做的过程中，如果遇到了别的问题，先记下来，然后继续研究番茄钟所确定的事情。如果实在是碰到了让原计划的事无法进行的问题，停止番茄钟，评估问题后，再开始新的番茄钟。</p>
<p>说到这里，感兴趣的可以试试我的作品 <a href="https://itunes.apple.com/app/id1062139745?ls=1&amp;mt=12" target="_blank" rel="external">意念钟</a>，个人每天都在用，好使。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0410 - 善待自己的身体]]></title>
      <url>https://atjason.com/daily/0410%20-%20%E5%96%84%E5%BE%85%E8%87%AA%E5%B7%B1%E7%9A%84%E8%BA%AB%E4%BD%93.html</url>
      <content type="html"><![CDATA[<p>昨天很神经质的干到凌晨一点。</p>
<p>本来是11点准备睡觉，想到一个小的点要试一下。Ok，试就试呗，结果试了一下没搞定，就不断地找资料、试错、再找再试。结果效率很低，可能正常情况下一个小时、甚至半个小时就能搞定的事，结果搞到了凌晨一点。</p>
<p>更要命的事，对眼睛伤害很大，当时就能看到黑眼圈了，而且眼睛也很不舒服。</p>
<p>并且，还影响每二天的早起干活。</p>
<p>总之，非常的得不偿失、非常失败的一件事。不能再犯这样的错误了。要有规律地起居，除非有必要，坚决不熬夜。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0409 - 像搭积木一样开发产品]]></title>
      <url>https://atjason.com/daily/0409%20-%20%E5%83%8F%E6%90%AD%E7%A7%AF%E6%9C%A8%E4%B8%80%E6%A0%B7%E5%BC%80%E5%8F%91%E4%BA%A7%E5%93%81.html</url>
      <content type="html"><![CDATA[<p>今天终于开始写iHosts的第一行代码了，而且进展非常快。</p>
<p>为什么呢？</p>
<p>其实是之前准备充分。完整地构想了整个产品，包括立项、竞品分析、市场研究、设计，以及以后可能的开发、测试、运营等事项。技术方面，不仅做了可行性研究，还用小项目的方式实践了关键点、难点。所以，真正动起手来，就会觉得很顺手。</p>
<p>以后也要这样做，准备充分后再动手，又爽又快。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0408 - 学到什么程度才好呢？]]></title>
      <url>https://atjason.com/daily/0408%20-%20%E5%AD%A6%E5%88%B0%E4%BB%80%E4%B9%88%E7%A8%8B%E5%BA%A6%E6%89%8D%E5%A5%BD%E5%91%A2%EF%BC%9F.html</url>
      <content type="html"><![CDATA[<p>在编程的过程中，总是要不断地学习新技术。那么，要学到什么程度才好呢？</p>
<ul>
<li>如果学得浅，看起来速度很快，可以快速地解决问题推进项目。可是，总担心没有使用该技术的最佳实践，会给以后留坑。另外，如果以后遇到类似的问题，可能还是要重新Google、重新来过。</li>
<li>如果学得深，是可以很好地理解这个新技术，也能很好地应用到项目中。可最大的问题就是：太花时间。如果每个遇到的问题都这么做，那项目怕是无法推进了。</li>
</ul>
<p>那究竟要学到什么程度呢？这个还真的很难讲，跟项目的紧迫程度、自己的状态等因素有有关。目前给自己定个标准：学到自己能写出博客的程度。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0407 - 养成买软件的习惯是有多难]]></title>
      <url>https://atjason.com/daily/0407%20-%20%E5%85%BB%E6%88%90%E4%B9%B0%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%B9%A0%E6%83%AF%E6%98%AF%E6%9C%89%E5%A4%9A%E9%9A%BE.html</url>
      <content type="html"><![CDATA[<p>今天跟一个程序员朋友聊起一个软件，每年65元。他说，好贵。</p>
<p>程序员尚且如此，其他人呢？</p>
<p>一次性付费的软件，觉得贵；订阅的软件，觉得更贵：每月、每年都要交钱啊！其实，现实生活中“永久”的东西就真的永久吗？你买个房子，也才70年产权（通常将至你手上的时候，已经少了好几年）。你买个电水壶，能用几年？</p>
<p>卖软件真是的是件难事，一直以来的难。最主要还是觉得贵，再有就是，大家对没有实物的东西，总觉得它不值钱。</p>
<p><strong>该怎么解决呢？</strong><br>我觉得，最有效的，还是找到需要软件的人。对于不怎么需要的人，你再便宜他也懒得买。而对于需要的人，有时价格都不是问题。放弃大多数可要可不要的非标准用户，会让可能的收少很多。可是，与其花精力争取这些摇摆的用户，还不如精心打磨已有的产品，或者找下一个大家更需要的产品。</p>
<p>你愿意用买10个苹果的钱买1个软件吗？</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0406 - 准备好，再开搞]]></title>
      <url>https://atjason.com/daily/0406%20-%20%E5%87%86%E5%A4%87%E5%A5%BD%EF%BC%8C%E5%86%8D%E5%BC%80%E6%90%9E.html</url>
      <content type="html"><![CDATA[<p>这两天花了很长的时间在折腾一个点，时间长的有些受不了了。</p>
<p>当然这个知识点确实有些复杂。但主要还是感觉自己学习的不够科学，没有有效地掌握这个知识点的理论部分、来龙去脉，就撸起袖子开始搞了。结果花了很多时间，人也很疲惫。这种用时间堆出来的结果，不是现在的自己能承受的。而且眼睛也明显开始不舒服了，长时间的沉浸在这一点上，让其它方面的进步也受到了限制，生活上也开始变糟。</p>
<p>以后不能再这样了。对于复杂的知识点，学之前要有心理准备，要预备足够的时间，这样在学的过程才不会急切地想要结果，导致心里慌乱。然后，更重要的是，在开始搞之前，要准备好，要先彻底明白，然后在明白的基础上有意识时去尝试、组合，而不是胡乱地试。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0405 - 节奏感]]></title>
      <url>https://atjason.com/daily/0405%20-%20%E8%8A%82%E5%A5%8F%E6%84%9F.html</url>
      <content type="html"><![CDATA[<p>写程序经常会有这样的状态，有时候很兴奋，效率很高，干活持续时间很长；有时候则状态很差，什么都不想干，产出也很低。</p>
<p>这其实也算正常，因为偏创作的工作都是这样的。不过，如果稍加调整，还是能有所改善的，比如可以让低谷的时间短一些。</p>
<p>怎么调整呢？就是让自己有节奏感。</p>
<ul>
<li>比如蕃茄工作法，每工作25分钟，就强制自己休息一下，然后再继续。</li>
<li>比如规律性的体育锻炼。身体的规律性对精力、状态的积极促进作用，很多时候都是超出我们判断的，它比纯精神的刺激或抑制更有效、更持久。</li>
<li>比如罗辑思维每天早上60秒的语音，甚至规律到有仪式感。这样即使某一天状态很差，这种规律也会激励自己把该做的事做好。</li>
<li>比如我的“<a href="../category/每天写一点">每天写一点</a>”</li>
</ul>
<p>找到自己的节奏，高效又自然。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0404 - 只积累核心能力，只做核心业务]]></title>
      <url>https://atjason.com/daily/0404%20-%20%E5%8F%AA%E7%A7%AF%E7%B4%AF%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B%EF%BC%8C%E5%8F%AA%E5%81%9A%E6%A0%B8%E5%BF%83%E4%B8%9A%E5%8A%A1.html</url>
      <content type="html"><![CDATA[<p>从大学时代有意识学编程，到毕业后做开发，再到后来转产品经理，遭到现在，不经意间已经有10年之多。期间接触了不同的技术、产品、环境，现在到了思想和状态比较成熟、稳定的时期。回想起来，觉得很大的遗憾是：不够专注。</p>
<p>首先是缺乏规划。当然，规划、计划永远都是看起来美好、实际上不可能的东西。再说，谁能在一开始看清楚未来那么长时间的路呢。其实，更实际的说，像做产品一样，生活是不断演化着前进的。而演化过程中，更重要的就是专注、是坚持。而自己还不够专注，碰到深层次的困难，就会习惯性的开始逃避，开始怀疑自己选的这条路是不是不合适自己、是不是应该换个地方挖坑。但其实，也许咬牙再向前迈几步、再坚持一段时间，就过了瓶颈期，进而另一番天地。</p>
<p>还有个感受，就是人的精力是有限的。只有那么多时间，精力也不可能一直旺盛。现在是90后的时代，之后还会有00后、10后，他们有着天然的优势：年轻。与之竞争，要么有深度，要以有广度。当然，如果确实足够广，那也是可以的。比如去世界各地去旅行，然后坚持写旅行日志，用博客的方式来赢利、继续支撑这样的生活，也是可以的。但更多的，还是要靠深度。在一个领域不断地深入，有更深的理解，做出的产品更自然、更好用，这会使自己能更持久地保持竞争优势。</p>
<p>说了这么多废话，再来明确下自己目前的坚持所在：</p>
<ul>
<li>方向：数字游民、自由职业者</li>
<li>要积累：Mac开发</li>
<li>核心业务：Mac工具开发</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0403 - 数字游民]]></title>
      <url>https://atjason.com/daily/0403%20-%20%E6%95%B0%E5%AD%97%E6%B8%B8%E6%B0%91.html</url>
      <content type="html"><![CDATA[<p>游牧民，逐水草而居。数字游民，逐自由而居。</p>
<p>工作、收入自民互联网，而肉身则可以自由自在。可以呆在家里照顾小孩子成长，可以背包去东南亚小镇呆着，可以在海边浮潜。</p>
<p>有了这个目标，现在正朝这个方向努力，什么程序员、产品经理、全栈开发…都只是名词，重要的是最后的状态：创作与自由。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0402 - 聚焦]]></title>
      <url>https://atjason.com/daily/0402%20-%20%E8%81%9A%E7%84%A6.html</url>
      <content type="html"><![CDATA[<p>越学越觉得要学的东西多，感觉自己在很多方面都不擅长。</p>
<p>而另一方面，时间不会变多，甚至会因为杂事的增加而变少。再加上自己的记忆力、精力、甚至是视力这些身体条件都不如以前。</p>
<p>两相比较 ，确实是要主动放弃外围的事情，专注于自己擅长的、核心的事。</p>
<p>举个例子，前段时间花了很长时间在OpenWRT中搭建TimeMachine，现在来看是不合适的。一方面通过折腾学到东西并不会被再次利用，另一方面这件上事是很容易可以用钱来解决的。</p>
<p>做自己最擅长的、最核心的、最独一无二的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0401 - 选择比努更重要，恩，嗯？]]></title>
      <url>https://atjason.com/1035.html</url>
      <content type="html"><![CDATA[<p>经常听到这句话，还有很多变种，比如风口上的猪；简直都成月经贴了。听起来很有道理，现实生活有也有很多这样的例子：有的人看不出有多努力，却青云直上，跟他所选择的领域有很大的关系。</p>
<p>不过。仔细想想，这里面有很多成功学的味道。&ldquo;重要&rdquo;，指的是什么？看看实际的例子，很可能指的还是财富、名利。除了这些，并没有很多地考虑生活状态、幸福指数等参数。</p>
<p>一辈子踏踏实实在看起来不太好的&ldquo;选择&rdquo;上努力，也许得到的财富、名利并不多，但可能会有这些东西之外的收获。到底值还是不值？就看你看中的是什么了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0331 - 把不好的东西都做一遍]]></title>
      <url>https://atjason.com/1033.html</url>
      <content type="html"><![CDATA[<p>今天看了小米的生态链发布会，感触还是挺深的。</p>
<p>小米是一种模式，包含了很多东西，比如做爆品、高配低价、等等。把这种模式应用到传统的、迭代缓慢的领域，会产生强烈的反应。比如已经进入的领域：插线板、充电宝、等。而今天正式发布了&ldquo;米家&rdquo;这一品牌，更标示着小米生态链渡过了摸索阶段，进行正规军推进时代。</p>
<p>换个角度来看，这个世界上有无数的产品，每个产品或多或少都有其不足的地方。改进这些产品、哪怕只是改进一点点，就是机会，就有可能 让这个新产品处于领先地位。</p>
<p>所以，跟昨天的想法有些接近：别灰心，机会总还是有的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0330 - 机会总还是有的]]></title>
      <url>https://atjason.com/1030.html</url>
      <content type="html"><![CDATA[<p>最近一直很郁闷：</p>
<pre><code>凡是想到的点子，都已经有人做出产品了

凡是想到的点子，都已经有人做出产品了

凡是想到的点子，都已经有人做出产品了
</code></pre><p>不过，今天总算又想到一个点子，大概查了下，还没有很知名的产品。跟朋友交流了下，他也觉得这个点子不错。</p>
<p>恩，又有信心了。只要多接触实现的问题、多想想，机会总还是有的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0329 - 只干，别多想]]></title>
      <url>https://atjason.com/1027.html</url>
      <content type="html"><![CDATA[<p>最开始听到这句话，是在刘慈心的《地火》中。意思就是说，埋头干眼下的事，不要想那么多。</p>
<p>平时做事、尤其是之前有过多种可能性的时候，很容易 &ldquo;乱想&rdquo;</p>
<ul>
<li><p>要是当初怎样怎样，现在就会产怎样</p>
</li>
<li><p>现在这样做对、不是不对</p>
</li>
<li><p>有没有更好的办法</p>
</li>
<li><p>做别的事会不会更好、更赚</p>
</li>
<li><p>…</p>
</li>
</ul>
<p>如果总是浮在这样跳跃的想法中，不能沉下以来做事情，就可能、像猴子摘玉米的寓言一样，什么都做不好、什么都得不到。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0328 - 选择你认可的，坚持你选择的]]></title>
      <url>https://atjason.com/1022.html</url>
      <content type="html"><![CDATA[<p>路有很多，选哪一条？</p>
<pre><code>看哪一条自己喜欢，认可其价值。做自己认可的事，更有兴趣、更有想象力、也更容易在有困难时坚持。
</code></pre><p>选择之后，就要坚持。</p>
<pre><code>很容易出现这样的情况：当遇到困难时，就开始后悔当初的选择：要是当时那样子就好了。可是，即使真的时光倒流、让你选择了&amp;ldquo;那样子&amp;rdquo;，说不定还会有更多大的麻烦等着你。现在的麻烦，不一定是选择造成，而可能是成功的必经之路。既然选择了，就要坚持。要相信，现在的困难越大，搞定后的喜悦越深刻。
</code></pre>]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0328 - 要事第一，要事第一？]]></title>
      <url>https://atjason.com/1020.html</url>
      <content type="html"><![CDATA[<p>要事第一，这是一本很有名的效率类口号、成功学的书。</p>
<p>这句话应该总是对的，要事嘛，当然是第一。不然，如果总是在鸡毛蒜皮的小事，虽然看起来很忙碌 ，但却一直是无足轻重的人。</p>
<p>可是，关键就在要带的定义上。</p>
<p>既然说它是成功学的范畴，那就有很强的世俗的味道。如果我们判断错了要事，岂不是在错的路上越走越远？</p>
<pre><code>比如，我们觉得工作是要事，结果可能影响了身体健康；

比如，我们觉得客户是要事，结果可能冷落的家人；

...
</code></pre><p>世俗的标准，会让我们得到世俗的成功。但至少我们要知道，除了世俗的标准，还有其它不一样的标准。选择一条路时，最好知道你放弃了哪些别的路，别盲目自信、也盲目贬低别人的路。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0325 - 耐得住寂寞]]></title>
      <url>https://atjason.com/1015.html</url>
      <content type="html"><![CDATA[<p>创业路上，可能：</p>
<ul>
<li><p>只有一个人思</p>
</li>
<li><p>只有一个人面对困</p>
</li>
<li><p>只有一个人解决问</p>
</li>
<li><p>只有一个人顶住所有压</p>
</li>
<li><p>只有一个人对最终结果负责</p>
</li>
</ul>
<p>那就是自己。</p>
<p>可以找人倾诉，可以找人讨论，可以找人帮助，可以找人合伙…但要知道，这些只是帮你缓解心理压力、帮你加速进展、帮你做大产品、等等，但最终只是在&ldquo;帮&rdquo;你，你依然是最终把事情做成的核心驱动力。</p>
<p>一定要能自我驱动。如果凡事都要别人指点、方案都要别人认可、决定都要别人帮你做…还是滚回去上班吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Gandi和DNSPod设置自有域名的邮箱]]></title>
      <url>https://atjason.com/1010.html</url>
      <content type="html"><![CDATA[<p>经常看到牛人的邮箱很酷，比如hi@abc.io，一直心痒痒。最近在Gandi中注册了ilib.io域名，发现Gandi还赠送5个域名对应的邮箱，就折腾了一下。不折腾不要紧，一折腾发现里面还是好多坑了。这里小记一下设置自有域名邮箱的填坑记。</p>
<h1 id="在Gandi中创建邮箱地址"><a href="#在Gandi中创建邮箱地址" class="headerlink" title="在Gandi中创建邮箱地址"></a>在Gandi中创建邮箱地址</h1><p>这自然是第一步了。只是，你会发现，从这一步到最终结束，还差得很远很远…</p>
<p>废话不说，登录Gandi.net，选择你的账户，选择要创建邮箱的域名，并进入邮件管理页面。</p>
<p><a href="https://ps.toolinbox.net/ay9t8.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/9bgil.png" alt=""></a></p>
<p>首先启用&quot;Gandi Mail&quot;，然后在信箱列表中点击&ldquo;建立&rdquo;以创建邮箱。其实就是输入邮箱中@前面的名称、以及设置密码，其他选项保持默认即可。可以看到我这里创建的是hi@ilib.io</p>
<p>more</p>
<p><a href="https://ps.toolinbox.net/bdxck.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/xjm87.png" alt=""></a></p>
<p><a href="https://ps.toolinbox.net/9ywjj.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/dtod1.png" alt=""></a></p>
<p>除了设置邮箱地址，还可以设置转发地址。也即，凡是发送至该邮箱的邮件，转发至你已有的其他邮箱。建立过程很简单，这里就不再赘述。</p>
<p><a href="https://ps.toolinbox.net/lelzi.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/c0b0a.png" alt=""></a></p>
<h1 id="在Gandi网页邮箱中验证邮箱地址"><a href="#在Gandi网页邮箱中验证邮箱地址" class="headerlink" title="在Gandi网页邮箱中验证邮箱地址"></a>在Gandi网页邮箱中验证邮箱地址</h1><p>登录<a href="https://webmail.gandi.net/" target="_blank" rel="external">https://webmail.gandi.net/</a>，使用刚刚创建的邮箱、密码登录。</p>
<pre><code>注意
</code></pre><ul>
<li><p>使用的是创建的邮箱、不是转发的邮箱</p>
</li>
<li><p>创建过程可能需要几分钟，如果出现登录失败等问题，可稍等后再试。</p>
</li>
</ul>
<p>登录后，会发现邮箱界面长得很丑。没关系，一会我们会绑定Gmail，之后就不用再看这里了。</p>
<p>试着在这里给你已有的邮箱发邮件，应该就可以收到了。</p>
<p>你以为就搞定了？常识告诉你，肯定没这么简单。</p>
<p>告诉你吧，如果你使用的不是Gandi提供的DNS解析，而是使用DNSPod（比如我）、或者其它域名解析服务器（我估计你会这么干的，因为这样国内解析快嘛），至少会有下面的问题。</p>
<ul>
<li><p>只能发邮件、收不到邮</p>
</li>
<li><p>对方收到邮件后，很可能把它当成垃圾邮件。比如Gmail中可能会有下面的提示：</p>
</li>
</ul>
<p>怎么解决？往下看：</p>
<h1 id="在DNSPod中设置MX记录"><a href="#在DNSPod中设置MX记录" class="headerlink" title="在DNSPod中设置MX记录"></a>在DNSPod中设置MX记录</h1><p>首先解决使用其它域名服务器时收不到邮件的问题。这里以DNSPod为例，其它服务器是类似的。</p>
<p>域名的MX值是用来做什么的呢？简单的说，当你向hi@ilib.io发邮件时，邮件服务器会去找ilib.io这个域名中哪个服务器负责接收邮件，而域名的MX记录就是用来解释这一点的。具体的可以自行搜索MX记录，或者参考 <a href="https://support.dnspod.cn/Kb/showarticle/tsid/33/" target="_blank" rel="external">DNSPod中关于MX记录的设置教程</a></p>
<p>设置以后，大概是这样子的：</p>
<p><a href="https://ps.toolinbox.net/fpcnc.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/3qu1j.png" alt=""></a></p>
<p>其中，具体的记录值是：</p>
<pre><code>主机记录 记录类型 记录值 MX优先级

@ MX fb.mail.gandi.net 50

@ MX spool.mail.gandi.net 10
</code></pre><p>注意：如果设置了MX记录，根域名不要使用CNAME解析，不然很可能会出现域名解析不正常的情况。</p>
<p>过了这一关，应该就可以收邮件了，可以返回刚才的网页版收邮件试试。注意，MX记录和域名的其它项一样，设置后在全球DNS网络中同步是需要时间的。正常情况下几分钟就可以了，如果你运气差就得多等等了。</p>
<h1 id="设置域名的SPF记录"><a href="#设置域名的SPF记录" class="headerlink" title="设置域名的SPF记录"></a>设置域名的SPF记录</h1><p>接下来解决被认为是垃圾邮件的问题。</p>
<p><a href="https://ps.toolinbox.net/9kdcw.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/hp2n6.png" alt=""></a></p>
<p>好端端为什么被认为是垃圾邮件呢？大概是这么回事，比如你的Gmail收到了来自服务器A发出的、自称是ilib.io的邮件，怎么能知道是不是别人冒充的？简单，查身份证啊。对于域名来说，就是到域名服务器查对应的记录是不是服务器A。具体到这里，就是域名的SPF记录。</p>
<p>对于DNSPod来说，并不支持SPF记录，可以使用TXT记录来代替。设置如下：</p>
<p><a href="https://ps.toolinbox.net/wi0mo.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/xggo0.png" alt=""></a></p>
<p>其中输入框中的完整信息为：</p>
<pre><code>v=spf1 ip4:217.70.176.0/20 ip6:2001:4b98:c::/48 ptr ?all
</code></pre><p>同样的，稍等一段时间等DNS记录生效后，再次使用hi@ilib.io发邮件，这次接收方应该就不会认为这是垃圾邮件了。</p>
<p>资料</p>
<ul>
<li><p>[DNSPod中TXT记录](<a href="https://support.dnspod.cn/Kb/showarticle/tsid/34/" target="_blank" rel="external">https://support.dnspod.cn/Kb/showarticle/tsid/34/</a></p>
</li>
<li><p><a href="https://wiki.gandi.net/en/dns/zone/spf-record" target="_blank" rel="external">Gandi中的Sender Policy Framework (SPF) Records in DNS</a></p>
</li>
</ul>
<h1 id="绑定至Gmail账户"><a href="#绑定至Gmail账户" class="headerlink" title="绑定至Gmail账户"></a>绑定至Gmail账户</h1><p>至此，邮箱的设置已基本结束。还有最后一个环节，就是前文说的，Gandi官方提供的网页版邮箱太…了，所以咱可以通过POP3协议，使用自己的邮件客户端。这里使用的Gmail，绑定过程也没什么难的，具体参考这里的 <a href="https://wiki.gandi.net/en/mail/standard-settings/gmail" target="_blank" rel="external">教程</a>。绑定后大概是下面的样子：</p>
<p><a href="https://ps.toolinbox.net/ag51o.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/45m5w.png" alt=""></a></p>
<p>注意要绑定2部分</p>
<ul>
<li><p>收邮件，也即&quot;Check mail from other accounts (using POP3)&quot;，这样就可以在Gmail中接收发送至hi@ilib.io的邮</p>
</li>
<li><p>发邮件，也即&quot;Send mail as&quot;，这样就可以在Gmail中以hi@ilib.io的身份发邮件</p>
</li>
</ul>
<p><a href="https://ps.toolinbox.net/u8sxh.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/wtk9s.png" alt=""></a></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>看似很简单的事，通常背后的东西并不简单。</p>
<pre><code>而我们觉得背后的东西不简单，通常是我们不能静下心来简单地去理解。
</code></pre>]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在XCode中手动运行Playground]]></title>
      <url>https://atjason.com/1006.html</url>
      <content type="html"><![CDATA[<h1 id="为什么要设置手动运行Playground？"><a href="#为什么要设置手动运行Playground？" class="headerlink" title="为什么要设置手动运行Playground？"></a>为什么要设置手动运行Playground？</h1><p>在XCode中运行Swift Playground时，默认代码会自动运行。这也挺好的，但在有些时候，你可能想要拖动运行，比如</p>
<ul>
<li><p>测试比较耗性能的代码，希望代码完成后再运</p>
</li>
<li><p>使用电池供电，想省电以增加续</p>
</li>
<li><p>增加按下快捷键以运行时的那种控制感（好吧…）</p>
</li>
</ul>
<h1 id="怎么设置手动运行Playground？"><a href="#怎么设置手动运行Playground？" class="headerlink" title="怎么设置手动运行Playground？"></a>怎么设置手动运行Playground？</h1><p>很简单，在Playground界面的左下角，长按三角形的运行按钮，在弹出的菜单中选择手动运行即可。</p>
<p><img src="https://ps.toolinbox.net/w2ou3.png" alt=""></p>
<p>设置后，有两个入口可以手动运</p>
<p>more</p>
<ul>
<li><p>Playground界面左下角中的运行按</p>
</li>
<li><p>XCode菜单：Editor &gt; Execute Playground</p>
</li>
</ul>
<h1 id="怎么设置快捷键以手动运行Playground？"><a href="#怎么设置快捷键以手动运行Playground？" class="headerlink" title="怎么设置快捷键以手动运行Playground？"></a>怎么设置快捷键以手动运行Playground？</h1><p>XCode默认并不支持使用快捷键手动运行，可能也是因为这个不常用吧。不过没关系，可以通过修改系统设置来实现。步骤如下：</p>
<pre><code>&amp;bull; 依次打开 System Prefereneces &amp;gt; Keyboard &amp;gt; Shortcuts

&amp;bull; 在左侧列表中选择最下方的&amp;quot;App Shortcuts&amp;quot;

&amp;bull; 点击右侧列表中的添加，在Application中选择XCode，在Menu Title中输入&amp;quot;Execute Playground&amp;quot;，在&amp;quot;KeyboardShortcut&amp;quot;中选择你偏好的快捷键，这里我选择的是Shift+Command+R。注意不要选择Command+R，这会和XCode本身的运行快捷键冲突而无法正常工作。
</code></pre><p><img src="https://ps.toolinbox.net/r1mt8.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0323 - 有产出的知识才有意义]]></title>
      <url>https://atjason.com/1004.html</url>
      <content type="html"><![CDATA[<p>我们不断接触新事物、不断学习新知识、不断收集新资料…这些只是过程，更重要的的是，要有产出。</p>
<p>产出，可以是应用。比如2年后重新找到当年去清迈旅游的攻略，比如找到搭建PPTP服务器的教程并重新搭建，等等。</p>
<p>产出，也可以是传播。比如将自己学习Swift的心得体会以博客的方式记录下来，这样别人在学习、搜索时，你的文章对他人有帮助，知识变得更有价值。</p>
<p>信息爆炸、碎片化的现在，少些输入，多些加工和产出。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0309 - 事成就人，项目带动技术]]></title>
      <url>https://atjason.com/1001.html</url>
      <content type="html"><![CDATA[<p>看一个人，关键看他做成了什么事。</p>
<p>单纯学技术，很难有精进。在做项目的过程中学技术，能更快的入门，也能更深切地体会技术的优势与局限。</p>
<p>撸起袖子干吧</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0301 - 既然切换状态需要成本，就在一个状态里玩个够]]></title>
      <url>https://atjason.com/994.html</url>
      <content type="html"><![CDATA[<p>要玩，就全方位地玩，玩得尽兴。玩到不想再玩了，干活。</p>
<p>干活也是一样，要干，就好好干。不想干了、效率低了，就不干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0229 - 看一部好电影，很爽]]></title>
      <url>https://atjason.com/992.html</url>
      <content type="html"><![CDATA[<p>最近又开始骑行，看了电影《破风》，感觉很爽。</p>
<p>做兴头上的事，就是爽。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0228 - 选择之后不纠结]]></title>
      <url>https://atjason.com/990.html</url>
      <content type="html"><![CDATA[<p>选择的时候纠结也就罢了，选择之后不要再纠结。</p>
<p>一味地反刍过去的事，会挺慢前进的步伐。纠结过去没太多意义，更重要的是过好未来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0227 - 一天做一件有意义的事，一天就值了]]></title>
      <url>https://atjason.com/987.html</url>
      <content type="html"><![CDATA[<p>今天早起去专龙井骑行，回来后虽然有点累，但觉得身体比较舒服，很值得。</p>
<p>放开来看，只要做好了重要的事，就值了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0226 - 差别只在一念之间]]></title>
      <url>https://atjason.com/985.html</url>
      <content type="html"><![CDATA[<p>当我们面临选择时，通常会有多个选项。选择哪个呢？从统计意义上，也许选择会是有规律的。但具体到某一次选择，结果可能会差别很大，我们很容易受当时某个具体的情况影响，而做出不同的选择。</p>
<p>认识到这一点，对我们有什么用呢？比如，对于习惯养成、意志力锻炼等，目标的树立、长期的价值驱动，这样的元素在具体的判断上可能起不到很大的作用，反面是当时那一刻的情况决定了选择。所以，可以用一个非常简单的细节来帮助自己养成习惯。比如，当要偷懒、不按原计划养成习惯时，就对自己说一句话：支持一下。只是这一句，就有可能主你在那一刻坚持下去。不断的小坚持，最终会形成习惯。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0225 - 成为专家]]></title>
      <url>https://atjason.com/981.html</url>
      <content type="html"><![CDATA[<p>所把事情做成有2种方式：1，自己做；2，找人做。</p>
<p>如果是自己做，自己就要是专家，对所在的领域很熟悉，既懂技术、又有经验。</p>
<p>如果是找人做，就要有能力找到合适的服务提供商，或者有能力将合适的人聚起来，一起朝这个目标努力。</p>
<p>当然，大部分事情并没有这么绝对，也就是说自己既要懂、又需要别人的帮助。目前看来，我更倾向于做第一种。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0224 - 做更难的事]]></title>
      <url>https://atjason.com/978.html</url>
      <content type="html"><![CDATA[<p>如果在两件事中选择，选择更难的那件。</p>
<p>对于简单的事，大多数人都可以做。但它还没被做，很可能是因为什么价值。</p>
<p>对于难的事，因为难，做的人少，竞争也会小些。如果做成了，收获会更大。而且，等以后老了，也更有什么可回忆的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0223 - 做激动人心的事情]]></title>
      <url>https://atjason.com/976.html</url>
      <content type="html"><![CDATA[<p>今天华为发布了自家产的笔记本，看着好兴奋。一个通信出身的公司，做了这么 好的笔记本，这种变化和跨度，让人兴奋。</p>
<p>对比自己正在做的事，虽说是创业，但总觉得没那么兴奋。可能是因为缺少正反馈，即没有收入、没有很多用户的评价。但如果仅仅是通过这些来激励自己，说明自己并不是从内心深处认同正在做的事，无法从事情本身得到激励，这是有问题的。</p>
<p>要继续寻找想想都能让人兴奋的事业。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0222 - 素材要靠积累]]></title>
      <url>https://atjason.com/974.html</url>
      <content type="html"><![CDATA[<p>如果在需要某个东西时，能够信手拈来，这叫游刃有余、功夫在法外。</p>
<p>要达到这种境界，就要在平时多积累、多练习。特别是是素材类的东西，平时看见好的就要随手收集起来，这样在用的就不需要满世界去找，节约大量时间。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0221 - 先动起来]]></title>
      <url>https://atjason.com/972.html</url>
      <content type="html"><![CDATA[<p>别管计划，别管战略，先动起来。</p>
<p>在做的过程中，自然会摸索出计划，步骤也会清晰起来。</p>
<p>始终让自己动起来，不要静止，不要呆着不动。即使方向走错了，也比在原地呆着强。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0204 - 经常不锻炼，身体素质真会变差]]></title>
      <url>https://atjason.com/970.html</url>
      <content type="html"><![CDATA[<p>最近一直处于坐着的状态，也很少进行户外活动、或者健身锻炼。结果年前打扫卫生，明显觉得比较累。</p>
<p>等过了年，要开始有规律的生活，尤其是有规律的锻炼身体。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0203 - 工作，只是一部分]]></title>
      <url>https://atjason.com/968.html</url>
      <content type="html"><![CDATA[<p>除了工作，还得生活，还有家庭要照顾，还有别的烦忧或是喜悦。</p>
<p>不管是哪一件事，做好这一件事，才能静下心来做另一件事。再多，也是一件件来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0202 - 要有要求]]></title>
      <url>https://atjason.com/964.html</url>
      <content type="html"><![CDATA[<p>如果太将就、总是将就，就会丧失个性，难以培养审美标准。</p>
<p>要有要求，即使不是全部，也要对可能的范围提高要求，比如对时间的把握、对吃的东西、对娱乐项目、等等。比如，高质量的生活其实能提高人的审美，进而能对工作产生积极影响。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0201 - 运营不好做，做好了感觉很好]]></title>
      <url>https://atjason.com/962.html</url>
      <content type="html"><![CDATA[<p>这几天试着在论坛里推，结果基本都被当作垃圾帖，甚至直接封号；总之用户增长很少。</p>
<p>今天在36kr上推广，一天增长了挺多用户，感觉挺好的。</p>
<p>越是不好做的事，做成了之后成就感越强。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0126 - 有用户的感觉真好]]></title>
      <url>https://atjason.com/960.html</url>
      <content type="html"><![CDATA[<p>今天简单推广了下，开始有用户了，感觉不错。</p>
<p>有用户，就会温度、有真实的反馈、有情绪，感觉自己做的东西开始变得有灵性了。作为缔造者的我们，难以抗拒的兴奋，好开心啊。</p>
<p>当然，也带来的压力。比如，之前服务器可以比较随意的修改。但有了用户就不能这样了，要很小心的提交修改。</p>
<p>恩明天继续推广，期待真正有需求的人进来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0125 - 把东西推销出去，很重要]]></title>
      <url>https://atjason.com/958.html</url>
      <content type="html"><![CDATA[<p>把东西做出来很重要，推销出去更重要。</p>
<p>今天试着把网站发给一些潜在的用户，结果，竟然没有一个人回复，也没有一个人访问网站，真伤心啊。</p>
<p>真是在哪个阶段就觉得哪个阶段的事难啊。做的时候觉得做出来难，做出来了就觉得推出去难。又或者说，自己没做好哪部分，就觉得哪部分难啊。</p>
<p>明天继续想推广的方法。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0124 - 自己做的东西，别人不懂怎么办]]></title>
      <url>https://atjason.com/956.html</url>
      <content type="html"><![CDATA[<p>今天给AppSites.io做了操作视频，给懂点电脑、又不是开发者的人看，对方没看懂。</p>
<p>第一反应自然是沮丧，自己精心做的、自以为还算简单明了的东西，别人竟然不理解，是很沮丧的。</p>
<p>可是，毕竟做出来的东西是给别人用，不是给自己用的，还是要改喽。核心就是，简单简单再简单，直接直接再直接，让人更容易理解和上手。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0123 - 身边的同事比头顶的上司更重要]]></title>
      <url>https://atjason.com/954.html</url>
      <content type="html"><![CDATA[<p>不论是情感支撑、能给予的帮助、还是要将来的可能性，长期来看，身边的同事比头顶的上司更重要。</p>
<p>比如，听过跟同事一起创业的，没听过跟老板一起创业的；就算有，多数还是打工吧。</p>
<p>知道谁更重要，你就知道该怎么做了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0122 - 战略战术要分开]]></title>
      <url>https://atjason.com/952.html</url>
      <content type="html"><![CDATA[<p>战略上，要尽可能地想到所有可能的方案，并选出最佳。</p>
<p>而战术上，就不要再去想是否有更好的方案，而是专注于实现当前这一方案。</p>
<p>如果在想战略的时候不自主地想实现方式，在实现战术时又总想换个方案，那么都做不好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0121 - 人，需要多个支点]]></title>
      <url>https://atjason.com/950.html</url>
      <content type="html"><![CDATA[<p>我们总会遇到各种不同的事、不同的压力，有工作上的、生活上的、情感上的、健康方面的、等等。</p>
<p>如果只是自己面对，肯定是压力巨大。可如果有家人、配偶、朋友、同事、甚至是陌生人的帮助，都能大大分担我们的压力，至少是心理上的压力。保证我们在不被压力打垮的前提下，解决问题、做更多的事。</p>
<p>多给自己找些支点，让自己更稳健。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0120 - 多积累，总能派上用场]]></title>
      <url>https://atjason.com/947.html</url>
      <content type="html"><![CDATA[<p>之前折腾了一段时间板子，就是微电脑，后来搁着了。没想到这次做项目竟然又重新用上了，还算是起到了比较大的作用，感觉不错。</p>
<p>多积累，指不定什么时候能用上，至少能多一个选择。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0119 - 多听听高大上的口号还是有点用的]]></title>
      <url>https://atjason.com/945.html</url>
      <content type="html"><![CDATA[<p>当美国的企业都在研究自动驾驶、火箭回收时，中国最优秀的公司还在做手机。</p>
<p>多听听这样的口号，确实能刺激自己追求高精尖的冲动。有了更高层次的追求，对眼下的困难就看得没那么重了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0116 - 物价飞涨啊]]></title>
      <url>https://atjason.com/942.html</url>
      <content type="html"><![CDATA[<p>今天逛了下街，发现各种东西都好贵。房子、餐饮、衣服、等等，感觉啥都买不起、下不了手。要努力赚钱了，压力好大。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0115 - 尽量跟高手共事]]></title>
      <url>https://atjason.com/940.html</url>
      <content type="html"><![CDATA[<p>哪怕自己少分点，跟高手共事，也比跟一般的人合作、自己分成比例高要好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0114 - 自制力不够强啊]]></title>
      <url>https://atjason.com/938.html</url>
      <content type="html"><![CDATA[<p>今天本来要做一件事的，结果发现坑好大，讨论了一下准备给另一个朋友做。自己一下子轻松下来，却紧张不起来了。没有约束，懒散了一天。好在，听了一部不错 的科幻小说，算是今天的亮点吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0113 - 要不要自己上？]]></title>
      <url>https://atjason.com/935.html</url>
      <content type="html"><![CDATA[<p>当有件事没人做时，怎么办？</p>
<p>一种做法是，自己上。花大把时间去学习这个自己并不会的东西，最后差不多把问题解决掉。</p>
<p>一各做法是，宁可放着，也不自己做。因为自己应该将时间花在更有价值的地方，也就是自己更应该做的事、或者是更擅长做的事；然后想激励团队中的其他人做，或者拉新的人做。</p>
<p>在创业时，很可能创业者会自己上。但有时仔细想想，这很可能不值；还不如花钱请别人做。要学会用更开放的思路解决问题，而不仅仅是自己撸胳膊干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0112 - 团队很重要]]></title>
      <url>https://atjason.com/931.html</url>
      <content type="html"><![CDATA[<p>即使只有2个人，也是团队</p>
<p>1个人，很容易懈怠。有了团队，会互相督促、互相鼓励，保持长时间的积极性。</p>
<p>1个人，思路总是有限的。团队可以有不同的视角，互相碰撞，有不一样的米花。</p>
<p>1个人，成功了能真正分享你开心的人，很少。只有跟你一起并肩作战的人，最能体会你的不容易、不容易之后的开心。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0111 - 被时间赶着走]]></title>
      <url>https://atjason.com/928.html</url>
      <content type="html"><![CDATA[<p>不能不睡觉，不能不起床，不能不工作，不能不&hellip;</p>
<p>被生活赶着上，尤其是被时间赶着，不得停歇。快节奏的生活，仿佛永远停不下来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0110 - 要有节奏]]></title>
      <url>https://atjason.com/926.html</url>
      <content type="html"><![CDATA[<p>这两天效率明显不高，总感觉比较累。看来是要好好休息了。</p>
<p>要有节奏。冲锋一段时间，要停下来休息下，或者放慢节奏，或者做些完全不同的东西，换换脑子。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0109 - 专业的人，提供专业的服务]]></title>
      <url>https://atjason.com/922.html</url>
      <content type="html"><![CDATA[<p>产品中需要一个帮助系统，即用户可以方便地跟我们卫生系统，也可以查看常见问题，也可以一起讨论。本来，自己要建这样的系统还是挺麻烦的。找了下，发现还是有挺多家这样的服务。比较了下，选用了其中一家产品，还是挺满意的。甚至，这都是免费。当然，如果要更进一步的服务，是需要收费的。</p>
<p>如果是自己做的话，需要大师的时间和精力，而且，这还是重复选轮子。有这样的服务，确实是方便很多。起来越相信专业的人提供专业的服务了。这样大家分工明确，各自做自己擅长的事，整体能做的事才会更多、更好。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0108 - 事情多时也能先做重要的事]]></title>
      <url>https://atjason.com/919.html</url>
      <content type="html"><![CDATA[<p>创业伊始，会有很多事情要做。很容易抓起一件事就做，或者先做简单的、自己喜欢的。结果是看起来很忙，却没抓住重点。</p>
<p>已经不是第一次说这个话题了。要真的当回事，真的在每天排计划时强迫自己先做重要的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0107 - 能做就不拖延]]></title>
      <url>https://atjason.com/917.html</url>
      <content type="html"><![CDATA[<p>最近拖延了几件事，做掉之后，发现好轻松啊。</p>
<p>拖延让自己安逸了一会会，可是心里总是记挂着那件事，其实也并不安逸。把它干掉，才是真正的身心畅快。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0106 - 做成一件事，要有资源]]></title>
      <url>https://atjason.com/914.html</url>
      <content type="html"><![CDATA[<p>今天折腾了一天的服务器选择，最后定了AWS的。可是，到了晚上跟一个朋友聊起这事时，他给了我免费的微软的服务器。天，早知道就不用纠结了；而且，这资源对他来说是免费的。</p>
<p>看来，创业还真的是要有资源。人多好办事，其他人总是有些你没有的东西。多些朋，自然就多些可以互换的资源，这样大家都更容易把事情估成。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0105 - 看似简单的东西，背后有无限复杂性]]></title>
      <url>https://atjason.com/912.html</url>
      <content type="html"><![CDATA[<p>最近在做App网站，只是一个单页面，看起来真的很简单。可背后还有很多东西，比如不同浏览器的适配、不同SNS渠道的优化，等等；而这些都是看不见的。</p>
<p>要把一个东西做得精致，就要不断的深入挖掘，精雕细琢；同时还要兼顾广度。通过大量的尝试、调整、部署、改进，才能让简单的东西越来越极致。</p>
<p>而一旦将一个东西做到极致，后退半步，看看自己做的东西，想必是非常的欣慰。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0104 - 团队合作，需要磨合]]></title>
      <url>https://atjason.com/907.html</url>
      <content type="html"><![CDATA[<p>团队合作，有术的部分，也有艺的层面。</p>
<p>术的部分，指的是一些基础性的、技巧性的东西。比如使用Google Doc进行文档协同编辑，使用Git进行代码管理，等等。这些术的部分可以让大家说同样的话，更快的上手。</p>
<p>再往上，就要有艺的层面。合作，不只是使用相同的工具、说同样的话。更关键的是，你懂跟你合作的人。他有什么特长，他容易在什么地方犯错误，他是什么样的脾气，等等。知道这些人性化的东西，才能更深入、更高效的合作。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0103 - 每接触一个新概念，就像打开一扇窗]]></title>
      <url>https://atjason.com/905.html</url>
      <content type="html"><![CDATA[<p>概念，是我们认知世界的基础。我们不断学习和掌握新的概念，并将其压在脚底 而成为概念地层；进而以此为基础，继续去接触和学习新的概念，不断循环。</p>
<p>喜欢刚接触新概念时的感觉。感觉一切都是新的有，有无限的可能，让人感觉很有活力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0102 - 远程工作]]></title>
      <url>https://atjason.com/902.html</url>
      <content type="html"><![CDATA[<p>找一个晚上可以看到星星的地方，远程工作。不用通勤，无需忍耐堵车、或雾霾。春暖花开。</p>
<p>仔细想了下，如果一年都在这里，可能不现实，因为还要考虑将来的医疗、子女教育等问题。但如果只是每年找个地方远程工作几个月，应该还是可以的。除了远程工作，还可以有机会亲近大自然，钓钓鱼、爬爬山、跑跑步、骑骑车、种种菜什么的，都是挺好的。</p>
<p>恩，争取未来几年内可以有一次这样的生活体验。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[0101 - 勇敢地迈出第一步]]></title>
      <url>https://atjason.com/900.html</url>
      <content type="html"><![CDATA[<p>凡事开头难，这包括实际做事层面，也包含心理层面。</p>
<p>最近在旅游，有一段路交通不便，其实是说公共交通不便，还是有很多来往的私家车，于是就想要搭车。可是从来没搭过车啊，心里没底，也很不好意思在路边伸手搭车。当鼓足勇气、伸手搭车时，很意外地一次成功。车主是位年轻人，也算是本地人吧，正好带朋友来这里旅游，也正好和我们的目的地相同。总之就是很顺利。</p>
<p>在做事之前，设想了各种可能性，也包含失败后的退路。可踏出第一步后，也许会发现事情并没有想象中的麻烦，去做就好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1231 - 要想富，先修路]]></title>
      <url>https://atjason.com/898.html</url>
      <content type="html"><![CDATA[<p>最近，杭州到丽水的高铁刚刚开通，于是去丽水及周边玩了下。另外，当地政府为了刺激旅游，还推出凭高铁票免门票的优惠活动，明显看出增加了游客人数。</p>
<p>丽水这个地区多山，这点从来时的路上就看到了，等看到了山顶，更是看得清楚。如果没有便利的交通，大家很难到达这里。没有人，也就没什么可能性，包括旅游，或者其它经济形式。</p>
<p>最重要的是把人连接起来。这种连接，除了虚拟连接，比如互联网、电话，实体连接也非常重要，比如物流、交通。基础设施的完备，给上层的游戏带来了无限的可能性。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1230 - 劣势，也可变为优势]]></title>
      <url>https://atjason.com/896.html</url>
      <content type="html"><![CDATA[<p>最近在设计东西。由于自己没有什么设计功底，做出来的东西都很简单。可正是由于这种设计上的简单，有意无意的让产品变得简单，算是因祸得福吧。</p>
<p>所以，也并没有绝对的劣势，就是看把心思和能力花在什么地方。为自己的能力找到适当的发挥渠道，就可以扬长避短、变劣势为优势。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1229 - 设计是一件让人很舒服的事]]></title>
      <url>https://atjason.com/891.html</url>
      <content type="html"><![CDATA[<p>虽然做的时候很辛苦，既要像素级的纠结，又要有美观层面的思考，两种完全不同的思路交织在一起，很有分裂感。</p>
<p>可是，等到做完了、尤其是做的还比较让自己满意的时候，退后一步，看着自己设计出来的作品，摸摸下巴上不存在的胡须，颇有种满足的感觉。</p>
<p>恩，继续提高鉴赏和设计的能力。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1228 - 看总量，不看增量]]></title>
      <url>https://atjason.com/887.html</url>
      <content type="html"><![CDATA[<p>如果是总量，则曲线总是向上增长的，并且很容易掩盖过程中的问题。</p>
<pre><code>如果是看增量，就可以很清晰看到有没有变化、增长或减少了多少。
</code></pre><p>总量包含了太多过去的信息，而增量则只包含现在的数据。而现在，也就意味着将来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1227 - 创业，心态要平和]]></title>
      <url>https://atjason.com/882.html</url>
      <content type="html"><![CDATA[<p>想到一个绝佳的点子，激动得晚上睡得早不着觉</p>
<pre><code>各种困难，觉得好难，难得晚上上睡得早不着觉
</code></pre><p>这样下去，晚上都不要睡觉了</p>
<p>创业，既不是件神圣的事，也不是见不得人的事，只是件事，自己想做的事。那么，专心的做事，打磨好产品或服务，就好了。可以喜，可以怒，但不要沉溺于自己的情绪中，学会站在更高的角度看问题、看更远的方向，自然没有那么情绪化。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1226 - 特别容易急躁]]></title>
      <url>https://atjason.com/880.html</url>
      <content type="html"><![CDATA[<p>淘宝购物碰到不顺心的事，语气很差地说了专家一通；</p>
<pre><code>Uber撞车不顺利，又心情很差，想给Uber和司机差评；

跟身边的人沟通时，也会缺乏耐心，有时懒得解释；
</code></pre><p>结果就是，让自己的状态变差，浪费了时间和精力，又没有把时间花在主要的事情 上。</p>
<p>看来还是要学习控制下自己的情绪，宽容一些、平静一些，尽快地把事情解决掉，然后把心力放在重要的事上。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1125 - 你是什么心态，世界就是什么样子]]></title>
      <url>https://atjason.com/878.html</url>
      <content type="html"><![CDATA[<p>如果你积极，就会发现大家都在努力找机会，热火朝天地奋斗。</p>
<p>如果你消极，就会发现大家都是碌碌无为，随便混日子。</p>
<p>你会看自己喜欢的视频，交和自己差不多类型的朋友，做自己一直以来做的事。周围的人和事就像你的镜子，看看他们，也就知道你是什么人了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1224 - 杭州真是藏龙卧虎]]></title>
      <url>https://atjason.com/874.html</url>
      <content type="html"><![CDATA[<p>今天了解到一个感觉很不错的创业者、产品，发现也是在杭州的，真是藏龙卧虎啊。</p>
<p>之前自己太闭塞了，只是呆在公司，和外部接触的不多，导致人脉不够广，了解 的信息也比较少。看来以后自己要多花些时间和心思去和外面的高手打交道。而且，和不同的人接触，也容易碰出火花。</p>
<p>当然，自己也得有货，这样才好意思和别人打招呼。毕竟大家都希望和比自己历害 的人、能帮助自己的人打交道。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1223 - 5元包邮的世界，你不懂]]></title>
      <url>https://atjason.com/872.html</url>
      <content type="html"><![CDATA[<p>好吧，其实我也不懂。</p>
<p>且不说商品本身，单就快递的价格也不止5元。当然，可能会能和快递公司签约而的拉低运费价格，但想来也不会太便宜。</p>
<p>单从商品本身没什么好分析的。那再进一步，只能想到说是给商家引流。这个东西都包邮了，要不顺手再买点别的？这样，商家就开始有利润了。</p>
<p>再往下呢？店铺的口碑、评分、销量、排名的累积，会给后续生意带来便利。</p>
<p>再往下呢？清仓？没做过，好像还真想不出来了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1222 - 读小说，增加想象力]]></title>
      <url>https://atjason.com/870.html</url>
      <content type="html"><![CDATA[<p>今天看了《解忧杂货铺》，作者的思路真是奇特、又缜密啊，穿越时空而又串联了不同的故事，确实引人入胜。</p>
<p>好久好久没有读小说了。罗辑思维里有一点讲得不错：看小说不仅是休闲，更是锻炼一个人的想象力。作者可以凭空、或者根据自己的点滴阅历，构思出或庞大、或充满细节的故事，是想象力的神奇体现。</p>
<p>恩，多一个读小说的借口。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1121 - 不行，换个环境试试]]></title>
      <url>https://atjason.com/866.html</url>
      <content type="html"><![CDATA[<p>相同的谈话，在公司、在家里、在车上、在公园中，效果大不相同。有的环境让人放松，有的环境让人的拘束。尤其当人自制力不强时，环境对人的影响就尤其明显。</p>
<p>长期在一个地方呆着，思想肯定会受这个环境的影响。比如长期在公司里工作，思路就比较容易受局限，限定在固定的套路中。如果经常出去走走，和不同的人、团队聊聊，见见不同的事，思路就会比较开阔。</p>
<p>思路枯竭时，出去走走，让环境来刺激下大脑，会有意想不到的收获。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1220 - 需要顾问，又怕上当]]></title>
      <url>https://atjason.com/863.html</url>
      <content type="html"><![CDATA[<p>宽带要到期了，对现在的运营商不满意，想要换一个，却不知道哪家更合适些，于是只能在网上乱搜一通。既花时间，又很难得到想要的结果。</p>
<p>此时，我确实需要一位顾问，直接也当告诉我选哪家。而如果真有这样的顾问，我又担心对方因为利益的关系而让我选择对他有利的选项。真是纠结。</p>
<p>如何才能打破这样的困境呢？顾问提供专业、诚实的服务，顾客相信顾问、并愿意为服务而付费。是诚信的问题，还是服务意识的问题，还是用机制来克服人性阴暗 面的问题？</p>
<p>总之，服务应该是不错的方向。现在的物质产品确实是很丰富，而服务还没有相应地跟上来。在越来越专业化、个性化的以后，服务业会是越来越对口的职业。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1219 - 天气真的可以影响生活]]></title>
      <url>https://atjason.com/861.html</url>
      <content type="html"><![CDATA[<p>今天本打算是去爬山的，都已经出门快到山脚下了，感觉天气不怎么好。查了下，PM2.5有184，中度污染。想了想，放弃，回家窝在家里。</p>
<p>真的是切实的感受。不知道富豪们对待雾霾天气有什么感受，不知道领导人们又是怎么看的。对小老百姓，只能忍，只能习惯。只是显然，我还没有习惯在雾霾天里爬山。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1218 - 能一次办好的手续，不叫手续]]></title>
      <url>https://atjason.com/857.html</url>
      <content type="html"><![CDATA[<p>今天去跟政府打交道，又是一声叹息。</p>
<p>能一次办好的手续，不叫手续</p>
<p>其实去之前还是有心理准备的，第一次去主要是确认2点：衙门有没有找对、还缺少什么材料。材料的诡异就不必说了，网上有各种吐槽，如单身证明、未加入邪教的证明、等等。我这次遇到的虽没有这么奇葩，但是非常人所能理解。</p>
<p>政府效率的改革，一定不是自内而外的。就拿今天这么冷的天，呆在温暖如春的大厅中的办事人员，是不会想着让冒着寒风前来办事的人少跑一套的，也不会想着如何提高效率来给自己增加工作量。但他们更希望今天来的人少些、早点下班回家。改革这么痛的事，他们才不会没事找事。</p>
<p>政府效率的提高，也一定不是技术驱动的。现在移动互联网这么发达了，单说政府网站信息的陈旧、过时，是不可能出现在任何一个正常的网络产品中的。在网上查到的办公地点，现在可能已经拆迁了；查到的办事流程，也一定和现在墙上打印的不一致。</p>
<p>怎么才能改革呢？民怨的累积？底层公众的监督？政治人物的强力推动？不得解。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1217 - 政府部门的效率变高了？]]></title>
      <url>https://atjason.com/855.html</url>
      <content type="html"><![CDATA[<p>今天跟朋友聊天，提到他在办身份证和港澳通行证，说是速度很快，比想象中的快多了，感觉政府效率变高了。</p>
<p>真是这样吗？还不确定，最近也要去跟政府打打资产，希望真的是快了些。</p>
<p>其实，说到跟政府打交道，一般人头还是大的。比如这两天，我1次看到有人坐在市交通厅门口，实人举报当地的交通部门的主管权大于法，无法无天。也看到某航空公司即使在法院判定与某飞行员解除劳动合同时，依然不放人，该飞行员每天在航空公司门口站着，用这种无力的方式来争取自己本应有的权益。这种在大组织、政府面前，个人的渺小，给在中国生活的人以太深刻的印象。大家都不愿意去触碰政府或大组织的霉头，能不打交道最好。</p>
<p>不知道在互联网、新经济冲击下的政府是不是真的变了样，期待。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1216 - 意料之外的青年旅社]]></title>
      <url>https://atjason.com/853.html</url>
      <content type="html"><![CDATA[<p>说是青年旅社，其实就是个睡觉的地方。100多方的房子，把其中的房间放上几张高低床，一个房间可以有10个床位，然后再按床位来出售。一个床位50元，那一个房间就就可以卖到500元一晚上，单位面积比酒店赚多了。对住客来讲，价格也便宜很多。</p>
<p>说到氛围，很可惜，我去的时候是工作日，2个房间，其中一个房间已经有一个住宅，且已经睡了。另一个房间是空的，也只有我来住了。所以也就没有传说中的男女混住和艳遇了。</p>
<p>除了住宿的房间，客厅的装饰就是旅游风格，比如地图、景点的标志等等，还有方便大家聊天的沙发、桌子等等，也还有投影仪这种方便一起看电影、看球赛的设备。</p>
<p>怎么开一家青年放完呢？住的地方是在商住两用的高层。应该还是要打通很多政府关系的，比如消防，比如如何不被认为是群租房，等等。生意也没有想象中的好，至少在工作日几乎也没什么人来住。</p>
<p>总之，算是比较失望的一次青年旅社之旅。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1215 - 尝试不同的东西]]></title>
      <url>https://atjason.com/851.html</url>
      <content type="html"><![CDATA[<p>今天订酒店，突然感觉想到，要不住下青年旅社？其实之前还真没住过，正好试下，说不定能结识新朋友，还省点钱。</p>
<p>尝试下不同的东西，而不总是按经验、做擅长的事情，给自己多些可能性。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1214 - 农村劳动力流失的问题，真是大问题]]></title>
      <url>https://atjason.com/849.html</url>
      <content type="html"><![CDATA[<p>农民都到变成了农民工，谁种地呢？</p>
<p>也许现在还有孤寡老人种地，可10年后呢？等留守儿童长大了种地吗？看起来现在的00后、10后长大了更向往城市里的生活。</p>
<p>那土地呢？国家有1亿亩耕地红线不能动，那就要有适当的方式来种这1亿亩地。如果维持现在每家每户精耕细作的方式，则需要大量的劳动力，行不通。如果是搞把分散的土地集中起来，搞农场经济，其中的阻力非常巨大，真真会是场革命，至少和当年打土豪、分田地地差不多。另外，具体到利益如何分配、解放出来的劳动力如何流转，则更是难上之难。</p>
<p>不过，再难这也是趋势，而且是影响国之根本的趋势，也应该会侧重出一批有智慧的创业者来发挥。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1213 - 共享经济，真是吸引人]]></title>
      <url>https://atjason.com/847.html</url>
      <content type="html"><![CDATA[<p>今天花了2分钱在淘宝上买了12个小时的迅雷会员，下载了近100GB的东西。共享经济真是吸引人。</p>
<p>把自己富余的东西拿出来共享，既可以获得收益，还能让接收者能以很低的价格享受到商品或服务，确实很好。这比二手交易还要好些，因为它粒度更细、可交易的东西更多。其实，任何自己富余的东西都可以拿出来共享，包括物品，也包括自己的时间。</p>
<p>可以朝着这个方向再想想。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1212 - 每个城市，都有自己完整的生活]]></title>
      <url>https://atjason.com/845.html</url>
      <content type="html"><![CDATA[<p>今天去了湖州，只呆了一天，不能说有太深的了解，只是有些感触。</p>
<p>喜来登酒店造型很别致，有说像月亮，有说像马桶圈；突兀在太湖南岸，还是吸睛不少。周边的商业化，除了餐饮，还是餐饮，中国特色啊。</p>
<p>去市区逛了2个公园，在闹市区能有这么大的公园免费开放，着实不易，也着实不错啊。</p>
<p>房价是绕不开的话题。据当地司机说，因为拆迁补偿，很多当地人每家都有3、400平米的房子，没什么购买的需求。再加上劳动力向上海、杭州等城市外流，购房的动力就更小，导致很多楼盘其实不好卖。</p>
<p>高铁、打车、餐饮、逛街、医疗、教育等等吧，一样都不少。每个城市、不管大小，也都有自己的完整的生活。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1211 - 价格依然是生活必须品的决定因素]]></title>
      <url>https://atjason.com/841.html</url>
      <content type="html"><![CDATA[<p>马上要到双12，超市开始打5折。今天去超市买东西，人真是多啊，而且很明显的是，大家都拎着大米、油出来，为了凑折扣的金额，狂买生活必须品。</p>
<p>对大部分小老百姓来说，价格因素依然是最重要的，要明显高于对生活品质的要求。比大米，有3块多钱一斤的，也有15块一斤的。而货架上，便宜的大米都被抢空了，贵的米却还有很多。</p>
<p>不过，凡事要看趋势，未来大家的收入还是会上去的，对品质生活的要求会越来越高。即使是现在，有钱人也多的是。所以关键还是要抓住自己产品的典型用户，这典型用户可以是普通大众，也可以是生活富足的人。产品本身没有贵贱之分，关键是要卖对了人。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1210 - 想出来做什么，比做出来还要困难]]></title>
      <url>https://atjason.com/839.html</url>
      <content type="html"><![CDATA[<p>至少现在是这么觉得的。</p>
<p>目前的2个项目，都做到了自己觉得差不多的程度，再往下也没有吸引人的点子，就先搁着了。可接下来做什么呢？这两天也专门花时间去想了，可惜真没有想出来。</p>
<p>今天了解了下独立开发者的情况，有个两个感受：一，真心不容易。比较国外一些开发者公布了自己在2014年的收入，真心不乐观啊。另一方面，看到有很多想要成为自由职业者的独立开发者。比想象人要多很多，并且很多在杭州，很多人也都有自己的App了。真想找他们抱团取暖啊。</p>
<p>目前的打算是，最近些天，一边学习，一边在网上了解独立开发者的生存状况，同时继续找灵感。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1209 - 创新，还是要从身边出发]]></title>
      <url>https://atjason.com/836.html</url>
      <content type="html"><![CDATA[<p>今天想了一天要做什么，最后想出的创意，还是自己真实的需求产生的。</p>
<p>只根据经验和自己能掌握的技术去想能做什么东西，这样的思路是行不通的。要丰富自己的生活，多接触不同的东西。在接触的过程中发现目前做的不好的地方，想着怎么改进它，这样会激发更有效的创新。</p>
<p>要扩大自己的生活圈，丰富不同的生活方式。另外，就是要多接触新鲜事务，把握未来的动向。机会稍纵即逝，留给后来者的只剩下模仿，甚至连模仿的机会以者没有。这也是为什么每当有个点子时，到App Store一搜索，会发现已经有N多软件实现了这个想法，就是因为你不够超前。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1208 - 要事第一]]></title>
      <url>https://atjason.com/833.html</url>
      <content type="html"><![CDATA[<p>今天原本打算做一件比较重要的事，结果早上起来一个变故，导致重要的事没做，改做其它的事了。</p>
<p>晚上想想，觉得还是不安。虽然改做的事也还算重要，但明显没有原计划的重要，感觉没有把时间和精力用在最重要的地方。</p>
<p>明天，雷打不动，一定要把这个重要的事出个眉目来。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1207 - 美丑真的有标准吗？]]></title>
      <url>https://atjason.com/831.html</url>
      <content type="html"><![CDATA[<p>现在做的产品的Log是自己设计并实现，在朋友圈中采访了下，基本都认为很丑。今天在V2EX上推广，居然有人说好看，我也是醉了。</p>
<p>美丑真的有标准吗？或者说，有大家对相同的设计会有一致的看法吗？</p>
<p>看起来是没有的。并没有所谓的标准，但每个人对好不好看有自己的判断；判断不同，进而就有了概率颁问题。颁区间比较多的，就被认为是好看了。</p>
<p>另外，所谓&ldquo;专家&rdquo;对标准的影响也是很大的。比如，如果某个设计领域的&ldquo;大牛&rdquo;说某个设计好看，估计慢慢的会有越来越多的人也认为它好看地，也就慢慢变成了事实上的标准。</p>
<p>现在的Logo，我可能看多了，不觉得好看，也不觉得特别丑。暂不打算改了，因为还不想改变&ldquo;这100%都是我做的&rdquo;这个虚荣的东西，以后再改进请人设计吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1206 - 为什么感觉很慌]]></title>
      <url>https://atjason.com/829.html</url>
      <content type="html"><![CDATA[<p>今天把一个小工具的里的某个功能做到极致了，感觉挺爽。</p>
<p>可是，依然感觉很慌，为什么呢？</p>
<p>毕竟这是个小工具，目前其实没什么人用，并且自己也清楚未来也很难有很多人来用。</p>
<p>那么，接下来的问题就是，那到底要做什么呢？做什么产品才可能会有大量用户、并且有赚钱的前景呢？所以，说白了自己忧心的并不是自己的技术不足、或者眼下某个具体的技术问题。自己忧心的是不确定的未来，是没有一个能看到希望的产品。</p>
<p>要开始想想这个问题的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1205 - 批评容易，建设很难]]></title>
      <url>https://atjason.com/826.html</url>
      <content type="html"><![CDATA[<p>对于已经做出来的东西，说出它什么地方不好很容易，可是要说应该做成什么样子、怎么做，批评者却不太能说出来了。</p>
<p>不是说不能批评，当然可以，有多少人以批评家的职业存活。只是说对于创造者，对于批评者的言论要有清醒的认识。也许，他们只是不知道你心中的蓝图；也许，他们是想误导你；又也许，他们只是想批评。当然，最可能的是，你做的还不够好，确实有很多可以批评的地方。然而，so what，you can you up</p>
<p>恩，继续改进自己的东西；恩，自己的东西</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1204 - 相同的路，来去风景不同]]></title>
      <url>https://atjason.com/824.html</url>
      <content type="html"><![CDATA[<p>今天去一条没走过的路毅行，回来的路上，看到一个路口，不知道该往哪走。转身时，愕然发现，这不就是来的时候那个路口吗？！</p>
<p>相同的路，来去时角度不同、心情不同，看到的东西也不同。</p>
<p>看问题也是一样，角度不同、立场不同，看到的问题不一样，解决办法也不一样。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1203 - 多些时间给思考，少些时间给行动]]></title>
      <url>https://atjason.com/820.html</url>
      <content type="html"><![CDATA[<p>今天花了3个小时就完成了一个比较大的功能的主体代码，并且写完后可以直接运行，竟然没什么Bug，真是太奇妙了！</p>
<p>想了想，主要是是做这个功能之前自己想了挺久，早上本来躺床上时想过，在太阳下散步时想过，在白板上演化过，所以考虑的算是比较全面。然后就开始代码了，没什么反复，没什么问题，进展自然就快些。</p>
<p>多想想，想充分了再动手，比直接上手更快些。当然，我这里指的是写代码。别的事可不一定，毕竟有时多想反面就会变得磨叽，不过说干就干。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1202 - 把用户当成金主，还是是朋友？]]></title>
      <url>https://atjason.com/817.html</url>
      <content type="html"><![CDATA[<p>如果是当作金主，就要尽可能地让用户付费，不给钱甚至什么功能都不能用。</p>
<pre><code>如果是当作朋友，则应该让开放尽可能多的功能，甚至是全部免费；用户高兴了可以打点赏。
</code></pre><p>选哪一种呢？</p>
<p>今天做试用机制，纠结了半天，最后的选择是中间。不付费也可以继续用，但功能会受限。其实心里还是隐隐有些担心：用户会不会因此而不付费。先试行一段时间吧，然后看情况再说。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1201 - 再小的产品，都可以无限深挖]]></title>
      <url>https://atjason.com/814.html</url>
      <content type="html"><![CDATA[<p>就比较自己目前在做的小工具，年埴为挺简简单的，但背后的复杂也只有自己知道。并且，也有很多有道理的需求可以考虑。</p>
<p>即使是技术、功能之外的，也有很多事情，比如网站 、Facebook运营、Twitter运营、等等。思路扩展开来，可以做的事就更多了。</p>
<p>当然，这需要一个度，如果凡事都这么挖下去，我们能做的事也太少了。当然，如果就做这么少的的事，就能让生活变得充实，关键还能减少自己，那就太好了。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1130 - 需要激励]]></title>
      <url>https://atjason.com/812.html</url>
      <content type="html"><![CDATA[<p>今天本来状态一般，没什么斗志。但看到又新增了付费用户，还有用户发邮件反馈，立马就来了精神。</p>
<p>需要反馈、需要刺激啊！</p>
<p>当然，没有这样的刺激，自己也还是会坚持下去的。但肯定没有被刺激后的效果好。在学习、成长、工作的路上，或者说任意路上，都要学会给自己找些刺激、找些激励，这样才能让自己有更高的兴奋值去面对过程中的枯燥。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1129 - 搞技术，还是要有些深度]]></title>
      <url>https://atjason.com/810.html</url>
      <content type="html"><![CDATA[<p>使用比较浅的技术去堆逻辑、堆界面、堆交互，也能堆出不错的产品。</p>
<p>但这样对技术的进步确实帮助有限，只是变成熟练工。要想在技术上有所精进，还是要钻一些有难度、有深度的方面。真正打通某一关，才能对其它关有触类旁通的感觉。</p>
<p>初步打算实现Google Analytics的Swift OS X客户端。可能会先发个众筹项目，一方面难搞点钱，另一方面看有多少人对这个项目感。然后用1到2个月的时间，好好搞下这个项目。搞好后，也能是自己的一个品牌。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1128 - 不要沉溺于某个问题]]></title>
      <url>https://atjason.com/808.html</url>
      <content type="html"><![CDATA[<p>今天又折腾了一天Gogole Analytics的东西。虽然最后确实解决了问题，目前看起来也还算健壮，但毕竟不够纯粹，也不可能直接拿出来给别人用。</p>
<p>我们是可以比较自由的去学习某个东西，但如果时间超出了心理预期，就要引起警觉。不能太过于沉溺于某个问题，要提醒自己拉高视角，看看大局，然后决定是否要继续在这个问题上花更多的精力。如果不值得，应该忙收手，把事情做到一个差不多完整的状态，然后停止。</p>
<p>明天换个事情做。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1127 - 偶尔造造轮子]]></title>
      <url>https://atjason.com/806.html</url>
      <content type="html"><![CDATA[<p>今天本来打算给Mac App加数据统计，结果找了半天都没有合适的。自己一起比较喜欢使用Google Analytics，结果官方没有SDK，网上也有一些使用通过不同渠道来集成Google Analytics的第三方库，可以都是2、3年前的，集成进来也有一堆问题。</p>
<p>后来仔细想了下，自己目前对数据统计的要求还不是很高，主要是想知道每天有多少用户在用、位于什么地方、使用什么语言，等等。这样其实只要进行最简单的Google Analytics集成就可以了。干脆自己干吧！</p>
<p>过程不用说，最后的代码不超过20行。当然，还要网页端配合。总的来说，还是很简单的，效果也让自己满意。虽然研究的时间并不算短。</p>
<p>偶尔造造轮子还是挺好的，让自己开心，理解了底层的东西，还能共享给别人来用；一举多得。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1125 - 状态不是一直都好]]></title>
      <url>https://atjason.com/803.html</url>
      <content type="html"><![CDATA[<p>昨天还是紧张刺激地提交了意念钟到AppStore，今天人就泄了气。</p>
<p>其实本来也是打算今天休整一天的，没想到还不是心理上放松，执行力上立马就大大打扣。一天都不太想做那些需要集中精力的事，就做比较不太散漫的事。好在这几天也积累了一些这样的事，正好今天处理掉。</p>
<p>晚上想着既然很难再集中精力，干脆看电影去吧，《火星救援》，希望比较好看。</p>
<p>另外，话说各个O2O卖电影票的价格还是波动的。中午看时还比较一致，到了晚上再看，有的App涨价了、有的降价了，真是奇怪啊。不管了，先占个便宜再说。</p>
<p>百度钱包还立减8元。冲着这点小便宜，愣是出卖了自己的银行卡信息。一方面感呗推广成本真高，另一方面又想着大部分用户还是会被小便宜给吊住的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1125 - Outernt是什么鬼？]]></title>
      <url>https://atjason.com/800.html</url>
      <content type="html"><![CDATA[<p>今天被问起是否了解Outernet，自然是不了解的，所以了解了一下</p>
<p>简单的说，Outernet就像是广播一样，可以拿收音机来类比。收音机可以免费、随时随地地接听来自世界种地的广播；Outernet和广播比较像，只是在内容上变成了可以在手机、电脑等设置上查看的文字、图片、视频等形式。具体的内容，可以是维基百科上的文章、CNN上的新闻，等等。</p>
<p>不过，看起来这个项目在技术上、商业上还是有非常大的问题，以前也有很多类似的项目都失败了。现在正在进行的类似的项目，包括Google进行的使用热气球覆盖一定区域进行无线上网，等等</p>
<p>这一技术有个非常大的局限：只能接收数据、不能上传数据（这一点还是和收音机很像）。这对于习惯使用互联网的我们来说，会非常难以接受。但对于像非洲这样不发达、很多人都没接触过Internet的人来说，还是很有吸引力的。</p>
<p>只是，我现在已经没有很大的兴趣了。不过，如果简单搞搞就能搞出这样的&ldquo;收音机&rdquo;，还是可以考虑的。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1124 - 有多种方式达到同一目的，挺好]]></title>
      <url>https://atjason.com/795.html</url>
      <content type="html"><![CDATA[<p>就像是出行，既可以打的，也可以坐专车</p>
<pre><code>就像是买电影票，既可以在格瓦拉，也可以在百度糯米

就像是科学上网，既可以使用VPN，也可以使用Shadowsocks

就像是在Sketch中绘图，既可以使用矢量图，也可以使用位图

就像是提交App，既可以在XCode中提交，也可以在专门的应用中提交

就像是TimeMachine备份，即可以备份到移动硬盘，也可以无线备份到TimeCapsule
</code></pre><p>主题问题在于，某种方式会有莫名其妙的坑。被坑时，如果实在爬不出来，就试试换个方向。也许可以很快地爬出坑，或者根本就绕过坑。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1123 - 越急越慢]]></title>
      <url>https://atjason.com/793.html</url>
      <content type="html"><![CDATA[<p>上午的时候，觉得进展比较慢，就想快一些，就比较急。结果，越是心急，发现越是容易出错，还学不到什么东西，真是越急越慢。</p>
<p>还是要静下心来，专心的、一件件的做事。还要坚持按照番茄工作法的原则，工作一段时间，就要强迫自己起来走走。虽说会中断思路，但会让自己放开眼下正在作的事，换个角度看问题；也能避免自己陷入某个思维牛角尖中。</p>
<p>明天，踏踏实实做事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1122 - 手上的充实，会让大脑变得安逸]]></title>
      <url>https://atjason.com/791.html</url>
      <content type="html"><![CDATA[<p>比较奇妙，只要有事情做，大脑就会休息。只是当没事情做、比较慌张时，大脑才开始干活</p>
<p>这样好吗？</p>
<pre><code>也许是。可以醉心于自己正在做的事，不用去考虑杂七杂八的事情；让人充实、也很舒适。就像刘慈心在《球状闪电》中所说的
</code></pre><blockquote>
<p>&ldquo;过一个美妙的人生并不难，听爸爸教你：你选一个公认的世界难题，最好是只用一张纸和一只铅笔的数学难题，比如歌德巴赫猜想或费尔马大定理什么的，或连纸笔都不要的纯自然哲学难题，比如宇宙的本源之类，投入全部身心钻研，只问耕耘不问收获，不知不觉的专注中，一辈子也就过去了。人们常说的寄托，也就是这么回事。&rdquo;</p>
</blockquote>
<p>这样好吗？</p>
<pre><code>也许不是。如果只是被别人丢一些事情过来，就可以忙碌很久；然后依次重复。这样的生活看起来总有些可悲。毕竟一辈子只能给别人做事情，并且只是在某一层次。毕竟，思想上的高度决定一个人的高度。
</code></pre><p>怎么选，由你</p>
<p>经常做事保持手上熟练，思想上求新若饥、求异若渴。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1121 - 重用、重用、重用]]></title>
      <url>https://atjason.com/789.html</url>
      <content type="html"><![CDATA[<p>重要的事情说三遍</p>
<p>在写代码时，</p>
<ul>
<li><p>如果能够重用，可以少写很多代码</p>
</li>
<li><p>如果能够重用，说明代码结构不错</p>
</li>
<li><p>如果能够重用，可以减少可能的Bug数量；</p>
</li>
</ul>
<p>不要重复地发明轮子，而是要重复地使用轮子</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1121 - 项目伊始]]></title>
      <url>https://atjason.com/785.html</url>
      <content type="html"><![CDATA[<p>项目开始时，总是要做些事情。如果要分类，可能会有这些：</p>
<p>需求分析</p>
<pre><code> 到底是要满足哪些需求；进而，根据需求，又需要哪些功能

用户需求

 东西做出来了，谁会用呢？是自己想出来的场景，还是真实存在的

竞品分析

 这世界人实在太多，聪明而又勤劳的也实在太多。也就做了太多的东西，不管有用没用，非常有可能已经有了你想做的东西。先看看吧，看自己能不能做的比他们更好。

 如果可以，就去做吧；如果不可以，简单，放弃呗。再去找新的事做。恩，就这样

技术可行性

 其实就是说，自己能做到吗？也许目前不会，努力一下能搞定吗？另外，也就是性价比的事，搞这个划不划算

付费分析

 没办法，总是要生活的，要生活就得有钱不是。所以，就得想想怎么从用户口袋里掏钱
</code></pre><p>还有呢？</p>
<pre><code>肯定还有。不过，也别想太多了，先干吧。不然还没干就被吓到了，就不知道干的过程有多爽了不是
</code></pre>]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1120 - 不得不做的事听起来总是那么有道理]]></title>
      <url>https://atjason.com/783.html</url>
      <content type="html"><![CDATA[<p>我们还要生活呢，还要还房贷呢，还要养小孩呢，还要养老人呢….你怎么能这样呢？可是，真的不能这样吗？</p>
<p>现在的我，顶多还都是反问。不过，也至少说明我真的开始思考了，开始想想以前一定要的事，是不是真的一定要。至于是不是真的一定要，这不一定会有答案，可是我还是会一直思考的。这思考过程本身，也许就是生活。</p>
<p>勇敢走出去之后，其实想想也真的没什么。以前在意的事，也许根本就不值得在意。以前努力的工作，说不定就是在浪费时间。总之，一切并无定数，只是看你怎么看，看你是否知道还可以怎么看。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1119 - 喜欢赋闲]]></title>
      <url>https://atjason.com/781.html</url>
      <content type="html"><![CDATA[<p>赋闲在家，有了诸多感受。原来以为必然的生活，现在看来其实只是可选项。为什么一定要选这一项呢？</p>
<p>家，真是个好地方。当要不工作回到家里，听到有人说：我养你吧。真的感觉挺舒服。虽然知道自己还是会去工作呢（其实，真的一定要这样吗？其实，也不一定，尤其是过段时间以后）</p>
<p>做点自己想做的事，做点值得以后回忆的事，才是不虚度现在宝贵的时光。做什么本身并不重要，真的重要吗？觉得舒服就好，如果能值得回忆，那真是太美妙了。不值得也没什么，反正都是自己做过的事。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[1118 - 每天写一点 - 开篇]]></title>
      <url>https://atjason.com/778.html</url>
      <content type="html"><![CDATA[<p>文字，是美好的。可以说给别人听，也可以是自己对自己的唠叨。</p>
<p>随意写着，就像是漫步，走到哪算哪，没有目的，漫无边际。</p>
<pre><code>喜欢打字，可是更喜欢漫无目的行走时，漫无目的的思考。信马由缰，不用担心不会打字，不用担心打字的速度跟不上思考的速度，不用担心打字本身会影响思考，只是思考就可以。其实，打字的时侯真的需要想字有没有打错吗？其实也没一定，这样会妨碍自己的思考。随意想着、打着，错了就错了呗，大不了打完字了再修改。又或者为什么需要修改呢？为什么怕有错别字呢？古代名字不是通假字吗？嘿嘿
</code></pre><p>很享受这样的状态，就是在做自己喜欢的事、认同的事。</p>
<p>每天写一点，每天对自己说段话。当自己老了，也算是自己的回忆录吧。</p>
]]></content>
      
        <categories>
            
            <category> 每天写一点 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[标题在最后]]></title>
      <url>https://atjason.com/775.html</url>
      <content type="html"><![CDATA[<p>先从一个圆圈说起：</p>
<p><a href="https://ps.toolinbox.net/97xsr.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/97xsr.png" alt=""></a></p>
<p>在平面世界里，如果是在圈外，想要不经过圆圈而到达圆心，是不可能的。</p>
<p><a href="https://ps.toolinbox.net/949yq.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/949yq.png" alt=""></a></p>
<p>而如果是在三维世界，则可以直抵圆心。</p>
<pre><code>同样的，在三维世界里，想要不打开包裹而取出里面的东西，是不可能的。

而如果是在四维世界，穿墙而过简直再普通不过。说个惊悚的例子，可以在不破坏一寸肌肤的前提下，摘除一个人的心脏。往好了说，可以不开刀就可以给一个人做心脏搭桥手术。
</code></pre><p>也许我们很难理解四维世界，但也许它就真实存在。就像黑暗中的灯塔，我们看不见，只是因为，它未被点亮。</p>
<p>换个角度，别有洞天</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第18本书《乔布斯传》]]></title>
      <url>https://atjason.com/772.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00IM4IFL2/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00IM4IFL2&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/vmvev.jpg" alt=""></a></p>
<p>断断续续看完了这部大块头，记住了2点：乔布斯独特的性格、以及因为独特的性格而带来的独特的产品。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第17本书《用户体验要素》]]></title>
      <url>https://atjason.com/769.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B0056E8VDS/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B0056E8VDS&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/3gz97.jpg" alt=""></a></p>
<p>如同作者是开始时所说，这本书主要告诉你用户体验从大的方面有哪些要素；进而，如果想在某方面进一步研究，应该看什么书、如何深入</p>
<p>一些书摘</p>
<ul>
<li><p>有时候人们口中说出来的、所期望的特性其实并不是他们想要的，当人们在某个过程或某个产品中遭遇到一些困难时，想象有某种解决办法可以缓解这一困难，这对任何人来讲都是很正常的反应。有时这个解决办法是行不通的，或者仅仅是治标不治本的办法。通过与用户探讨这些建议，你有时候可以得出能真正解决问题的、完全不同的需求</p>
</li>
<li><p>具有讽刺意味的是，那些很少去想象产品新方向的人，恰恰是参与创建和设计产品最深入的人。当你把所有的时间都投入到维持现有产品时，你经常会忘掉哪些是真正的限制条件，而哪些是为了简化产品而曾经做过的选择</p>
</li>
<li><p>这正是人们在确定需求的时候常常忘记的事情：内容是一件艰苦的工作</p>
</li>
<li><p>使用人们熟悉的概念模型，会使用户很快适应一个不熟悉的网站。当然，打破传统也没有错&mdash;只要你有一个好理由说明&ldquo;为什么这样做&rdquo;，同时准备好另一个符合用户需求且在情理之中的概念模型以备使用</p>
</li>
<li><p>第一个同时也是最好的防止错误的方法，是将系统设计成不可能犯错的那种。这类防范方法的一个绝佳例子是自动档的汽车</p>
</li>
<li><p>第二个避免错误的方法就是使错误难以发生。但即使如此，一些错误一定会发生。这时，系统应该帮助用户找出错误并且改正它们。在某些情况下，系统甚至可以帮助用户自动改正错误。但是小心&mdash;一些最令人反感的行为，往往出现在软件试图善意地修正用户错误的时</p>
</li>
<li><p>&ldquo;使用用户的语言&rdquo;并且&ldquo;保持一致性&rdquo;是非常重要的</p>
</li>
<li><p>习惯和反射作用是我们与这个世界交互时的各种基础&mdash;的确，如果我们减少很多反射作用的话，我们每天能完成的事情也会大大减少</p>
</li>
<li><p>成功的界面设计是那些能让用户一眼就看到&ldquo;最重要的东西&rdquo;的界面设计。而另一方面，不重要的东西，不应该被注意到&mdash;有时候则是因为它们根本就没有出现在那儿</p>
</li>
<li><p>一个设计良好的界面是要组织好用户最常采用的行为，同时让这些界面元素用最容易的方式获取和使用</p>
</li>
<li><p>评估一个产品视觉设计的简单方法之一，是提出这样的问题：你的视线首先落在什么地方？哪个设计要素在第一时间吸引了用户的注意力？它们是对于战略目标来讲很重要的东西吗？或者用户第一时间注意到的东西与他们的（或你的）目标是背道而驰的吗</p>
</li>
<li><p>了解你正在试着去解决的问题</p>
</li>
<li><p>了解这些解决办法所造成的后果</p>
</li>
<li><p>由现状决定的设计（design by default</p>
</li>
<li><p>模仿决定的设计（design by mimicry</p>
</li>
<li><p>由领导决定的设计（design by fiat</p>
</li>
<li><p>比用户自己更准确地去理解他们的需求</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[EAWiFi - 修改 ShadowSocks 账户]]></title>
      <url>https://atjason.com/IT/ss_account.html</url>
      <content type="html"><![CDATA[<p><strong>EAWiFi</strong>（Europe-American WiFi, 欧美通路由器）已经内置 ShadowSocks 账户，无需设置、即插即用。</p>
<p>当然，如果你需要修改 ShadowSocks 账户，跟着下面的图示操作即可。</p>
<p>１. 确保电脑已经连接 EAWiFi2 或 EAWiFi5<br>２. 在浏览器中打开 <a href="https://i.eawifi.net" target="_blank" rel="external">https://i.eawifi.net</a> 并登录。其中，用户名为 root，密码和路由器背面 WiFi 密码相同</p>
<p><img src="https://ps.toolinbox.net/pgavy.jpg" alt=""></p>
<p>３. 依次点击 <code>服务</code> &gt; <code>ShadowSocks</code></p>
<p><img src="https://ps.toolinbox.net/vyvb1.jpg" alt=""><br><a id="more"></a></p>
<p>４. 向下滚动至 <code>服务器配置</code>，根据需要修改 <code>服务器地址</code>、<code>服务器端口</code>、<code>密码</code>、<code>加密方式</code> 等设置</p>
<p><img src="https://ps.toolinbox.net/hya7x.jpg" alt=""></p>
<p>５. 滚动至页面底部，点击 <code>保存&amp;应用</code></p>
<p><img src="https://ps.toolinbox.net/kapkl.jpg" alt=""></p>
<p>６. 至此，设置完毕</p>
<p><strong>EAWiFi，能自动翻墙的路由器</strong></p>
<p><img src="https://ps.toolinbox.net/91gni.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第17本书《简约至上：交互式设计四策略》]]></title>
      <url>https://atjason.com/766.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B004I91HCY/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B004I91HCY&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/kpfg5.jpg" alt=""></a></p>
<p>StartFragment这本书不错。</p>
<p>首先介绍了什么是简单、以及为什么要简单。后面依次介绍了四个策略：删除、组织、隐藏、转移。主要是以遥控器为例子，当中也穿插了很多其它具体的例子，再加上配图，很容易理解。</p>
<pre><code>而本书的组织也是简单的，每一小节都可以在几分钟内读完，最后看张配图，读书的压力瞬间小了很多。
</code></pre><p>随便摘录一些书中认可的观点：</p>
<p>more</p>
<ul>
<li><p>功能多对于没有机会试用的消费者有吸引力。但是，在消费者使用了产品之后，他们的偏好就会改变。一下子从重视功能，变成了更重视可用性</p>
</li>
<li><p>你设计的产品如果承载过多的功能，更有可能降低主流用户的满意度，从而对产品的长期盈利能力造成损害</p>
</li>
<li><p>想在任何时候取悦所有用户是不可能的。因此，我们只能退而求其次，专注于目标客户的核心任务，只要让他们高兴，让他们满意就行了</p>
</li>
<li><p>去掉那些可有可无的选项、内容，可以减轻用户的负担，让用户专心去做自己想做的事</p>
</li>
<li><p>给用户提供选择会让人感觉自己在把控着局面，而在某些情况下人们更愿意少一些选择。如果选择超过了一定的界限，特别是在很多选择都相似的情况下，选择反而变成了负担</p>
</li>
<li><p>人们一般都希望按照某种特定的步骤做事。打乱这个步骤就会千万迷惑，令人沮丧</p>
</li>
<li><p>所谓最简单的分类，通常指的是重复交叉最少的分类方法</p>
</li>
<li><p>只有网站没有提供有效导航的情况下，用户才会使用搜索</p>
</li>
<li><p>让用户根据自己的需求来自定义界面，这样做会显得设计人员懒惰，没有主见。一般来说，不应该让用户去自定义他们的软件</p>
</li>
<li><p>首先，尽可能彻底地隐藏所有需要隐藏的功能。其次，只在合适的时机、合适的位置上显示相应的功能</p>
</li>
<li><p>拿菜刀来说，简单用户和专家用户都觉得好用。</p>
</li>
</ul>
<p>要再读一遍。设计时想着这四个词：删除、组织、隐藏、转移。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第16本书《创业维艰》]]></title>
      <url>https://atjason.com/760.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00SMB8ZVU/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00SMB8ZVU&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/dno52.jpg" alt=""></a></p>
<p>前几章描写作者自己前期工作、创业的全过程，期间经历各种挣扎、困境，做出各种妥协、决断，最终将公司以高价售出；而作者自己在经历这一切后，表示再也不想再来一遍了，于是选择去做投资。整个看下来真的是惊心动魄、临场感很强，很像国内描写销售的商战类的书。</p>
<p>后面章节则是按话题介绍了创业者们在公司起步、成长过期中所面临的问题，以及如何佑，比如招聘、解雇、制定公司制度、减少办公室政治、在困境中挣扎、决策、等等，都比较中肯、实用，只是自己目前用不到，汗~</p>
<p>一些值得回顾的观点、做事的方式</p>
<ul>
<li><p>如果资本是免费的，你将如何运作</p>
</li>
<li><p>创业公司CEO不应该计算成功的概率，你必须相信，任何问题都有一个解决办法。无论这一概率是十分之九，还是千分之一，你的任务始终不变</p>
</li>
<li><p>专注于目标，然后力求实现，不为过去曾有或将来可能有的错误而懊恼、担忧</p>
</li>
<li><p>把事情交给有能力，并且有动力和兴趣搞定它的人去做</p>
</li>
<li><p>招聘一个人，最重要的不是他身上有没有缺点，而是有没有能力做好你期望他做好的事</p>
</li>
<li><p>作为创始人兼CEO，为什么要在投资人质疑的眼光中向他们证明我们的实力？而不是让垫资人相信我们有能力经营好自己一手创办的公司？</p>
</li>
</ul>
<p>总之，除了开头几章精彩的介绍，这本书不太适合准备创业的人，更适合已经创业、或公司小有规模、甚至公司已经有较大规模的CEO们看。不过，也适合那些准备创业、甚至想把公司做大的朋友们看下，看CEO这种非人的职业是否适合你、创业是否真的是你的最佳选择。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[创业方向：强需求、大趋势下的小市场]]></title>
      <url>https://atjason.com/752.html</url>
      <content type="html"><![CDATA[<p>创业，甚至说商业，说到底在于方向对不对。那怎么选方向呢？强需求、大趋势下的小市场。</p>
<p><a href="https://ps.toolinbox.net/a293z.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/fgy3b.jpg" alt=""></a></p>
<p>StartFragmentEndFragment</p>
<h2 id="举个例子：南极旅游"><a href="#举个例子：南极旅游" class="headerlink" title="举个例子：南极旅游"></a>举个例子：南极旅游</h2><p>先扔些数据：2014~2015年度数，中国年度赴南极游客人数为3042人，仅次于美国、澳大利亚和英国，是南极第四大客源国。价格方面，中国游客对南极旅行的心理价位平均值为19.6万元。</p>
<h2 id="强需求、大趋势"><a href="#强需求、大趋势" class="headerlink" title="强需求、大趋势"></a>强需求、大趋势</h2><p>说旅游是强需求、大趋势，相信大家不会反对。大家收入越来越多，开始追求生活品质，旅游是很重要的消费方式。对政府而言，这种围个圈子就能收门票的生意，简直无本万利。</p>
<h2 id="小市场"><a href="#小市场" class="headerlink" title="小市场"></a>小市场</h2><p>大小是相对的。</p>
<p>和大的旅游市场相比，南极旅游绝对是小市场。不过，简单计算下，3000*20 = 6亿。即使10家公司平分，每家公司那也是6千万的生意，不小了。</p>
<p>小市场，意味着可以利用有限的资源快速站住脚，在小的领域占据绝对垄断地位，少有竞争，从而获得丰厚的利润。活得下来，才能谈接下来的事。</p>
<h2 id="然后呢？"><a href="#然后呢？" class="headerlink" title="然后呢？"></a>然后呢？</h2><p>真是着急，先做到这一步再说吧。真到了这一步，你也不会来看我的博客了。随便扔几个选择：</p>
<ul>
<li><p>横向发展。比如北极旅</p>
</li>
<li><p>上下游发展。比如旅游装</p>
</li>
<li><p>换个领域玩玩。有钱了，干 点啥不行</p>
</li>
</ul>
<p>当然，这里说的是小团队创业。如果你手握几亿美金、背靠商业巨鳄，当然不是这种打法。</p>
<p>你，选择了什么？</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[功能设计出来后，该做些什么？]]></title>
      <url>https://atjason.com/745.html</url>
      <content type="html"><![CDATA[<p>StartFragment花了很长时间设计一个功能，终于到了自己满意的程度。接下来该做什么呢？</p>
<h2 id="保持开放的心态"><a href="#保持开放的心态" class="headerlink" title="保持开放的心态"></a>保持开放的心态</h2><p>也许自己非常喜欢自己的设计，但心里要明白，肯定是有可以改进的地方的。有了这样的心态，才有可能做后续的事。</p>
<h2 id="重新回到场景和问题中去检验"><a href="#重新回到场景和问题中去检验" class="headerlink" title="重新回到场景和问题中去检验"></a>重新回到场景和问题中去检验</h2><p>当初为什么要这个功能，主要是为了解决什么问题？将新的功能设计放回问题所在的场景后，有没有解决这个问题？设计可能会跑偏，可能会因为现实的约束而做了较多的妥协、调整，所以需要回到原始的问题来检验。</p>
<h2 id="和不同的人讨论"><a href="#和不同的人讨论" class="headerlink" title="和不同的人讨论"></a>和不同的人讨论</h2><p>自己长时间思考，有可能会陷入自己的思维定势中。而每个人有不同的背景知识、基础技能、使用习惯，对相同的需求会有不同的感觉、不同的侧重点，和不同的人讨论，会得到不同的启发，补充自己思维的盲点。</p>
<p>当然，在当初决定要不要做这个功能时，就需要和别人讨论。这里的讨论主要是检查设计上有没有遗漏的点</p>
<p>more</p>
<h2 id="说服别人接受"><a href="#说服别人接受" class="headerlink" title="说服别人接受"></a>说服别人接受</h2><p>刚才说的讨论，主要是听取别人的意见。不过，要说服别人接受自己的设计，很难。很多时候，好坏的判断并没有一个公认的、绝对的标准，大家都有自己的立场，别人的否定很容易让你质疑自己。</p>
<p>产品经理要非常理性的看待这个问题，看对方的否定是不是在理：</p>
<ul>
<li><p>如果是，那就根据别人说的调整设计</p>
</li>
<li><p>如果不是，就指出对方的问题。比如，考虑问题前提是不是正确、是不是忽略了一些情况、没有把握到问题的重点、等等。</p>
</li>
</ul>
<p>没有完美的设计，如果你认为自己的设计解决了主要问题，那么即使在一些细节上存在可改进的地方（这太正常了），也要坚持自己的观点，说服别人接受你的设计。产品经理是需要些性格的。</p>
<h2 id="减掉所有能减掉的"><a href="#减掉所有能减掉的" class="headerlink" title="减掉所有能减掉的"></a>减掉所有能减掉的</h2><p>设计时，很容易陷入过度设计中，加入一些可加可不加的功能。这个时候要回过头来看，哪些功能是可以减掉的，保持轻量。</p>
<p>设计是需要积累的，每次成功、或者失败的设计，都会给你下次设计增加信心、或经验。设计之后，最重要的是，设计下一个设计。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[把用户当成小白，真的好吗？]]></title>
      <url>https://atjason.com/742.html</url>
      <content type="html"><![CDATA[<p>StartFragment把用户当成小白，这句话流传在产品经理圈子里、几乎是产品设计中的圣经之一。可是，这样真的好吗？</p>
<h2 id="用户不需要思考吗？"><a href="#用户不需要思考吗？" class="headerlink" title="用户不需要思考吗？"></a>用户不需要思考吗？</h2><p>这应该是我最怀疑的地方。</p>
<p>世界很大、很复杂，短期内我们还是不能让它全面地变得简单，大家还是要用思考、探索的精神去面对那些未被简化的、原本的复杂。如果用户适应了简单的设计，什么都是触手可及、又容易理解，当开始接触到其他复杂的事物时，会觉得不适应。就像是小孩子，习惯了分好人坏人、对与错，就很难理解大人世界里的复杂。</p>
<p>上升到比较严肃、甚至是哲学的层面，如果复杂、深刻的东西只能被极少数人理解、掌控，大多数人只是无意识的去接受，不是非常危险的事吗？</p>
<p>也许你会说，没这么夸张吧，每个人都不一样，在该思考的领域思考，其它领域节约精力，不是更好？恩，我也很难反驳。只是觉得，有好奇心、求知欲的人，通常对大多数他接触到的东西，都是有好奇心、未知欲的。</p>
<h2 id="容易得到的东西，不容易产生持久的快感"><a href="#容易得到的东西，不容易产生持久的快感" class="headerlink" title="容易得到的东西，不容易产生持久的快感"></a>容易得到的东西，不容易产生持久的快感</h2><p>比如毒品，虽然不懂，但料想其带来的快感是短暂的。生活中也是这样，如果得到的太容易，就不觉得有什么、不会觉得爽。</p>
<p>而另一方面，付出大量的心血得到的，会是更深度的快感。</p>
<p>比如，精心抚养刚出生的小孩，看着他一步步学会走路、吃饭、叫妈妈</p>
<pre><code>比如，经过几年的努力，自己创业的公司终于走上正轨，产品得到了大量用户的认可
</code></pre><p>类似这样的例子，他们带来的成就感会是更深刻、更持久的。</p>
<p>也许这一点在游戏设计中会更适用吧</p>
<p>more</p>
<h2 id="当骂一个设计脑残时，先想想是不是自己脑残"><a href="#当骂一个设计脑残时，先想想是不是自己脑残" class="headerlink" title="当骂一个设计脑残时，先想想是不是自己脑残"></a>当骂一个设计脑残时，先想想是不是自己脑残</h2><p>比如，骂一个电视剧情节设计的脑残，有没有想过，为什么你还要继续看这些脑残的电视剧？为什么网络上充斥着这样的电视剧？也还有很多有深度、能帮助你长见识的内容，为什么你找不到呢？为什么找到了也还是手贱点脑残剧看呢？</p>
<p>这样的电视剧能被拍出来，还能被播放，说明还是有市场、还是有很多人会看的。说得严重点，是因为有脑残的我们，才会有&ldquo;脑残&rdquo;的编剧、制片人拍出这样的内容。</p>
<p>说到这里，有没有觉得有些不对劲？电视剧只是个明显的例子，仔细想想，生活中有没有别的脑残的设计，是因为用户脑残而被设计出来的，你愿意继续当这样的脑残吗？</p>
<p>再比如，当你用一个产品，觉得不好用。有没有想过，为什么有人就可以流畅地操作呢？是不是因为自己理解能力有限、动手能力低下呢？</p>
<p>我还是相信，设计产品应该尽量简单、不需要用户太多思考。只是，如果人人都如此、觉得理所应当，还是感觉有些不对劲。以上说的东西也不成体系，最多是自己的感慨，供网友讨伐。</p>
<p>最后，你愿意被当成小白吗？</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第15本书《美的沉思》]]></title>
      <url>https://atjason.com/740.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/rkt2x.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/o37zg.jpg" alt=""></a></p>
<p>这是一本中国美术简史的书。不同之处在于，以不同朝代为线，勾勒出中国美术变迁的轮廓。</p>
<p>从石器、陶器、青铜器，到石雕、壁画、山水画，每个朝代有属于自己的生产力、政治环境，也有不同的前人积累，也就造就出特有的艺术形式。比如，为什么《广陵散》会出现在魏晋时期，为何元代会有唐寅这么风流倜傥、开发卖画的名士，等等。</p>
<p>确实是修养的局限，很多地方并不太理解；不过全书看完，确实有种朦朦胧胧的印象，相当于有了框架。以后再接触到某个具体的点，也就有地方可以放了。值得一看。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第14本书《从0到1》]]></title>
      <url>https://atjason.com/736.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00RWP6BOU/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00RWP6BOU&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/i7o0k.jpg" alt=""></a></p>
<p>StartFragment这本书是比较典型的畅销书的路子：全书反复说一个观点：要创新，然后辅以佐证和关联的观点。</p>
<p>最受用的一个观点：一个初创企业完美的用户市场是一小群人，而且几乎没有其他竞争者竞争。</p>
<p>书中多次强调的一个问题，值得大家都想一想：</p>
<ul>
<li><p>你在什么重要问题上与其他人有不同看法</p>
</li>
<li><p>换个句说，还有哪些有价值的公司还没有被创建？</p>
</li>
</ul>
<p>其他一些值得分享的观点：</p>
<ul>
<li><p>充分竞争的领域，没有诱人的利润；垄断才</p>
</li>
<li><p>创造性垄断是最诱人的模</p>
</li>
<li><p>与其同别人竞争，不如创造新东</p>
</li>
<li><p>垄断企业，通常会夸大竞争。比如，Google在美国国会辩解：我们面临巨大的竞争，大家有太多可以获取信息的渠道。呵呵</p>
</li>
<li><p>而一般的企业总是反过来，在描述时有意缩小竞争，突出自己在一个很小领域的独特性。比如说自己是鱼缸里唯一的一条鱼，却不说世界上多的是鱼。呵呵</p>
</li>
<li><p>中国是个认为未来是明确的、持悲观主义的国家。比如，你敢将自己所有的财富用于投资，而不用担心疾病、养老等问题吗？总之，人人对未来严阵以待</p>
</li>
<li><p>即使非常有才能，也未必要创建自己的公司。加入一个快速发展的一流公司，可能会有更大的成功。</p>
</li>
</ul>
<p>另外，我们总说&ldquo;创业公司&rdquo;，什么才是创业公司？有创新，就意味着创业。一旦创新停止，创业也就结束。</p>
<p>最后</p>
<p>不断向前延伸的道路</p>
<pre><code>是从家门开始的
</code></pre><p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第13本书《淘宝十年产品事》]]></title>
      <url>https://atjason.com/732.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00FPHXPLY/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00FPHXPLY&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/hkj1a.jpg" alt=""></a></p>
<p>StartFragment也许确实不是电商这个行业的，前面读起来还是比较吃力。之前也知道淘宝里的东西比较复杂，但真是没想到有这么复杂，尤其是把十年的产品放在一起来看，真是有点望而却步的感觉。</p>
<p>也确实是作者所言，书中所写也是局限在阿里系的产品中。但能将一个这么公司、甚至说集团里的产品梳理出来，确实不容易。虽然条理没那么清晰，有一些比较勉强的地方，但能有这样的书系统性的介绍这么复杂的产品系列，非常值得肯定。</p>
<p>谈产品，通常是比较窄、比较纯粹的东西，比如说交互、用户行为分析、等等。但现实中，一旦跟利益结合，就没有这么纯粹的东西。尤其淘宝做的生意、电商，本身就是和买家、卖家打交道，说的就是商品、钱的事，很多功能、交互，就不仅仅是一般产品意义上的东西，而是切切实实和金钱挂勾，事情就会复杂很多。再进一步，设计产品，也不再是纯粹意义上的产品设计，更高层面是商业上的构建，有商业模式的循环。</p>
<p>做产品，当时的环境很重要。一年前很失败的产品，一年后可能就大红大紫。要摸准形势</p>
<p>more</p>
<p>书中也有些听起来有趣、也很认同的观点，比如&ldquo;如果成功了，所有的扯淡都是战略；如果失败的，所有的战略都是扯淡&rdquo;</p>
<p>书后面对淘宝资深产品经理的采访，比较实在，也有很多干货，值得多看同几遍。</p>
<p>最后的时候，作者也讲述了自己的历程，剖析了自己心态、认知的变化，以及对实际做的事的影响。多看看别人的历程，对自己未来的路，也有些借鉴意义。</p>
<p>我们在人生的各个阶段，总是希望有位贵人来指导自己接下来的路该怎么走。可事实上，有这样的人吗？就算有，怕也是可遇不可求。所谓的指导，需要对你的过往、现在、能力模式、期望有充分的了解，同时对你所处的环境、行业也有充分的理解，这样严苛的要求，意味基本不存在这样的人。对自己最了解的还是自己，更重要的是，自己能够自省，并根据环境、自身来调整自己。更何况，摸索、未知，本来就是人生的趣事。如果一切都是既定，纵使财富万千，也是索然无味。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第12本书《要事第一》]]></title>
      <url>https://atjason.com/729.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B01K1V6LJ6/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B01K1V6LJ6&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/n4iiy.jpg" alt=""></a></p>
<p>StartFragment比较有名的一本关于时间管理的书。先快速读一遍，了解大致的思想；然后再详细阅读，并根据书中介绍的方法进行实践。</p>
<p>读完后，印象比较深的几点：</p>
<ul>
<li><p>如果计划让你不爽，说明计划有问</p>
</li>
<li><p>一周是个比较奇妙的规划、执行、回顾的单</p>
</li>
<li><p>防火大于救火。不应该总在在做紧急的事；做好重要的事后，自然没那么多紧急的</p>
</li>
<li><p>重要的不是做更多的事，重要的是做重要的</p>
</li>
<li><p>明确更深层次、更长远的价值，才能判断哪些才是重要的</p>
</li>
<li><p>我们不止一个角色，各个角色都应平衡兼顾；换个角度，要做边际收益大、机会成本低的</p>
</li>
<li><p>你不是一个人在战斗，工作、家庭、社会、等等，从来都是混在一起的，需要协作增效</p>
</li>
</ul>
<p>理论的东西看多了会乏味，重要的是实践，以及让自己&ldquo;当断则断、心如止水、全力以赴&rdquo;。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[迷恋工具，是另一种买椟还珠]]></title>
      <url>https://atjason.com/727.html</url>
      <content type="html"><![CDATA[<p>StartFragment比如读书，原本就是读书，现在却可以在手机、平板、Kindle等工具上读书，有各种理由：方便携带、随时随地可阅读、不受光线影响。这本身也没什么，可如果太过执着用什么工具读书，本身却没读几本书，就明显太过了。</p>
<p>比如个人事务管理，有太多工具：电脑上、手机上、本子、等等，也有太多理论，可如果本身只有几十件事、却对工具有十几种要求，倒不如好好想想自己要先做哪件事、怎么做。</p>
<p>比如通信，这个就太多了：电话、短信、微信、邮件、等等。可如果给远方的亲人拨通了电、却不知道该聊些什么，那再好的通话降噪技术，又有什么用？</p>
<p>诚然，工具可以提高效率，&ldquo;磨刀不误砍柴工&rdquo;；可这建立在很多前提的基础上。善用工具，而不是迷恋工具。</p>
<p>少用些工具、少制造些工具，多生产些内容；想想这些，对个人、对产品方向的选择，有好处。在时间的冲刷下还能留下痕迹的，是好东西。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第11本书《别跟我说你懂日本》]]></title>
      <url>https://atjason.com/724.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/3f6wh.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/8ulg7.jpg" alt=""></a></p>
<p>这本书的名字比较机巧，其实就是罗列了大概70个关于日本的现象，比如刺身、拉面、相扑、樱花、自杀、性、武士、地震、等等。</p>
<p>读完之后，整体印象不是很深。记得住的有几条：</p>
<p>矛盾</p>
<pre><code>日本人有很多矛盾、纠结的地方，比如，官方禁止公开卖淫，却有发达的红灯区、举世闻名的AV产业；特别讲究公共场合的礼仪、不打扰别人，却有闻名的电车&amp;ldquo;痴汉&amp;rdquo;、导致大量交通受阻的卧轨自杀；等等。
</code></pre><p>自卑</p>
<pre><code>比如，固守相扑这种没什么体育意义的运动，并奉为国粹；严重的欺软怕硬，对打败自己的美国奉若主子，对自己打败的中国内心充满蔑视；经常过度吹嘘、包装，却没有很多核心价值，如茶道、花道、甚至拉面道；等等。
</code></pre><p>总的来说，闲来无事时倒也可以翻翻看。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[当断则断，心如止水，全力以赴]]></title>
      <url>https://atjason.com/718.html</url>
      <content type="html"><![CDATA[<p>StartFragmentEndFragmentEndFragment</p>
<p><a href="https://ps.toolinbox.net/7zq5t.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/x9xqt.jpg" alt=""></a></p>
<h2 id="当断则断"><a href="#当断则断" class="headerlink" title="当断则断"></a>当断则断</h2><p>做、还是不做？</p>
<pre><code>做有做的好、不做也有不做的妙，如何？

这样做、还是那样做？

万一怎样了，该怎么办？

...

不要陷在这种忧虑中

简单想想，确定一个结果；确定后就不要再想
</code></pre><h2 id="心如止水"><a href="#心如止水" class="headerlink" title="心如止水"></a>心如止水</h2><p>确定的事，做就好了</p>
<pre><code>不确定的事，确定下一步做什么

遇事不慌不乱，做能做的，忽略做不了的，接受不能改变的
</code></pre><h2 id="全力以赴"><a href="#全力以赴" class="headerlink" title="全力以赴"></a>全力以赴</h2><p>做事的时候，心无旁鹜，全力去做</p>
<pre><code>不要一边做着这件事，一边担忧着另一件事

做前预计做到什么程度、做多久；到了节点后，哪怕做不完，停下，休息、或做另一件事
</code></pre><p>就像水，出大坝前，像湖水一样平静；出大坝时，没有半点犹豫，倾泄而下、犹如万马奔腾</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 5]]></title>
      <url>https://atjason.com/715.html</url>
      <content type="html"><![CDATA[<p>在苹果店折腾快一个小时，开包两个白色iPhone 6，结果都因为屏幕顶部有暗区，最后退掉了，白白浪费一个小时。</p>
<p>第一次见开火车，好像操作界面也不复杂嘛，貌似脚踩油门，起步的时候左手变档，到站时右手刹车。不熟悉，好神奇。</p>
<p>地铁上有爱心专座，&ldquo;乘客拥挤时，在爱心座附近的乘客请关闭手机电源&rdquo;。</p>
<p>日本人好喜欢喝冰水，到哪吃饭水都是冰的（当然你可以问服务员要，只是有的地方要也没有），机场也没有热水，直饮水也是冷的。</p>
<p>最后一两天都在买东西，景点基本没去。所有的店铺都写着大大的TAX FREE，只是店里的基本都是国人，只在乎另外的&ldquo;免税&rdquo;二字。不看商品你会以为是在国内超市，虽然商品上很多都是MADE IN CHINA。</p>
<p>不过看的多了，就没有刚来时的新鲜感，一个城市，三天基本够了；要么就是更长的时间，深入当地人的生活，而不是一直以游客的身份浮光掠影</p>
<p>more</p>
<p>要走的时候，稍微仔细想想，竟然没什么印象特别深刻的，除了沉甸甸的箱子。如果不是写下的东西帮助记忆，过个一年半载，估计真是想不起这次旅行的细节了。</p>
<p>上海浦东机场的效率不如大阪，大阪下了飞机行李就已经排排站了，浦东这里等28分钟还没到。另外，大阪下飞机就有很多卫生间，符合需求嘛，浦东则要有很远。</p>
<p>出门在外，遇见不同的人、听到不同的事、感受不同的环境，然后换个角度审视自己已经很久没变的生活，这恐怕就是旅行对于我的意义。</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 4]]></title>
      <url>https://atjason.com/713.html</url>
      <content type="html"><![CDATA[<p>买个Kindle我容易吗我？在日亚上买了两次都被取消订单，说是只卖给日本人，郁闷，都是国行价格太高惹得祸。在实体店买，说是要达到一定金额才免税。东挑西挑凑够了，又说是免税及优惠过的价格要达到那个金额；期间还因为语言不同折腾半天，又去东调西挑。不过也值了，国行899，这里算下来约455，简直半价，能不买吗？尤其是我这么爱读书的人。</p>
<p>日本防灾的意识和设施都很强，酒店窗户翻出去就是逃生通道。</p>
<p>商场10点才开门，有点晚。晚上9点关门，有点早。一句话：有点悠闲有点懒。</p>
<p>大阪抽烟明显比京都多，和国内几乎一样了。</p>
<p>在日本，周几有特殊的名字：</p>
<pre><code>月曜日＝星期一

火曜日＝星期二

水曜日＝星期三

木曜日＝星期四

金曜日＝星期五

土曜日＝星期六

日曜日＝星期日

用七星来表示一周七天，公认是欧洲发明、经印度再经中国传入日本
</code></pre><p>more</p>
<p>随意看了下不动产广告，房价大概是2.3万、租房一室一厅大概5000；当然，只是广告上推算的，地段啥的一概不懂。</p>
<p>坐扶梯时，全国的默认规则是站在一边、让出另外一边给更着急的人。可问题是，站哪边呢？笼统地说，一般情况下关东地区是&ldquo;左侧站立，右侧通行&rdquo;，关西地区则是&ldquo;右侧站立，左侧通行&rdquo;。此外，有些公共场所原本就是禁止在自动扶梯上行走或奔跑的。真是够纠结、够分裂的，反正跟着别人站就是了。</p>
<p>日本幕府家的护家河，真是又宽又深。我大紫禁城外的比起来，简直就是小水沟。</p>
<p>大阪海洋馆，最特别的是，在出口的地方可以摸下神奇的鱼。摸了一下笑脸鱼，它突然一摆，吓得我都跳起来了；然后它再一摆，藏沙子里去了。别的也没什么特别的。</p>
<p>今天真是拉练的一天，也是买买买的一天，景点没看几个，商场倒是扫了好几家。代购的朋友，你知不知道为了一句：随便带点那什么，可能要暴走几公里啊。</p>
<pre><code>号外：商场外看到有人买了满满一袋子的苹果，袋子撑破、苹果散在地上，那场面，真和买苹果似的。
</code></pre><p>晚上回到酒店，泡在浴缸里、窝在床里，舒服</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 3]]></title>
      <url>https://atjason.com/711.html</url>
      <content type="html"><![CDATA[<p>日本人也会横穿马路、也会在机动车道上骑自行车、也会在实线上开车、也会边走路边抽烟、也会乱扔烟头，人性使然，他们也有上班迟到的压力、也讨厌守规矩带来的麻烦、也喜欢占便宜。</p>
<p>30度，我穿短袖，路上一群群西装革履扎领带的男人上班。</p>
<p>周一的地铁，大家走路速度好快，一个个杏色匆匆，估计突然停下十有八九会被踩脚，想走慢都不行。</p>
<p>刚上车人非常多，过了两站就基本只剩游客了。估计是在附近上班，或者只是路上最后一段在转车。之前了解到的，日本人每天会花很长时间通勤，4、5个小时都很正常，甚至有人每天坐飞机上下班。这次实际碰到的倒是不一样了。</p>
<p>所有的铁路、地铁，都没有安检。</p>
<p>地铁门外面可以开，里面可以开关，跟电梯一样</p>
<p>more</p>
<p>京都和大阪的城市道路大多都是正南正北、横平竖直，据传是跟唐朝学的，未考证、纯意淫。</p>
<p>感觉日本重视文化的表现之一是，到处都是文字。尤其走入商品店，绝对能被满是文字、很少图画的包装吓到。日本不是有宅寂的设计文化吗，怎么没应用到这里。</p>
<p>在岚山坐小火车，一群幼稚园的小朋友被老师带出来玩，一个个都很可爱，一过山洞就全都尖叫起来，引得车上乘客面面相笑。</p>
<p>岚山附近的景区人很少，很安静，微风徐徐、满眼绿色，走路很惬意，很适合看本书、或者干脆弄个躺椅睡一觉；除了讨厌的乌鸦啊啊的叫。</p>
<p>神社何其多。供奉的是先人，我们比较熟悉某神社，是因为其内供奉着二战中的战争犯，涂抹了很多政治的因素，又被广泛宣传。另外，墓地也很多。不同的是，墓地就在住宅的边上，大有与先人同居的感觉。</p>
<p>这里也在用国内人人喊打的一次性筷子，都是竹子做的，手感较好的那种。</p>
<p>铁轨很多，高架很少，所以有不少道路横穿铁轨，新闻中见到的火车撞汽车不是天方夜谭。</p>
<p>台湾游客很多，据说每个台湾人一生至少要来一次日本。台湾人不太介意日本占领过台湾，反倒觉得日本人给台湾人带来了先进的科技，带动了经济发展，略带点崇拜的那种感觉；就像印度不觉得曾经被英国占领有什么，官方语言就是英语、而不是印度语之类的。</p>
<p>日本果然小，哪哪一走就到了。</p>
<p>Google Maps的公交站点不准，基本只能定位到十字路口，然后就要用眼睛找很不起眼的站牌。</p>
<p>公民厕所很多，基本不用担心找不到。</p>
<p>交通发达，也可以说复杂。京都到大阪，同一个区间有多条线、多家公司运营，买票都要小心。大阪地铁更是错综复杂，怀疑地下是不是已经被地铁挖空了。</p>
<p>日本电梯确实不错，又快又稳，100米的京都塔，一会就到了，而且不注意都感觉不出来。不过，公共交通场所的扶梯就太少了，对于我这个拎大包的游客，太不友好了。</p>
<p>看到一幕：几位少女让一位大叔拍照，这位大叔不小心把相机掉地上，捡起来后不久竟然又掉地上了！少女们一阵惊呼&hellip;&hellip;</p>
<p>日本电器，买买买的节奏。64G版iPhone6税前比国行便宜1100，比港版便宜200，但有两大硬伤：拍照声音很大且不能调节、国内不保修，再加上可能被税，扼杀了很多小伙伴购买的欲望。</p>
<p>整体物价还是比国内高不少，比如矿泉水是5元起步，一顿饭基本50起步。只是电器、化妆品等东西，因为祖国关税和质量的问题，日本货显得便宜、质量可靠，受到不少大陆游客追捧。</p>
<p>换了一家酒店，还是小小的，对这个不抱希望了。</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 2]]></title>
      <url>https://atjason.com/708.html</url>
      <content type="html"><![CDATA[<p>家庭旅馆没有窗户，半夜醒来以为三四点了，看了手机：9:30！妈呀，这不是坑吗？还是被楼上洗澡声音弄醒的，房间里黑乎乎，开灯后眼睛半天都适应不了。</p>
<p>关于纪年，用的是平成27年，类似于乾隆6年。可怜我文明古国却在用耶稣的诞生日作为0年，可叹。</p>
<p>坐出租车的人不多，可能是比较贵吧，另外就是公交地铁发达。开车的很多白发的人，不过没见到女出租车司机。日本人很忌讳别人说他老，老了就会被遗弃，公车上给老人让座甚至反倒惹人生气。所以很多白发苍苍的人还在工作，比如出租车司机，甚至是干体力活。书上看到，有位百岁老人还在开一个杂货铺，百岁生日时，儿女都没来，只有孙子打一电话，说：加油！</p>
<p>河里很少见有人钓鱼，所以看到鹤在抓鱼。一尺深的水，非常透明，竟然有一尺长的鱼，悠哉悠哉的在水里，对着上游吃冲下来的东西。</p>
<p>公交车上车要排队，而不是看谁身手矫健、能挤能插</p>
<p>more</p>
<p>到了卖电器的，走不动路了。尤其是电视，日本简直是电视面板的发明者，各种尺寸的电视。iPhone要和运营商绑定、不能买，iPad倒是挺值得买。</p>
<p>京都塔在市中心，门票约35，上去后能看到京东全景，而且望远镜是免费的，没有了二次付费的不爽，不过还是有热情招揽你付费拍照的。不知是感觉晃，还是望远镜看多了，会感觉有些晕。</p>
<p>伏见稻荷大社，类似于保佑农田丰收的意思。这里供奉狐狸，因为当地人觉得狐狸吃坏的小动物，保护农田里的庄稼。有很多&ldquo;奉纳&rdquo;的牌坊，基本都是株式会社出钱后修的。京都寺庙清一色的橙色，感觉像是连锁。</p>
<p>小卖店老板在看棒球比赛，果然受美国影响比较大，棒球也比较受欢迎。</p>
<p>木头质感都很好，随便哪个店里的饰品什么的，摸起来手感都很舒服。</p>
<p>戴眼镜的明显比国内少，尤其是女生，不过很可能是他们戴隐形眼镜，还有美瞳等。</p>
<p>垃圾桶非常少，喝完水的瓶子，走了很远才扔到垃圾桶里。</p>
<p>吸烟的人很少，走在路上都很难见到有人抽烟，因为政府禁止在路上抽烟、违者罚款，可怜我党国依旧贪图烟草税，让更广大的无辜者饱受二手烟的迫害。卖烟的也很少，碰到一个自动售卖机，竟然还要刷身份证、证明不是未成年人（20岁以上），才能买烟。</p>
<p>锦市场，各种小吃、食物原材料一条街，很多的腌制菜、海鲜加工品，看着很想吃，试吃后发现也不是特别喜欢。</p>
<p>景点大多免费、或几瓶矿泉水的价格，相比之下，国内花几十瓶的价格进入一个N个A的景区，发现也没什么、甚至景区内还要二次收费，简直弱爆了。</p>
<p>乌鸦很多，叫的好难听。</p>
<p>化妆很普遍，从十几岁的、到几十岁的，基本人人都化妆；当然，我说的是女性。</p>
<p>饮料的自动售卖机非常多，几乎遍地都是，里面的饮料非常凉，几乎是冰的。</p>
<p>吃饭结账时，账单是反着放在桌上的，非常的不想打扰你吃饭的心情，喜欢。</p>
<p>喝酒的氛围非常浓，男女老少、清酒烧酒，想喝酒喝，尤其是晚上，日本人发酒疯那是有名了，也是发泄压力的一种方式。</p>
<p>花见小路，安静，有着漂亮的房子，适合拍照。吃饭偏贵，走走就走了。</p>
<p>走的累了、饿了，然后坐下来吃顿好吃的，真是一大享受、旅行最佳模式。</p>
<p>今天早点发、早点睡，明天早点起。</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 1]]></title>
      <url>https://atjason.com/706.html</url>
      <content type="html"><![CDATA[<p>随身WiFi，到了酒店，下载速度有22Mbps，还不错。但在景区、机场等人多地方，还是很慢的。</p>
<p>汽车靠左行，很干净，连路边的自行车都很新很干净。竟然能看懂出租车红色的&ldquo;空车&rdquo;，只是有客时就看不懂了，不过是绿色的。</p>
<p>电车里有明显的三星手机的广告，倒是意外了。</p>
<p>公交车会向下车一侧倾斜，方便上下客。后门上车、前门下车，上车不买票、下车再买票，有能够上轮椅的公交车。有公交日票，约人民币25，一天内市区公交随便坐。下午六点钟，路上还是挺堵的。</p>
<p>路上很多自行车，奇怪的是，大多是轮子较大的那种，然后座椅调的比较低，挺奇怪，但都很新很干净。</p>
<p>清水寺，进大殿要拖鞋，木地板走起来很舒服，灯光很暗，坐在地上、靠在柱子上，睡着了&hellip;&hellip;&ldquo;我要到清水台&rdquo;，有点&ldquo;不到长城非好汉&rdquo;的味道。门票大概三瓶矿泉水的价格，贵不贵自己判断了。景点门口有近百米长的纪念品专卖，生意都很好。有名的绿茶冰激凌，好吧，没拍照。景区停车，一小时约三瓶矿泉水价格。</p>
<p>偶然间看到电车是92年的，想想我们的地铁或动车，23年后会是什么样子，比现在的绿皮火车还不堪，只能戴上文艺的噱头</p>
<p>more</p>
<p>到处都不能吃东西，车上、景点，连走在路上都不行（当然，吃也没人管，但总是不好）</p>
<p>京都站的建筑很酷，中空，连续的扶梯从1楼到11楼，上升过程向下看，很有气势。同时一侧有连续的台阶，台阶灯可变换出不同的标语，引来拍照无数。楼顶就是观光层，可俯瞰京都，还有真正高大上的停机坪。</p>
<p>晚上在拉面一条街吃拉面，也就是味千拉面一类，入门价7瓶矿泉水，味道还可以。</p>
<p>回去时做公交，上去后被司机呜哩哇啦说下了车，一头雾水，后来看攻略才知道这是下客站，不能上车。攻略再多也不算多啊。</p>
<p>京东住宿比较贵，住的家庭旅馆，共用卫生间和浴室，马桶依旧喷水式的，而且马桶蓄水时，是先经过上面的小水盆，这样就可以先洗手、再蓄水，环保啊。唯一不满意的地方：没有牙膏；嚼口香糖吧。</p>
<p>今天背包走一天，累了，睡</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[日本之旅 - Day 0]]></title>
      <url>https://atjason.com/702.html</url>
      <content type="html"><![CDATA[<p>9:30到大阪机场，例行的下飞机、摆渡到海关、出海关、拿行李。第一反应是确实能猜出不少日本字，因为和汉字很像，比如&ldquo;到达&rdquo;是&ldquo;到着&rdquo;。</p>
<p>过海关的时候，听到的日本人的吵架声，隔的比较远，像是日本人和海关工作人员吵起来了。这就打破了书上说的日本人非常讲究公共场合礼仪、不影响他人的印象。</p>
<p>入关时，包里还有个苹果和芒果，一直担心要不要扔掉，因为入境单上写着要保证不带水果。结果拿行李时，只要把单子给他们就好了，一秒钟通过。可能托运的箱子扫描过了，可是背包没有啊？看来严谨的日本人也有放水的时候。</p>
<p>下车时人生地不熟，要转两次电车，其中还要在地面走一段，最后连蒙带猜才找到了，不容易啊。</p>
<p>这个机场是建在海上的。出来坐电车要先过海，这个比较好玩。可惜是晚上，看不到外面的景色。</p>
<p>不太理解日本为什么还有这么多电线杆，在地下通过管道走线会不会更好</p>
<p>more</p>
<p>电车自助售票复杂到爆。电车不新，但还挺干净。低头看手机的明显没有国内多，有不少发呆的，也有看书的。关键报站只说日语，英语都没有，完全听不懂，只能看地图（后来换了一条线，有英语报站）。车厢和车厢间是不通的。座位是软席的（急行车，也就是普快，不是特急车）。还有女性专用车厢，不是为了女权，为了什么大家想下喽。</p>
<p>酒店房间真心不大，一个箱子放床边，就走不过去。卫生间，就是飞机的卫生间加上小孩用的浴缸。马桶可以喷水，人生首次体验，这感觉&hellip;</p>
<p>房间里有应急灯，平时一直插在床头，拔下来就亮，关都关不了，估计是地震训练出来的。</p>
<p>酒店有热水壶，贴心啊。比欧美好，只有免费冰块。房间里有小冰箱，可是里面空空如也，想喝水都不行，没中国人会做生意，还是不想给客人带来困惑？</p>
<p>床挺小，大约一米二，睡两个人，都有点不习惯了。</p>
<p>困了，累了，睡了</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第10本书《当我们说起日本时》]]></title>
      <url>https://atjason.com/698.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/s72dg.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/91023.jpg" alt=""></a></p>
<p>最近打算了解下日本，就上网找了些关于日本的书，这是其中一本《当我们说起日本时》</p>
<p>作者是中日混血，主要讲得是自己在日本留学的经历，以此为主线穿插了一些日本的趣闻、话题，比如前辈习俗、打零工、日本留学政策、等等。讲得并不深入、全面，但好在读起来也比较轻松，总共加起来3、4个小时就可以读完了</p>
<p>又是一本在Kindle上读完的书；感觉受累的又是眼睛和脖子，生理结构决定了人们不适合长时间阅读，囧</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[网站从Linode搬家到Amazon]]></title>
      <url>https://atjason.com/693.html</url>
      <content type="html"><![CDATA[<p>StartFragment</p>
<h1 id="为什么搬呢？"><a href="#为什么搬呢？" class="headerlink" title="为什么搬呢？"></a>为什么搬呢？</h1><p>目前用的是Linode，对于我这种只放个博客的人来说，绝对是高大上。每月$10，不便宜。之前速度还挺快，现在感觉也一般般，明显不如之前，继续使用性价比不高</p>
<p>另外就是之前买的VPN快到期了，而且感觉变得不靠谱，经常断线。同时养VPS和VPN，感觉有些浪费，干脆合二为一吧</p>
<h1 id="关于VPS的选择"><a href="#关于VPS的选择" class="headerlink" title="关于VPS的选择"></a>关于VPS的选择</h1><p>先明确需求</p>
<ul>
<li><p>速度快；这是基本要求，宁可浪费钱也不能浪费生</p>
</li>
<li><p>稳定；别过几天倒闭</p>
</li>
<li><p>能换IP；为了架设VPN，万一IP被黑了，你懂的</p>
</li>
</ul>
<p>到网上大致搜了一圈，选择真多啊。最后在<a href="https://www.digitalocean.com" target="_blank" rel="external">DigitalOcean</a>和<a href="https://www.vultr.com" target="_blank" rel="external">Vultr</a>中选择，简单测了速，当时的网络下DigitalOcean稍好些，就选择了它；另外当然还有免费一年的<a href="http://aws.amazon.com/" target="_blank" rel="external">Amazon</a>（吐槽下：亚马逊入华都入了N年了，还没全面开放）。也就是说，在DigitalOcean和Amazon中选择，二者都选择新加坡节点</p>
<p>另外，<a href="http://lowendbox.com/" target="_blank" rel="external">Lowendbox</a>有专门对VPS进行介绍的文章，有时间可以去淘</p>
<p>more</p>
<h1 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h1><p>主要是两方面的测试：在VPS上下载东西、从VPS上下载东西。</p>
<p>注意：测速要看长性。简单的说，就是要下载比较大的文件，比如700M。因为有些VPS服务商会有机巧，刚开始下载时会很快，后来会越来越慢。如果只下载很小的文件，可能会被忽悠。</p>
<p>这里选用的是Ubuntu的安装文件进行测试，大概672M，结果如下： StartFragment</p>
<p>to VPS</p>
<p>from VPS</p>
<p>Amazon</p>
<p>51s</p>
<p>4m43s</p>
<p>DigitalOcean</p>
<p>68s</p>
<p>4m32s</p>
<p>EndFragment</p>
<p>可以看出，两者差不太多。尤其是从VPS下载到自己电脑上，都达到了20Mbps的满速。满意</p>
<h1 id="价格比较"><a href="#价格比较" class="headerlink" title="价格比较"></a>价格比较</h1><p>Amazon免费一年、DigitalOcean每月$5，那就选Amazon呗。不过，一年后Amazon相同实例每年最便宜为$128，和Linode年付的价格差不多。不过也不一定，一年后降价也说不定，先用着吧，大不了到时花一天搬家</p>
<h1 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h1><p>这点要求不高，能跑WordPress就行。登录WordPress后台，随便写几篇测试文章，差不多顺畅就行。</p>
<h1 id="博客搬家"><a href="#博客搬家" class="headerlink" title="博客搬家"></a>博客搬家</h1><p>这里就要说到<a href="http://amh.sh/" target="_blank" rel="external">AMH</a>，国人写的主机面板，我用的依然是4.2的免费版本，在安装好后，搬家不超过10个命令，简直是不搬家都对不起这么方便的搬家啊</p>
<p>域名使用<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPod</a>进行管理，更改域名对应的IP很快就生效了。不过，域名的全线更新需要些时间，保险起见老VPS都多留几天</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>时隔一年又来折腾后台，还是挺感兴趣的，但没有以前那么起劲，毕竟过了折腾的季节。现在更重要的是多多的博客上积累，学到东西、个人成长才是最重要的，花点钱搞个稳定的VPS，节约下来的时间要比花的钱划算得多。</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第9本书《远程工作》]]></title>
      <url>https://atjason.com/685.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00JA4U0JS/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00JA4U0JS&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/o1vme.jpg" alt=""></a></p>
<p>看过这本书，都不想去公司上班了。</p>
<p>远程工作，也就是说大家不用专门去一个叫&ldquo;办公室&rdquo;的地方上班；相反，可以选择在家、咖啡馆、图书馆等地方办公。毕竟，对于大部分智力工作者，一台电脑、无线网络就够了。</p>
<p>远程工作，有诸多好处，比如不受打扰、可以专心工作，比呆在一个地方更容易产生灵感，更容易聚集优秀的人才，不用浪费通勤的时间，可以更好得平衡工作和生活，等等。</p>
<p>当然，也有很多问题和风险，比如缺少情感交流，复杂的问题面对面沟通更具效率，不适合自制力差的人，需要改变管理方式、等等。</p>
<p>总的来说，个人比较喜欢，也认为这是趋势，至少以后不会像现在这么小众。就像在PC时代，人们无法想像、也不能接受在手机上买东西，但现在在手机上买东西可能比在电脑上还多。而且毕竟以后个性化会越来越突出，大家越来越希望有自由、丰富的生活方式，自然也包含工作方式。</p>
<p>期待早日能体验这种听起来就很爽的工作方式。</p>
<p>最后：</p>
<p>这本书出自很喜欢的37signals团队（现已全线更名为<a href="http://basecamp.com/" target="_blank" rel="external">Basecamp</a>），英文名为<a href="http://37signals.com/remote/" target="_blank" rel="external">REMOTE</a>，国内还没有上市，是在<a href="http://www.jianshu.com/notebooks/41672/latest" target="_blank" rel="external">简书</a>上看到别人的翻译，并推送到Kindle上看的。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第8本书《商战：电商时代》]]></title>
      <url>https://atjason.com/683.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/bqjzv.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/822tw.jpg" alt=""></a></p>
<p>这是一本典型的快餐类的书，基本只看看目录就可以了。</p>
<p>电商是个热门话题，书中主要涉及了电商的几个主要点：用户量、价格、物流、资本、大数据、等，再堆出一个行业内的热闹企业、事件、人，基本就凑出一本书了，可以作为门外汉的课外读物。</p>
<p>话说，这种书怎么处理呢？卖废纸？</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第7本书《小强升职记》]]></title>
      <url>https://atjason.com/680.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B00J3G8892/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00J3G8892&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/x1yuq.jpg" alt=""></a></p>
<p>这本书在书架上有段时间了，这两天快速读完。总体感觉：值得实践、值得推荐。</p>
<p>作者用一个故事，串联起多个时间管理、习惯养成的方法，并在故事的叙述中简单介绍了各方法的关键。因为力求精简，书中并没有展开介绍各方法的细节，但还是扼要得点出其核心。如果读者对某个方法感兴趣，或者在实践过程中想深入了解，可以再去具体研究。</p>
<p>方法论的东西，如果不去实践，它就一直只是方法论。接下来就开始实践，期待一段时间后不一样的自己。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Origami之于滴答清单—选择语言]]></title>
      <url>https://atjason.com/671.html</url>
      <content type="html"><![CDATA[<p>以下就开始整个模仿的过程，大致分为三步。</p>
<h1 id="1，想清楚交互的具体过程"><a href="#1，想清楚交互的具体过程" class="headerlink" title="1，想清楚交互的具体过程"></a>1，想清楚交互的具体过程</h1><p>拆分后包含：</p>
<ul>
<li><p>点击某一项后，使用在该行显示灰色半透明蒙</p>
</li>
<li><p>松手后，蒙板消失，表示选中的图标移至该行</p>
</li>
</ul>
<h1 id="2，准备素材"><a href="#2，准备素材" class="headerlink" title="2，准备素材"></a>2，准备素材</h1><p>其实Origami主要是用来设计交互、动画，其前置条件是已经有完整的图片资源。主要包含收下部分：</p>
<ul>
<li><p>背景</p>
</li>
<li><p>选中图标</p>
</li>
</ul>
<h1 id="3，逐步实现交互"><a href="#3，逐步实现交互" class="headerlink" title="3，逐步实现交互"></a>3，逐步实现交互</h1><h2 id="布置静态界面"><a href="#布置静态界面" class="headerlink" title="布置静态界面"></a>布置静态界面</h2><p>将选中图标放在背景图中即可，默认隐藏灰色蒙板</p>
<h2 id="实现点击交互"><a href="#实现点击交互" class="headerlink" title="实现点击交互"></a>实现点击交互</h2><p>先实现点击松开时，选中图标移至相应的位置。</p>
<p>根据截图，计算中选中图标在各行时对应的坐标。第0行Y坐标为1110，第5行为630，可推出相应的计算公式：Y = 1110- 96 * i。这样，使用Index就可以实现点击与移动的对应关系。因为选中图标仅在Y方向移动，X坐标保持不变。</p>
<p>对于点击后的灰色蒙板，也可以使用类似的方式来移动。隐藏与否则可以通过控制Scale来实现，而Opacity则设置为0.3。</p>
<p>实现后的QC界面大概是：</p>
<p><a href="https://ps.toolinbox.net/d72aa.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/y7wsk.png" alt=""></a></p>
<p>好，这样就完成了整个交互设计，大家可以到这里<a href="http://atjason.com/wp-content/uploads/2015/05/SelectLanguage.zip">下载Origami工程文件</a>。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[2015年第6本书《重来》]]></title>
      <url>https://atjason.com/666.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.amazon.cn/gp/product/B0048EKQS0/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B0048EKQS0&amp;linkCode=as2&amp;tag=llll1-23" target="_blank" rel="external"><img src="https://ps.toolinbox.net/os9ql.jpg" alt=""></a></p>
<p>今年计划看50本书，过了快一半，才看了5本。</p>
<p>无意间翻到这本《重来》，翻了几页就发现特别对胃口，书中的观点非常认同，看着看着就想一直看下来。虽没有一次读完，也差不多四次就读完了。书不厚，每个小主题都有插图，看起来也不觉得累。</p>
<p>这本书主要讲的是大名鼎鼎的37signals介绍小团队创业相关的事，包括要保持小团队、做自己喜欢并使用的产品、以产品为主、万不得已再招人、保持精简、等等。总之是涉及到了产品到公司的很多层面。非常喜欢，应该会再认真读一遍。</p>
<p>还是要看书，不然思想都没什么变化，也懒得思考，这样老的太快了。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Origami之于滴答清单—侧边栏的交互]]></title>
      <url>https://atjason.com/654.html</url>
      <content type="html"><![CDATA[<p>以下就开始整个模仿的过程，大致分为三步。</p>
<h1 id="1，想清楚交互的具体过程"><a href="#1，想清楚交互的具体过程" class="headerlink" title="1，想清楚交互的具体过程"></a>1，想清楚交互的具体过程</h1><p>侧边栏的交互并不复杂，拆分结束后，大致可分为以下的交互、或者说动画：</p>
<ul>
<li><p>任务列表左移、右</p>
</li>
<li><p>侧边栏保持不动，被任务列表盖</p>
</li>
<li><p>两种方式触发页面的切换</p>
<pre><code>*   点击抽屉图
</code></pre><ul>
<li>滑动任务列表界面</li>
</ul>
</li>
</ul>
<h1 id="2，准备素材"><a href="#2，准备素材" class="headerlink" title="2，准备素材"></a>2，准备素材</h1><p>其实Origami主要是用来设计交互、动画，其前置条件是已经有完整的图片资源。主要包含收下部分：</p>
<ul>
<li><p>手机状态栏</p>
<pre><code>*   注意：状态栏背景应该是全透明的，这样可以显示下面页面的颜
</code></pre></li>
<li><p>侧边</p>
</li>
<li><p>任务列表界面</p>
</li>
</ul>
<p>大家如果要练手的话，可以到这里<a href="http://atjason.com/wp-content/uploads/2015/05/LeftPanel_Asset.zip">下载素材</a>。</p>
<h1 id="3，逐步实现交互"><a href="#3，逐步实现交互" class="headerlink" title="3，逐步实现交互"></a>3，逐步实现交互</h1><h2 id="布置静态界面"><a href="#布置静态界面" class="headerlink" title="布置静态界面"></a>布置静态界面</h2><p>其实主要是根据程序，将内容、素材摆放在界面相应的位置上。</p>
<p>注意Layer的上下层次，从上到下依次是：状态栏、任务列表、侧边栏</p>
<p>实现后的QC界面大概是：</p>
<p><img src="https://ps.toolinbox.net/t7dwd.jpg" alt=""></p>
<h2 id="确认交互的触发方式"><a href="#确认交互的触发方式" class="headerlink" title="确认交互的触发方式"></a>确认交互的触发方式</h2><p>由于点击抽屉图标和滑动任务列表界面都可以触发交互，所以考虑先实现一种触发方式，然后用另一种方式来调用第一种方式。</p>
<p>技巧：优先实现滑动的触发方式，然后使用点击来设置滑动的起始状态即可。</p>
<h2 id="实现滑动交互"><a href="#实现滑动交互" class="headerlink" title="实现滑动交互"></a>实现滑动交互</h2><p>这点并不复杂，使用简单的Swipe Patch，明确起始位置即可。</p>
<p>实现后的QC界面大概是：</p>
<p><img src="https://ps.toolinbox.net/agxom.jpg" alt=""></p>
<h2 id="实现点击交互"><a href="#实现点击交互" class="headerlink" title="实现点击交互"></a>实现点击交互</h2><p>这里要处理的是，在不同的情况，点击所触发的行为是不一致的。也就是说</p>
<ul>
<li><p>在侧边栏隐藏时，点击抽屉图标应该显示侧边</p>
</li>
<li><p>在侧边栏显示时，点击抽屉图标应该隐藏侧边栏</p>
</li>
</ul>
<p>这就意味着要做条件判断。条件判断可以使用Condition来实现，简单的判断任务列表界面的X位置即可。然后，将不同状态下点击的行为，用于设置滑动操作切换到起始、或终止的位置即可。</p>
<p>实现后的QC界面大概是：</p>
<p><img src="https://ps.toolinbox.net/qyd1u.jpg" alt=""></p>
<p>另一种更巧妙的办法是，点击切换滑动的起始状态即可。</p>
<p>实现后的QC界面大概是：</p>
<p><img src="https://ps.toolinbox.net/1j0dk.jpg" alt=""></p>
<p>好，这样就完成了整个交互设计，大家可以到这里下载<a href="http://atjason.com/wp-content/uploads/2015/05/LeftPanel.zip">Origami工程文件</a>。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Origami之于滴答清单—添加任务的交互]]></title>
      <url>https://atjason.com/629.html</url>
      <content type="html"><![CDATA[<p>滴答清单是已经存在的产品，其中延期也包含了添加任务的交互。这里并不是使用Origami去设计，而是使用Origami去模仿，达到学习Origami的目的。</p>
<p>关于滴答清单，本文模仿的是iOS1.9.4版本的滴答清单，可以在滴答清单官网去下载：<a href="http://www.dida365.com" target="_blank" rel="external">http://www.dida365.com</a></p>
<p>好，以下就开始整个模仿的过程，大致分为三步。</p>
<h1 id="一，想清楚交互的具体过程"><a href="#一，想清楚交互的具体过程" class="headerlink" title="一，想清楚交互的具体过程"></a>一，想清楚交互的具体过程</h1><p>也就是说，实际操作滴答清单，了解添加任务的过程，然后逐渐对整个交互进行拆解。过程中，可以使用高速录像后慢放的方式，了解动画的细节。</p>
<p>拆分结束后，大致可分为以下的交互、或者说动画：</p>
<ul>
<li><p>正向（即添加任务）</p>
<pre><code>*   加号键逐渐放大、消
</code></pre><ul>
<li><p>同时完成以下交</p>
</li>
<li><p>标题栏文字和图标切</p>
</li>
<li><p>主页面切</p>
</li>
<li><p>键盘升</p>
</li>
</ul>
</li>
<li><p>反向（即从添加任务状态返回）</p>
<pre><code>*   两种方式触发返
</code></pre><ul>
<li><p>点击返回</p>
</li>
<li><p>屏幕右滑（本期暂时不包含这一功能</p>
</li>
<li><p>同时完成以下交</p>
</li>
<li><p>标题栏文字和图标切</p>
</li>
<li><p>主页面切换</p>
<pre><code>*   注：加号键和页面同时出现，没有动
</code></pre></li>
<li><p>键盘下降</p>
</li>
</ul>
</li>
</ul>
<h1 id="二，准备素材"><a href="#二，准备素材" class="headerlink" title="二，准备素材"></a>二，准备素材</h1><p>其实Origami主要是用来设计交互、动画，其前置条件是已经有完整的图片资源。主要包含收下部分：</p>
<ul>
<li><p>图标：抽屉、菜单、返</p>
</li>
<li><p>图片：状态栏及标题栏、任务列表界面、新任务页面、键盘页面、加号键</p>
</li>
</ul>
<p>大家如果要练手的话，可以到这里<a href="http://atjason.com/wp-content/uploads/2015/05/Assets.zip">下载素材</a>：</p>
<h1 id="三，逐步实现交互"><a href="#三，逐步实现交互" class="headerlink" title="三，逐步实现交互"></a>三，逐步实现交互</h1><p>以下是主要的部分，放在一个步骤里，显示有些大了。不过不用担心，还是一步步完成的。</p>
<h2 id="布置静态的任务列表界面"><a href="#布置静态的任务列表界面" class="headerlink" title="布置静态的任务列表界面"></a>布置静态的任务列表界面</h2><p>其实主要是根据程序，将内容、素材摆放在界面相应的位置上。具体的内容和素材包括：</p>
<ul>
<li><p>标题栏：背影、图标、文</p>
</li>
<li><p>内容界</p>
</li>
<li><p>加号键</p>
</li>
</ul>
<p>小技巧：可将截图放在最上方，并使其半透明，这样就可以使用截图来校对元素在界面上的位置</p>
<p>布置好后是这样的：</p>
<p><img src="https://ps.toolinbox.net/cswp7.png" alt="任务列表界面"></p>
<h2 id="依次实现以下任务列表界面的交互"><a href="#依次实现以下任务列表界面的交互" class="headerlink" title="依次实现以下任务列表界面的交互"></a>依次实现以下任务列表界面的交互</h2><ul>
<li><p>消息的触发</p>
<pre><code>*   以点击加号键任务交互的触发点。可以将按下加号键的消息以Wireless的方式广播出去，这样可以方便得在其它LayerGroup中使用
</code></pre></li>
<li><p>点击加号键后，加号键逐渐放大、消失</p>
<pre><code>*   也即修改Scale、Opacity属性，使得加号键在放大的过程中同时消失
</code></pre></li>
<li><p>标题栏图标的切换</p>
<pre><code>*   也即修改Opacity属性，使得图标在过渡过程中消
</code></pre></li>
<li><p>标题栏文字的切换</p>
<pre><code>*   也即修改XPosition、Opacity属性，使得图标在左移过程中消
</code></pre></li>
<li><p>主页面切换</p>
<pre><code>*   也即修改Opacity属性，使得内容在左移过程中消失
</code></pre></li>
</ul>
<p>QC中的界面大致是这样的：</p>
<p><img src="https://ps.toolinbox.net/v679h.jpg" alt=""></p>
<h2 id="创建Layer-Group"><a href="#创建Layer-Group" class="headerlink" title="创建Layer Group"></a>创建Layer Group</h2><p>将任务列表的所有内容放置在一个LayerGroup中，同时创建另一个LayerGroup，用于放置新任务的内容。暂时关闭任务列表界面，进行接下来新任务界面的设计。</p>
<p><img src="https://ps.toolinbox.net/f09x4.jpg" alt="Layer Group"></p>
<h2 id="布置静态的新任务界面"><a href="#布置静态的新任务界面" class="headerlink" title="布置静态的新任务界面"></a>布置静态的新任务界面</h2><p>这一点和上面介绍的布置静态任务列表界面类似，这里就不多做介绍。布置好后是这样的：</p>
<p><img src="https://ps.toolinbox.net/lpztp.png" alt="新任务界面"></p>
<h2 id="依次实现以下新任务界面的交互"><a href="#依次实现以下新任务界面的交互" class="headerlink" title="依次实现以下新任务界面的交互"></a>依次实现以下新任务界面的交互</h2><ul>
<li><p>消息的触发</p>
<pre><code>*   以点击返回键任务交互的触发点、暂时不处理滑动返回操作。同时的，可以将该消息以Wireless的方式广播出去
</code></pre></li>
<li><p>标题栏图标的切换</p>
<pre><code>*   也即修改Opacity属性，使得图标在过渡过程中消
</code></pre></li>
<li><p>标题栏文字的切换</p>
<pre><code>*   也即修改XPosition、Opacity属性，使得图标在右移过程中消
</code></pre></li>
<li><p>主页面切换</p>
<pre><code>*   也即修改Opacity属性，使得内容在左移过程中消
</code></pre></li>
<li><p>键盘下降</p>
<pre><code>*   也即修改YPosition、Opacity属性，使得图标在下移过程中消失
</code></pre></li>
</ul>
<p>​QC中的界面大致是这样的：</p>
<p><img src="https://ps.toolinbox.net/h48py.jpg" alt="新任务界面"></p>
<h2 id="重新打开任务列表的LayerGroup，并进行调整"><a href="#重新打开任务列表的LayerGroup，并进行调整" class="headerlink" title="重新打开任务列表的LayerGroup，并进行调整"></a>重新打开任务列表的LayerGroup，并进行调整</h2><p>将任务列表的LayerGroup放在底层，将新任务的LayerGroup放在上层</p>
<p>使用添加任务、返回两个消息，控制上述两个层的状态切换。需要注意的是，除了状态切换，还需要在显示底层时隐藏上层，也即在显示任务列表的LayerGroup时隐藏新任务的LayerGroup，这样才能响应任务列表的点击操作。</p>
<p>进行其它一些调整，主要是针对动画的过渡，修正其中处理不好的地方。注意，这里有一点要说，不要刻意追求动画的完美。有时，花了2个小时做好了90%的交互、已经可以表达出意图，却又要花1小时、甚至更多的时间去调整不完美的地方，这就有些钻牛角尖了，浪费精力、没有必要。除非是开发同学能100%实现你设计的交互，不然这样的交互只是用来表达意图，做得太完美反而是浪费时间。</p>
<p>好，这样就完成了整个交互设计，大家可以到这里<a href="http://atjason.com/wp-content/uploads/2015/05/AddTask_OK.zip">下载Origami工程文件</a>。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[优化Quartz Composer (Origami)的性能]]></title>
      <url>https://atjason.com/632.html</url>
      <content type="html"><![CDATA[<p>StartFragment使用过Quartz Composer(Origami)的朋友会有感觉，这家伙是个耗性能的大户。如果你还不打算切换工具、或者离不开QC强大的交互设计功能，就试试下面介绍的优化建议吧。</p>
<p>主要的调整是在系统偏好设置中进行：</p>
<p><a href="https://ps.toolinbox.net/6zxqv.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/rk9mj.jpg" alt="Quartz Composer设置"></a></p>
<p>Viewer (Preferences &gt; Viewer)</p>
<ul>
<li><p>降低帧率</p>
<pre><code>*   这应该是最有效的方式。可以在开发过程中设置低的帧率，在演示过程中再将其调高
</code></pre><ul>
<li>具体的，可将&quot;Maximum rendering frame rate&quot;调低至10，演示时可调至&quot;Unlimited&quot;</li>
</ul>
</li>
<li><p>降低Viewer窗口的尺寸</p>
<pre><code>*   这个没有严格的依据，只是根据心理上的理解，窗体小、执行动画时需要重绘的面积小，需要消耗的性能也少
</code></pre></li>
</ul>
<p>Editor</p>
<ul>
<li><p>取消阴影</p>
<pre><code>*   猜想可以降低绘制阴影的消
</code></pre></li>
<li><p>取消网络线</p>
<pre><code>*   虽然网络线可以帮助在视觉上对齐，但实际上吸附的操作还是通过&amp;quot;Align Nodes&amp;quot;实现的，所以可以取消网络
</code></pre></li>
<li><p>关闭Patch的Render</p>
<pre><code>*   也即，在不需要展示某些Patch时，暂时关闭这些Patch的Render，等需要时再打开
</code></pre></li>
</ul>
<p>注意：在调整过程中，可以同时打开Activity Monitor，观察调整前后，在Viewer中操作时CPU使用率的变化。</p>
<p>终极方案：关闭Viewer</p>
<pre><code>熟练使用快捷键，在需要查看时使用⌘+R支持Viewer，不需要进使用⌘+.关闭Viewer
</code></pre><p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[照片管理调查结果分析]]></title>
      <url>https://atjason.com/603.html</url>
      <content type="html"><![CDATA[<p>之前，朋友圈内发起调查，看大家都是如何管理自己的照片的，现在将收集上来的数据整理如下。</p>
<p>想看完整结果，完成此问卷即可：StartFragment<a href="http://www.wenjuan.com/s/JRbAVv" target="_blank" rel="external">http://www.wenjuan.com/s/JRbAVv</a>EndFragment</p>
<p>StartFragment</p>
<p>关于受众</p>
<p>本次调查主要推广方式为：IT公司同事、朋友圈。可推测比较大的比例来自于IT圈、或对电脑手机较熟悉的人、或其家属，相对于所有可能的用户来说，其结果更偏向于上述人群</p>
<p>截止2014年9月5日，共收集到149份有效数</p>
<p>more</p>
<p>Q1:你用的是什么手机？(多选题)</p>
<p>Q2:哇，你用的是什么神机？(填空题)</p>
<p><a href="https://ps.toolinbox.net/xpnsr.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/xpnsr.png" alt=""></a></p>
<p>iPhone手机多于Android手机</p>
<p>iPhone和Android手机占据绝大多数，WinPhone手机依然是小众，塞班用户可以忽略，没有黑莓用户</p>
<p>有11个&ldquo;其他手机&rdquo;，不排除有人不了解自己使用的手机是Android手机，这也说明这些人是真正的小白</p>
<p>Q3:你主要用什么设备来拍照、拍视频？(单选题)</p>
<p><a href="https://ps.toolinbox.net/9vim3.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/9vim3.png" alt=""></a></p>
<p>84.56%的人使用手机拍照</p>
<p>14.77%的人使用数码相机、单反、微单等拍照</p>
<p>0.67%（仅1人）主要使用平板拍照</p>
<p>大部分情况下，自动备份手机上的照片就可以满足绝大部分的用户，而对于使用数码相机的人，则需要考虑SD卡的照片如何备份，当然</p>
<p>部分相机开始引用WiFi功能</p>
<p>使用相机、尤其是单反的人，可以理解为高端用户，通常对电脑比较了解，有自己的一套照片管理办法，会使用较复杂、较专业的修图工具、管理软件</p>
<p>Q4:你的照片、视频主要是保存在什么地方？(多选题)</p>
<p><a href="https://ps.toolinbox.net/h4nv8.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/h4nv8.png" alt=""></a></p>
<p>这一问题的答案比较分散</p>
<p>电脑上的硬盘和移动硬盘实际使用场景比较类似，可归为一类；</p>
<p>绝大多数用户都会使用这种方式来保存照片，或者说沿用 了这种比较传统的、保存一般性数据文件的方式保存照片</p>
<p>绝大多数用户依然觉得放在电脑硬盘里是最安全、最方便的</p>
<p>比较多的人使用云来备份，猜想受益于</p>
<p>备份方便：几乎所有云都覆盖了所有的移动终端，可以使用自家的App自动备份至云</p>
<p>空间够大、且免费：尤其是13年网盘大战后，几乎都达到了TB级别的免费空间</p>
<p>云本身的特性：如共享方便</p>
<p>当然，使用云的毕竟还是少数（略多于1/4），猜想原因有</p>
<p>不知道世界上还有云、能把照片自动备份到云上</p>
<p>不会使用：尤其是对电脑不太懂的人，可能都没有云账户</p>
<p>担心数据安全：放在云上，万一没了怎么办？还是放在自己看得见、摸得着的地方安全</p>
<p>担心隐私安全：即怕自己成为艳照门主角</p>
<p>NAS依然是小众（仅5人），不仅在国内，哪怕是在全球，NAS都是小众产品，尤其是相比于移动硬盘。NAS的好处主要在于</p>
<p>数据安全：比如使用RAID 1备份。并且，即使是相同的硬盘，由于NAS通常处于静止状态，其硬盘的寿命要比移动硬盘长很多。没坏过移动硬盘、没丢过数据的人，体会不到这种增强硬盘可靠性、数据安全性的重要性，可能会觉得放在移动硬盘里就永远不会丢</p>
<p>局域网共享方便：得益于Samba、DLNA等技术，可以方便得在Pad、电视等其他终端消费照片</p>
<p>广域网共享方便：越来越多的NAS提供所有私有云的功能，即在家以外的地方也可以通过Internet来访问家里NAS上的数据</p>
<p>很多人（43人）是不备份、不移动照片的，在哪拍的就放哪，估计直到手机、相机存储空间满了之后，才会想起将其移出来、腾出空间</p>
<p>这一部分用户应该是潜在客户，他们没有及时整理照片，不是因为不需要（因为毕竟手机、相机的存储空间是有限的），而是因为没有趁手的方案、懒、不想花时间折腾</p>
<p>还有3人选择了其他，猜想可能是光盘、电视盒子、等等</p>
<p>Q5:你用的是哪朵云？(多选题)</p>
<p>Q6:好吧，你到底用的是啥云？(填空题)</p>
<p><a href="https://ps.toolinbox.net/s0qxt.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/s0qxt.png" alt=""></a></p>
<p>此题是后来加上去的，答题人数过少，参考意义不大</p>
<p>不过，从实际感受和收上来的数据来看，百度云确实是比较流行的</p>
<p>Q7:你多长时间保存一次呢？(单选题)</p>
<p><a href="https://ps.toolinbox.net/o7pry.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/o7pry.png" alt=""></a></p>
<p>&ldquo;手机撑满了才想起来&rdquo;和&ldquo;偶尔想起来就拷一把&rdquo;可看作同一类人，几乎没有备份意识，移动照片应该主要是为了给手机、相机腾出空间。占绝大多数，约68%</p>
<p>&ldquo;定期保存&rdquo;和&ldquo;自动备份&rdquo;可看作同一类人，有较好的备份意识，并且应该有自己的一套照片管理办法。约占25%</p>
<p>也有6.71%的人从来不备份。猜想这类人</p>
<p>照片不多</p>
<p>没丢过照片，或者觉得丢了也无所谓</p>
<p>怕麻烦</p>
<p>不会弄</p>
<p>Q8:你是怎么管理自己那么多照片的？(单选题)</p>
<p><a href="https://ps.toolinbox.net/bpcxz.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/bpcxz.png" alt=""></a></p>
<p>本题的目的是想看看大家管理意识有多强、目前没有自己一套成型的管理办法，选项的设置是逐渐深入</p>
<p>从结果上看，各种选项比如分散，或者说，什么样的人都有</p>
<p>从大面上看，愿意管理、并且已经在管理的人还是占绝大多数（超过3/4），只是管理的程度不同</p>
<p>有10%的人愿意管理，但是觉得&ldquo;不好弄&rdquo;就放弃了。这应该是非常优质的潜在客户</p>
<p>还有约13%的人并不愿意管理</p>
<p>从交叉图表上来看，</p>
<p>定期备份的人，整理欲最强</p>
<p>自动备份的人，只要将照片放在一起就可以了</p>
<p>偶尔想起来要备份的人，还是愿意对照片进行很好的整理</p>
<p>手机撑满才想起来备份的人，只要将照片放在一起就可以了</p>
<p>不保存的人，自然绝大多数都不会去整理</p>
<p>Q9:你有找以前照片的经历吗？(单选题)</p>
<p><a href="https://ps.toolinbox.net/8zg7f.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/8zg7f.png" alt=""></a></p>
<p>需要找照片，其实是对照片进行管理的主要驱动力</p>
<p>本题少了一个选项：从不找照片</p>
<p>绝大多数人还是有找照片的经历的，约68%。其中21%的人在找照片时遇到了不小的困难，这应该是可以改进的地方</p>
<p>Q10:你怕照片丢吗？(单选题)</p>
<p><a href="https://ps.toolinbox.net/t5jz8.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/t5jz8.png" alt=""></a></p>
<p>怕丢照片，其实是对照片进行备份的主要驱动力</p>
<p>可以看到，超过87%的人都怕丢照片，其实这也意味着，超过87%的人需要备份照片</p>
<p>Q11:你会看以前的照片、视频吗？(单选题)</p>
<p><a href="https://ps.toolinbox.net/j0kr9.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/j0kr9.png" alt=""></a></p>
<p>回看照片，其实和找照片是关联的，也是对照片进行管理的驱动力</p>
<p>从结果上看，几乎所有的人都有看照片的需求（不然照片拍了用来干嘛？），只是看的频率不同，或者说，看不到照片时带来的痛感不同。约92%的人是很少看、或者只是给别人看</p>
<p>Q12:你一般在哪看照片呢？(多选题)</p>
<p><a href="https://ps.toolinbox.net/cgiiw.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/cgiiw.png" alt=""></a></p>
<p>本题是延续上一题</p>
<p>绝大多数人都会在电脑上看照片，这和之前绝大多数人把照片备份到电脑上的硬盘、移动硬盘是一致的。并且，大部分人对照片的管理应该也是在电脑上完成的，因为找起来方便</p>
<p>在手机上看照片的人也非常多。虽然手机屏幕小，看起来不那么舒服，但很大的优势是，可以随时随地看，并且可以看到大部分最近的照片</p>
<p>从交叉图表可以看出</p>
<p>在平板上看照片的人，除了把照片保存在电脑上的硬盘和移动硬盘，10人将其保存在云中，8人在哪拍的就放在哪，没有人将其放在NAS中</p>
<p>在电视上看照片的人，和在平板上看照片的人，有类似的保存习惯</p>
<p>Q13:其他？如果不是脑海中，那是哪呢？(填空题)</p>
<p>无数据</p>
<p>Q14:你需要修改照片吗？(单选题)</p>
<p><a href="https://ps.toolinbox.net/vcqd5.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/vcqd5.png" alt=""></a></p>
<p>绝大多数人对修改照片的需求很弱，不修改、很少修改、或者有时分享前会修改</p>
<p>这可能意味着，在软件开发过程中花了大力气做出来的图片修改功能，可能是大部分用户、大多时候都不会使用的功能，或者在真正需要修图的人眼里是鸡肋</p>
<p>Q15:你以前修改照片是在哪做的呢？(多选题)</p>
<p><a href="https://ps.toolinbox.net/ym13n.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/ym13n.png" alt=""></a></p>
<p>既然修改照片的需求很弱，本题的意义也就不大</p>
<p>不过，不出意外，修改照片大多还是在手机上（猜想是在分享前）和电脑上（猜想是进行复杂的修图）</p>
<p>Q16:其他？那是哪呢？(填空题)</p>
<p>无数据</p>
<p>Q17:你以前的主要修改过哪些？(多选题)</p>
<p><a href="https://ps.toolinbox.net/c38i9.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/c38i9.png" alt=""></a></p>
<p>本题的结果比较分散，不过大多数都是需要较少操作的修改，如裁剪、翻转、滤镜之类的</p>
<p>15人选择了其他，包括&ldquo;调色 后期&rdquo;、&ldquo;色阶&rdquo;，这明显是高阶的修图</p>
<p>Q18:你刚才选的其他修改是什么呢？(填空题)</p>
<p>见上题分析</p>
<p>Q19:你和朋友一起出去玩，都拍了照片，怎么互相分享？(多选题)</p>
<p><a href="https://ps.toolinbox.net/t2nic.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/t2nic.png" alt=""></a></p>
<p>这是一个很实用的话题、较复杂的情景，其实是综合照片管理能力的考验</p>
<p>结果也比较分散，最多的是使用微信、QQ等工具直接发送，这对于手机拍的照片是很方便的</p>
<p>当成文件发送的有55人，使用U盘、移动硬盘传递的有22人，这应该是以前PC时代遗留下来的操作习惯</p>
<p>在使用当面传的17人中，有9人使用iPhone，估计是使用AirDrop；有8人使用Android，估计是使用类似百度云当面传之类的功能，这点其实对手机操作能力要求挺高的；有1人使用WinPhone。当然，不排除有人同时拥有不同的手机</p>
<p>有19人使用云分享的功能来分享照片，这对于大量照片同时需要分享给多人时比较有用，对云的操作能力要求较高</p>
<p>当然，现在越来越流行直接发朋友圈等地方（29人），既可以分享照片，也可以秀自己</p>
<p>Q20:你觉得你现在的照片管理方式完美吗？(多选题)</p>
<p><a href="https://ps.toolinbox.net/k59bq.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/k59bq.png" alt=""></a></p>
<p>这是一个较模糊的题目，希望得到从情感意义上大家对于照片管理的需求</p>
<p>较为意外的是，超过1/3的人觉得目前的方法挺好的，26人觉得现在的方法不好，不过也无所谓</p>
<p>更多的人是想管，但遇到各种各样的问题，比较典型的是不会弄、怕麻烦不想花时间弄、不想重复照片浪费空间</p>
<p>Q21:还有哪些槽点？（比如，拍照时担心拍不好，就拍了很…(填空题)</p>
<p>有效回答如下</p>
<p>有没有自动按地点分类的，又按时间、朋友圈分类，却只有一份</p>
<p>太帅了，怕传出去被人利用</p>
<p>不知道要不要留着，删了可惜，留着无用</p>
<p>家里有个单细胞的老婆在，总会有整理不好的</p>
<p>最纠结的是不知道删哪一张留哪一张</p>
<p>不能按日期排列</p>
<p>拍完照片想要分享到社交网站，结果不知道该发布在哪里、发布哪张、说点什么而纠结一番后没有发送，后来这些这片就没用了</p>
<p>命名问题</p>
<p>怕不美</p>
<p>很乱 不知道怎么整理</p>
<p>拍时光线没把握好，在电脑上看看就不舒服</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Flash Android L Preview on Nexus 5]]></title>
      <url>https://atjason.com/598.html</url>
      <content type="html"><![CDATA[<p>Download Android SDK</p>
<ul>
<li><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">http://developer.android.com/sdk/index.html</a></p>
</li>
<li><p>&quot;SDK Tools only&quot; is ok enough, choose corresponding version based on your host to download. Here use Windows 7 as host</p>
</li>
<li><p>Just install it</p>
<p>Download Android L Preview package</p>
</li>
<li><p><a href="http://developer.android.com/preview/setup-sdk.html" target="_blank" rel="external">http://developer.android.com/preview/setup-sdk.html</a></p>
</li>
<li><p>Choose the image for Nexus 5 and download:&quot;hammerhead&quot;</p>
<pre><code>*   [hammerhead-lpv79-preview-ac1d8a8e.tgz](http://developer.android.com/preview/setup-sdk.html#top)
</code></pre><ul>
<li><p>MD5:5a6ae77217978cb7b958a240c2e80b57</p>
</li>
<li><p>SHA-1:ac1d8a8e4f4a1dca5864dc733caa940bffc28616</p>
</li>
</ul>
<p>Prepare Nexus 5</p>
</li>
<li><p>Power off Nexus 5</p>
</li>
<li><p>Press &quot;Volumn down&quot; and &quot;Power&quot; button to power on</p>
</li>
<li><p>Connect Nexus 5 to Windows through USB line</p>
<p>On Windows 7, flash Nexus 5</p>
</li>
<li><p>Find where the just SDK was installed. In fact mainly to find where the &quot;fastboot.exe&quot; was installed. On my test environment it&#39;s &quot;c:\Users\USER\AppData\Local\Android\android-sdk\platform-tools\fastboot.exe&quot;</p>
</li>
<li><p>Open Windows Explorer, go to the folder just mentioned above. Extract the just downloaded .tgz file to it. After extracted, you should see files like &quot;flash-all.bat&quot; are in the same folder of &quot;fastboot.exe&quot;</p>
</li>
<li><p>Open Command using Administrator permission, go to the folder just mentioned above. Run &quot;flash-all.bat&quot;. Wait for some time (around 5min, depends on cases). Then Nexus 5 reboot. Now could disconnect the USB line. </p>
</li>
<li><p>Enjoy!</p>
<p>Ref</p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=jdIvLK5jyHw" target="_blank" rel="external">https://www.youtube.com/watch?v=jdIvLK5jyHw</a>EndFragment</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在Radxa上安装Seafile]]></title>
      <url>https://atjason.com/586.html</url>
      <content type="html"><![CDATA[<p># </p>
<pre><code>什么是Seafile?

Seafile是下一代的开源云存储，可以更好的文件同步，隐私保护和团队协作功能。要了解更多信息，请访问其[官网](http://seafile.com)
</code></pre><p># </p>
<pre><code>安装前置条件
</code></pre><p>sudo apt-get update</p>
<p>sudo apt-get install python2.7 python-setuptools python-simplejson python-imaging sqlite3</p>
<p>more</p>
<p># </p>
<pre><code>下载Seafile

假定Seafile根目录为&amp;quot;/mnt/sd/cloud/seafile&amp;quot;

从Seafile官网（http://seafile.com/en/download/）下载最新版的&amp;ldquo;Server for Raspberry Pi&amp;rdquo;（为什么下载这个版本？因为Radxa是ARM板，而这个版本正是为了同为ARM板的Raspberry Pi而开发，所以是适配的。PS：Radxa这是粘了Raspberry Pi的光）
</code></pre><p>cd /mnt/sd/cloud/seafile</p>
<p>mkdir installed</p>
<p>cd installed</p>
<p>wget <a href="https://bitbucket.org/haiwen/seafile/downloads/seafile-server_3.0.4_pi.tar.gz" target="_blank" rel="external">https://bitbucket.org/haiwen/seafile/downloads/seafile-server_3.0.4_pi.tar.gz</a></p>
<p>tar xvzf seafile-server_3.0.4_pi.tar.gz -C ../</p>
<p>cd ../seafile-server-3.0.4</p>
<p># </p>
<pre><code>安装Seafile
</code></pre><p>./setup-seafile.sh </p>
<hr>
<p>This script will guide you to config and setup your seafile server.</p>
<p>Make sure you have read seafile server manual at </p>
<p><a href="https://github.com/haiwen/seafile/wiki" target="_blank" rel="external">https://github.com/haiwen/seafile/wiki</a></p>
<p>Note: This script will guide your to setup seafile server using sqlite3,</p>
<p>which may have problems if your disk is on a NFS/CIFS/USB.</p>
<p>In these cases, we sugguest you setup seafile server using MySQL.</p>
<p>Press [ENTER] to continue</p>
<hr>
<p>Checking packages needed by seafile …</p>
<p>Checking python on this machine …</p>
<p>Find python: python2.7</p>
<p>  Checking python module: setuptools … Done.</p>
<p>  Checking python module: python-simplejson … Done.</p>
<p>  Checking python module: python-imaging … Done.</p>
<p>  Checking python module: python-sqlite3 … Done.</p>
<p>Checking for sqlite3 …Done.</p>
<p>Checking Done.</p>
<p>What would you like to use as the name of this seafile server?</p>
<p>Your seafile users will be able to see the name in their seafile client.</p>
<p>You can use a-z, A-Z, 0-9, _ and -, and the length should be 3 ~ 15</p>
<p>What is the ip or domain of this server?</p>
<p>For example, www.mycompany.com, or, 192.168.1.101</p>
<p>What tcp port do you want to use for ccnet server?</p>
<p>10001 is the recommended port.</p>
<p>[default: 10001 ] </p>
<p>Where would you like to store your seafile data? </p>
<p>Note: Please use a volume with enough free space.</p>
<p>[default: /mnt/sd/cloud/seafile/seafile-data ] </p>
<p>What tcp port would you like to use for seafile server?</p>
<p>12001 is the recommended port.</p>
<p>[default: 12001 ] </p>
<p>What tcp port do you want to use for seafile httpserver?</p>
<p>8082 is the recommended port.</p>
<p>[default: 8082 ] </p>
<p>This is your config information:</p>
<p>server name:        seafile</p>
<p>server ip/domain:   192.168.1.22</p>
<p>server port:        10001</p>
<p>seafile data dir:   /mnt/sd/cloud/seafile/seafile-data</p>
<p>seafile port:       12001</p>
<p>httpserver port:    8082</p>
<p>If you are OK with the configuration, press [ENTER] to continue.</p>
<p>Generating ccnet configuration in /mnt/sd/cloud/seafile/ccnet…</p>
<p>done</p>
<p>Successly create configuration dir /mnt/sd/cloud/seafile/ccnet.</p>
<p>Generating seafile configuration in /mnt/sd/cloud/seafile/seafile-data …</p>
<p>Done.</p>
<hr>
<p>Seahub is the web interface for seafile server.</p>
<p>Now let&#39;s setup seahub configuration. Press [ENTER] to continue</p>
<hr>
<p>Creating seahub database now… </p>
<p>Done.</p>
<p>creating seafile-server-latest symbolic link … done</p>
<hr>
<p>Your seafile server configuration has been completed successfully.</p>
<hr>
<p>run seafile server:     ./seafile.sh { start | stop | restart }</p>
<p>run seahub  server:     ./seahub.sh  { start &lt;port&gt; | stop | restart &lt;port&gt; }</p>
<hr>
<p>If the server is behind a firewall, remember to open these tcp ports:</p>
<hr>
<p>port of ccnet server:         10001</p>
<p>port of seafile server:       12001</p>
<p>port of seafile httpserver:   8082</p>
<p>port of seahub:               8000</p>
<p># </p>
<pre><code>启动Seafile
</code></pre><p>./seafile.sh start</p>
<p>./seahub.sh  start</p>
<p>Starting seahub at port 8000 …</p>
<hr>
<p>It&#39;s the first time you start the seafile server. Now let&#39;s create the admin account</p>
<hr>
<p>What is the email for the admin account?</p>
<p>[ admin email ] your email</p>
<p>What is the password for the admin account?</p>
<p>[ admin password ] </p>
<p>Enter the password again:</p>
<p>[ admin password again ] </p>
<hr>
<p>Successfully created seafile admin</p>
<hr>
<p>Loading ccnet config from /mnt/sd/cloud/seafile/ccnet</p>
<p>Loading seafile config from /mnt/sd/cloud/seafile/seafile-data</p>
<p>Seahub is started</p>
<p>Done.</p>
<p># </p>
<pre><code>测试

打开http://IP:8000/，使用刚才创建的管理员账户登陆即可。更进一步，可以结合Seafile的免费Windows/Mac/Android/iOS客户端进行测试

EndFragment
</code></pre>]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在Radxa上安装AMH]]></title>
      <url>https://atjason.com/579.html</url>
      <content type="html"><![CDATA[<p># </p>
<pre><code>写在前面

什么是Radxa？

它是一块ARM开发板，可以运行基于Ubuntu的Linux系统，功率低（一般状态不到3W），可以放在家里做个常开的Linux服务器。更多信息，可以看看这篇[Radxa折腾小记](http://atjason.com/519.html)，或者到其[官网](http://radxa.com/)了解

什么是AMH？

国内首个免费开源虚拟主机面板。更多信息，可以到其[官网](http://amysql.com/AMH.htm)了解
</code></pre><p># </p>
<pre><code>安装过程遇到的问题及解决办法

正常运行amh.sh，得到如下错误：
</code></pre><p>[Error] Your system is not supported install AMH</p>
<p>more</p>
<pre><code>编辑amh.sh，找到&amp;ldquo;Your system is not supported install AMH&amp;rdquo;，在上面添加&amp;ldquo;SysName=&amp;#39;ubuntu&amp;#39;;&amp;rdquo;（因为Radxa事实上运行的就是Linaro 13.09（基于Ubuntu 13.04），不过是ARM版的）
</code></pre><p>egrep -i &quot;ubuntu&quot; /etc/issue &amp;&amp; SysName=&#39;ubuntu&#39;;</p>
<p>SysName=&#39;ubuntu&#39;;</p>
<p>[ “$SysName” == ‘’  ] &amp;&amp; echo ‘[Error] Your system is not supported install AMH&#39; &amp;&amp; exit;</p>
<pre><code>此时amh.sh可以运行，按正常模式安装，结束后得到如下错误：
</code></pre><p>Sorry, Failed to install AMH</p>
<p>Please contact us: <a href="http://amysql.com" target="_blank" rel="external">http://amysql.com</a></p>
<pre><code>查看amh.log，发现有如下关于&amp;quot;libiconv&amp;quot;的错误内容：
</code></pre><p>./stdio.h:1010:1: error: &lsquo;gets&rsquo; undeclared here (not in a function)</p>
<p>make[2]: <em>*</em> [progname.o] Error 1</p>
<p>make[2]: Leaving directory `/home/amh_install/packages/untar/libiconv-1.14/srclib&#39;</p>
<pre><code>对于这个问题，参照[这个解决方案](http://amysql.com/bbs/forum.php?mod=viewthread&amp;amp;tid=2610)

另外的关于&amp;quot;mysql&amp;quot;的错误：
</code></pre><p>[ 72%] Building C object libmysql/CMakeFiles/clientlib.dir/__/sql-common/client_plugin.c.o</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c: In function &lsquo;mysql_client_plugin_init&rsquo;:</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c:252:5: error: incompatible type for argument 5 of &lsquo;add_plugin&rsquo;</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c:120:1: note: expected &lsquo;va_list&rsquo; but argument is of type &lsquo;int&rsquo;</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c: In function &lsquo;mysql_client_register_plugin&rsquo;:</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c:310:5: error: incompatible type for argument 5 of &lsquo;add_plugin&rsquo;</p>
<p>/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c:120:1: note: expected &lsquo;va_list&rsquo; but argument is of type &lsquo;int&rsquo;</p>
<p>make[2]: <em>*</em> [libmysql/CMakeFiles/clientlib.dir/__/sql-common/client_plugin.c.o] Error 1</p>
<p>make[1]: <em>*</em> [libmysql/CMakeFiles/clientlib.dir/all] Error 2</p>
<p>make: <em>*</em> [all] Error 2</p>
<pre><code>原因：其实是变量类型的问题，具体不多解释。解决办法：

编辑&amp;ldquo;/home/amh_install/packages/untar/mysql-5.5.34/sql-common/client_plugin.c&amp;rdquo;，搜索&amp;ldquo;mysql_client_plugin_init()&amp;rdquo;，在｛下面添加一行：

va_list dummy;

向下搜索&amp;ldquo;add_plugin(&amp;amp;mysql, *builtin, 0, 0, 0)&amp;rdquo;，将其替换为&amp;ldquo;add_plugin(&amp;amp;mysql, *builtin, 0, 0, dummy)&amp;rdquo;

搜索&amp;ldquo;mysql_client_register_plugin(MYSQL&amp;rdquo;，在｛下面添加一行：

va_list dummy;

向下搜索&amp;ldquo;plugin= add_plugin(mysql, plugin, 0, 0, 0)&amp;rdquo;，将其替换为&amp;ldquo;plugin= add_plugin(mysql, plugin, 0, 0, dummy)&amp;rdquo;

完成以上的手动打补丁，修改amh.sh，注释掉mysql的下载、解压步骤：



    #Downloadfile &amp;quot;${MysqlVersion}.tar.gz&amp;quot; &amp;quot;http://code.amysql.com/files/${MysqlVersion}.tar.gz&amp;quot;;

    #rm -rf $AMHDir/packages/untar/$MysqlVersion;

    #echo &amp;quot;tar -zxf ${MysqlVersion}.tar.gz ing...&amp;quot;;

    #tar -zxf $AMHDir/packages/$MysqlVersion.tar.gz -C $AMHDir/packages/untar;

另外，对于已经能成功安装的组件，可用上面类似的办法注释掉下载、解压步骤，这样下次运行安装脚本时就不需要重新下载、解压、编译，节约时间。如注释掉php相关的：



    #Downloadfile &amp;quot;${PhpVersion}.tar.gz&amp;quot; &amp;quot;http://code.amysql.com/files/${PhpVersion}.tar.gz&amp;quot;;

    #rm -rf $AMHDir/packages/untar/$PhpVersion;

    #echo &amp;quot;tar -zxf ${PhpVersion}.tar.gz ing...&amp;quot;;

    #tar -zxf $AMHDir/packages/$PhpVersion.tar.gz -C $AMHDir/packages/untar;

重新运行amh.sh，一切正常。访问http://IP:8888并登陆，一切正常

EndFragment
</code></pre>]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在手机上运行Axure设计的原型]]></title>
      <url>https://atjason.com/569.html</url>
      <content type="html"><![CDATA[<p>对于移动App的原型，如果能在手机上运行，像本地程度一样运行，会带来更真实的体验。本文简要记录使Axure原型能在iPhone 5s上运行</p>
<p># </p>
<pre><code>使用Axure设计原型并导出

Axure设计时，和普通原型设计要比，要注意的地方有几点：

**原型尺寸的选择**

iOS的屏幕尺寸目前是有限的几种，原型尺寸要和其一致。比如320*640。不过，由于Axure导出的原型在iOS上处理status bar时有问题，需要在高度上减去status bar的高度，比如使用320*548

**导出原型时的选项**

在&amp;quot;Public &amp;gt; Generate HTML files &amp;gt; Mobile/Device&amp;quot;中，使用如下选项：

more

[![](https://ps.toolinbox.net/jii4g.png)​](https://ps.toolinbox.net/lrq4b.png)

注意，为了使原型更加逼真，可以使用实际App会采用的真实图标
</code></pre><p># </p>
<pre><code>在iPhone 5s上测试

将导出的html放在web服务器中，使其可以在其他环境中访问。比如Mac自带的Apache、自己的小网站，等等。比如，本文对应的原型可以在这访问：[http://atjason.com/Axure/iPhone_Framework/home.html](http://atjason.com/Axure/iPhone_Framework/home.html)

在iPhone上使用Safari打开，然后添加至桌面：&amp;quot;Share &amp;gt; Add to Home Screen &amp;gt; Add&amp;quot;

从手机桌面打开此原型，即可得到类似于原生App的使用体验

注，本文以iOS、iPhone 5s为例，其实对于其他Android手机、其他分辨率，原理是相同的
</code></pre><p>## </p>
<pre><code>下载

[iPhone Framework.rp](http://atjason.com/Axure/iPhone_Framework.rp)
</code></pre><p>### </p>
<pre><code>参考
</code></pre><ul>
<li><p><a href="http://www.axure.com/forum/mobile-prototyping/7886-viewport-sizing-problems.html" target="_blank" rel="external">http://www.axure.com/forum/mobile-prototyping/7886-viewport-sizing-problems.html</a></p>
</li>
<li><p><a href="http://www.smashingmagazine.com/2012/08/17/mobile-prototyping-axure-rp/" target="_blank" rel="external">http://www.smashingmagazine.com/2012/08/17/mobile-prototyping-axure-rp/</a></p>
</li>
<li><p><a href="http://cdc.tencent.com/?p=7246" target="_blank" rel="external">http://cdc.tencent.com/?p=7246</a></p>
<p>EndFragment</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用UnixBench为Linux跑分]]></title>
      <url>https://atjason.com/564.html</url>
      <content type="html"><![CDATA[<p>跑分软件感觉是被Android玩烂了，突然也想测试下手上的Radxa和Linode VPS的性能怎样</p>
<p># </p>
<pre><code>UnixBench介绍

简单搜索了下，找到了Linux下较常用的UnixBench，是linux、unix测试系统基准性能的经典工具，UnixBench测试包含了系统调用、读写、进程、2D、3D、管道、运算、C库等系统基准性能，它的优点在于提供了对系统性能的一种评价体系，为系统评分，如此方便对系统作对比测试；但UnixBench在网络性能测试欠缺

UnixBench的使用方法如下：
</code></pre><h1 id="Download-the-latest-version"><a href="#Download-the-latest-version" class="headerlink" title="Download the latest version"></a>Download the latest version</h1><p>wget <a href="https://byte-unixbench.googlecode.com/files/UnixBench5.1.3.tgz" target="_blank" rel="external">https://byte-unixbench.googlecode.com/files/UnixBench5.1.3.tgz</a>;</p>
<p>tar xzf UnixBench-5.1.3.tar.gz;</p>
<p>cd UnixBench;</p>
<h1 id="Disable-graphic-test-as-no-desktop-for-Linux-installed"><a href="#Disable-graphic-test-as-no-desktop-for-Linux-installed" class="headerlink" title="Disable graphic test as no desktop for Linux installed"></a>Disable graphic test as no desktop for Linux installed</h1><p>sed -i &quot;s/GRAPHIC_TESTS = defined/#GRAPHIC_TESTS = defined/g&quot; ./Makefile</p>
<p>make;</p>
<p>./Run;</p>
<pre><code>执行后就耐心等待结果就行，依据机器性能不同，大概需要10分钟
</code></pre><p># </p>
<pre><code>UnixBench测试结果

Radxa的执行结果：

more

========================================================================

 BYTE UNIX Benchmarks (Version 5.1.3)

 System: radxa: GNU/Linux

 OS: GNU/Linux -- 3.0.36+ -- #2 SMP PREEMPT Sat Mar 15 11:18:05 CST 2014

 Machine: armv7l (armv7l)

 Language: en_US.utf8 (charmap=&amp;quot;ANSI_X3.4-1968&amp;quot;, collate=&amp;quot;ANSI_X3.4-1968&amp;quot;)

 11:50:03 up 12 days, 14:42, 4 users, load average: 0.54, 0.31, 0.58; runlevel 2

------------------------------------------------------------------------

Benchmark Run: Sun Jul 13 2014 11:50:03 - 12:18:17

0 CPUs in system; running 1 parallel copy of tests

Dhrystone 2 using register variables    6077940.3 lps  (10.0 s, 7 samples)

Double-Precision Whetstone           995.3 MWIPS (9.9 s, 7 samples)

Execl Throughput                294.0 lps  (29.5 s, 2 samples)

File Copy 1024 bufsize 2000 maxblocks    129538.0 KBps (30.0 s, 2 samples)

File Copy 256 bufsize 500 maxblocks      40792.2 KBps (30.0 s, 2 samples)

File Copy 4096 bufsize 8000 maxblocks    325214.2 KBps (30.0 s, 2 samples)

Pipe Throughput               271265.0 lps  (10.0 s, 7 samples)

Pipe-based Context Switching         64658.0 lps  (10.0 s, 7 samples)

Process Creation                831.6 lps  (30.0 s, 2 samples)

Shell Scripts (1 concurrent)          1785.6 lpm  (60.0 s, 2 samples)

Shell Scripts (8 concurrent)          370.0 lpm  (60.1 s, 2 samples)

System Call Overhead            1007757.5 lps  (10.0 s, 7 samples)

System Benchmarks Index Values        BASELINE    RESULT  INDEX

Dhrystone 2 using register variables     116700.0  6077940.3  520.8

Double-Precision Whetstone            55.0    995.3  181.0

Execl Throughput                 43.0    294.0   68.4

File Copy 1024 bufsize 2000 maxblocks     3960.0   129538.0  327.1

File Copy 256 bufsize 500 maxblocks      1655.0   40792.2  246.5

File Copy 4096 bufsize 8000 maxblocks     5800.0   325214.2  560.7

Pipe Throughput                12440.0   271265.0  218.1

Pipe-based Context Switching          4000.0   64658.0  161.6

Process Creation                126.0    831.6   66.0

Shell Scripts (1 concurrent)           42.4    1785.6  421.1

Shell Scripts (8 concurrent)           6.0    370.0  616.6

System Call Overhead             15000.0  1007757.5  671.8

                                 ========

System Benchmarks Index Score                     264.7

Linode 1GB的执行结果：

========================================================================

 BYTE UNIX Benchmarks (Version 5.1.3)

 System: li715-76: GNU/Linux

 OS: GNU/Linux -- 3.15.3-x86_64-linode44 -- #1 SMP Tue Jul 1 15:51:04 EDT 2014

 Machine: x86_64 (x86_64)

 Language: en_US.utf8 (charmap=&amp;quot;UTF-8&amp;quot;, collate=&amp;quot;UTF-8&amp;quot;)

 CPU 0: Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz (5602.5 bogomips)

     Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET

 11:50:02 up 8 days, 19:34, 1 user, load average: 0.08, 0.09, 0.51; runlevel 2

------------------------------------------------------------------------

Benchmark Run: Sun Jul 13 2014 11:50:02 - 12:18:09

1 CPU in system; running 1 parallel copy of tests

Dhrystone 2 using register variables    29753198.8 lps  (10.0 s, 7 samples)

Double-Precision Whetstone           3944.6 MWIPS (9.9 s, 7 samples)

Execl Throughput                1619.4 lps  (30.0 s, 2 samples)

File Copy 1024 bufsize 2000 maxblocks    319724.7 KBps (30.0 s, 2 samples)

File Copy 256 bufsize 500 maxblocks      82858.8 KBps (30.0 s, 2 samples)

File Copy 4096 bufsize 8000 maxblocks    957790.3 KBps (30.0 s, 2 samples)

Pipe Throughput               458770.0 lps  (10.0 s, 7 samples)

Pipe-based Context Switching         74230.2 lps  (10.0 s, 7 samples)

Process Creation                2963.8 lps  (30.0 s, 2 samples)

Shell Scripts (1 concurrent)          3719.2 lpm  (60.0 s, 2 samples)

Shell Scripts (8 concurrent)          494.0 lpm  (60.1 s, 2 samples)

System Call Overhead             474360.8 lps  (10.0 s, 7 samples)

System Benchmarks Index Values        BASELINE    RESULT  INDEX

Dhrystone 2 using register variables     116700.0  29753198.8  2549.5

Double-Precision Whetstone            55.0    3944.6  717.2

Execl Throughput                 43.0    1619.4  376.6

File Copy 1024 bufsize 2000 maxblocks     3960.0   319724.7  807.4

File Copy 256 bufsize 500 maxblocks      1655.0   82858.8  500.7

File Copy 4096 bufsize 8000 maxblocks     5800.0   957790.3  1651.4

Pipe Throughput                12440.0   458770.0  368.8

Pipe-based Context Switching          4000.0   74230.2  185.6

Process Creation                126.0    2963.8  235.2

Shell Scripts (1 concurrent)           42.4    3719.2  877.2

Shell Scripts (8 concurrent)           6.0    494.0  823.3

System Call Overhead             15000.0   474360.8  316.2

                                 ========

System Benchmarks Index Score                     587.5

Radxa基本参数：











                    System













                    CPU





                    ARM Cortex-A9 quad core @ 1.6Ghz









                    Memory





                    2GB DDR3 @ 800Mhz









                    Storage





                    8GB Nand Flash











Linode 1GB基本参数：









                System













                CPU





                单核Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz









                Memory





                1GB









                Storage





                24GB SSD Storage









可以看出，表面参数占优的ARM板子Radxa还是输给了Linode的VPS。不过，需要说明的是，VPS都是多个共用一个服务器资源，所以，测试结果并不代表可以使用到这么多资源
</code></pre><p># </p>
<pre><code>UnixBench测试结果的解释

1. ***********************

Dhrystone 2 using register variables 1 2 3 4 5 6 7 8 9 10

此项产生于 1984，测试 string handling，因为没有浮点操作，所以深受软件和硬件设计（hardware and software design）、编译和链接（compiler and linker options）、代码优化（code optimazaton）、对内存的cache（cache memory）、等待状态（wait states）、整数数据类型（integer data types）的影响

2. ********************

Double-Precision Whetstone 1 2 3 4 5 6 7 8 9 10

这一项测试浮点数操作的速度和效率。这一测试包括几个模块，每个模块都包括一组用于科学计算的操作。覆盖面很广的一系列 c 函数：sin，cos，sqrt，exp，log 被用于整数和浮点数的数学运算、数组访问、条件分支（conditional branch）和程序调用。此测试同时测试了整数和浮点数算术运算。

3. **************

System Call Overhead 1 2 3 4 5 6 7 8 9 10

测试进入和离开操作系统内核的代价，即一次系统调用的代价。它利用一个反复地调用 getpid 函数的小程序达到此目的。

4. ***************

Pipe Throughput 1 2 3 4 5 6 7 8 9 10

管道（pipe）是进程间交流的最简单方式，这里的 Pipe throughtput 指的是一秒钟内一个进程可以向一个管道写 512 字节数据然后再读回的次数。需要注意的是，pipe throughtput 在实际编程中没有对应的真实存在。

5. *************

Pipe-based Context Switching 1 2 3 4 5 6 7 8 9 10

这个测试两个进程（每秒钟）通过一个管道交换一个不断增长的整数的次数。这一点很向现实编程中的一些应用，这个测试程序首先创建一个子进程，再和这个子进程进行双向的管道传输。

6. ************

Process Creation 1 2 3

测试每秒钟一个进程可以创建子进程然后收回子进程的次数（子进程一定立即退出）。process creation 的关注点是新进程进程控制块（process control block）的创建和内存分配，即一针见血地关注内存带宽。一般说来，这个测试被用于对操作系统进程创建这一系统调用的不同实现的比较。

7. ***********

Execl Throughput 1 2 3

此测试考察每秒钟可以执行的 execl 系统调用的次数。 execl 系统调用是 exec 函数族的一员。它和其他一些与之相似的命令一样是 execve（） 函数的前端。

8. ***********

File copy

测试从一个文件向另外一个文件传输数据的速率。每次测试使用不同大小的缓冲区。这一针对文件 read、write、copy 操作的测试统计规定时间（默认是 10s）内的文件 read、write、copy 操作次数。

9. **********

Shell Scripts

测试一秒钟内一个进程可以并发地开始一个 shell 脚本的 n 个拷贝的次数，n 一般取值 1，2，4，8.（我的系统上取 1， 8， 16）。这个脚本对一个数据文件进行一系列的变形操作（transformation）

10. *********

Arithmetic Test

11. *************

Arithoh 1 2 3

12. *************

C Compiler Throughput 1 2 3

13. *************

Dc: sqrt(2) to 99 decimal places 1 2 3

sqrt（2） 到 99 位小数

14. *************

Recursion Test--Tower of Hanoi 1 2 3

15. *************

join: file 2 is not in sorted order

join: file 1 is not in sorted order
</code></pre><p>### </p>
<pre><code>参考
</code></pre><ul>
<li><p><a href="https://code.google.com/p/byte-unixbench/" target="_blank" rel="external">https://code.google.com/p/byte-unixbench/</a></p>
</li>
<li><p><a href="http://www.ddhow.com/blog/unixbench.html" target="_blank" rel="external">http://www.ddhow.com/blog/unixbench.html</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/share-everything-i-do/articles/3179213.html" target="_blank" rel="external">http://www.cnblogs.com/share-everything-i-do/articles/3179213.html</a></p>
</li>
<li><p><a href="http://lbs.sourceforge.net/" target="_blank" rel="external">http://lbs.sourceforge.net/</a></p>
<p>EndFragment</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Origami初入门]]></title>
      <url>https://atjason.com/559.html</url>
      <content type="html"><![CDATA[<p>最近粗粗得了解了Origami，这里简要记录过程及对Origami的理解</p>
<p># </p>
<pre><code>Origami是什么

一句话，Origami是一款用来设计高保真、可交互产品原型的工具

XCode是Mac进行开发的工具，Quartz Composer（以下简称QC）是基于XCode进行UI开发、原型设计的工具，Origami是Facebook对QC封装后得到的Patch库，降低了QC的使用门槛，使QC的界面变得更加友好，更加适合进行移动App的界面设计
</code></pre><p># </p>
<pre><code>Paper来背书

2014年初，Facebook重磅推出一款拥有超华丽界面的新闻聚合应用：Paper，它有许多复杂的动画：在一个屏幕内翻页和切换主题，滑动移动版块提取新闻，灵活的互动让用户仿佛感觉不到屏幕上玻璃的存在，富有诗情画意的3D效果更是给App增加了无限立体感。而这些交互都是使用Origami进行原型设计，足见其强大

more
</code></pre><p># </p>
<pre><code>Origami的优缺点

优点
</code></pre><ul>
<li><p>交互设计功能强大</p>
</li>
<li><p>基础操作简便，拖放即可</p>
</li>
<li><p>适合进行移动App原型设计</p>
<p>缺点</p>
</li>
<li><p>学习门槛高</p>
</li>
<li><p>只能在Mac上进行设计</p>
</li>
<li><p>设计出的原型只能在Mac上体验，而不能在手机等目标设备上运行，这一点个人觉得效果大大折扣</p>
</li>
</ul>
<p># </p>
<pre><code>Origami的学习渠道
</code></pre><ul>
<li><p>Origami官方<a href="http://facebook.github.io/origami/examples/" target="_blank" rel="external">Examples</a>:</p>
</li>
<li><p>Facebook上<a href="https://www.facebook.com/groups/origami.community/" target="_blank" rel="external">Origami群组</a>：</p>
</li>
<li><p>网上其它人发布的教程，如<a href="http://www.pasanpremaratne.com/2014/03/15/UI-Prototyping-with-Quartz-Composer-and-Origami/" target="_blank" rel="external">这篇</a></p>
</li>
<li><p>网上高手发布的例子，如<a href="https://dribbble.com/search?q=origami+quartz" target="_blank" rel="external">这篇</a></p>
</li>
</ul>
<p>### </p>
<pre><code>引用
</code></pre><ul>
<li><p><a href="http://facebook.github.io/origami/" target="_blank" rel="external">http://facebook.github.io/origami/</a></p>
</li>
<li><p><a href="https://github.com/facebook/origami" target="_blank" rel="external">https://github.com/facebook/origami</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在Linode Ubuntu 14.04 64位系统中安装AMH碰到的问题及解决办法]]></title>
      <url>https://atjason.com/545.html</url>
      <content type="html"><![CDATA[<p>刚买了个Linode的VPS，尝试安装AMH，碰到以下两个问题导致安装失败：</p>
<pre><code>1，
</code></pre><p>gcc -DHAVE_CONFIG_H -DEXEEXT=\&quot;\&quot; -I. -I.. -I../lib  -I../intl -DDEPENDS_ON_LIBICONV=1 -DDEPENDS_ON_LIBINTL=1   -g -O2 -c progname.c</p>
<p>In file included from progname.c:26:0:</p>
<p>./stdio.h:1010:1: error: &acirc;&euro;&tilde;gets&acirc;&euro;&trade; undeclared here (not in a function)</p>
<p>_GL_WARN_ON_USE (gets, &quot;gets is a security hole - use fgets instead&quot;);</p>
<p>^</p>
<p>make[2]: <em>*</em> [progname.o] Error 1</p>
<p>make[2]: Leaving directory `/home/amh_install/packages/untar/libiconv-1.14/srclib&#39;</p>
<pre><code>这个问题已经有解决办法；[http://amysql.com/bbs/forum.php?mod=viewthread&amp;amp;tid=2610](http://amysql.com/bbs/forum.php?mod=viewthread&amp;amp;tid=2610)

more

2，
</code></pre><p>checking for png_write_image in -lpng… yes</p>
<p>If configure fails try –with-xpm-dir=&lt;DIR&gt;</p>
<p>configure: error: freetype.h not found.</p>
<p>make: <em>*</em> No targets specified and no makefile found.  Stop.</p>
<p>make: <em>*</em> No rule to make target `install&#39;.  Stop.</p>
<p>cp: cannot create regular file &acirc;&euro;&tilde;/usr/local/php/etc/php-fpm.conf&acirc;&euro;&trade;: No such file or directory</p>
<p>cp: cannot create regular file &acirc;&euro;&tilde;/usr/local/php/etc/php-fpm-template.conf&acirc;&euro;&trade;: No such file or diorytt</p>
<p>mkdir: cannot create directory &acirc;&euro;&tilde;/usr/local/php/etc/fpm&acirc;&euro;&trade;: No such file or directory</p>
<p>mkdir: cannot create directory &acirc;&euro;&tilde;/usr/local/php/var/run/pid&acirc;&euro;&trade;: No such file or directory</p>
<p>touch: cannot touch &acirc;&euro;&tilde;/usr/local/php/etc/fpm/amh.conf&acirc;&euro;&trade;: No such file or directory</p>
<p>./amh.sh: line 371: /usr/local/php/sbin/php-fpm: No such file or directory</p>
<p>[OK] php-5.3.27 install completed.</p>
<pre><code>查看vi php-5.3.27/configure
</code></pre><p>for i in $PHP_FREETYPE_DIR /usr/local /usr; do</p>
<pre><code>if test -f &amp;quot;$i/include/freetype2/freetype/freetype.h&amp;quot;; then

  FREETYPE2_DIR=$i

  FREETYPE2_INC_DIR=$i/include/freetype2

  break

fi
</code></pre><p>done</p>
<pre><code>可以看到脚本假定freetype的相对路径为&amp;ldquo;/include/freetype2/freetype/freetype.h&amp;rdquo;，但实际上系统路径为&amp;ldquo;/include/freetype2/freetype.h&amp;rdquo;。可以相应的修改脚本，去除一层&amp;quot;freetype&amp;quot;，或者在系统路径下临时多生成一层路径，并将相应的文件复制过去
</code></pre>]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Netgear WNDR3800 WPS按钮切换LED灯]]></title>
      <url>https://atjason.com/524.html</url>
      <content type="html"><![CDATA[<p>Netgear WNDR3800前面板的灯看起来还是挺上档次的，不过放在客厅一直闪，总觉得晃眼，故而准备使用前面板的WPS按钮来控制LED灯的亮灭。</p>
<h1 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h1><p>创建/root/led.sh脚本，内容如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment"># const</span></div><div class="line">ENABLE=<span class="string">"enable"</span></div><div class="line">DISABLE=<span class="string">"disable"</span></div><div class="line">TOGGLE=<span class="string">"toggle"</span></div><div class="line"></div><div class="line"><span class="comment"># read parameter</span></div><div class="line">ope=</div><div class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">"edt"</span> arg</div><div class="line"><span class="keyword">do</span></div><div class="line">        <span class="keyword">case</span> <span class="variable">$arg</span> <span class="keyword">in</span></div><div class="line">             e)</div><div class="line">                ope=<span class="variable">$ENABLE</span></div><div class="line">		;;</div><div class="line">             d)</div><div class="line">                ope=<span class="variable">$DISABLE</span></div><div class="line">                ;;</div><div class="line">             t)</div><div class="line">                ope=<span class="variable">$TOGGLE</span></div><div class="line">		;;</div><div class="line">             ?)</div><div class="line">            	<span class="built_in">echo</span> <span class="string">"unknown argument"</span></div><div class="line">        	<span class="built_in">exit</span> 1</div><div class="line">        	;;</div><div class="line">        <span class="keyword">esac</span></div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment"># check operator</span></div><div class="line"><span class="keyword">if</span> [[ -z <span class="variable">$ope</span> ]]; <span class="keyword">then</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"Miss operator!"</span></div><div class="line">	<span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$ope</span>"</span> == <span class="string">"<span class="variable">$TOGGLE</span>"</span> ]; <span class="keyword">then</span></div><div class="line">	<span class="comment"># read current led status</span></div><div class="line">        cur_state=`swconfig dev rtl8366s port 1 get led`</div><div class="line">	</div><div class="line">	<span class="keyword">if</span> [ <span class="string">"<span class="variable">$cur_state</span>"</span> == <span class="string">"0"</span> ]; <span class="keyword">then</span></div><div class="line">		ope=<span class="variable">$ENABLE</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		ope=<span class="variable">$DISABLE</span></div><div class="line">	<span class="keyword">fi</span></div><div class="line"><span class="keyword">fi</span> </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># check command</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$ope</span>"</span> == <span class="string">"<span class="variable">$DISABLE</span>"</span> ]; <span class="keyword">then</span></div><div class="line">	<span class="comment"># turn on power green led                                           </span></div><div class="line">        <span class="built_in">echo</span> 0 &gt; /sys/class/leds/netgear\:green\:power/brightness         </div><div class="line">        <span class="built_in">echo</span> 0 &gt; /sys/class/leds/netgear\:orange\:power/brightness	</div><div class="line"></div><div class="line">	<span class="comment"># turn off all group 1 (i.e., green) and group 2 (i.e., orange) leds</span></div><div class="line">	swconfig dev rtl8366s port 1 <span class="built_in">set</span> led 0</div><div class="line">	swconfig dev rtl8366s port 2 <span class="built_in">set</span> led 0</div><div class="line">	</div><div class="line">	<span class="comment"># USB</span></div><div class="line">	<span class="built_in">echo</span> 0 &gt; /sys/class/leds/netgear\:green\:usb/brightness</div><div class="line"></div><div class="line">	<span class="comment"># 2.4GHz</span></div><div class="line">	<span class="built_in">echo</span> 0 &gt; /sys/class/leds/ath9k-phy0/brightness</div><div class="line">	<span class="comment"># 5GHz</span></div><div class="line">	<span class="built_in">echo</span> 0 &gt; /sys/class/leds/ath9k-phy1/brightness</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$ope</span>"</span> == <span class="string">"<span class="variable">$ENABLE</span>"</span> ]; <span class="keyword">then</span></div><div class="line">	<span class="comment"># turn on power green led</span></div><div class="line">	<span class="built_in">echo</span> 128 &gt; /sys/class/leds/netgear\:green\:power/brightness</div><div class="line">	<span class="built_in">echo</span> 0 &gt; /sys/class/leds/netgear\:orange\:power/brightness</div><div class="line"></div><div class="line">	<span class="comment"># turn off all group 1 (i.e., green) and group 2 (i.e., orange) leds</span></div><div class="line">	<span class="comment"># turn on all group 1 (i.e., green) and group 2 (i.e., orange) leds</span></div><div class="line">	swconfig dev rtl8366s port 1 <span class="built_in">set</span> led 6</div><div class="line">	swconfig dev rtl8366s port 2 <span class="built_in">set</span> led 9</div><div class="line">                      </div><div class="line">        <span class="comment"># USB                                            </span></div><div class="line">        <span class="built_in">echo</span> 128 &gt; /sys/class/leds/netgear\:green\:usb/brightness  </div><div class="line">                                 </div><div class="line">        <span class="comment"># 2.4GHz                                                   </span></div><div class="line">        <span class="built_in">echo</span> 128 &gt; /sys/class/leds/ath9k-phy0/brightness             </div><div class="line">        <span class="comment"># 5GHz                                                    </span></div><div class="line">        <span class="built_in">echo</span> 128 &gt; /sys/class/leds/ath9k-phy1/brightness </div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>目前这一脚本中控制全部LED灯：电源、2.4GHz、5GHz、USB、WAN、LAN</p>
<p>测试脚本是否正常工作</p>
<ul>
<li>点亮LED灯 <code>/root/led.sh -e</code></li>
<li>熄灭LED灯 <code>/root/led.sh -d</code></li>
<li>切换LED灯 <code>/root/led.sh -t</code></li>
</ul>
<h1 id="接入按钮事件"><a href="#接入按钮事件" class="headerlink" title="接入按钮事件"></a>接入按钮事件</h1><p>在/etc/hotplug.d位置创建一个目录，名为button，然后在/etc/hotplug.d/button下创建名为01-radio-toggle的文件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$BUTTON</span>"</span> = <span class="string">"wps"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$ACTION</span>"</span> = <span class="string">"pressed"</span> ]; <span class="keyword">then</span></div><div class="line">        ( sleep 1; /root/led.sh -t ) &amp;</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>测试：按下WPS按钮就可以切换前面板中的部分LED灯了</p>
<h1 id="开机设置默认值"><a href="#开机设置默认值" class="headerlink" title="开机设置默认值"></a>开机设置默认值</h1><p>如果开机就希望LED灯熄灭，可以使用crontab：#crontab -e</p>
<p>添加如下命令</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># turn off led</span></div><div class="line">@reboot /root/led.sh <span class="_">-d</span></div></pre></td></tr></table></figure>
<p>参考</p>
<ul>
<li><a href="http://wiki.openwrt.org/toh/netgear/wndr3700" target="_blank" rel="external">http://wiki.openwrt.org/toh/netgear/wndr3700</a></li>
<li><a href="http://wiki.openwrt.org/doc/uci/system" target="_blank" rel="external">http://wiki.openwrt.org/doc/uci/system</a></li>
<li><a href="http://blog.xieyc.com/how-to-setup-after-upgrading-netgear-wndr3700-to-openwrt/" target="_blank" rel="external">http://blog.xieyc.com/how-to-setup-after-upgrading-netgear-wndr3700-to-openwrt/</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Radxa折腾小记]]></title>
      <url>https://atjason.com/519.html</url>
      <content type="html"><![CDATA[<p>前段时间折腾了Radxa开发板，一直没时间整理，怕再不记下就忘了，粗略流水账如下</p>
<h1 id="从开发板说起"><a href="#从开发板说起" class="headerlink" title="从开发板说起"></a>从开发板说起</h1><p>要说Radxa，还真得从开发板说起。要说开发板，还得从电脑说起。说起电脑，我们的印象基本是台式机、笔记本，构成上主要包含屏幕、键盘、鼠标、音箱、还有最重要的主机，主机内包含CPU、内存、显卡、硬盘等核心组件</p>
<p>粗俗的说，和电脑相比，开发板可以理解为精简的主机，它也包含核心的CPU、内存、显卡、存储器（不同于硬盘，通常是Flash存储），但没有屏幕、键盘、鼠标等外围配件，不过没关系，开发板上通常有丰富的接口，可以外接屏幕、键盘、鼠标等配件，甚至是音箱、摄像头、红外遥控器、蓝牙配件等等。加上这些配件，开发板就能组成功能完善的电脑</p>
<p>那为什么不用电脑而用开发板呢？因为开发板有它独特的优势：</p>
<ul>
<li><p>体积小。像Raspberry Pi这样的开发板仅有信用卡大小，这使得开发板非常适合嵌入式开</p>
</li>
<li><p>功耗低。一般不超过3W，而笔记本待机一般在60W，长年累月用下来，电费不是个小数目。关键是，功耗低就可以使用更轻便的电源、待机时间更</p>
</li>
<li><p>定制性高。一般的电脑只包含少数通常的接口，比如USB。而开发板则更多，比如GPIO。这些丰富的接口使得开发板提供了丰富的想像空间，比如遥控飞机、自动浇花系统等等</p>
</li>
</ul>
<p>在开发板的圈子里，Raspberry Pi应该是名气比较大的，最关键是其发展成熟，有丰富的社区、文档、实例支持，学习起来莫名其妙的问题少。但最大的问题是性能较差，仅有单核700MHz的CPU和512M的内存，跑起Linux及应用来比较吃力</p>
<p>进而，我将目光转向性能更强的开发板。其实，了解之后发现，高端开发板也大有板在，像三星、Intel这些国外牛轰轰的公司都有自己的高端的板子，不过价格也是高端，跟买一台入门笔记本也差不多</p>
<p>为了性价比，将目光又转回国内，毕竟堆硬件这种思路国内还是很盛行的。果不其然，国内这一圈子也很火热，一番比较之后（比较这篇文章：几款高端大气的ARM开发板），选择了Radxamore</p>
<h1 id="Radxa由来"><a href="#Radxa由来" class="headerlink" title="Radxa由来"></a>Radxa由来</h1><p>Radxa是怎么来的呢？对其创始人汤亮的<a href="http://www.csdn.net/article/2014-03-13/2818753-from-cubieboard-to-radxa-toms-hardware-startup" target="_blank" rel="external">这篇采访文章</a>说得比较清楚了，这里摘录一二：</p>
<blockquote>
<p>2010年，他从华中科技大学毕业，曾在Imagination Technology和全志科技工作，做过外贸，也曾经在山寨平板产线上调试过固件。Raspberry Pi和一款名为MK802的USB便携电脑点醒了他，他与四名老同事聚在一起，开发了曾在众筹平台Indiegogo获得9.5万美元融资的Cubieboard。现在，他再度出发，与一群85后的年轻人和一位有着丰富的大公司管理经验的“老兵”杨博士，共同组建了 radxa。这就是前Cubieboard创始人，现radxa（瑞莎）创始人汤亮</p>
</blockquote>
<p>之所以选择Radxa，还有一个内心的原因，就是支持创业。即便我目前没有创业，也希望其他创业者能够成功，出钱买他们的产品（RMB599），便是对其最直接的支持与帮助</p>
<h1 id="Radxa功能与性能"><a href="#Radxa功能与性能" class="headerlink" title="Radxa功能与性能"></a>Radxa功能与性能</h1><p>说到这一点，又要从<a href="http://radxa.com/specification/" target="_blank" rel="external">Radxa官网</a>搬数据了：</p>
<p>Model radxa rock</p>
<ul>
<li><p>System</p>
<ul>
<li><p>CPU ARM Cortex-A9 quad core @ 1.6Gh</p>
</li>
<li><p>Memory 2GB DDR3 @ 800Mh</p>
</li>
<li><p>Storage 8GB Nand Flash, Micro-SD SDXC up to 128GB</p>
</li>
</ul>
</li>
<li><p>Display and Graphics</p>
<ul>
<li><p>GPU Mali400-mp4@533Mhz, OpenGL ES 2.</p>
</li>
<li><p>Digital Video HDMI 1.4 up to 1080p@60h</p>
</li>
<li><p>Analog Video AV output</p>
</li>
</ul>
</li>
<li><p>Network</p>
<ul>
<li><p>LAN 10/100M Ethernet por</p>
</li>
<li><p>WIFI 150Mbps 802.11b/g/n with antenn</p>
</li>
<li><p>Bluetooth Bluetooth 4.0</p>
</li>
</ul>
</li>
<li><p>I/O</p>
<ul>
<li><p>Audio S/PDIF, headphone jac</p>
</li>
<li><p>USB HOST 2 USB 2.0 standard A typ</p>
</li>
<li><p>USB OTG USB OTG micro-USB connecto</p>
</li>
<li><p>Serial Serial Console for debuggin</p>
</li>
<li><p>IR Support self defined IR remot</p>
</li>
<li><p>Key 1 power key, 1 recovery key, 1 reset key</p>
</li>
</ul>
</li>
<li><p>Other</p>
<ul>
<li><p>Led 3 programable led</p>
</li>
<li><p>RTC Support power off alar</p>
</li>
<li><p>Extend header 80 pins including GPIO, I2C, SPI, Line in, USB 2.0, PWM, ADC, LCD, etc</p>
</li>
</ul>
</li>
</ul>
<p>4核1.6Ghz的CPU，2G内存，这几乎可以干掉我那台08年的笔记本了。另外可以看到Radxa还有Wifi、蓝牙4.0、红外、80个GPIO等接口，理论上可以做很多事情了</p>
<h1 id="Radxa学习渠道"><a href="#Radxa学习渠道" class="headerlink" title="Radxa学习渠道"></a>Radxa学习渠道</h1><p>学习渠道很重要，就像先前说的，Raspberry Pi的成功，很大程度上原由其成熟的社区，正所谓有人的地方才有江湖，才能把东西做好。与其相比，Radxa就显得很冷清，目前主要的学习渠道包括官网、Google Group、论坛、QQ群。而且，其文档还是很匮乏的。举个例子，我当时尝试使用GPIO结合温度传感器监测Radxa板子温度，本来是件很简单的事情，结果因为愣是得不到足够的关于GPIO的文档而放弃。可见一斑。不过，说话其QQ群还是很活跃的，平均每天百十条消息，假以时日，相信还是能发展起来的</p>
<h1 id="Radxa目前被用来做什么"><a href="#Radxa目前被用来做什么" class="headerlink" title="Radxa目前被用来做什么"></a>Radxa目前被用来做什么</h1><p>说了这么多，到底用Radxa做什么呢？Radxa买来之后，装上了Ubuntu服务器版，其实是对ARM系统适配的Liano系统。之后就可以做任何Linux可以做的事，比如</p>
<ul>
<li><p>满足夙愿。很早就折腾过Linux，也折腾过Linux内核定制，一直想有个常开的Linux环境，不断累积对Linux的经验，想起来时就可以去玩</p>
</li>
<li><p>Web服务器。虽然在AWS、Linode上有服务器，不过毕竟放着需要保证可靠性的网站，不敢随意折腾。而作为专门用来折腾的开发板就不同的，想怎么折腾就怎么折</p>
</li>
<li><p>PPTP服务器。可以远程到家里的网络环境下，这是做很多事的基础。比如，在外面想给家里的路由器开个端口转发，怎么办？除了路由器可以外网访问（有安全风险），VPN是不错的方</p>
</li>
<li><p>SVN/Git服务器。总有一些文档需要保存历史版本、比较不同版本的区别，又不希望作为开源放在网上，搭个私有的服务器是比较好的选</p>
</li>
<li><p>私有云。公有云的好处大家都知道，但也有其不好的地方：内容被政府监控、安全性依赖于对方服务器、容量及价格问题。自建私有云，可以有更多的可定制</p>
</li>
<li><p>NAS服务器。组个家庭的文件共享中心，这个其实和私有云有重叠的部分，并且有USB接口的路由器也可以实现这一功</p>
</li>
<li><p>Linux编译、测试环境。虽然性能毕竟不强，但没关系，我可以24小时编译啊，又不费</p>
</li>
<li><p>等等，取决于你的想像能力和动手能力</p>
</li>
</ul>
<h1 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h1><p>总的来说，比较满意Radxa这个开发板，既可以是折腾的东西，也可以是积累的落脚点，没事摩挲一下，也有种IT男的满足感，像是小男孩的玩具，也像是小女孩不断摆弄的芭比娃娃</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[路由器折腾小记]]></title>
      <url>https://atjason.com/512.html</url>
      <content type="html"><![CDATA[<p>近段时间折腾路由器，小记一下</p>
<h1 id="为什么要折腾路由器？"><a href="#为什么要折腾路由器？" class="headerlink" title="为什么要折腾路由器？"></a>为什么要折腾路由器？</h1><pre><code>之所以要折腾，自然是现在的路由器不能满足需求。之前用的是TP LINK 54M的无线路由器，4年前买的，想想也知道淘汰得差不多了。话说路由器确实是个耐用的东西，在电子产品中能用超过4年，绝对是老年级的，也说明这是个小众市场，毕竟淘汰速度慢

到底哪些方面不给力呢？
</code></pre><ul>
<li><p>不稳定。尤其是无线方面，经常莫名其妙得连接不上，拔电源重启后就一切正常。估计是持续运行时间过长导致内部软件出问题</p>
</li>
<li><p>信号覆盖不强。主要指的就是穿墙能力了，路由器放客厅，在卧室信号就很弱，竟然还没有隔壁家无线信号强，这个太无语了，忍着别人家的辐射却上不了自家的网，想想就郁闷</p>
</li>
<li><p>翻墙不方便。这其实是最主要的原因。随着本界政府对大陆局域网建设步伐的加速，其行径越来越令人发指，越来越多的网站无法访问，实在忍无可忍</p>
</li>
</ul>
<h1 id="软件：路由器之魂"><a href="#软件：路由器之魂" class="headerlink" title="软件：路由器之魂"></a>软件：路由器之魂</h1><pre><code>所谓折腾，其实主要是指折腾软件，毕竟折腾硬件现在还没经验。而软件，在路由器这一领域更多的称之为固件、ROM。在可折腾的固件榜单中，靠前的自然是Open WRT, DD WRT, tomato等等，其外还有华硕ROM之类的。经过简单比较后，选择了自己相对较熟悉的Open WRT 什么是Open WRT？这一点我就不再拾人牙慧，大家可以到网上简单一搜便可得知。比如[这一篇](http://baike.baidu.com/view/1671581.htm)和[这一篇](http://www.dz3w.com/mcu/linux/0075344.html)，Open WRT的由来还有一段趣闻哦，不妨一看 more
</code></pre><h1 id="硬件：软件之基础"><a href="#硬件：软件之基础" class="headerlink" title="硬件：软件之基础"></a>硬件：软件之基础</h1><pre><code>要根据软件来选硬件（也即根据固件来选择路由器），而不是反过来，不然就是路由器折腾你、而非你折腾路由器了。Open WRT官方支持哪些路由器呢？简单，到这个网址上一看便知：[http://wiki.openwrt.org/toh/start](http://wiki.openwrt.org/toh/start)

不过，打开网页你会发现，上面的列表长得吓人。怎么选呢？几个方面
</code></pre><ul>
<li><p>选能买得到的。因为一些已经不卖了，一些不在国内卖。说到这时忍不住要吐槽一些国内路由器厂商，比如TP LINK，一些性价比高的、配置说得过去的路由器竟然都不在自己母国卖，在国外的Amazon上倒是卖得挺欢。不知道原因，也不方便开骂，希望不是因为觉得国内的用户人傻钱多好骗，所以就卖些低端货</p>
</li>
<li><p>选配置高的。主要是ROM（也即闪存）高，这个是用来存放软件的地方。然后是RAM（也即内存）高，这个是软件运行时需要的空间。然后是CPU好（频率高、多核）。然后是一些最好支持的功能：千兆网卡、支持无线ac、支持5G无线、支持USB接口等等</p>
</li>
<li><p>选买得起的。或者说买预算内的，因为要烧硬件，几千元的路由器也不少</p>
<pre><code>我选了哪款？Netgear WNDR3800，配置如下：芯片Atheros AR7161、CPU 680Mhz、闪存16M、内存128M、千兆网卡、无线支持802.11 a/b/g/n、支持5G、支持USB接口，唯一遗憾是不支持802.11 ac。之所以选这款是lifetyper君推荐的，自己也觉得不错。关于购买渠道，因为不在国内销售，只能从淘宝买国外的洋垃圾。注：Amazon原价$139.95，淘宝约200+。拿到手后就直接刷了Open WRT官方固件，目前用起来还算顺手
</code></pre></li>
</ul>
<h1 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h1><pre><code>接下来就来到折腾的重点：翻墙。所谓墙，有很多种形式，比如DNS污染、屏蔽IP等等。相对应的，翻墙也有很多种方法。经过比较后，笔者选用的是lifetyper君所给出的[方案](https://github.com/lifetyper/FreeRouter_V2) 该方案核心思路是：在路由器使用VPN括号生成新的网关，利用Dnsmasq的ipset功能，配置哪些域名需要国外DNS服务器解析、哪些使用国内运营商的DNS服务器，哪些域名所对应的IP使用VPN网关访问、哪些使用国内的。这样的方案维护成本低，不需要客户端修改，确实很好用 这里要重点感谢下lifetyper君，他花了大量时间来解决我在折腾过程中碰到的奇奇怪怪的问题，谢谢
</code></pre><h1 id="国内-ldquo-智能-rdquo-路由器"><a href="#国内-ldquo-智能-rdquo-路由器" class="headerlink" title="国内&ldquo;智能&rdquo;路由器"></a>国内&ldquo;智能&rdquo;路由器</h1><pre><code>这里忍不住要818国内所谓的&amp;ldquo;智能&amp;rdquo;路由器。殊不知，你经常听到的极路由、小米路由器等等，其实他们的固件都是基于Open WRT，而一般用户却可能压根不知道，为什么？因为他们从来不会在发布会、官网、广告等场合中提到这一点，反而讳莫如深，甚至威胁用户你如果刷成Open WRT官方固件，路由器就不保修（没错，说的是极路由，买了，不爽；但为了测试，忍住没退货）。明明深深依赖着开源代码，却不尊重开源、不回馈开源、甚至都不宣传开源，这样的行径实在让人不齿
</code></pre><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><pre><code>到目前为止，路由器的折腾告一段落。毕竟我不是这一领域的，不可能花大把的时间来折腾，满足自己的需求即可。不过，还是希望路由器的从业者，在谋求应得商业利益时，能减少用户所需要折腾的时间、精力，做出对用户来说好用、易用的产品。同时，如果你使用开源代码，一定要回馈开源社区
</code></pre>]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[网站搬家小记]]></title>
      <url>https://atjason.com/507.html</url>
      <content type="html"><![CDATA[<p>不知不觉间，这两天网站已经搬了再次家了，可谓飘洋过海、翻山越岭，这里小记下</p>
<h1 id="AWS"><a href="#AWS" class="headerlink" title="AWS"></a>AWS</h1><p>之前网站是搭建上AWS上。提起Amazon AWS这个占据一半以上服务器市场的老大，圈内人士应该无人不知。当时选择AWS的原因很简单：免费。财大气粗的Amazon为了吸引更多的人使用AWS，允许新用户免费使用一年。目前这个活动依然继续：<a href="http://aws.amazon.com/free/" target="_blank" rel="external">http://aws.amazon.com/free/</a></p>
<p>就我的使用体验来说，AWS最大的好处就是稳定，没有碰到过网站不能访问的时候。最大的问题就是慢，一是后台管理页面打开比较慢，基本要翻墙速度才快；二是网站在国内访问速度一般（我的是在日本，据说新加坡的节点会快些），每次进入后台写点什么都要等上半天，可能不同地区的国内用户打开时速度也不见得快</p>
<p>这不，免费的AWS要到期了，是时候考虑换一个快点的主机</p>
<p>more</p>
<h1 id="国内云主机"><a href="#国内云主机" class="headerlink" title="国内云主机"></a>国内云主机</h1><p>为了速度，首先把目光移到国内云主机。经过简单的比较，选择了阿里云主机。我承认，一定程度上是被“阿里”这个牌子给吸引过去的，虽然这是一家什么业务都涉足、经常不务正业的公司</p>
<h1 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h1><p>阿里云为了吸引用户，也有5天的试用机会，不过还要申请，真是小家子气。申请也就罢了，竟然默认是在青岛、而不给用户选择机会；估计是为了给青岛的节点增加人气、降低成本。可是，这也太粗暴了，他也不想想，一旦用得爽了、在服务器上花了大把时间配置后，又需要在杭州等其他节点创建服务器时怎么办？</p>
<p>在一边骂这个脑残、或者说为了商业利益不惜伤害用户利益的做法，一边花钱买了一个月的杭州主机，省得以后真的使用时浪费之前的时间。这里有个插曲，阿里云为了吸引用户，新注册用户在回答几个白痴问题后就可以得到20元代金券。好吧，为了这点钱，我还是屁颠屁颠得回答了问题，35元买了一个月乞丐版。创建主机后第一次访问、配置什么的没什么可说的，一切顺利</p>
<h1 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h1><p>接下来便是万恶的备案。什么是备案？简单得说，政府默认你开网站一定是要干坏事的，那么要开网站首先你要到政府那登记，把你的包括身份证在内的一切信息登记在册，之后一旦你干坏事，很容易就可以把你抓走。什么？执政为民？为人民服务？为人民谋福利？我绝逼不信备案这事给站长带来了什么福利</p>
<p>备案之烦琐简直令人发指，即使是阿里云这种可以代备案的，依然有超过18页的帮助文档：<a href="http://help.aliyun.com/view/13445871.html" target="_blank" rel="external">http://help.aliyun.com/view/13445871.html</a>。好吧，硬着头皮我就上了。其间复杂就不提了，就提个网站名称这一点，其中一条规则是“网站名称不能以纯数字或纯英文命名”。首先不说这句话的漏洞，我纯外星语行吗？好吧，既然咱生活在汉语国家，这条我认。想了半天给自己原来叫“Jason”的名称改为“Jason的果园”，带上其他亲笔签名等信息我就提交了</p>
<p>一天后，阿里云初审没过，理由如下：</p>
<p>“您好，备案信息中网站名称“IT顾问 Jason的果园”填写不正确，个人性质的网站名称不能涉及企业、行业信息，不能以域名命名，不能涉及地名，请您修改。 2：根据工信部规定未备案成功的网站域名禁止进行绑定访问，网站域名：“atjason.com”未备案成功，现却能访问网站，请您在未备案成功暂停域名解析绑定，以方便为您处理，谢谢您的配合。”</p>
<p>看完气不打一处来。经过深深的忧虑之后我毅然决定不再继续献媚政府，凭什么我自己的东西取名还要你同意？我自己的网站能不能访问还要你批准？批你妹，哥不跟你玩了</p>
<h1 id="国外云主机"><a href="#国外云主机" class="headerlink" title="国外云主机"></a>国外云主机</h1><p>接下来自然转回不需要备案的国外云主机。期间阿里云的客服提过，他们在香港也有主机，而且强调不需要备案哦，可惜价格有些高。我之前一直有印象的就是Linode，在网上一番搜索、比较后，还是决定用Linode</p>
<h1 id="Linode"><a href="#Linode" class="headerlink" title="Linode"></a>Linode</h1><p>乞丐版价格比阿里云稍贵，不过配置要比其强很多：内存是其一倍、网速是其N倍、硬盘速度是其N倍。有个插曲是，Linode促销搞充5美元送50美元的活动，就在我注册的前一天结束，心中为50美元默哀5分钟……</p>
<p>Linode一直是主机类中的高大上，价格高、服务好。这次能把价格降到$10每月、还搞大力度的促销，着实不易。除了性能，Linode在主机后台服务上做得也很好。具体不多说，只说一点：备份。Linode可以很容易得给主机备份、不需要关机，简直是无痛。而在阿里云上我压根就没看到备份这俩字。当然，AWS也是支持镜像</p>
<h1 id="AMH"><a href="#AMH" class="headerlink" title="AMH"></a>AMH</h1><p>在网站搬家中，其实功劳最大的是AMH。什么是AMH？简单得说，“国内首个免费开源虚拟主机面板。”更多的，到其官网去了解吧：<a href="http://www.amysql.com/AMH.htm" target="_blank" rel="external">http://www.amysql.com/AMH.htm</a></p>
<p>之前在AWS上的多个网站是通过AWS搭建的，这次搬到Linode后，安装好AMH，只需要一个命令，之前所有的东西就全回来了，注意，是全回来了，包括数据库、虚拟网站、各种配置……太方便了，我忍不住去给他们捐点小钱，却发现现在通道关闭了，以后还是会捐的</p>
<p>据说现在在开发更好用的新版本，期待中</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>好了，说了这么多，其实最想说的是，做网站最重要的是内容。站长大多在后台技术上不那么专业，花在这些外围事情上的时间应当越少越好（花点钱也是应该的），这样才能更专注得做好内容。</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[尝试、沉淀、思考]]></title>
      <url>https://atjason.com/501.html</url>
      <content type="html"><![CDATA[<p>我们时常迷茫，不知道自己该做什么。其实，很少有人在很小的时候就能规划很久以后的路该怎么走；即便有，也略显单调。更多的是在不断试错中摸索</p>
<h1 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h1><p>尝试，关键就是接触新的东西。总在自己的圈子里转，慢慢的也就禁锢其中，失去了解新东西的机会和能力。不断尝试，可以拓展自己的知识面和见识，开拓思路</p>
<p>对内，尝试可以让自己更深刻得了解自己。我们对自己的认识，其实是在对外的沟通、碰撞中进行的。反过来说，我们周围的环境就决定了自己对自己的认识（别说你是先知）。比如，一个人的身体素质可以让他成为足球天才。可如果他从小都没有接触过足球，如何能成？当他接触足球的那一刹那、当他开始与新世界碰撞时，他就发现了另一面的自己</p>
<h1 id="沉淀"><a href="#沉淀" class="headerlink" title="沉淀"></a>沉淀</h1><p>不知道你有没有这样的经历，东做一件事、西做一件事，时间长了很容易消耗自己的心力，让自己变得浮躁；而且反过来觉得自己什么都不擅长，影响积极性，不愿意再尝试，或者也只是浅尝辄止</p>
<p>尝试，要有积累、沉淀的过程，要把尝试后学到的东西，纳入自己的知识体系，真正变成自己的东西；不然它就会像无根的浮萍一样，终会飘走</p>
<p>比如学做菜，今天学一道、明天再学一道，一个月过去，看似学了30多道菜，可是半年、一年以后，可能一个都做不好。如果再次从网上查食谱来做，当时的尝试不就白做了吗？</p>
<p>相反，记下自己做的菜谱（可以在电脑上、手机上、笔记本上，但最好不要只是在大脑中，因为除非你经常操练，不然肯定会忘），不管过去多久，只是看下自己记录的菜谱，就能很快做出来。要知道，看自己记录的东西，和看从网上查到的东西，效果完全是不一样的</p>
<p>而且，在不断的尝试中，不断更新自己的菜谱，才能真正做成自己的私房菜more</p>
<p>另外，当自己在这一领域沉淀到一定程度时，就更容易学到更多东西。就像是学走路很慢，可一旦学会走路、再学跑步，就相对容易了（忽略你是先会跑、再会走的情况）。进而，就会有越做越好、越好就越有信心、越有信心就越做越好…这样的正向循环</p>
<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>我们的精力毕竟有限，因此必须有所取舍、学会聚集。尝试并沉淀后，要记得思考，比如：</p>
<ul>
<li><p>这个新的领域是自己感兴趣的吗</p>
</li>
<li><p>自己的能力模型擅长这个吗</p>
</li>
<li><p>这和自己之前为自己设定的长期规划矛盾吗</p>
</li>
<li><p>自己的长期规划是要为之调整，还是尝试到此为止</p>
</li>
<li><p>等等</p>
</li>
</ul>
<p>道理不辩不明，东西一比较就知道差距。不断的将自己已有的东西和新东西进行比较、思考，就能不断明确什么是自己想要的，不断调整航向，找到越来越适合自己的路</p>
<h1 id="号外：工作与兴趣"><a href="#号外：工作与兴趣" class="headerlink" title="号外：工作与兴趣"></a>号外：工作与兴趣</h1><p>工作之外，最好有自己另外的兴趣，而且最好和工作相差较大。因为总做一件事，时间长了，兴趣肯定会下降、效率变低。这时，除了睡觉这种休息方式外，更积极的休息就是做些其他领域的、自己感兴趣的事，既放松了大脑，也可能会有其他的意外收获。更关键的，这让你的生活有更多的着力点、更容易平衡，而不会因为工作等一方面的挫折就让情绪、生活大起大落</p>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>朋友，如果你眼下正在迷茫，不知道要做什么，不妨尝试下“尝试 -&gt; 沉淀 -&gt; 思考”这三步，即使不能让你一下子看透未来，也能让眼下的生活更加充实</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[蘑菇街分析]]></title>
      <url>https://atjason.com/489.html</url>
      <content type="html"><![CDATA[<h1 id="创始团队及公司"><a href="#创始团队及公司" class="headerlink" title="创始团队及公司"></a>创始团队及公司</h1><p>创始团队多数是从淘宝离职创业的</p>
<p>CEO：陈琪（花名修罗），联合创始人</p>
<ul>
<li><p>2004年浙江大学毕业，陈琪就进入了淘宝，是淘宝UED（用户体验设计）的开创者，后作为产品经理负责多条淘宝核心产品线，并负责淘宝物流等多个新业务的拓</p>
</li>
<li><p>2010年，跟浙大的同窗魏一搏在家里开始创业，先后创办卷豆网和蘑菇街。为了创办蘑菇街，陈琪的代价是放弃了在淘宝的千万期权，然后跟魏一搏各自卖掉一套房子凑齐150万元，作为创业的启动资金</p>
</li>
</ul>
<p>COO：魏一搏，联合创始人</p>
<ul>
<li>与CEO陈琪是大学同学，之前在中兴通讯就职</li>
</ul>
<p>CTO：岳旭强（花名孤独），联合创始人，商家平台负责人</p>
<ul>
<li>曾经是淘宝的首席架构师，超过7年的互联网及电商经验，是陈琪在淘宝相处6年以上的同事</li>
</ul>
<p>CMO：李研珠（花名腓腓）</p>
<ul>
<li><p>营销领域颇有名气的“胖胡斐”，也是陈琪在淘宝相处6年以上的同</p>
</li>
<li><p>2014年6月初因身体健康原因离职</p>
</li>
</ul>
<p>产品经理：志平</p>
<ul>
<li>08年研究生毕业，曾在网易杭州研究院任职高级开发工程师，11年加入蘑菇街</li>
</ul>
<p>公关经理：徐达</p>
<ul>
<li>做过网站运营，曾在天下网商负责BD业务</li>
</ul>
<p>杭州卷瓜网络有限公司</p>
<ul>
<li><p>总部地点：杭州市西湖区天目山路135号玉泉大厦8</p>
</li>
<li><p>成立时间：2010年4月13</p>
</li>
<li><p>员工数：300人左右</p>
</li>
</ul>
<p>经营逻辑：重科技，轻时尚</p>
<p>团队由50%的工程师、30%的运营人员、20%的市场营销、行政、财务人员构成。表面上时尚前卫，骨子里是一家科技型公司，对科技迷恋。超过半数都是技术型人才，是一家依靠科技推动的企业。蘑菇街公关经理徐达用了一句话来概括蘑菇街运营的内在逻辑：“消费者有需求，需求必然产生可执行点，蘑菇街要做的就是在执行点上做出产品，用产品服务用户。”</p>
<p>more</p>
<h1 id="痛点：用户需求与现状"><a href="#痛点：用户需求与现状" class="headerlink" title="痛点：用户需求与现状"></a>痛点：用户需求与现状</h1><p>用户有两类：买家与卖家（文中意同商家）。在商品、在线商城越来越多的情况下，买家更难找到合适的商品，卖家更难将自己的商品呈现给买家，这就是日益严重的痛点，反过来讲，就是越来越突出的需求</p>
<h1 id="产品与方案"><a href="#产品与方案" class="headerlink" title="产品与方案"></a>产品与方案</h1><p>蘑菇街的定位是女性购物入口，专注于时尚女性消费者。它集成SNS的社会化特征，让女性在分享的同时完成购物。公司的核心宗旨就是购物与社区的相互结合，为更多消费者提供更有效的购物决策建议</p>
<p>现在商品与买家对接的方式主要还是搜索，但当商品数量确实很大时，这种获取商品的方式就不见得有效。类似的，Google对信息的搜索能力无可比拟，可是对好友的信息、明星的八卦这样的信息，Facebook、Twitter等其它的平台有合适的呈现与获取方式。因为，需要换种思路来考虑商品与买家的对接方式</p>
<p>开始时，创始人极端地认为，所有的事情都是可以靠机器解决的，人的特征可以完全数据化。所以蘑菇街最初的模式就是通过复杂的算法来向女孩子推荐热门的品类，事实也证明了这套模式的有用性</p>
<p>但后来遇到瓶颈。我们曾希望通过运算给这些姑娘的风格做个分类，可是女孩子变化很快，数据告诉你这个女孩子是职业女性，之前都是买套装，可是突然有一天她可能在哪里看到另一个女生穿着休闲也很漂亮，就会推翻之前的购买习惯，去买些休闲的衣服了。而且仅靠机器可以判断出过去流行的东西，却没有前瞻性。结论是人的干预还是有点用的，因此始引入买手做些推荐</p>
<p>现在，蘑菇街把两者结合起来，用机器去放大人的作用。计划招募大量的买手，给予他们大数据的支持，然后按照数据表现自然上浮或者下沉</p>
<p>另外的就是达人模式。比如，看比较会进行服饰搭配的如何穿衣服，从她们身上获得灵感，进而搜索同类产品，或者干脆在导购页面购买同款</p>
<p>笔者：顾问模式</p>
<p>依然以服饰为例，如果我不太懂得服装搭配，又想找到适合自己的衣服，怎么办呢？直接在商城里搜索恐怕不是好的办法，模仿达人又需要花大量时间。可以考虑的一种思路是，我请一位专门的穿衣顾问，他根据我的身材、对颜色款式的偏好、穿衣的场合等因素为我量身打造穿衣建议，甚至直接推荐购买链接。</p>
<p>注意，这里有个核心是，顾问最重要的价值是提供专业性的建议，最好不要和他推荐的商家有利益上的分配。如果有，也可以，但也应该让买家得到实惠而实现多赢，比如，可以以更低的价格从顾问合作的商家买到商品</p>
<p>题外话：顾问模式在国内并不流行，有多方面的因素，比如缺乏信用体系，用户首先担心的便是顾问和商家联合起来骗钱；再者，国人特有的“关系”思维，凡事找关系，碰到自己不擅长的首先想到的也是找关系，而不是想着花钱请专业的人来帮忙</p>
<h1 id="产品简史"><a href="#产品简史" class="headerlink" title="产品简史"></a>产品简史</h1><ul>
<li><p>2011年2月14日，蘑菇街网站于情人节上</p>
</li>
<li><p>2011年7月和8月，分别推出移动端iPhone版本和Android版</p>
</li>
<li><p>2011年年底，获得了贝塔斯曼、肇信资本、启明创投的两轮逾千万美元投</p>
</li>
<li><p>2012年2月，在一年时间内，注册用户达到600万，日均活跃人数超过160万，日均PV在7000万以</p>
</li>
<li><p>2012年4月，发布ipad版本、WinPhone版</p>
</li>
<li><p>2012年10月，完成C融资，总估值超过2亿美</p>
</li>
<li><p>2012年底，美妆频道上</p>
</li>
<li><p>2013年8月，海外代购平台上线，第一站是韩国代</p>
</li>
<li><p>2013年9月，正式上线开放平台，面向外部商家提供联合登录、商品推送、API调用等功</p>
</li>
<li><p>2014年6月，获D轮超过2亿美元的融资，投后估值10亿美元</p>
</li>
</ul>
<h1 id="市场环境与竞争对手"><a href="#市场环境与竞争对手" class="headerlink" title="市场环境与竞争对手"></a>市场环境与竞争对手</h1><p>起家：蘑菇街最初一个背靠所有交易平台的导购平台，淘宝、当当、拍拍，京东都是它的靠山。从微博手里获得流量，从淘宝手里赚得佣金。</p>
<p>当蘑菇街们的流量大到一定程度时（据说达到淘宝总流量的十分之一），最致命的就是影响到淘宝对商家的广告收入。商家总是趋利的，当他们发现淘宝之外有广告投放价格更低、转化率更高的平台时，自然会减少对淘宝本身平台的广告投放，这就触碰到淘宝的底线，进而招来从导入到支付的全线封杀</p>
<p>对此，蘑菇街们的应付方式也非常一致：自建商城（当然，蘑菇街们官方声明都类似于出于自身发展的长期考虑而转型、升级）。但这就意味着要自建一切商城所必需的基础设施，比如更复杂的资金流管理、更多的买家投诉、更大的运营风险、等等。另一方面，也更重要的是，自建商城就意味着要与淘宝、天猫、京东等已有的在线商城直接竞争，如何找出差异化竞争优势，就是蘑菇街们必要要慎重考虑的事</p>
<p>那蘑菇街们的优势在哪里？</p>
<p>起初，蘑菇街仅仅是导购网站，典型的直接竞争对手是美丽说（蘑菇街和美丽说简单是异卵双生的双胞胎）</p>
<p>后来，自建商城。从引流到淘宝等商城获取分成，到引流到自家商城的商家，蘑菇街及同类产品最核心的竞争力依然是导购，而不是更低的价格、更高的品质、更快的物流、更方便的退换货等等其他方面。蘑菇街们有自己不同的商品呈现方式，进而培养出一批高粘性的用户，这是他们面对已有的在线商城竞争时最重要的底牌</p>
<h1 id="赢利模式"><a href="#赢利模式" class="headerlink" title="赢利模式"></a>赢利模式</h1><p>稍微发散点讲，现在虽然有各式各样的互联网公司，可是主要赢利模式也就那么几种</p>
<ul>
<li><p>广告：如在新浪门户看到的各类广告、百度的竞价排名</p>
</li>
<li><p>虚拟销售：如腾讯的Q币、盛大的游戏点卡、APP Store手机应用收入</p>
</li>
<li><p>实体电子商务：淘宝、京东等网上商城、各类团购网站的实体商品、服务销售</p>
</li>
</ul>
<p>而其中最重要的是广告，主要以如下模式：</p>
<p>CPM (Cost Per 1,000 Impressions)</p>
<ul>
<li><p>按照千人浏览成本付费，假设1000个用户浏览广告，广告主需付出的成本为1元，按照淘宝首页日均6000万的UV，则每天广告成本6万</p>
</li>
<li><p>典型代表：新浪、网易门户广告、QQ面板广告</p>
</li>
<li><p>CPM的广告往往不精准，用户是否有效浏览以及用户是否感兴趣都无法统计，传统的电视广告、媒体广告、户外广告也都是CPM的模式：所以才有一句经典的名言：“99%的广告成本都是被浪费的”</p>
</li>
</ul>
<p>CPC (Cost Per Click)</p>
<ul>
<li><p>按用户的点击次数付费，广告展示不用付费，只有用户对广告感兴趣产生了点击，商户才会承担成</p>
</li>
<li><p>典型代表：淘宝直通车、百度的关键词搜索列表、Google的AdSense等</p>
</li>
</ul>
<p>CPS (Cost Per Sale)</p>
<ul>
<li><p>按成交订单付费，用户看到了、点击了商品，广告主都不用付费，只有产生了实际的订单商户才会承担广告成本，按效果付费，这是商户最愿意接受的模</p>
</li>
<li><p>典型代表：QQ返利、易购、淘宝客等，蘑菇街们等导购网站也是CPS模式</p>
</li>
</ul>
<p>蘑菇街开始时将自己定位为一家导购网站。陈琪给自己员工设定的KPI考核中，最重要的考核指标就是转化率，一是每100个人中有多少人找到了对应的商品，二是每100个人中有多少人达成了交易。战略大方向上将是促成交易、收取佣金。</p>
<p>目前的定位：蘑菇街不是目的地，而是出发地。希望姑娘们闲着没事干，就可以上来刷刷图，了解当下流行元素，学学衣服搭配。不一定要买什么，但把蘑菇街当出发地，就有很多可能性和机会</p>
<h1 id="运维与推广"><a href="#运维与推广" class="headerlink" title="运维与推广"></a>运维与推广</h1><p>目前的成绩单：2011年2月14日蘑菇街上线，截至2014年5月，发展三年半的时间内，蘑菇街已经拥有了超过6900万的注册会员，每天为超过550万的女性消费者提供购物决策建议</p>
<p>蘑菇街用户99%集中在20～26岁的一二线城市女性，客单价120元左右，退货率不到5%，复购率超过50%。</p>
<p>蘑菇街从导购平台转型为社会化电商平台后，2013年11月开始，仅仅两个月，就交出了单月1.2亿元的成绩单，2014年将冲击30亿元的年度目标</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><p>[<a href="http://www.mogujie.com/](http://www.mogujie.com/" target="_blank" rel="external">http://www.mogujie.com/](http://www.mogujie.com/</a></p>
</li>
<li><p>[<a href="http://itjuzi.com/company/2](http://itjuzi.com/company/2" target="_blank" rel="external">http://itjuzi.com/company/2](http://itjuzi.com/company/2</a></p>
</li>
<li><p>[<a href="http://tech.sina.com.cn/i/2014-06-09/02149424695.shtml](http://tech.sina.com.cn/i/2014-06-09/02149424695.shtml" target="_blank" rel="external">http://tech.sina.com.cn/i/2014-06-09/02149424695.shtml](http://tech.sina.com.cn/i/2014-06-09/02149424695.shtml</a></p>
</li>
<li><p>[<a href="http://zixun.3158.cn/20120330/n506333680139090.html](http://zixun.3158.cn/20120330/n506333680139090.html" target="_blank" rel="external">http://zixun.3158.cn/20120330/n506333680139090.html](http://zixun.3158.cn/20120330/n506333680139090.html</a></p>
</li>
<li><p>[<a href="http://baike.baidu.com/view/5255837.htm](http://baike.baidu.com/view/5255837.htm" target="_blank" rel="external">http://baike.baidu.com/view/5255837.htm](http://baike.baidu.com/view/5255837.htm</a></p>
</li>
<li><p>[<a href="http://www.zhihu.com/question/19567268](http://www.zhihu.com/question/19567268" target="_blank" rel="external">http://www.zhihu.com/question/19567268](http://www.zhihu.com/question/19567268</a></p>
</li>
<li><p><a href="http://www.woshipm.com/discuss/40805.html" target="_blank" rel="external">http://www.woshipm.com/discuss/40805.html</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[产品之快]]></title>
      <url>https://atjason.com/484.html</url>
      <content type="html"><![CDATA[<p>经常听到做产品要快、要卡位、快鱼吃慢鱼，可真的要做到快，并非易事</p>
<h2 id="感受需求变化要快"><a href="#感受需求变化要快" class="headerlink" title="感受需求变化要快"></a>感受需求变化要快</h2><p>用户的需求是在不断演化的，也会有突发的、阶跃的需求，要能及时感知需求的变化、以及新的需求</p>
<p>怎么做到呢？一方面是要离用户近，经常听他们抱怨、想要的改进，听他们说最近圈子里开始流行的新东西，听他们说他们的客户的抱怨与新鲜事，总会有坐在办公室里意想不到的收获</p>
<p>另一方面就是要对数据与信息保持敏感，运营监测的数据有哪些和历史数量些微的不匹配，政府开始对政策的变动吹风，最近微博上关于某个话题的讨论开始变多，等等。这些可能都意味着一些变化要发生、或已经发生</p>
<p>比如对于打车软件，最近是不是打车的人变少了？是不是因为最近拼车的人变多了？如果确实捕捉到了拼车有开始成为趋势的苗头，及时在这一点上做好准备、甚至是将重心向其迁移，就不至于在未来的竞争中处于被动</p>
<p>more</p>
<h2 id="内部决策要快"><a href="#内部决策要快" class="headerlink" title="内部决策要快"></a>内部决策要快</h2><p>如果公司内部有复杂的Report Line，要反复开会讨论，每个人都要撇清风险，有关系、没关系的人都要签字决策才能通过，等决策出来，黄花菜都凉了</p>
<p>因而，越是大公司越强调所谓的扁平化，重要的部门、业务干脆独立出来，直接向CEO汇报，当年微信的孵化便是如此。华为更是强调让听得到炮声的人做决策</p>
<h2 id="原型设计要快"><a href="#原型设计要快" class="headerlink" title="原型设计要快"></a>原型设计要快</h2><p>需求明确、决策通过，产品经理就要能快速设计原型，最好在这个阶段就能抓个典型用户过来验证，避免因为图快而走弯路，后期再改成本可就高了</p>
<h2 id="开发迭代要快"><a href="#开发迭代要快" class="headerlink" title="开发迭代要快"></a>开发迭代要快</h2><p>这里的开发不仅指写代码，所有从原型至产品的环节都可涵盖其中，包括界面设计、字符串本地化、甚至是法务部门更新用户许可协议等</p>
<p>不过，软件开发依然是核心，一个很重要的点就是，现有的代码框架要足够好、足够灵活，这样能有好的扩展性，很容易得接入新功能。这就需要长久的积累，不是突击加班就能搞定的</p>
<h2 id="测试验证要快"><a href="#测试验证要快" class="headerlink" title="测试验证要快"></a>测试验证要快</h2><p>自动化测试总是要的吧，不然频繁的版本递交会让质量保证团队疲于奔命。据说，淘宝网站的发布计划在非常时期频繁到秒，这对测试就是非常大的挑战</p>
<p>反之，如果上线上个有漏洞的版本，被用户或竞争对手发现，进而大肆宣传，对产品的品牌形象、用户之间的口碑影响可就大了</p>
<h2 id="上线运维要快"><a href="#上线运维要快" class="headerlink" title="上线运维要快"></a>上线运维要快</h2><p>比如Apple的AppStore，有奇葩的审批制度，提交的时候就要很小心了，如果被打回来修改，耽误的时间就很多了。尤其是产品上线需要多个步骤、要在多个渠道上线，就要有相应的流程，有条不紊，避免在紧张中犯低级错误</p>
<p>运维部门在新功能上线后就要密切关注其影响，比如正面的是不是在线用户数量变多了、在线时长变长了，或者反面的这一时间的卸载量是不是不正常得增加、用户的抱怨突然多起来、等等。到产品稳定运行之前，这样的关注要非常密切</p>
<h2 id="应变要快"><a href="#应变要快" class="headerlink" title="应变要快"></a>应变要快</h2><p>我们并不能总是对未来的事情有充分的预判，事情也并不问题按之前的预期发展，出现意料之外的情况，要能启动相应的预案，或者临时起义来应对</p>
<p>比如，对于跨国公司来讲，如果对手已经突然发起攻击，这边因为时差的原因决策者还在睡觉，那可真是没开打就落后一大截。再比如，突然就爆发了Open SSL的漏洞，产品就要在第一时间打补丁，并通过市场宣传来稳定用户，如果能把坏事变成好事就更好了（比如给Open SSL捐点钱）</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>快，不只是突然爆发、不只是随机应变，更是平时积累沉淀的检验。扎扎实实做好基本功，才能以不变应万变</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[需求相对论（以快的打车为例）]]></title>
      <url>https://atjason.com/474.html</url>
      <content type="html"><![CDATA[<p>StartFragment</p>
<p>产品发展到一定阶段，用户基数变大，各色合作伙伴变多，不同的需求也就纷至沓来，产品经理该如何抉择呢？</p>
<h1 id="以用户核心需求为卡尺"><a href="#以用户核心需求为卡尺" class="headerlink" title="以用户核心需求为卡尺"></a>以用户核心需求为卡尺</h1><p>举个需求的例子：乘客打车时希望不抽烟的司机接单</p>
<p>来看核心需求，快的服务的用户有部分组成：司机和乘客；各自的核心需求是：收益最大化、快速打到车。对乘客来讲，拆开来看，关键是“快速”、“打到车”。而举例的需求抽象来看是：打到更合适的车。这显然和快速打到车有偏差，并且是在其基础上的进阶需求</p>
<p>比如，乘客有几个选择：1，等不抽烟的司机要等15分钟；2，等抽烟的司机要2分钟。也许乘客就会为了“快速打到车”这一核心需求而放弃进阶需求</p>
<h1 id="结合当时具体的竞争环境"><a href="#结合当时具体的竞争环境" class="headerlink" title="结合当时具体的竞争环境"></a>结合当时具体的竞争环境</h1><p>眼下的态势依然是快的和滴滴等其他同类产品野蛮生长、快速收割用户的阶段。相对于所有人都可能打车的14亿乘客来说，司机是非常有限的。因此，如何获取更多的司机是眼下竞争的重中之重</p>
<p>而举例需求其实是对司机做减法，这显然和目前的竞争环境不符</p>
<p>more</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>万能的其他…</p>
<h2 id="技术限制"><a href="#技术限制" class="headerlink" title="技术限制"></a>技术限制</h2><p>这个容易理解，假设乘客和司机希望通过脑电波沟通、通过意念支付（多方便啊！），恐怕快的目前的技术实力还做不到</p>
<h2 id="政策限制"><a href="#政策限制" class="headerlink" title="政策限制"></a>政策限制</h2><p>私家车下班途中拉个同路的人，收个20块钱，还能解决公共交通压力……看起来多赢的事，却（受限于政府的执政能力）有非法营运的政策风险，而且会触碰到的士公司、司机的利益，因此，像在现有的快的中加入私家车也可以接单这样的需求，还是算了吧（等到某些团体的智商增加后再说）</p>
<h1 id="核心需求与其他条件是会演化的"><a href="#核心需求与其他条件是会演化的" class="headerlink" title="核心需求与其他条件是会演化的"></a>核心需求与其他条件是会演化的</h1><p>这一点很关键，不能死守着教条不放</p>
<p>例如，刚才推理现在对司机的争夺是核心，可司机的数量毕竟是有限的，假设过段时间，快的和滴滴都已经各自抢占了80%的司机（当然有重叠），还有必要把争取剩余的20%当重心吗？要知道这些司机可能死都不会用智能手机，或者不在乎多赚钱、只想轻轻松松开车，或者有固定的机场客源，或者当地根本就是不打表的玩法，等等。</p>
<p>这时，竞争的重心可能就会演化成对乘客关注、或者说更好得为乘客服务。此时，开头提到的对司机筛选的功能就变得非常合时宜，能不能找到不抽烟的司机（或者对司机其他类似的筛选，比如开车技术、车辆新旧、服务态度等），可能就会成为用户选择快的还是滴滴的关键</p>
<p>再者，拔高些层面来看，N年前出行靠步行、自行车，绝少有人打车，那时候肯定做不起打车平台。N年后，如果主要的出行方式变成拼车、租车、公共交通（甚至是开直升飞机），还有必要死守着打车这一小众需求吗？</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>实际操作过程中，不同的条件可能不会像文中举例那样典型，判断依据也不充分，抉择起来会更困难。这就需要在把握这些大原则的情况下，多加实践，在摸索中增加经验和敏感度</p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在WordPress中禁用Google字体]]></title>
      <url>https://atjason.com/466.html</url>
      <content type="html"><![CDATA[<p>StartFragment</p>
<p>有没有感觉你的WordPress莫名其妙得慢？说不定这和Google有关系</p>
<h2 id="为什么WordPress很慢和Google有关？"><a href="#为什么WordPress很慢和Google有关？" class="headerlink" title="为什么WordPress很慢和Google有关？"></a>为什么WordPress很慢和Google有关？</h2><p>因为你知道的原因，Google在国内的服务非常不稳定，或者可以简单理解为不可用。而WordPress后台、某些默认的主题（如Twenty Twelve, Twenty Thirteen, Twenty Fourteen）会使用Google的字体，这就会导致网页上打开时卡在从Google服务器加载字体的环节，进而非常得慢</p>
<h2 id="如何检验网站是否使用了Google的字体？"><a href="#如何检验网站是否使用了Google的字体？" class="headerlink" title="如何检验网站是否使用了Google的字体？"></a>如何检验网站是否使用了Google的字体？</h2><p>一种办法，以使用Chrome为例，在打开网站时，如果浏览器左下角出现类似“Waiting for fonts.googleapis.com…”，就说明网页在加载Google的字体</p>
<p>另一种办法，网页（终于）打开后，查看见面源代码。如果能找到类似“&lt;link href=’<a href="http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,400,300,600&amp;subset=latin,cyrillic-ext,greek-ext,greek,vietnamese,latin-ext,cyrillic" target="_blank" rel="external">//fonts.googleapis.com/</a> ”的代码，则说明中招</p>
<h2 id="如何禁用Google的字体？"><a href="#如何禁用Google的字体？" class="headerlink" title="如何禁用Google的字体？"></a>如何禁用Google的字体？</h2><p>一种办法，搜索安装“Disable Google Font”插件，启用即可；如果使用缓存的话，注意要重新生成缓存</p>
<p>如果不想安装插件，还有其他一些办法，比如直接修改WordPress和主题文件、使用国内字体服务器等等。更多细节，可自行搜索</p>
<p>more</p>
<p>参考</p>
<p><a href="http://wordpress.org/plugins/disable-google-fonts/" target="_blank" rel="external">http://wordpress.org/plugins/disable-google-fonts/</a></p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[更换网站IP对搜索引擎收录的影响]]></title>
      <url>https://atjason.com/463.html</url>
      <content type="html"><![CDATA[<p>StartFragment</p>
<p>经常有一个说法，就是更换网站IP会影响SEO，自己也面临这个问题，经过一些搜索和思考，整理如下：</p>
<p>搜索引擎会像一般用户一样去访问网站，即解析域名得到IP，然后访问IP对应的内容</p>
<p>不同的是，搜索引擎为了提高抓取效率，采用了DNS缓存技术，对于域名的解析一般很少使用公众网络的DNS（也即普通用户使用的DNS），如果你的IP更改了，有可能会在搜索引擎的缓存中还没有变更，出现新IP没有获得抓取或者抓取较少的情况，从而造成404页面过多、被搜索引擎认为网站服务中断等可能影响站点权威程度的因素</p>
<p>因此，最靠谱的更换IP的做法是，新旧服务器同时提供一段时间的相同内容，等到百度站长平台抓取诊断的结果显示百度蜘蛛已经能正确解析新的IP之后，再停止旧服务器的服务</p>
<p>可通过搜索引擎提供的工具（如百度站长工具）及时通知搜索引擎网站IP已经发生变化，也可以使用DNSPod等和搜索引擎有合作协议的DNS服务提供商，他们会在你变更解析的同时Push通知到搜索引擎</p>
<p>more参考</p>
<p><a href="http://www.wenjuntech.com/service-whole-site/ip.html" target="_blank" rel="external">http://www.wenjuntech.com/service-whole-site/ip.html</a></p>
<p>EndFragment</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[快的打车分析]]></title>
      <url>https://atjason.com/423.html</url>
      <content type="html"><![CDATA[<p>近期，对快的打车进行一些调研和思考，这里整理出来，供大家参考</p>
<pre><code>目录

[创始团队及公司](http://atjason.com/423.html#创始团队及公司)

[用户需求与产品核心功能](http://atjason.com/423.html#用户需求与产品核心功能)

[产品简史](http://atjason.com/423.html#产品简史)

[市场环境及竞争对手](http://atjason.com/423.html#市场环境及竞争对手)

[营销推广、运维](http://atjason.com/423.html#营销推广、运维)

[赢利模式](http://atjason.com/423.html#赢利模式)

[个人感悟](http://atjason.com/423.html#个人感悟)
</code></pre><p># </p>
<pre><code>创始团队及公司

之所以首先关注团队及公司，因为事情总是人做的；了解人，就更容易了解事、了解产品；没有人，任何创意、商业模式都是空谈

创始人：陈伟星
</code></pre><ul>
<li><p>2003年9月，考入浙江大学、建筑工程学院、土木工程专业</p>
</li>
<li><p>2006年8月，正读大三的陈伟星开始创业，成立了杭州泛城科技有限公司（FUNCITY INC.），专注于网页游戏和移动互联网应用的开发和运营，其中&ldquo;魔力学堂&rdquo;是无端网游业的开创之作和最为成功的产品，赚了两三个亿</p>
<p>CEO：吕传伟</p>
</li>
<li><p>加入快的前，身处硅谷、负责SK电讯的硅谷分公司无线产品，在美国虹软公司做过内部创业，也做过LBS方向</p>
<p>COO：赵冬</p>
</li>
<li><p>2001年考入浙江大学信电系，2005年毕业</p>
</li>
<li><p>网驰电商董事长，加入快的前，任泛城科技管理层，营销高手</p>
<p>CTO：闻诚</p>
</li>
<li><p>2001年考入浙江大学信电系（笔者：明显与赵冬为同学），2007年毕业</p>
</li>
<li><p>加入快的前，任职泛城科技，技术大牛</p>
<p>PM：白菜男君</p>
<p>more</p>
<p>快的打车产品是泛城科技孵化的，拿到天使投资后于2012年5月独立成杭州快智科技有限公司（笔者：貌似曾用名为&ldquo;快迪科技&rdquo;）</p>
<p>吕传伟、赵冬、闻诚3位合伙人的股权相加超过50%，大于陈伟星自己的持股比例；陈伟星不再参与公司日常事务的管理</p>
</li>
</ul>
<p># </p>
<pre><code>用户需求与产品核心功能

用户有两方面，核心需求分别是：乘客希望快速打到车，司机希望收益最大化，多拉活、拉好活

快的打车的解决方案是
</code></pre><ul>
<li><p>所有需求方与供给方同时在线（隐含构建用户体系）</p>
</li>
<li><p>信息传播，主要是需求方向供给方传播</p>
<p>其中包含的细节</p>
</li>
<li><p>LBS（基于地理位置服务）</p>
</li>
<li><p>沟通方式：文字、语音、电话、短信等</p>
</li>
<li><p>支付：支付宝、微信支付、现金、代金券等</p>
</li>
<li><p>信用评价：是否违约、态度等</p>
<p>核心优势</p>
</li>
<li><p>操作简单，打车信息发布一气呵成</p>
</li>
<li><p>沟通顺畅（语音、图片、文字三重交流），司机乘客轻松对接</p>
</li>
<li><p>叫车放心，诚信记录一目了然</p>
<p>另外，迭代速度快，保持着每两三周升级一次的更新速度，也可以认为是产品的基础和优势。</p>
<p>回过头来复盘，产品的设计要注意这几个环节：</p>
</li>
<li><p>始终明确要满足什么核心需求，坚持、不忘初心</p>
</li>
<li><p>产品的设计必须有一条清晰的主线，正对核心需求</p>
</li>
<li><p>基础框架搭好后，再考虑外围的功能设计，比如积分、信用体系等</p>
</li>
</ul>
<p># </p>
<pre><code>产品简史
</code></pre><ul>
<li><p>2012年7月，快的打车在杭州正式上线</p>
</li>
<li><p>2013年4月，快的获得阿里巴巴、经纬创投1千万美金的A轮融资，同时获得了一笔来自李治国的阿米巴资本的天使投资</p>
</li>
<li><p>2013年7月，快的打车与去哪儿、高德地图、百度地图、支付宝形成战略合作伙伴，为其打车功能提供服务支持</p>
</li>
<li><p>2013年8月，快的打车接入支付宝</p>
</li>
<li><p>2013年8月，发布快的打车2.0，首创起点精准定位、即时追踪距离、智能推送机制、用户积分等级和VIP功能</p>
</li>
<li><p>2013年8月，快的打车用户下载量超过一千万，司机数量超过20万</p>
</li>
<li><p>2013年9月，快的打车进军香港，成为国内首家进入香港市场的打车APP</p>
</li>
<li><p>2013年10月，易观国际发布数据显示，快的打车占全国打车APP行业整体市场份额的41.8%，位列行业第一</p>
</li>
<li><p>2013年11月，快的打车城市数量达到35个，用户量突破2千万，司机数量达到35万，居行业榜首</p>
</li>
<li><p>2013年11月，快的打车宣布收购大黄蜂打车，收购完成后，快的打车在上海、广州两个一线城市的市场份额超过80%，全国市场份额超过50%。宣布收购的同时，作为投资方的阿里巴巴宣布，将连同其它财务投资人一起注资近亿美元</p>
</li>
<li><p>2013年11月底，快的打车与支付宝联合推广线下出租车市场，不到一个月的时间里，北京市内支持支付宝付车费的出租车已超过2万辆</p>
</li>
<li><p>2013年12月，快的打车旗下大黄蜂宣布推出商务车服务</p>
</li>
<li><p>2013年12月，快的打车城市覆盖数量超过40个</p>
</li>
<li><p>2014年2月，支付宝和快的打车宣布，从18日起升级补贴方案：使用快的打车并用支付宝扫码支付的乘客每单返现11元；司机用APP收款，北京、杭州、合肥三地首单奖励50元</p>
</li>
<li><p>2014年3月，打车软件的&ldquo;补贴&rdquo;大战开始降温。快的打车和支付宝钱包宣布从3月4日零点开始调整打车补贴方案，补贴金额从之前的13元降至10元</p>
</li>
<li><p>2014年6月11日，快的打车宣布在全国推&ldquo;打车返代金券&rdquo;活动，可以在下次打车支付时直接抵扣车费</p>
</li>
</ul>
<p># </p>
<pre><code>市场环境及竞争对手

把猪放在风口，猪都能被吹起来，说明选择好的行业、选择合适的时机进入很重要。火候把握的好，既不会太早导致熬得时间太长变成先烈，也不会进入较晚错过机会。

打车的市场容量有多大？简单计算一下，杭州总共12000台出租车，平均每天出租车每天接25单，每单20块钱，每天交易额在600万左右，而全国大概30个杭州规模的城市，每天1.8亿的交易额，按1%的抽成比例看，每天有180万的市场空间。放眼全国，可见一斑

回过头来复盘，打车应用本身的特性、及当年的市场环境使得这一领域突飞猛进：
</code></pre><ul>
<li><p>打车是强需求。频次够高，普及率够广；打车时都很急，恨不得马上有车过来接，甚至可以加价</p>
</li>
<li><p>本身容易传播。司机赚钱了，乘客省钱了，自然会互相传播</p>
</li>
<li><p>智能手机已经非常普及，即使没有，买个千元机就行；手机3G乃至4G的兴起，手机流量不再贵得离谱</p>
</li>
<li><p>微信微博发展得比较成熟，既教育了用户使用手机软件，又解决了通信的问题</p>
</li>
<li><p>支付宝、微信支付等手机支付的兴起及神仙打架，让打车软件受益并形成闭环</p>
<p>乘客核心的需求是位置上从A到B，所有可能的替代方案都是潜在的竞争对手、或未来业务扩展的方向，如公共自行车、公交车、微公交、拼车（私家车）、商务车、旅行包车等</p>
<p>典型的直接竞争对手包括</p>
</li>
<li><p>嘀嘀打车：产品、用户群体高度同质化</p>
</li>
<li><p>易到用车：不同定位、不同用户群体。不过，快的打车收购大黄蜂之后，开始在商务车领域与其直接竞争</p>
<p>间接对手就比较多，理论上所有流量入口（如百度地图、微信、支付宝、UC浏览器等）都可以是对手，完整的打车App可以作为平台软件的API存在。不过，目前的情况上，平台级软件大多选择和打车类软件合作，提供入口接入。这也说明没有永远的朋友或敌人，伙伴和对手是可以相互转换的</p>
<p>另外不得不提两个利益关联方：政府监管部门和的士公司。试想，如果出租车行业放松管理，不需要出租车公司、个人就可以直接营运，有了打车类应用，还有出租车公司什么事？而既得利益者的士公司会放任这种情况发生吗？所以，必须密切关注政策动向，小心处理和的士公司等方的利益分割。他们做事做不好，搞破坏还是有一手。</p>
</li>
</ul>
<p># </p>
<pre><code>营销推广、运维

产品原型及最初的版本出来后，如何冷启动？如何获取第一批种子用户？快的做法是这样的：认为司机是稀缺资源，得司机者得天下，于是决定团队全体出动向司机推广，包括运营推广、市场人员、技术开发、产品经理在内的一群人，带着遮阳伞、推广宣传单页、给司机的小礼品、成箱的矿泉水、还有放着《爱情买卖》的大喇叭，浩浩荡荡杀到了司机师傅集中吃饭的服务区。每天从早上6点到晚上11点多轮班坚守着阵地，手把手地介绍、演示，累了就轮流在旁边酒店开的房间睡觉，晚上回家路上所有人都嗓子冒烟说不出话

在一段时间的定点推广后，司机的总体数量和在线数量就已经有一定规模了，但是乘客不够多，司机的流失率是个问题。快的做法是，推出了一系列鼓励司机保持在线的趣味性措施，既能保证司机的留存率，又能帮助用户了解软件

有了司机这一环，接下来就是推广乘客了。开始的时候，快的做过这些尝试：在广场做过站街推广，在交通广播做过广告，甚至还在一些写字楼楼下贴过小广告。不过效果都一般，算是交了学费。后来的突破点是，设计了一批&amp;ldquo;打车券&amp;rdquo;发放给乘客，只要用APP打车，就可以用这个抵用券抵用5元的车费。这些&amp;ldquo;好品味&amp;rdquo;的行为在初期的用户推广中都为其积累了很好的口碑。依靠类似这样的一些玩法持续一小段时间后，出现了一波大规模的爆炸效应

接下来的环节，就是大家比较熟悉的，阿里和腾讯神仙打架，双方在2014年春节前后，砸下大量真金白银，以现金补贴、价格直降的方式，迅速在司机和乘客中推广。不过，这一环节必须有之前已有的一定规模的用户群体做基础，还要比拼现金的管理，也即如何更有效得烧钱

得到用户之后，就需要考虑构建用户成长体系。简单的说，用户使用快的打车越频繁，就可以得到更多好处。比如为用户划分等级，通过打车次数来提升等级，进而得到多倍积分的特权，结合类似游戏中的心理学，增加用户粘性
</code></pre><p># </p>
<pre><code>赢利模式

也许快的打车本身也还在摸索商业化及赢利模式。毕竟互联网模式是不会像普通用户收费，只向少数有特别需求的用户收费，如何选择既不过份骚扰用户、又能正常赢利的模式，恐怕是需要小心拿捏的（就像是设计出印花税这种巧妙的税种，而不是收人头税这种粗劣的方式）

先看目前的成绩单：2014年4月2日，快的打车对外披露了第一季度的营收，截止3月31日快的打车覆盖城市已达261个，较上一季度增长6.5倍；日订单量超过623万，较上一季度增长20.7倍。第三方调研机构艾瑞MTU跟踪的数据显示，用户使用快的打车的总有效次数占比，已经从今年1月份的58.72%升至2月份的60.87%。第一季度司机通过快的打车收取车费的总流水超过47.3亿元人民币，这其中不包括支付宝扫码支付的车费

此外，快的打车宣布，已探索出除广告以外、更多适合自身的商业模式，包括线上线下的营销活动等。目前快的打车月度营收接近千万元人民币

快的打车商业化的尝试还包括，包月的VIP卡，面向打车频繁的用户，购买后VIP用户在全国35个城市用快的打车保证用户百分之百打到车；还有一个是企业版的，针对一些地方偏远的酒店，那里没什么出租车，酒店客人不方便，前台可以用快的打车企业版叫出租车，也可以保证车百分百到

笔者能接触到的赢利方式，基本还是在卖用户阶段，即通过优惠券的方式将自己的用户引流到别的商家，和通过应用推荐的方式获得广告收益。比如笔者通过快的积分，换取网易印象派20张6寸免费照片（我不会忘记还付了10元运费），换取易果生鲜1kg泰国山竹（包邮，这个让人感觉比较爽），通过在微信朋友圈分享，周围的同事、朋友也被带动去兑换积分，为快的合作伙伴带来高质量用户

长期的赢利方式可以在这些方面尝试：
</code></pre><ul>
<li><p>乘客方面：买车导购、保险、基于位置广告等</p>
</li>
<li><p>司机方面：汽车保养、维修、保险、加油等；不同车型数据收集</p>
</li>
</ul>
<p># </p>
<pre><code>个人感悟

通过了解到的信息，个人感觉快的目前是通过打车软件建立用户群体、品牌，未来是希望建立类似于呼叫中心的平台，让更多不同的、尤其是本身没有能力的、小的服务提供者接入这一平台（比如磨菜刀的工匠、弹棉花的手艺人、入户拍摄婴儿的摄像师、等等），让服务的提供者和消费者更好得对接，以此让消费者更容易得享受到不同的服务。个人非常认同这一模式，并觉得很有社会价值

引用

本文参考了大量网络上的文章，并结合自己的理解进行加工整理。以下是主要的原文链接，不尽之处、敬请谅解
</code></pre><ul>
<li><p><a href="http://baike.baidu.com/view/10263782.htm" target="_blank" rel="external">http://baike.baidu.com/view/10263782.htm</a></p>
</li>
<li><p><a href="http://www.36kr.com/p/202289.html" target="_blank" rel="external">http://www.36kr.com/p/202289.html</a></p>
</li>
<li><p><a href="http://www.kuaidadi.com/index.php?m=Article&amp;a=show&amp;id=54" target="_blank" rel="external">http://www.kuaidadi.com/index.php?m=Article&amp;a=show&amp;id=54</a></p>
</li>
<li><p><a href="http://www.huxiu.com/article/9778/1.html" target="_blank" rel="external">http://www.huxiu.com/article/9778/1.html</a></p>
</li>
<li><p><a href="http://www.huxiu.com/article/12173/1.html" target="_blank" rel="external">http://www.huxiu.com/article/12173/1.html</a></p>
</li>
<li><p><a href="http://new.iheima.com/detail/2013/1100/44533.html" target="_blank" rel="external">http://new.iheima.com/detail/2013/1100/44533.html</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Seafile架设私有云：使用Raspberry Pi作服务器]]></title>
      <url>https://atjason.com/417.html</url>
      <content type="html"><![CDATA[<p>长期运行一台电脑作为Seafile服务器可能并不是每个人都能接受的，单单是电费就是很可观的数字。以笔记本60W的典型功率为例，每天开机则一年电费为（60<em>24</em>365/1000=）525.6度电，差不多400人民币，是不是有点心疼？</p>
<p>如果确实有需要，可以考虑购买Raspberry Pi作为Seafile服务器，功率可能在10W左右，全年开机电费也只80元左右</p>
<p>Raspberry Pi的具体配置如何？且听下回分解</p>
<p>转自：<a href="http://itguwen.net/315.html" target="_blank" rel="external">使用Seafile架设私有云：使用Raspberry Pi作服务器</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Seafile架设私有云：公网进阶使用]]></title>
      <url>https://atjason.com/415.html</url>
      <content type="html"><![CDATA[<p><a href="http://itguwen.net/306.html" target="_blank" rel="external">上文介绍了Seafile私有云之公网使用</a>，本文介绍如何对路由器的动态IP进行解析</p>
<h2 id="使用花生壳进行动态域名解析"><a href="#使用花生壳进行动态域名解析" class="headerlink" title="使用花生壳进行动态域名解析"></a>使用花生壳进行动态域名解析</h2><p>什么是花生壳？简单的说，它提供免费的二级域名给你用。关键的优势是，包括TP-LINK在内的很多路由器内置了对花生壳的支持，使的实用性大大增加。更多介绍请自行Google</p>
<p>首先在<a href="http://hsk.oray.com/domain/" target="_blank" rel="external">花生壳</a>上注册账户并注册免费的域名，如<a href="http://test.wicp.net" target="_blank" rel="external">http://test.wicp.net</a></p>
<p>进入你的路由器更新设置。以TP-LINK典型的设置为例，在动态DNS中登陆花生壳账户，并选择启用DDNS，登陆后如果能看到正确的域名信息，就表明一切正常</p>
<p>使用花生壳提供的域名+端口（如<a href="http://test.wicp.net" target="_blank" rel="external">http://</a><a href="http://test.wicp.net" target="_blank" rel="external">test.wicp.net</a>）在浏览中打开，如果能正常打开则OK</p>
<p>保险起见，可以重启路由器试试，不过花生壳需要一段时间来更新域名与IP</p>
<h2 id="使用你的域名-花生壳"><a href="#使用你的域名-花生壳" class="headerlink" title="使用你的域名+花生壳"></a>使用你的域名+花生壳</h2><p>如果你嫌花生壳的域名很丑，怎么办呢？简单，将你的漂亮的域名使用CNAME转到花生壳提供的域名即可</p>
<p>转自：<a href="http://itguwen.net/312.html" target="_blank" rel="external">使用Seafile架设私有云：公网进阶使用</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Seafile架设私有云：公网基础使用]]></title>
      <url>https://atjason.com/412.html</url>
      <content type="html"><![CDATA[<p><a href="http://itguwen.net/294.html" target="_blank" rel="external">上文介绍了Seafile</a><a href="http://itguwen.net/294.html" target="_blank" rel="external">私有云之局域网使用</a>，本文介绍如何将Seafile暴露在公网中使用</p>
<h2 id="使用域名解析路由器IP地址"><a href="#使用域名解析路由器IP地址" class="headerlink" title="使用域名解析路由器IP地址"></a>使用域名解析路由器IP地址</h2><p>首先查看你的公网IP，可以在<a href="http://who.is/" target="_blank" rel="external">http://</a><a href="http://who.is/" target="_blank" rel="external">who.is/</a>这样的网址上查看，或者在路由器的状态页面查看。</p>
<p>注：有的宽带运营商并不提供公网IP，对于这种情况，事情就会很复杂，劝你还是放弃吧，内网穿透这种事情不是所有人都能折腾的</p>
<p>然后你需要一个域名（假定域名为：<a href="http://test.com" target="_blank" rel="external">http://test.com</a>），如果没有就想办法弄一个，不然就别往下看了。或者你可以使用使用公网IP继续往下测试。将域名（或其二级域名）解析至你的公网IP（使用A记录）。过一段时间后域名解析会生效，检查办法：ping你的域名看是否解析至对应的公网IP</p>
<p>至此，域名解析结束</p>
<h2 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h2><p>为电脑在路由器上设置静态IP地址分配，这样即使路由器或电脑重启后，电脑依然能得到固定的IPmore</p>
<p>为电脑在路由器上设置端口转发，之后从外网访问路由器相应端口时，路由器将请求转发给内网的电脑。</p>
<p>需要转发哪些端口？默认端口如下</p>
<ul>
<li><p>ccnet: 1000</p>
</li>
<li><p>seaf-server: 1200</p>
</li>
<li><p>seahub: 800</p>
</li>
<li><p>httpserver: 8082</p>
</li>
</ul>
<p>更新路由器上的防火墙设置，如允许WAN口接收公网请求等</p>
<p>至此，路由器配置结束</p>
<h2 id="Seafile服务器配置"><a href="#Seafile服务器配置" class="headerlink" title="Seafile服务器配置"></a>Seafile服务器配置</h2><p>编辑seafile-server目录下的ccnet\ccnet.conf（如G:\seafile-server\ccnet\ccnet.conf），更新如下内容：</p>
<p>SERVICE_URL = <a href="http://test.com:8000" target="_blank" rel="external">http://test.com:8000</a></p>
<p><strong>接下来测试配置是否正确</strong></p>
<h2 id="测试网页端"><a href="#测试网页端" class="headerlink" title="测试网页端"></a>测试网页端</h2><p>打开域名及端口，如<a href="http://test.com:8000" target="_blank" rel="external">http://test.com:8000</a>，如果显示的是和内网的<a href="http://192.168.1.101:8000" target="_blank" rel="external">http://192.168.1.101:8000</a>一致，并能使用账户登陆，则说明域名及路由器配置正确。不然则要从头来排查</p>
<h2 id="测试Windows客户端"><a href="#测试Windows客户端" class="headerlink" title="测试Windows客户端"></a>测试Windows客户端</h2><p>添加新的账户，使用<a href="http://test.com:8000" target="_blank" rel="external">http://test.com:8000</a>作为服务器地址。如果能显示出和内网相同的内容，则说明一切正常</p>
<h2 id="测试iOS客户端"><a href="#测试iOS客户端" class="headerlink" title="测试iOS客户端"></a>测试iOS客户端</h2><p>类似于Windows客户端，使用<a href="http://test.com:8000" target="_blank" rel="external">http://test.com:8000 </a>作为服务器地址进行测试。为了验证，在手机上可以使用手机网络而非WiFi来测试</p>
<p><strong>至此，Seafile私有云可以在公网使用</strong></p>
<h3 id="关于速度"><a href="#关于速度" class="headerlink" title="关于速度"></a>关于速度</h3><p>不得不说的是速度。限于宽带运营商对上行速度的限制，实际中速度可能比较慢（比如只有几十KB/s）而变得实用性不大；不过，这也取决于你的实际测试情况</p>
<h3 id="动态域名解析"><a href="#动态域名解析" class="headerlink" title="动态域名解析"></a>动态域名解析</h3><p>可能有经验的看官已经发现，这样配置的域名是有问题的，即路由器重启后从运营商处分配得到的IP是会变动的。对，没错！为了解决这个问题，就需要使用动态域名解析。这一话题，请看：<a href="http://itguwen.net/312.html" target="_blank" rel="external">使用Seafile架设私有云：公网进阶使用</a></p>
<p>转自：<a href="http://itguwen.net/306.html" target="_blank" rel="external">使用Seafile架设私有云：公网基础使用</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Seafile架设私有云：局域网使用]]></title>
      <url>https://atjason.com/410.html</url>
      <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>关于版本等信息，本文使用的是2014年5月10日的最新版，你看到本文时可能已经有更新，可以到<a href="http://seafile.com" target="_blank" rel="external">Seafile</a><a href="http://seafile.com" target="_blank" rel="external">官网</a>上查看</p>
<p>关于一些技术细节，写得太细了怕招人烦，写得粗略又怕看不懂。本文并不知道看官道行有多深，所以并不确定该写到什么程度。如果觉得太琐碎，就请快速扫过；如果觉得看不太懂，可以联络我，或者请教万能的Google，毕竟你看这篇文章说明动手能力还是不错的</p>
<p>关于什么是私有云，就真的只能Google了</p>
<h2 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h2><p>Seafile服务器端运行需要Python，所以要先安装Python</p>
<p>下载安装<a href="https://www.python.org/" target="_blank" rel="external">Python 2.7.6</a>，注意不要使用Python 3.x，Seafile目前不支持</p>
<p>将Python的安装路径添加至Windows环境变量PATH中</p>
<p>至此，Python的安装及配置就好了</p>
<h2 id="安装Seafile服务器"><a href="#安装Seafile服务器" class="headerlink" title="安装Seafile服务器"></a>安装Seafile服务器</h2><p>Seafile服务器端支持Windows、Linux、Raspberry Pi（其实仍为Linux）等系统，本文使用Windows 7作为Seafile服务器</p>
<p><a href="http://seafile.com/download/" target="_blank" rel="external">下载Seafile Windows端服务器3.0.2</a><a href="http://seafile.com/download/" target="_blank" rel="external">版</a>，直接解压缩至运行目录即可。建议将其放到纯英文、不带空格的简单目录，如C:\Program\seafile-server-3.0.2</p>
<p>运行解压缩根目录的run.bat（需要管理员权限），依次进行如下配置more</p>
<ul>
<li><p>选择一个磁盘，Seafile会在些磁盘下创建seafile-server目录，Seafile服务器相关的数据将会保存在此</p>
</li>
<li><p>在弹出的Windows防火墙（如果打开的话）依次允许”ccnet-server”、”seaf-server”、”httpserver”使用网</p>
</li>
<li><p>如果有杀毒软件的话，也允许上述程序使用网</p>
</li>
<li><p>注：建议Seafile加入签名机制，并加入主流杀毒软件、防火墙软件的白名单中，这样看起来就不像病毒软件</p>
</li>
<li><p>右击任务栏托盘中的Seafile Server图标，创建管理员账户</p>
</li>
</ul>
<p>检查Seafile服务器是否正确安装运行</p>
<p>获取电脑IP，如192.168.1.101。在浏览器中访问<a href="http://192.168.1.101:8000，注意，8000为默认端口，如果有冲突则使用实际端口。使用刚刚创建的账户登陆，如果能使用则说明一切正常" target="_blank" rel="external">http://192.168.1.101:8000，注意，8000为默认端口，如果有冲突则使用实际端口。使用刚刚创建的账户登陆，如果能使用则说明一切正常</a></p>
<p>至此，Seafile服务器安装配置告一段落</p>
<h2 id="安装并测试Windows客户端"><a href="#安装并测试Windows客户端" class="headerlink" title="安装并测试Windows客户端"></a>安装并测试Windows客户端</h2><p>Seafile Windows客户端和一般的程序一样，下载安装即可</p>
<p>运行程序，会要求选择一个目录来存放Seafile的数据</p>
<p>在添加账号时，服务器使用刚刚创建的地址，如<a href="http://192.168.1.101:8000" target="_blank" rel="external">http://192.168.1.101:8000</a>，服务器默认端口为8000，如果在创建服务器过程中出现端口冲突而选择了其它端口，则使用实际的端口。邮箱和密码则使用刚刚创建的管理员账户</p>
<p>创建成功后，客户端会下载默认资料库 打开资料库（即运行程序时选择存放Seafile的数据的目录），可以看到有默认的文件”seafile-tutorial”。为了测试，添加任意文件</p>
<p>至此，Seafile Windows客户端安装配置结束</p>
<h2 id="安装并测试iOS客户端"><a href="#安装并测试iOS客户端" class="headerlink" title="安装并测试iOS客户端"></a>安装并测试iOS客户端</h2><p>注：Android类似，就不再赘述</p>
<p>像一般的iOS App一新，在App Store中搜索Seafile下载安装即可</p>
<p>打开App后，使用和Windows客户端一样的地址和账户登陆。</p>
<p>注意：此时要保证手机和安装Seafile Windows服务器的电脑在同一局域网内</p>
<p>进入后，如果能看到之前在Windows客户端上添加的测试文件，即说明Seafile服务器确实配置成功</p>
<p><strong>至此，就完成了Seafile服务器在局域网内的配置及使用</strong></p>
<h3 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h3><p>如何能在局域网之外即公网使用Seafile？这就需要更进一步的设置了，请看<a href="http://itguwen.net/306.html" target="_blank" rel="external">使用Seafile架设私有云：公网基础使用</a></p>
<p>转自：<a href="http://itguwen.net/294.html" target="_blank" rel="external">使用Seafile架设私有云：局域网使用</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[投机与投入]]></title>
      <url>https://atjason.com/406.html</url>
      <content type="html"><![CDATA[<p>现在的投机换得将来的后悔，现在的投入换来以后的收获。有因必有果。</p>
<p>工作时，我们可以投机，偷懒少干点活，能做得好的却随便应付。公司、客户可能并不会发现，或者知道了也没什么办法催促。可是，日久见人心，对方终究会了解。</p>
<p>而且，在这些宝贵的时间，如果我们没有投入得去做事，也就不会有什么收获。上上网、刷刷微博、瞧瞧朋友圈只会让我们从无聊变得更无聊。在日后要写的简历上，这段时间必不会有亮点。</p>
<p>投入得去做事，哪怕是别人根本无法知道、没有激励的事。不浪费青春、对得起自己。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[移动4G随身WiFi – 使用体验]]></title>
      <url>https://atjason.com/358.html</url>
      <content type="html"><![CDATA[<p><a href="http://itguwen.net/blog/134" target="_blank" rel="external">前面</a>介绍了移动4G随身WiFi的前奏，下面进入正题。</p>
<h1 id="MiFi介绍"><a href="#MiFi介绍" class="headerlink" title="MiFi介绍"></a>MiFi介绍</h1><p>笔者刚刚去移动营业厅领了4G MiFi，本想着领到华为的设备，结果是UT斯达康的UE328。</p>
<p>先吐个槽：移动杭州环北营业厅，硕大的一楼大厅，只有3个人在办业务，却有几十个人排除等候。10多分钟一个人的节奏，让大家都等得不耐烦。其中一个人还和业务员吵起来了。说到免费，小米、极路由这些互联网企业如果放出伪免费产品，不知道要从中得到多少好处。而移动的免费，却让用户不耐烦、吵起来。以这样的节奏和互联网企业比拼，不衰落才怪，即使是诺基亚这样的百年老店，出售也只是几年的事。more</p>
<p>外观、硬件等参数，参见<em><a href="http://www.utstarcom.com/productAndSolution/wireless/solution/1851.aspx" target="_blank" rel="external">官方介绍</a></em>。</p>
<p>关于电池，理论数据为：正常工作4小时，待机100小时。实际使用建议还是配上移动电源。 充电时间比较长，1800mAh的电池，却需要3~4小时以上才能充满，比较差。</p>
<p>来张全家福：</p>
<p><a href="https://ps.toolinbox.net/ukpg5.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/sa7tr.jpg" alt="UE328全家福"></a>UE328全家福</p>
<h1 id="MiFi怎么使用？"><a href="#MiFi怎么使用？" class="headerlink" title="MiFi怎么使用？"></a>MiFi怎么使用？</h1><p>和一般的3G路由器类似，MiFi基本的使用还是比较简单的：</p>
<ul>
<li><p>记录后盖上的连接信息，尤其是默认WiFi密</p>
</li>
<li><p>开户MiF</p>
</li>
<li><p>使用默认WiFi密码连</p>
</li>
<li><p>完了</p>
</li>
</ul>
<h2 id="WPS配对"><a href="#WPS配对" class="headerlink" title="WPS配对"></a>WPS配对</h2><ul>
<li><p>按压MiFi按钮约2秒钟，MiFi就会在2分钟内搜寻配对的WPS设</p>
</li>
<li><p>在设备端开启WPS搜索功能，很快的就可以连接上MiFi，免去繁琐得输入密</p>
</li>
<li><p>注意，手机、电脑等设备端WPS支持的方式差别很大。比如Windows 7在输入WiFi密码页面可以进行WPS配对，有的手机（如Nexus 4 + Android 4.3）在WiFi搜索页面有WPS配对按钮。需要各位看官具体情况、具体分析。如需帮助，请<em><a href="http://itguwen.net/lx" target="_blank" rel="external">联系我们</a></em></p>
</li>
</ul>
<h2 id="网页管理"><a href="#网页管理" class="headerlink" title="网页管理"></a>网页管理</h2><ul>
<li><p>通过WiFi将手机或电脑接到至MiF</p>
</li>
<li><p>在网页上打开MiFi默认管理地址：<a href="http://192.168.0.1/" target="_blank" rel="external">http://192.168.0.1/</a>，默认用户名密码为：admin/admi</p>
</li>
<li><p>这时，你就可以为所欲为。比如，设置WiFi名称、密码、管理用户名、密码、省电模式等等</p>
</li>
</ul>
<p><a href="https://ps.toolinbox.net/j1jyr.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/wbkur.jpg" alt="MiFi 管理页面"></a>MiFi 管理页面</p>
<h2 id="查询流量"><a href="#查询流量" class="headerlink" title="查询流量"></a>查询流量</h2><ul>
<li><p>可以根据MIFI关联的SIM查询流</p>
</li>
<li><p>初始密码可以在移动网上营业厅通过“忘记密码”找回，其中验证码会发送到办理MiFi时的主移动号码</p>
</li>
<li><p>之后就可以<a href="http://service.zj.10086.cn/yw/usedQuery/currentMonthQuery.do" target="_blank" rel="external">在移动网上营业厅查询免费流量使用情况</a></p>
</li>
</ul>
<h2 id="Show下笔者当月免费使用量"><a href="#Show下笔者当月免费使用量" class="headerlink" title="Show下笔者当月免费使用量"></a>Show下笔者当月免费使用量</h2><p>截止至2013-11-xx，您本月的免费资源使用量信息如下（注：因为是月中办理的，所以免费总量约7G，而不是整月的15G）：</p>
<ul>
<li>免费项目</li>
</ul>
<p>免费总量</p>
<p>实际使用量</p>
<p>剩余使用量</p>
<p>单位</p>
<p>优惠时段</p>
<p>免费4G宽带(4G/3G)省内流量</p>
<p>7756590</p>
<p>6405</p>
<p>7750185</p>
<p>KB</p>
<p>包月</p>
<p># </p>
<h1 id="MiFi信号怎么样？"><a href="#MiFi信号怎么样？" class="headerlink" title="MiFi信号怎么样？"></a>MiFi信号怎么样？</h1><p>信号是速度的前提，移动4G覆盖是信号的前提。</p>
<p>目前，杭州主城区已经覆盖4G信号，本次测试是在杭州拱墅区城西银泰附近。MiFi上4G信号显示为满格，MiFi管理页面可以看到实际信号为-78 dBm，不错（实际中，手机信号在&gt;-85dBm时就会显示满格）。</p>
<p>除了4G信号强度，还需要关心MiFi所提供的WiFi的信号。实际测试结果：</p>
<ul>
<li><p>将手机放在MiFi边上，强度为-40dBm（很好的成绩，见下图中Fly</p>
</li>
<li><p>在没有障碍物的情况下离4米远，信号略有跳动，约-55dB</p>
</li>
<li><p>隔一堵墙（含一扇防盗门），约4米远，信号约-60dB</p>
</li>
<li><p>隔两堵墙（含两扇防盗门），约5米远，信号约-80dBm</p>
</li>
</ul>
<p>总的来说，UE328所提供的WiFi信号还是很不错的，毕竟实际使用中手机、电脑也不会离MiFi很远。</p>
<p><img src="https://ps.toolinbox.net/ymi2u.png" alt="MiFi WiFi信号强度">MiFi WiFi信号强度</p>
<h1 id="MiGi实际速度怎么样？"><a href="#MiGi实际速度怎么样？" class="headerlink" title="MiGi实际速度怎么样？"></a>MiGi实际速度怎么样？</h1><p>简单的说，打开网页、刷微博、看网易新闻这些典型的3G应用对于4G来说自然不在话下，实际使用流畅。</p>
<p>来到典型的在线看视频测试，打开优酷视频网页约5秒钟，之后广告立即可以播放。随意拖放超清视频，缓冲约8秒后开始播放，之后基本可以连续播放。 与之对比，华数4M网通下拖放后缓冲约3秒后连续播放（时间，周日下午4点左右）。</p>
<p>PS：这里吐槽下优酷60秒的广告，基本是在找骂。</p>
<p>待测：QQ视频、QQ语音</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>总的来说，4G MiFi可用性不错，基本可以和家庭宽带媲美。不过考虑到高昂的流量价格、不得不担心的辐射，不建议长期使用。和3G移动WiFi相比，出差、外出时临时用用，依然是4G MiFi的最佳应用场景，只是速度快些。</p>
<p>来自：<a href="http://itguwen.net/blog/140" target="_blank" rel="external">http://itguwen.net/blog/140</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[移动4G随身WiFi - 前奏]]></title>
      <url>https://atjason.com/356.html</url>
      <content type="html"><![CDATA[<p>4G这个词汇越来越热，到底4G是个什么东西、离我们还有多远？这里带来笔者的亲身感受，供大家参考。</p>
<h1 id="4G现在是什么样？"><a href="#4G现在是什么样？" class="headerlink" title="4G现在是什么样？"></a>4G现在是什么样？</h1><p>据传4G牌照将于2013年12月18日发放。由于移动在3G大战中明显输于联通、电信，移动是3大运营商中最积极推进4G的，目前正在多个城市火热试点移动4G。试点城市：北京、上海、天津、沈阳、南京、杭州、宁波、福州、厦门、青岛、广州、深圳、成都13个城市。比如在杭州，已经有很多移动用户在不换号、换定制手机的情况下使用移动4G。 另外，移动很可能靠iPhone5s扩大4G用户。more</p>
<h1 id="4G有多快？"><a href="#4G有多快？" class="headerlink" title="4G有多快？"></a>4G有多快？</h1><p><strong>4G确实比较快。</strong></p>
<p>据测试，实际下载均速达到4.15MB/s，下载1.09GB电影仅需4分半钟，几乎是三倍于联通20M宽带的表现，更是将3G远远甩在身后。</p>
<p>另外，你家里应该有宽带对吧，据测试，<a href="http://tech.qq.com/a/20131112/007764.htm" target="_blank" rel="external">移动4G网速完爆20M家用宽带</a>；这下你应该会有比较感性的认识了。</p>
<p>不过，也有负面新闻说，<a href="http://finance.jrj.com.cn/tech/2013/11/14014516144110.shtml" target="_blank" rel="external">移动4G信号覆盖存短板</a>，这时4G的速度就要打折扣了。</p>
<h1 id="4G用得起吗？"><a href="#4G用得起吗？" class="headerlink" title="4G用得起吗？"></a>4G用得起吗？</h1><p>各地资费不尽相同，看看下面这张4G流量包资费清单</p>
<p><img src="https://ps.toolinbox.net/d5rx7.jpg" alt="4G流量包">4G流量</p>
<p>其中，2GB/月流量包需要100元。这意味着如果你一个月中用10分钟下载了2G的视频，那这个月剩下的时间，你还是别上网了，超出流量包的部分会让你哭的。</p>
<p>如果你只是简单的浏览网页、看看新闻，流量是够了；可那和3G有什么区别？</p>
<p>如果你想看看视频、下下电影，不是土豪，真心用不起。</p>
<h1 id="吊丝逆袭：免费体验移动4G-MiFi"><a href="#吊丝逆袭：免费体验移动4G-MiFi" class="headerlink" title="吊丝逆袭：免费体验移动4G MiFi"></a>吊丝逆袭：免费体验移动4G MiFi</h1><p>也许是移动希望提高4G知名度、在4G牌照发放时能在第一时间让更多的人使用4G，移动发动了免费体验4G的活动。想占便宜的，猛击<em><a href="http://www.10086.cn/lte/recruit.html" target="_blank" rel="external">这里</a></em>。</p>
<p>参加活动后，用户就可以每个月免费使用15G流量、连续6个月。具体活动细节，请参见上面的活动页面。</p>
<p>其中，参加活动时需要签署的使用协议，见以下照片</p>
<p><a href="https://ps.toolinbox.net/3u3mj.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/k406m.jpg" alt="移动4G免费体验协议"></a>移动4G免费体验协</p>
<p>其中需要注意的是：</p>
<p><em>3、体验期间，客户须每半月（自然月）通过4G门户网站（<a href="http://www.10086.cn/lte）进行一次测试意见反馈。若客户连续2个月（自然月）未递交问卷，移动公司有权暂停前述免费服务，且客户须至移动营业厅归还经检测无损坏可正常使用的4G终端、退还押金" target="_blank" rel="external">http://www.10086.cn/lte）进行一次测试意见反馈。若客户连续2个月（自然月）未递交问卷，移动公司有权暂停前述免费服务，且客户须至移动营业厅归还经检测无损坏可正常使用的4G终端、退还押金</a></em>。</p>
<p>好了，以上是关于4G的热身；真正使用体验如何，猛击<em><a href="http://itguwen.net/blog/140" target="_blank" rel="external">这里</a></em>。</p>
<p>来自：<a href="http://itguwen.net/blog/134" target="_blank" rel="external">http://itguwen.net/blog/134</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[防蹭网 - 保护你的无线网络]]></title>
      <url>https://atjason.com/348.html</url>
      <content type="html"><![CDATA[<p>蹭网其实指的是暴力破解你的无线密码，然后偷偷的使用你的无线网络</p>
<p>打个比方，你的密码就像是一个字（龘？），蹭网的家伙不会念，然后他就打开一本字典一个一个的比对，而且速度很快。最后他找到了这个字，也就知道怎么念了。</p>
<p><em>*被蹭网的表现</em></p>
<p>• 关闭路由器后重新打开，上网刚开始速度挺快，过会就变得很</p>
<p>• 直接登陆路由器，查看已经连接的设备列表。如果有你不认识的，就是来蹭网的</p>
<p>以下是防蹭网的几招秘技：more</p>
<p><em>*设置WPA2－PSK密码连接，并使用复杂的密码</em></p>
<p>安全性：★★★★</p>
<p>难度：★</p>
<p>这是最重要的一招</p>
<p>WEP密码有漏洞，很容易破解；WPA也不是很安全。需要使用最复杂的WPA2-PSK密码</p>
<p>尽量将密码设置得复杂些，可以夹杂大小写、标点符号等，越长越好，比如kdk#ka83kP%_A*R&amp;</p>
<p>想想，如果字典里没有这个字，或者蹭网的家伙需要找一万年，就让他找去吧～</p>
<p><em>*关掉你的WPS/QSS</em></p>
<p>安全性：★★★★</p>
<p>难度：★</p>
<p>如果你根本就不明白WPS/QSS是什么意思，相信我，放心关掉它吧，你根本不会用到</p>
<p>WPS/QSS是方便新设备连入无线网络的。对于普通用户来说，常用的设备就那么几个，而且输入一次密码后，之后就不需要再输入，这样WPS/QSS就没什么实际好处，反面给蹭网者开了方便之门。</p>
<p><em>*MAC地址过滤</em></p>
<p>安全性：★★★</p>
<p>难度：★★★</p>
<p>MAC地址就像是电脑（或手机、平板）的身份证，绑定MAC地址就是只让某些身份证访问网络。不过漏洞是，别人可以伪造MAC地址（身份证）；不便之处是，如果有朋友来访，需要添加他的MAC地址，或者临时禁用MAC地址过滤</p>
<p>Windows MAC查看方法：请“win+r”然后输入CMD，在窗口中输入“IPCONFIG /ALL”回车，查看MAC地址（有无线MAC和有线MAC，请仔细区分），格式类似于：68:a8:FE:3E:20:EW</p>
<p><em>*学会隐藏自己，禁止SSID广播，隐藏无线路由器名称</em></p>
<p>安全性：★</p>
<p>难度：★</p>
<p>一定程度上能让别人找不到自己（高手还是能找到的</p>
<p>不过，问题是，无线路由器对自己也是隐藏的，连接时需要自己在电脑或者手机上添加SSID名称密码，然后才可以连接。如果总是固定的设备使用无线网络（比如只是家里人，平时很少来客人），可以考虑隐藏SSID。</p>
<p><em>*修改路由器登陆名和密码</em></p>
<p>安全性：★★</p>
<p>难度：</p>
<p>路由器登陆密码就是路由器背后铭牌上标识的默认密码，通常登陆用户名和密码都是admin。可以用这个密码登陆路由器后将用户名改为其他名称，并设置复杂的密码。</p>
<p><strong>七伤拳 - 钓鱼法</strong> - 反蹭</p>
<p>安全性：★★★</p>
<p>难度：★★★</p>
<p>就是完全暴露自己，让别人的来蹭网，然后记住这个电脑的MAC地址，并把他们放到黑名单里，这样他们就再也不能来烦你了。不过，还可能会有新的。比如，你换邻居了，你邻居换电脑了，你邻居使用的伪造的MAC地址…你怎么这么倒霉</p>
<p>其实还有更狠的，让他蹭网，然后搬个小板凳，在他上网时默默欣赏他上了什么网站，QQ号是什么，继而QQ密码、网银密码……停，是你在蹭他？</p>
<p>以上几招，最重要的就是第一条：<strong>设置WPA2－PSK密码连接，并使用复杂的密码</strong>。招数虽然不多，但多加应用，就会像降龙十八掌一样无敌。</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[怎么设置好记又复杂的密码]]></title>
      <url>https://atjason.com/343.html</url>
      <content type="html"><![CDATA[<p><em>*简单的密码是很容易破解，复杂的却很难</em></p>
<p>• 如果采用暴力破解的方式破解密码，按每秒100万次计</p>
<p>• 如果是6位数字密码破解仅需1秒钟，16位数字密码需要317</p>
<p>• 如果是加上字母，6位需要半个小时，16位需要252367488266</p>
<p>• 如果是大小写字母外加标点符号，6位需要8天，16位需要1178254346886418432年</p>
<p><em>*怎样才是复杂的密码more</em></p>
<p>• 至少八个字符，越长越</p>
<p>• 包含了大小写字母、数字和符</p>
<p>基于这些标准，下列密码可作为强密码的示例</p>
<p>• d&amp;C24!Zp&gt;&gt;l</p>
<p>• *M@a09(b(aTQ</p>
<p><em>*怎样创建不易破解且便于记忆的密码</em></p>
<p>一种技巧是，选择一个短语，但仅使用每个单词的首位字</p>
<p>• 例</p>
<p>○ 我喜欢吃西瓜和苹果</p>
<p>• 提取句子中每个单词的首字</p>
<p>○ 密码：wxhcxghep</p>
<p>• 替换特殊字</p>
<p>○ 第一个字母大</p>
<p>§ Wxhcxghep</p>
<p>○ 在单词间、或最后添加你容易记住的特殊字符，如~`!@#$%^&amp;*()”;:?</p>
<p>§ Wxhcxg&amp;pg</p>
<p>○ @替换</p>
<p>○ !替换</p>
<p>○ 零 (0) 替换</p>
<p>○ $替换</p>
<p>○ 3替换</p>
<p>• 这将是一个破解难度极高而您自己却可以轻松记住的密</p>
<p>○ Wxhcxg&amp;pg%</p>
<p>另一个技巧是用数字和符号将几个单词串在一</p>
<p>• 2番茄炒3个鸡</p>
<p>○ 2fanqie3jida</p>
<p>• 根据之前 的规则转</p>
<p>○ -&gt; 2Fanqie3jida</p>
<p>○ -&gt; 2Fanqie+3jida</p>
<p>○ -&gt; 2Fanqie+3jidan#</p>
<p>再一个技巧是，着眼于即将到来的活动或对您有特殊意义的事</p>
<p>• 如，儿子在10月25号考</p>
<p>○ erzi1025kaosh</p>
<p>• 根据之前 的规则转</p>
<p>○ -&gt; Erzi1025kaosh</p>
<p>○ -&gt; Erzi@1025kaosh</p>
<p>○ -&gt; Erzi@1025kaoshi%</p>
<p><em>*不要使用相同的密码</em></p>
<p>• 如果您实在不想设置无数的密码，可以在某一密码是做变</p>
<p>• 变种规则可采用你比较容易记住的。比如，拆开目标拼音的首字母，放在基础密码的前后</p>
<p>○ 比如，基础密码为”8kak@&amp;A</p>
<p>○ 微博密码为”W8kak@&amp;Ab</p>
<p>○ 微信密码为”W8kak@&amp;Ax</p>
<p>• 重要密码还是要和变种的密码不同</p>
<p><em>*附加建议</em></p>
<p>• 不要使用个人信息，例如自己 ID 的派生形式、家庭成员的姓名、汽车牌照、电话号码、宠物、生日、身份证号、地址</p>
<p>• 不要在你不信任的电脑输入重要密</p>
<p>• 不要与任何人共享您的密</p>
<p>• 经常做出更改 。新密码应与前一个密码有很大差别；哪怕是增加一个字符也好，或者加上（?lACPAs56IKMs111111111111111111111111111″）N个1也</p>
<p>• 不要害怕创建长密码。尽管密码很长，但如果您自己可以轻松记住，总比密码被盗时追悔莫急来得好。</p>
<p>你的密码是？哈哈，来微软安全中心检测下你的密码强度：<a href="https://www.microsoft.com/zh-cn/security/pc-security/password-checker.aspx" target="_blank" rel="external">https://www.microsoft.com/zh-cn/security/pc-security/password-checker.aspx</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Kindle 4 原生系统替换中文字体]]></title>
      <url>https://atjason.com/330.html</url>
      <content type="html"><![CDATA[<p>更换字体后的效果：</p>
<p><a href="https://ps.toolinbox.net/5us2b.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/jgzgr.jpg" alt=""></a></p>
<p>以下是根据网络上的教程+自己刷机步骤整理，自己不会忘，也供诸君参考。more</p>
<hr>
<p>准备字体</p>
<ul>
<li><p>中文字体建议：</p>
<ul>
<li><p>主字体选择“方正准雅宋 ”；</p>
<ul>
<li><p>粗体是“方正特雅宋 ”；</p>
</li>
<li><p>斜体是“华文中宋斜”</p>
</li>
<li><p>粗斜体是“华文中宋粗斜”</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>英文字体优化建议：</p>
<ul>
<li><p>Serif（衬线）字体由 PMN Caecilia 换成了 Droid Serif，</p>
<ul>
<li>Sans Serif（无衬线）字体则由经典的 Helvetica换成了 Droid Sans。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>复制字体，进入调试模式 </strong></p>
<p>将Kindle通过usb连接至PC，要目录创建fonts文件夹，将CJK.ttf 和CJK_Bold.ttf(前者是普通字体，后者是粗体)。</p>
<p>然后，为了进入调试模式，需要在kindle根目录下创建一个名为“ENABLE_DIAGS”的空文件。重启设备(Settings -&gt; Menu -&gt; Restart)</p>
<p><strong>调试模式下开启USBnet </strong></p>
<p>重启后，设备会自动进入调试模式，将Kindle连上USB线，在菜单中依次选择 Misc individual diagnostics -&gt; Utilities -&gt; Enable USBnet，记录IP地址，一般为192.168.15.244；最后并根据提示按方向键右键确认(FW RIGHT)</p>
<p><strong>设置网络连接</strong></p>
<p>Mac下连接新创建的网络节点（Window需要安装驱动），设置该连接IP为：192.168.15.1，子网掩码为：255.255.255.0 ，其它保持默认。</p>
<p><strong>SSH登录</strong></p>
<p>现在就可以通过SSH登录了，在Putty中连接到192.168.15.244(这是Kindle的默认地址) ，输入用户名为 root ，密码很有可能为mario；不然看文后链接 。</p>
<p>ssh root@192.168.15.244</p>
<p><strong>替换中文字体 </strong></p>
<p>输入以下命令挂载驱动器：</p>
<p>mount /dev/mmcblk0p1 /mnt/base-mmc</p>
<p>复制字体</p>
<p>cp /mnt/base-us/documents/fonts/CJK.ttf /mnt/base-mmc/usr/java/lib/fonts/</p>
<p>cp /mnt/base-us/documents/fonts/CJK_Bold.ttf /mnt/base-mmc/usr/java/lib/fonts/</p>
<p>修改系统默认字体设置</p>
<p>在修改前，先对系统文件进行备份，有备无患：</p>
<p>cp /mnt/base-mmc/usr/java/lib/font.properties /mnt/base-mmc/usr/java/lib/font.properties.bak</p>
<p>然后，执行：</p>
<p>vi /mnt/base-mmc/usr/java/lib/font.properties</p>
<p>找到如下行：</p>
<p>hans.0=MHeiM18030_E.ttf</p>
<p>hans.plain=MHeiM18030_E.ttf</p>
<p>hans.1=MHeiM18030_E_Bold.ttf</p>
<p>hans.bold=MHeiM18030_E_Bold.ttf</p>
<p>将其修改为（按 i 键进入编辑模式）：</p>
<p>hans.0=CJK.ttf</p>
<p>hans.plain=CJK.ttf</p>
<p>hans.1=CJK_Bold.ttf</p>
<p>hans.bold=CJK_Bold.ttf</p>
<p>保存退出(按ESC，输入 :wq)。</p>
<p>Update：</p>
<p>经过以上步骤的修改后，语言为中文的书籍就能够正常显示了，但对于未设置语言的书籍，可以用PC上的calibre进行设置。</p>
<p><strong>退出调试模式 </strong></p>
<p>在Kindle上退回到调试模式主菜单，并选择”’Exit, Reboot or Disable Diags’”-&gt;”’Disable Diagnostics”,，并按照提示按左键确认（FW Left ）退出。稍等片刻，设备将重启并回到正常模式。</p>
<p>退出调试模式很慢，按部就班就行 ，k4的系统重启一样需要一些耐心。</p>
<p>如果再次使用USB进入调试模式，需要建立”enable_diags”文件夹…….</p>
<p>**到退出调试时提示：pcbid does not match with DSN</p>
<p>**K4 Black刷砖后的确会有这个问题， 只有这个菜单有问题，其他菜单正常。</p>
<p>在 USBNETWORK 下 敲：</p>
<p>idme -d –bootmode main</p>
<p>reboot</p>
<p>切换到main，下次就不会自动进入diags模式了。</p>
<p><strong>链接 </strong></p>
<p><a href="http://bbs.duokan.com/forum/forum.php?mod=viewthread&amp;tid=50925&amp;highlight=kindle%2B4%2B%E5%AD%97%E4%BD%93" target="_blank" rel="external">http://bbs.duokan.com/forum/forum.php?mod=viewthread&amp;tid=50925&amp;highlight=kindle%2B4%2B字体</a></p>
<p><a href="http://bbs.zoopda.com/thread-117055-1-1.html" target="_blank" rel="external">http://bbs.zoopda.com/thread-117055-1-1.html</a></p>
<p><a href="http://axiu.me/trial/change_font_for_kindle4/" target="_blank" rel="external">http://axiu.me/trial/change_font_for_kindle4/</a></p>
<p><a href="http://miaoo.in/kindle4-modify-font.html" target="_blank" rel="external">http://miaoo.in/kindle4-modify-font.html</a></p>
<p><a href="http://bbs.duokan.com/forum/thread-73792-1-1.html" target="_blank" rel="external">http://bbs.duokan.com/forum/thread-73792-1-1.html</a></p>
<p><a href="http://irising.me/2011/12/12574/" target="_blank" rel="external">http://irising.me/2011/12/12574/</a></p>
<p><a href="http://bbs.duokan.com/forum/forum.php?mod=viewthread&amp;tid=64538&amp;highlight=kindle%2B4%2B%E5%AD%97%E4%BD%93" target="_blank" rel="external">http://bbs.duokan.com/forum/forum.php?mod=viewthread&amp;tid=64538&amp;highlight=kindle%2B4%2B字体</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[需求的生死关]]></title>
      <url>https://atjason.com/324.html</url>
      <content type="html"><![CDATA[<p>不是每个需求都有价值、或者即便有价值也不一定做。确定一个需求做还是不做、何时做，是PM需要考虑的事情，也是需求所面临的生死关。more</p>
<ul>
<li><p>是否和主体应用紧密相关</p>
<ul>
<li>非常紧密、非做不可 | 一般、最好包含 | 可有可无 | 无关</li>
</ul>
</li>
<li><p>如果做，能给用户带来什么价值、便</p>
</li>
<li><p>如果不做有什么坏处，有没有其他替代方</p>
</li>
<li><p>如果做，最简要的实现形式是什么，会不会对现有的应用有影</p>
</li>
</ul>
<p>当然，这只是确定这个需求做还是不做，更进一步的还要考虑很多方面</p>
<ul>
<li><p>技术可行</p>
</li>
<li><p>技术实现成</p>
</li>
<li><p>需求细节、Corner Cas</p>
</li>
<li><p>如何测试、验</p>
</li>
<li><p>如何推广、教育用户</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[用惯用法快速打造常规用户交互]]></title>
      <url>https://atjason.com/319.html</url>
      <content type="html"><![CDATA[<p>不是、也没必要每个用户交互都要惊天地、泣鬼神，用惯用法快速打造常规用户交互、或者应用的常规部分，是比较现实、高效的办法。</p>
<p>more显然，这个话题会比较有争议性，所以先明确问题的前提和边界：</p>
<ul>
<li><p>常规用户交</p>
</li>
<li><p>项目前</p>
</li>
</ul>
<p>惯用法的例子：登陆</p>
<p>惯用法可以快速搭建原</p>
<p>“快”是个宝贵、重要的目标，一旦有了快，接下来的好处就不言而喻。比如，可以更早的进行可用性测试，更快的进行迭代。</p>
<p>用户已然熟悉某些惯用</p>
<p>比如说登陆，用户闭着眼睛就知道先输入用户名、再输入密码，就没必要来个创新，让用户先输入密码、再输入用户名。再者，虽然在手机上输入复杂的密码是比较低效的办法，但在没有改进的情况下，大量的应用已经教育了用户，所以即使低效，用户还是能够正常使用。</p>
<p>当然，强调惯用法并不是否定创</p>
<p>创新要有基础。脑子里凭空想出点子很难，在现有东西的基础上改进就容易得多，这就是时下比较热门的微创新。所以，惯用法快速打造底子，让微创新变得更具可能性。</p>
<p>PS：登陆虽然有已经多的惯用法，但其实也是个无尽的话题。特别是随着技术的演进，会有更多的方式，也会有更大的市场，想想手机上输入复杂密码这种低效的方式还可以这么广泛的存在就知道了。</p>
<p>谁会每一个推出在触摸屏上用指纹登陆呢？</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[学习图形设计工具GIMP]]></title>
      <url>https://atjason.com/310.html</url>
      <content type="html"><![CDATA[<p>[caption id=”” align=”aligncenter” width=”106”]<a href="https://ps.toolinbox.net/b86mo.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/y6iw7.png" alt="光芒剑"></a> 光芒剑[/caption]</p>
<p>最近学习了一段时间的GIMP（GNU Image Manipulation Program）（ing…），写点东西纪念下more</p>
<p>先说下对GIMP这款软件的印象</p>
<ul>
<li>小</li>
</ul>
<p>这应该是首当其冲的印象。图形设计软件从逻辑和算法上应该是很复杂的软件，像Photoshop动动辄几百MB及至上G的。相比之下，GIMP几十MB的安装文件，确实让我眼前一亮。也许是自己有精简的情节，并不喜欢像传言中有95%的功能用不到的Word，只喜欢自己需要的功能。</p>
<ul>
<li>免费、且开</li>
</ul>
<p>这是最实在的印象，相比较于Photoshop最低$699的价格，免费、开源实在是很有爱。而且这会增加使用者，培养社区，丰富像插件之类的资源。</p>
<ul>
<li>跨平</li>
</ul>
<p>支持主流的Windows、Mac、Linux。尤其是Mac，刚刚完成了原生支持，让果粉感觉很亲切。</p>
<ul>
<li>兼容行业标准Photosho</li>
</ul>
<p>不管Photoshop强大还是难用，它就在那，工业标准。抛开标准自己另辟蹊径太难、风险太大。GIMP之于其的兼容有两方面：一是操作类似，二是数据格式可以相互转换。所以，很安全。</p>
<p>PM之于图形设</p>
<p>严格来说，PM和User Experience, Graphics Design是不同的，但实际上有很多的重叠。尤其在国内，往往并没有区别得那么明确，人少的团队，大家都是多面手。所以基本的图形底子，对于PM来说还是必要的</p>
<p>不过，图形设计毕竟比较博大精深，我也并不打算深入探索，只要了解基本理论（如Layer, Mask, Pattern, Path, Selection, Colors, Filter），常用套路（如使用Mask扣图，使用Guide Lines切图)，熟悉某些工具（如GIMP，MarkMan，IrfanView)就可以了</p>
<p>用于日常生</p>
<p>这个有时还是很有用的。现在大家照相、拍视频越来越多，会修片、会编辑视频，就像以前会装机、装软件一样，虽然不再能用来骗妹子，却也实在是居家必备之良药。</p>
<p>国内外资</p>
<p>在学习的过程中，确实发现英文、中文资料的悬殊。官网没有最新中文的Tutorial不说，连YouTube和优酷上出来教程也根本不在一个数量级（而且，优酷应该有一多半都是从YouTube上复制过来的）</p>
<p>BTW，有一个中文的Tutorial中两个工具的名称竟然翻译反了，害得我这个菜鸟晕了半天。</p>
<p>PS，文章开头的图片，就是GIMP设计的一个小样，以后继续！</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[慢下来，再慢一点]]></title>
      <url>https://atjason.com/300.html</url>
      <content type="html"><![CDATA[<p>慢到适合自己的节奏</p>
<p>学会休息</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[不要让自己离不开工作]]></title>
      <url>https://atjason.com/296.html</url>
      <content type="html"><![CDATA[<p>如果今天不上班，你最想做什么？如果回答不出来，说明你已经过于沉溺于工作了more</p>
<p>以为工作离不开自己，其实是自己离不开工</p>
<p>我们通常以为自己在公司、项目中比较重要，离开自己工作就没办法运转；但其实往往不是这样。即便真是这样，也是因为工作中角色定义不明、不够放权、流程有问题、人力资源过于匮乏、任务分配不合理、等等</p>
<p>过于沉溺于工作，其实对工作并不</p>
<p>表面上看起来这样的员工、态度对工作是有利，但物极必反；因为如果长期从事于相同、或类似的事情，人总是会审美疲劳、厌倦、控制不了自己的情绪、积极性不高，在这种状态下工作，不仅效率不高，而且还可能出错，进而给公司带来更大的损失</p>
<p>工作之外，一定要有自己另外的兴</p>
<p>而且，最好是和工作性质不同的兴趣。这样可以换换脑子、减轻疲劳，也可以趁机培养自己另外的特长，为以后铺垫更多的机会</p>
<p>平衡工作与生活，是一门艺术</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[总体布局 VS 单点切入]]></title>
      <url>https://atjason.com/292.html</url>
      <content type="html"><![CDATA[<p>作为进入新领域的不同途径，应该总体布局、逐渐丰满，还是单点切入、逐渐长大？more</p>
<p>总体布局，需要很强的能力、丰富的经验、充分的资源。如果达不到这样的前提，很可能因为局布得太大、资源过于分散，反面导致速度慢、被更快的、单点实力强的对手各个击破</p>
<p>相对而言，单点切入的可操作性高。抓住一个切入点，可以很快的投入资源进行尝试。即便尝试错了，也可以很快发现、进而调整。当找到合适的点后，集中发力，可以更容易站稳脚跟、建立壁垒。</p>
<p>比如说个人想学习如何做好产品经理，用布局的方式是，首先列出产品经理所需要的完整的能力模型，然后根据自己的实际情况，加强薄弱环节、逐渐完善。但事实是，作为初学者，很难有能力了解到“完整的能力模型”，即便是有高人指点也很难做到，这就使得第一步都很难迈出来</p>
<p>与之相对，问点切入的途径是，先找到目前能做的一个点；比如现在工作需要做竞争对手分析，那就充分的研究如何做好对手分析，进而在做的过程中发现关联点，从这些点中找出自己感兴趣的、薄弱的点，进一步的实践、增强，这样效果可能更好。</p>
<p>总之，在资源、能力没有达到绝对高度前，首先单点切入，关注细分领域，整合资源，集中发力。</p>
<p>PS：有言：“互联网切忌布局”</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[手机凡客：移动互联网时代开放的心态]]></title>
      <url>https://atjason.com/288.html</url>
      <content type="html"><![CDATA[<p>手机凡客，并非凡客自己独立开发，而是由合作伙伴耶客完成：more</p>
<ul>
<li><p>凡客并没有自己独立开发的能力；耶客的帮助，使其可以以最少的成本、快速布阵手机</p>
</li>
<li><p>凡客这一客户，使耶客的能力得以充分发挥，在业界得到充分的声誉，并藉此获得风</p>
</li>
</ul>
<p>在（移动）互联网这一快的时代，要专注于自己擅长的领域，把关联的产品、服务，开放给第三方合作伙伴；这样既可以让自己更专注，同时合作伙伴的成长，也可以为自己赢得更多的发展机会、更快的发展节奏。</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2012移动互联网大会 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[斯凯网络CEO宋涛：大平台、小公司]]></title>
      <url>https://atjason.com/282.html</url>
      <content type="html"><![CDATA[<p>公司大到一定程度，内部创新动力就会不足；如何鼓励创新、二次创业，这里给出斯凯网络的做法：more</p>
<ul>
<li><p>根据公司发展、团队兴趣，提炼出几个项</p>
</li>
<li><p>公司投资项目，团队占20%股份，类似于PE</p>
</li>
<li><p>公司与团队签订合同，之后项目的人事权、方向全部由团队负</p>
</li>
<li><p>两年后，用市场的方法对项目进行估值，然后用公司的股票兑换项目的虚拟股权，相当于内部IP</p>
</li>
<li><p>项目越成功，公司利益也越大，二者是统一</p>
</li>
</ul>
<p>视频地址：<a href="http://v.youku.com/v_show/id_XMzk2NDAxMTEy.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XMzk2NDAxMTEy.html</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2012移动互联网大会 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[李开复《互联网的产品精神》的演讲]]></title>
      <url>https://atjason.com/276.html</url>
      <content type="html"><![CDATA[<p>视频地址：<a href="http://v.youku.com/v_show/id_XMjcyMDA2MDI4.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XMjcyMDA2MDI4.html</a></p>
<p>创新与产品经</p>
<p>创新，不是研究出新的技术、发明、研究，然后通过产学研结合生成新的产品；而是在产品构思的第一天，就整合了用户、技术、商业模式这三者。背后的角色，就是产品经理more</p>
<p>软件产品成本达到历史新</p>
<p>三大原因：开源软件、云计算平台（解决带宽、服务器…）、网络商店（方便市场、销售）</p>
<p>关注用</p>
<p>用户的痛点可以成为产品的契机，如UC Web对于手机流量</p>
<p>数据导向很重</p>
<p>用实验、数据来决策，而不是拍脑袋；互联网可以先推出基础产品，然后根据用户反馈、数据来调整、改进，快速迭代、微创新</p>
<p>清晰的定</p>
<p>不能太依赖、迷信用户；在定义产品时，心中首先要用Idea，然后根据用户数据来验证、调整；做什么产品是不能通过用户调查直接得到的；如Hao123的定位：非专业电脑使用者的浏览器首页</p>
<p>重视细</p>
<p>自己产品、竞争对手产品骨灰级用户；如Google Search，植物大战僵尸在细节中包含了大量的细节</p>
<p>别锁在框架</p>
<p>汽车制造者，曾试图用缰绳来控制汽车</p>
<p>微创</p>
<p>很多伟大的创新，都是建立在巨人的肩膀上，整合不同的领域；例如Kik之于短信</p>
<p>洞悉未</p>
<p>抢占先机；如果能把握大环境、战略正确，想做错事都不容易</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[返利网产品总监：怎么做一个好的产品经理]]></title>
      <url>https://atjason.com/273.html</url>
      <content type="html"><![CDATA[<p>视频地址：<a href="http://v.youku.com/v_show/id_XMzk5NDY5OTgw.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XMzk5NDY5OTgw.html</a></p>
<p>初</p>
<p>别忘了为什么要做产品经理</p>
<p>别得指望</p>
<p>产品经理不只是PRM、原型、用例…产品经理是为了做出好的产品</p>
<p>产品经理的价</p>
<p>发现用户、市场的需求，找到自己合适的解决方案，并在合适的时候、把合适的产品投放到市场上</p>
<p>沙滩上的</p>
<p>发现鱼的真正需求：我要呼吸；站在比用户更高的立场上寻找解决方</p>
<p>别指望救活所有的鱼； 别指望满足所有用户的所有需求</p>
<p>同理</p>
<p>站在用户的脚上去思考、体验</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[周鸿祎《怎样才能成为一个优秀的产品经理》的演讲]]></title>
      <url>https://atjason.com/270.html</url>
      <content type="html"><![CDATA[<p>视频地址：<a href="http://v.youku.com/v_show/id_XMjczMzA0MjQ0.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XMjczMzA0MjQ0.html</a></p>
<p>产品是基</p>
<p>包括商业价值等在内，都是建立在优秀的产品基础上</p>
<p>记住大</p>
<p>以CEO、养自己的孩子的心态对待产品</p>
<p>忘掉小</p>
<p>避免为自己、为周围的同事做产品，而应该真正从用户的角度去考虑、体验</p>
<p>职位不重</p>
<p>关键是有能力调动现有的资源，做出优秀的产品</p>
<p>做产品不一定要创</p>
<p>利用公司的平台做产品，积累做产品的经验，就已经在为创业做准备</p>
<p>一句笑语：怎样做好一个产品经理，是需要20包面巾纸才能讲完的一个悲伤的故事。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[依靠专业的力量]]></title>
      <url>https://atjason.com/260.html</url>
      <content type="html"><![CDATA[<p>也许对于你来说难于登天的问题，在行家眼里，只是一句话的事more</p>
<p>在申请美国签证的时候，需要根据要求拍摄照片。而这张照片的要求非常奇特（至少对我来说），50mm*50mm，头部的比较、头部的大小、背景色都有严格的要求。由于我不熟，花了很多时间做准备工作，心里还是没底。</p>
<p>结果，去照相馆照相的时候，当我准备仔细的给老板介绍照片要求时，老板说：“美签啊，简单，最近出国的人越来越多了”。然后，分分钟就把照片搞定了。我当时那个雷啊，早知道这样，我花那么多时间准备啥啊？</p>
<p>专业，真的是专业！</p>
<p>一个人不可能做所有事情；所以，把自己的事情做得专业，让专业的人帮你做事</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PM之于OEM产品(5)~用专业赢得客户尊重]]></title>
      <url>https://atjason.com/257.html</url>
      <content type="html"><![CDATA[<p>项目的成功需要客户的积极配合，进而需要其信任。用专业赢得客户信任、及至尊重more</p>
<p>帮助客户改进其设</p>
<p>客户通常有比较好的想法，但又通常不擅表达、词不达意（当然，如果他也是这方面专业，就不会来找你）。这时，你可以用你专业的水准去帮助客户拾遗补漏、更正、改进。这样的沟通，能快速增加客户对你的信任。</p>
<p>当然，这需要额外的工</p>
<p>比如，客户有个垃圾设计，并且还比较坚持（你总会碰到这个固执的错误者，也许他真的有他的考量），实现它比较容易；同时，你自己知道有种更好的设计，但实现起来比较困难。你会怎么办？将用户错而错，还是勇敢的站出来？我的经验和建议，帮客户改进。</p>
<p>要知道，这些额外的工作是值得</p>
<p>有了这些铺垫，对方会更愿意配合你的工作。相信你很专业后，之后提出对己方有利的修改时，对方也更容易接受。总之，投资回报比通常很高。</p>
<p>当然，这里有个</p>
<p>毕竟只是一个项目，而不是自己的产品；即便是自己的产品，也要在产品的精雕细琢和市场时机上平衡。所以，帮用户改进，要适可而止。或者，厚黑的说，这最终是为了减少我们的投入、增加收入。</p>
<p>其实，帮用户改进，是不可避免</p>
<p>也许，当时客户团队里拍板的人告诉，就做这个垃圾的设计，而且以后也不会改（你信吗？），你不提建议就做了。但事后，客户团队里另一个人（通常是更高职位、或者同一职位的继任者）发现了这个问题，并且要求用更好、但更复杂的设计去改进。这时，你就赔了夫人又折兵，之前的实现变成了沉没成本，你既用付出了复杂实现的成本，又没有捞到好处。</p>
<p>当然，你可以就此向客户追加项目投资（这通常很难、不现实），但客户已经不信任你了，以后也不再愿意和你合作。</p>
<p>用你的专业帮用户改进，名利双收，何乐而不为？</p>
<p>记住，最专业的是，把客户利益放在第一位，至少是己方利益之上</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[长期高压工作的意义]]></title>
      <url>https://atjason.com/251.html</url>
      <content type="html"><![CDATA[<p>长期高压、高负荷的工作，导致不断退化的视力、不断被透支的身体，都在警示着自己，是该停下来好好想想了more</p>
<p>高压工作可以激活自己的工作能</p>
<p>每天加10封邮件和每天回100封邮件、同时处理1件事和同时处理10件事，其中的差别甚至不是10倍，所需要的能力也相差巨大。量到了一定程度，就会是质变。高压工作可以使自己被动面对大量的事务，激发自身潜能，从而变成自己基本的能力。</p>
<p>高压工作可以锻炼自己的抗压能</p>
<p>不管是工作，还是生活，没有压力是不可能的。想过好的生活、想要有大的成就，基本上就要面对大的压力。没什么是一帆风顺的，都是经历各种坎坷后才能见到彩虹。工作上的高压可以极大的提高自己应对压力时的心态和处理能力，使得下次碰到类似、或者更糟的情况时，不至于崩溃</p>
<p>高压工作可以在短时间内增加自己的经</p>
<p>经验是在做事的过程中积累的，做的事情多了，经验自然会有相应的积累</p>
<p>高压工作可以让自己看到以前不曾看到的自</p>
<p>比如说在这个项目中，经过很长的高压工作后，感觉自己还是比较在意安逸、享受的生活，而不只是简单的工作狂和唯成功主义者，简单的生活和一点点成绩也可以让自己满足。在更深层次更好的了解自己后，可以为以后的生活、职业规划提供更好的依据。</p>
<p>高压工作可以让自己有更多思考的契</p>
<p>脑子处于高度活跃中，再加上有很多外部刺激，可以更多的激发自己的思考，进而可能让自己有不一样的视角和认识。</p>
<p>检验自己高压工作是否有意义的一个标准是，如果你突然不用工作了，可以把手头的事停下来，知不知道自己要做什么。如果茫然不知所措，说明你已经在工作中迷失，是时候调整下自己的步伐和方向了。</p>
<p>可以很努力，但不是工作狂，更在意和生活的平衡，有技巧的工作，享受生活。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PM之于OEM产品(4)~做最重要的事]]></title>
      <url>https://atjason.com/247.html</url>
      <content type="html"><![CDATA[<p>同时做的事情比较多，并且容易受到其他事情的打扰，这时一定要认准、并坚持做最重要的事，并且专注</p>
<p>more</p>
<p>什么是最重要的事？注意是你的职责范围内、无论如何也不能推给别人做的事。其实重不重要，很容易分清楚。</p>
<p>重要和紧急在事务处理中总是分不开的。紧急的事情当然要先处理，但一定要谨慎考虑这是不是真的紧急、还是只对别人紧急，对你、对项目不紧急。千万不能忙于伪紧急事情，而一再耽误重要的事情。</p>
<p>最没有档次的毛病就是，抓不住主要的问题，不知道什么是最重要的，而头疼医头，抓住什么做什么、别人问什么就做什么、来什么就做什么，到最后发现自己职责范围内的事情一团糟，项目进展也不好。</p>
<p>另外，学会推动别人为你做事、为你的目标服务，把你的目标转化为别人的目标、工作。</p>
<p>转几点建议：</p>
<ol>
<li><p>不要想把所有事情都做完</p>
</li>
<li><p>手边的事情并不一定是最重要的事情</p>
</li>
<li><p>每天晚上写出你明天必须做的事情，按照事情的重要性排列</p>
</li>
<li><p>第二天先做最重要的事情，不必去顾及其他事情。第一件事做完后，再做下一件</p>
</li>
<li><p>晚上，如果你列出的事情没有做完也没关系，因为你已经把最重要的事情都做完了，剩下的事情明天再做。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PM之于OEM产品(3)~压力与咬牙]]></title>
      <url>https://atjason.com/243.html</url>
      <content type="html"><![CDATA[<p>长时间顶着让人崩溃的压力，几度有放弃的冲动，最终只能咬牙坚持more</p>
<p>每当看到N封未读邮件</p>
<p>每当看到长长的Todo List</p>
<p>每当需要协调各部门的资源</p>
<p>每当不同的人来问问题</p>
<p>每当碰到自己搞不定的问题</p>
<p>…</p>
<p>压力从哪里来？</p>
<ul>
<li>事情</li>
</ul>
<p>如果只是专心得做一件事，通常都能做好；但如果需要同时处理多种不同的事务，就需要高一级别的能力。而压力、沮丧的感觉，会随着事务的增多而急剧的增加</p>
<ul>
<li>时间</li>
</ul>
<p>如果有充分的时间做事，通常都能做好；但如果需要短时间内解决问题，就需要更加集中精力、耗费更多的脑细胞，压力也会陡增</p>
<ul>
<li>能力有</li>
</ul>
<p>这可能是更根本的原因。如果有能力快速的解决各个问题，自然不会有什么压力。当然，人的能力是有限的，也是需要不断锻炼、提高的</p>
<ul>
<li>心</li>
</ul>
<p>当面对一堆做不完的事情，用什么样的心态面对很重要。如果一下子就沮丧到不想做事情、想放弃，那情况会更烂；如果能用积极、淡定的心态，一件件去做、做一件少一件，那么效果会大不一样</p>
<ul>
<li>体</li>
</ul>
<p>人在体力充沛和匮乏时，所有的表现都会差很多。记得让自己有充分的身体锻炼和休息</p>
<p>怎么解决压力</p>
<p>除了从压力来源找方案，如提高能力、注意休息，还要学会放松、发泄。就像一个容器，只能把积蓄在体内的压力释放出去，才能承担更多、更多的压力</p>
<p>回去睡觉！</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PM之于OEM产品(2)~客户与开发团队间的巨大鸿沟]]></title>
      <url>https://atjason.com/234.html</url>
      <content type="html"><![CDATA[<p>客户希望在一个月内完成，开发团队需要一年；客户希望造飞机，开发团队只能折纸飞机。这不是玩笑，有时是客户和开发团队间的真实写照more</p>
<p>当然，首先，如果实在做不了，不要接这个单子，那是神仙也帮不了你的；如果差不多可以，就需要进一步解决这个问题。</p>
<p>解决问题的办法就是，讨论、协商、妥协、形成方案</p>
<p>内部要统一</p>
<p>其实公司内部有很多种角色，包括管理者、销售、产品经理、项目经理、开发人员、协作部门、等等。虽然大家根本利益一致，但短期内不同，都希望最利于自己、 最省事的方案行事。但是，对外只能有一种声音。所以，在对外沟通的之前，对内要首先统一。办法无非是沟通、妥协，实在不行，用行政、管理的办法。</p>
<p>与客户沟通，流程要明确、渠道要畅通、角色要清晰</p>
<p>什么时候沟通？和谁沟通？怎么沟通？等等。邮件、电话、视频各有其优势，要适当选用。建议建立例会制度，多方Update各自的状态，形成结论；对不明确的地方，确定下一步行动方案。对于参与人员，各自是什么角色、负责哪方面，双方都要明确。</p>
<p>沟通中形成结论之前，重要是获取足够的信息。己方的信息容易获取，关键是对方的信息。要试着明确：</p>
<ul>
<li><p>客户可以让步的地方是什么</p>
</li>
<li><p>客户的底线是什么</p>
</li>
<li><p>客户真正想要的、真正的需求是什么</p>
</li>
<li><p>客户是否有其他不可抗拒的因素？比如配合其他产品发</p>
</li>
</ul>
<p>有了这些信息之后，事情就变得简单了。就像是买菜，”五元一斤”，”太贵了，三元吧”，”不行，成本管着呢，最便宜四元”，”好的，来两斤”。而且美国人是比较easy going的，行就行，不行就不行，没那么多模糊地带和潜规则，相对容易打交道。</p>
<p>在沟通、协商的过程中，要自信。项目需要一年，就咬定一年，不要因为客户觉得太长就心虚得说10个月，或者使用Maybe, Probably之类的词汇。对方会觉得你不专业、没有决策权、跟你说也白说，进而会看轻你、当软柿子捏。</p>
<p>协商的结论，就是Schedule、Milestone，什么时候完成哪个版本、包含哪些Feature。一旦形成结论，客户不能随意变动（当然，不变动是不可能的，但一定要通过一定的流程来变，而不是想变就变很随变），开发团队即使加班加点也要保证完成。</p>
<p>事情会慢慢变得清晰；开始时摸不着头脑的事情，慢慢会变得自然而然</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PM之于OEM产品(1)～开篇]]></title>
      <url>https://atjason.com/232.html</url>
      <content type="html"><![CDATA[<p>现在负责一个OEM产品，这里以系列文章的形式，记录产品开发周期中的方方面面和自己成长的足迹。more</p>
<p>什么是OEM产品？</p>
<p>OEM(Original Equipment Manufacturer)字面意思为原始设备制造商，指一家厂家根据另一家厂商的要求，为其生产产品和产品配件 ，俗称加工贸易。</p>
<p>OEM产品通常称为OEM项目，因为它其实是以项目的形式来运作，而不是真正的产品。</p>
<p>OEM产品研发的特点：</p>
<ul>
<li>突</li>
</ul>
<p>OEM项目通常是公司上层、销售团队在运作，信息也局限在小范围内。等PM、开发团队知情的时候，通常是单子谈到尾声、基本谈成的时候。可能今天得到消息、明天就要动手开始做，所以说突然</p>
<ul>
<li>时间</li>
</ul>
<p>OEM厂商通常希望尽快见到产品，毕竟人家是花了钱的。而且项目周期很难更改，因为可能要配合该公司的其它产品发布</p>
<ul>
<li>变化</li>
</ul>
<p>一方面前期的需求主要是销售在谈，可能在理解上和真正的产品、用户真正的需求有偏差，所以要改。另一方面，用户其它产品策略的调整，也可能会影响到当前的OEM产品</p>
<p>所以，OEM产品基本上是比较难做、做起来比较累的。那么，在这么苛刻的条件下，PM应该如何做呢？</p>
<ul>
<li>尽早参</li>
</ul>
<p>在决策层允许的情况下，尽早参与，尤其是参与Feature的定义。如果销售已经和用户谈好了、合同已经签了，到时再改就难了。所以，尽早参与，可以避免接受一些不可能完成的任务，或者对Feature的定义产生一定的影</p>
<ul>
<li>充分了解客户需</li>
</ul>
<p>要仔细研究客户提供的全部资料，尽量和客户直接交流，把握其真正需求</p>
<ul>
<li>充分了解开发团</li>
</ul>
<p>对于开发团队，了解其信息是比较容易、直接的</p>
<p>已经有什么：不用太担</p>
<p>能做什么：了解其最简实现、复杂实</p>
<p>不能做什么：这是关键，试着找到变通的途径，实在不行，实话实</p>
<p>要坚信自己能把项目做好！</p>
<p>既然已经开始，就打个漂亮仗；至少在自己职责范围内，尽力做好。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[事业未动，休息先行]]></title>
      <url>https://atjason.com/230.html</url>
      <content type="html"><![CDATA[<p>做事之前，先学会如何休息more</p>
<p>事业是长期的，其间肯定会遇到各种挫折、困难，人也会变得烦闷、低落。这时，一些平常小意思的问题，都会变成拦路虎。要解决这些问题，自己并不是缺乏能力，而只是没了那份心力。你要做的，不是拉钱找人、增加资源，而是休息、放松，重新充电。</p>
<p>设置休息节点，可能比设置目标节点更重要。</p>
<p>不然，结果可能是事业的半成品+疲惫、失败的你</p>
<p>PS：坚持每周游泳、散步，每双周去个新的地方、认识新的人</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[别做太多准备]]></title>
      <url>https://atjason.com/228.html</url>
      <content type="html"><![CDATA[<p>别做太多准备，除非它不影响你马上行动more</p>
<p>周四想到去租车，周五略做准备后提车，周六出去兜风并还车。对我来说，这样的效率算高的。</p>
<p>其实，租车还是有些麻烦的，真的要做足功课的话，会有很多事要做。像是要选哪家租车公司、什么车型、怎么验车、了解其中的潜规则、等等。而且，在了解这些信息的时候，看到了很多关于租车的负面消息，什么被坑钱之类的，差点因此而放弃。</p>
<p>最好，我还是决定勇敢得当个小白鼠，最多是花钱买教训。结果，并没有遇到网上说的负面情况，玩得还不错。如果当初做准备的时候，因为看到部分负面消息而放弃的话，那我就不能过手瘾、不能享受开车的乐趣了。</p>
<p>没有准备好的战争，大多时候我们都是匆匆上阵。既要有审时度势的能力，更要有当机立断的魄力，就算做错了又怎样？何况又不一定错。</p>
<p>并不是说深思熟虑不对，而是并不适用于所有情况，尤其是生活中实实发生的小事、不大的事。在这些事情上费思量，还不如直接做，做错的代价甚至可能比思量的代价要低。而且，准备时考虑的因素可能实际并不存在，想得太多可能会使原本好的计划胎死腹中。</p>
<p>写下这些文字，提醒自己要果敢</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《Don’t Make Me Think》读书笔记——思维导图终级版]]></title>
      <url>https://atjason.com/222.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/kkoje.jpg" alt="Don"></p>
<p>more点击图片查看超大图片：</p>
<p><a href="https://ps.toolinbox.net/h8lfc.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/fnygg.jpg" alt="Don"></a></p>
<p>文字版：</p>
<ol>
<li>第2章 我们实际上是如何使用Web的</li>
</ol>
<p>在设计网页时，我们通常认为用户会仔细阅读网页的布局和内容；事实上，他们通常只会匆匆的扫描网页，找到他们感兴趣的、或者差不多合适的；或者后退。</p>
<p>2.1 事实一：我们不是阅读，而是扫描</p>
<p>2.1.1 我们总是处于忙碌之中</p>
<p>2.1.2 我们知道自己不必阅读所有内容</p>
<p>2.1.2.1 只要扫描出感兴趣、相关的内容即可</p>
<p>2.1.3 我们善于扫描</p>
<p>2.1.3.1 例如生活中扫描报纸、杂志、书籍等</p>
<p>2.2 事实二：我们不作最佳选择，而是满意即可</p>
<p>大多数时间里我们不佳选择最佳选项，而是选择第一个合理的选项，这就是满意策略（Satisfice）。</p>
<p>2.2.1 我们总是处于忙碌之中</p>
<p>2.2.2 如果猜错了，也不会产生什么严重的后果</p>
<p>2.2.3 对选择进行权衡，并不会改善我们的机会</p>
<p>2.2.3.1 权衡，还不如错了后退来得快</p>
<p>2.2.4 猜测更有意思</p>
<p>2.3 事实三：我们不必懂为什么，差不多能用就行</p>
<p>在很大程度上人们一起在使用某些东西，但并不理解它们的运作原理，甚至对它们的工作原理有完全错误的理解。</p>
<p>无论对哪项技术，我们通常不愿意花时间去深究。相反，我们贸然前进、勉强应付，编造出我们自己的、模棱两可的故事，来解释我们的所作所为、以及为什么这样能行得通。</p>
<p>很多人完全不是以设计师设想的方式使用网络和软件，但他们用得很好；例如，人们会在Yahoo的搜索框里输入整个URL地址，进而打开这个网页。</p>
<p>2.3.1 原理对我们来说并不重要</p>
<p>2.3.2 如果发现某个事物能用，我们会一直用它</p>
<ol>
<li>第3章 广告牌设计101法则</li>
</ol>
<p>像高速公路上扫描广告牌一样扫描网页，让网页在扫描的情况下也清晰易懂</p>
<p>3.1 建立清晰的视觉层次</p>
<p>3.1.1 越重要的部分越突出</p>
<p>3.1.1.1 字体更大、更粗</p>
<p>3.1.1.2 颜色更特别</p>
<p>3.1.1.3 旁边有更多空白</p>
<p>3.1.1.4 更接近页面顶部</p>
<p>3.1.2 逻辑上相关的东西，视觉上也相关</p>
<p>3.1.2.1 相近的内容分成一组</p>
<p>3.1.2.2 放在同一个标题之下</p>
<p>3.1.2.3 采用类似的显示样式</p>
<p>3.1.2.4 放在一个定义明确的区域之内</p>
<p>3.1.3 逻辑上包含的部分，视觉上也嵌套</p>
<p>3.1.3.1 如一个分类的标题之下（或者所在区域内）?</p>
<p>都应该是这个标题所包含的内容</p>
<p>3.2 尽量利用习惯用法</p>
<p>3.2.1 让用户熟悉、快速上手，并且自信</p>
<p>3.3 把页面划分成明确定义的区域</p>
<p>3.3.1 如导航区、内容区、友情链接区、等等</p>
<p>3.4 明显标识可以点击的地方</p>
<p>3.5 最大限度的降低干扰</p>
<p>3.5.1 避免让人眼花缭乱</p>
<p>3.5.2 降低背景噪声</p>
<p>3.5.2.1 如将密密菜单中黑色的分隔线，变成灰色、或者虚线</p>
<ol>
<li>第6章 街头指示牌和面包屑</li>
</ol>
<p>6.1 如果在网站上找不到方向，人们就不会使用你的网站</p>
<p>6.2 对比商场购物?</p>
<p>和浏览网站</p>
<p>6.2.1 商场</p>
<p>6.2.1.1 导航系统</p>
<p>See Also:导航系统</p>
<p>6.2.1.2 服务员</p>
<p>See Also:搜索</p>
<p>6.2.2 网站</p>
<p>6.2.2.1 导航系统</p>
<p>See Also:导航系统</p>
<p>6.2.2.2 搜索</p>
<p>See Also:服务员</p>
<p>6.3 网站浏览的特性</p>
<p>6.3.1 感觉不到大小</p>
<p>6.3.1.1 网页的多少</p>
<p>6.3.2 感觉不到方向</p>
<p>6.3.3 感觉不到位置</p>
<p>6.3.S1 因此，网站导航比?</p>
<p>现实生活中的导航更重要</p>
<p>(感觉不到大小 , 感觉不到方向 , 感觉不到位置 )</p>
<p>6.4 导航的用途</p>
<p>6.4.1 给我们固定的感觉</p>
<p>6.4.2 告诉我们当前的位置</p>
<p>6.4.3 告诉我们如何使用网站</p>
<p>6.4.4 给了我们对网站的信心</p>
<p>清楚的导航会给用户留下良好的印象。因此，建站的每时每刻，我们在头脑中都要有这个意识：用户知道他们在干什么吗？</p>
<p>6.5 Web导航习惯用法</p>
<p>6.5.1 就像物理空间的导航系统，也都有自己的习惯用法</p>
<p>6.5.2 网站ID/Logo</p>
<p>6.5.2.1 通常在左上角</p>
<p>6.5.2.2 出现在页面可视层次的首要位置</p>
<p>6.5.2.2.1 本面最显示的内容</p>
<p>6.5.2.2.2 或涵盖页面所有元素</p>
<p>6.5.2.3 看起来像Logo</p>
<p>6.5.3 持久导航</p>
<p>6.5.3.1 不同页面的相同位置</p>
<p>6.5.3.2 不同页面显示相似内容</p>
<p>6.5.3.3 最重要功能之一：回到首页</p>
<p>6.5.3.4 例外</p>
<p>6.5.3.4.1 首页</p>
<p>6.5.3.4.2 表单</p>
<p>6.5.4 栏目</p>
<p>6.5.4.1 主导航条</p>
<p>6.5.4.2 大部分情况下，也包含二级栏目</p>
<p>6.5.5 实用工具</p>
<p>6.5.5.1 不属于内容层次的重要元素</p>
<p>6.5.5.2 不用那么显眼</p>
<p>6.5.5.3 不同类型的网站，实用工具也不同</p>
<p>6.5.5.4 常用的“实用工具”清单</p>
<p>关于我们、下载、目录、结账、论坛、如何购买、招聘、我的<em>__</em>、注册、搜索、购物车、公司信息、联系我们、客户服务、讨论板、常见问题(FAQ)、帮助、主页、投资者关系（Investor Relation）、新闻、订单跟踪、新闻稿（Press Release）、隐私声明、登陆、站点地图、你的账户</p>
<p>6.5.6 页面名称</p>
<p>6.5.6.1 每个页面都需要一个名称</p>
<p>6.5.6.2 出现在合适的位置</p>
<p>6.5.6.3 名称要引人注目</p>
<p>6.5.6.4 和之前点击进入的链接名称一致</p>
<p>6.5.7 页面导航</p>
<p>6.5.7.1 再多层次的页面导航，也要在页面中显示出来?</p>
<p>避免深层次的导航中，没有到当前层次的导航</p>
<p>6.5.7.2 因此，开始设计时，就要考虑所有潜在级别的导航</p>
<p>6.5.8 你在这里</p>
<p>6.5.8.1 告诉用户所在站点层级结构的前后关系</p>
<p>6.5.9 面包屑</p>
<p>6.5.9.1 如：Home &gt; Level 1 &gt; Level 2&gt; You’re here</p>
<p>6.5.9.2 告诉用户从主页到当前页面的路径</p>
<p>6.5.9.3 最佳实践</p>
<p>6.5.9.3.1 放在最顶端</p>
<p>6.5.9.3.2 使用“&gt;”对层级进行分隔</p>
<p>6.5.9.3.3 使用小字体</p>
<p>6.5.9.3.4 使用文字“你在这里”</p>
<p>6.5.9.3.5 将最后一个元素加粗</p>
<p>6.5.9.3.6 不额外用作页面名称</p>
<p>6.5.10 标签导航</p>
<p>6.5.10.1 如典型的Amazon的顶部标签导航</p>
<p>6.5.10.2 优势</p>
<p>6.5.10.2.1 不言而喻</p>
<p>6.5.10.2.2 很难错过</p>
<p>6.5.10.2.3 很灵活</p>
<p>6.5.10.2.4 暗示了一个物理空间</p>
<p>6.5.10.3 最佳实践</p>
<p>6.5.10.3.1 突出当前标签</p>
<p>6.5.10.3.2 不同栏目使用不同的颜色</p>
<p>6.5.10.3.3 进入网站时，有一个标签已经选中</p>
<p>6.5.11 小字体版的底端导航</p>
<p>6.5.12 搜索</p>
<p>6.5.12.1 几乎每个页面都要提供搜索框</p>
<p>6.5.12.2 惯用法</p>
<p>6.5.12.2.1 一个输入框</p>
<p>6.5.12.2.2 一个按钮</p>
<p>6.5.12.2.3 “搜索”两个字</p>
<p>6.5.12.3 避免</p>
<p>6.5.12.3.1 花哨的用户</p>
<p>6.5.12.3.2 额外的提示说明</p>
<p>6.5.12.3.3 额外的选项</p>
<p>6.5.12.3.3.1 如果要提供选项来调整搜索范围，在有用时提供</p>
<p>6.5.12.3.3.2 例如：到达搜索界面，发现结果太多时，需要缩小搜索范围</p>
<p>6.6 后备箱测试</p>
<p>6.6.1 什么是？</p>
<p>6.6.1.1 想像你被蒙上双眼，锁在车子的后备箱里。?</p>
<p>车子开始一会以后，把你放在网站的某个页面上?</p>
<p>视线模糊一点，回答几个问题</p>
<p>6.6.2 怎么做？</p>
<p>6.6.2.1 在网站上任意选择一个页面，打印出来</p>
<p>6.6.2.2 拿到一手开外，或者倾斜一个角度，让你不能仔细观察</p>
<p>6.6.2.3 尽快找到清单中的项目并画上圆圆（不见得都找得到）</p>
<p>6.6.2.3.1 网站ID</p>
<p>这是什么网站？</p>
<p>6.6.2.3.2 页面名称</p>
<p>我在哪个网页上？</p>
<p>6.6.2.3.3 栏目和二级栏目</p>
<p>6.6.2.3.4 页面导航</p>
<p>在这个层次上我有哪些选择？</p>
<p>6.6.2.3.5 “你在这里”指示器</p>
<p>我在导航系统的什么位置？</p>
<p>6.6.2.3.6 搜索</p>
<p>6.A1 如果找不到东西?</p>
<p>用户就会离开</p>
<ol>
<li>第7章 首先要承认，主页不由你控制</li>
</ol>
<p>7.1 主页要完成的任务</p>
<p>P71有完整的图示</p>
<p>7.1.1 站点的标识和使命</p>
<p>7.1.1.1 网站是做什么的？</p>
<p>7.1.1.2 和类似的网站有何不同？</p>
<p>7.1.2 站点层次</p>
<p>7.1.2.1 服务内容</p>
<p>7.1.2.2 服务如何组织(持久导航)</p>
<p>7.1.3 搜索</p>
<p>7.1.4 导读</p>
<p>7.1.4.1 内容推介：最新、最好、最流行的内容片断</p>
<p>7.1.4.2 功能推介：新功能、个性化功能、等等</p>
<p>7.1.5 内容更新</p>
<p>7.1.5.1 让用户觉得这不是一潭死水</p>
<p>7.1.6 友情链接</p>
<p>7.1.6.1 预留空间</p>
<p>7.1.7 快捷方式</p>
<p>7.1.7.1 如软件升级链接</p>
<p>7.1.8 注册/登陆</p>
<p>7.1.9 隐性功能</p>
<p>7.1.9.1 告诉用户从哪里开始</p>
<p>7.1.9.2 建立信任感、留下好印象</p>
<p>7.2 困难</p>
<p>7.2.1 每个人都想占一席之地</p>
<p>7.2.2 想要参与、决策的人太多</p>
<p>7.2.3 一个页面要适应所有用户</p>
<p>7.3 如何做？</p>
<p>7.3.1 注意：传达整体形象</p>
<p>7.3.2 进入一个新网站?</p>
<p>扫描后能明白几个问题</p>
<p>7.3.2.1 这是什么网站？</p>
<p>7.3.2.2 网站上有什么？</p>
<p>7.3.2.3 我能在这里做什么？</p>
<p>7.3.2.4 为什么我应该上这个网站、而不是别的？</p>
<p>7.3.2.5 从哪里开始？</p>
<p>7.3.2.5.1 如果要搜索，从哪里开始？</p>
<p>7.3.2.5.2 如果要扫描，从哪里开始？</p>
<p>7.3.2.5.3 如果要看最精彩的内容，从哪里开始？</p>
<p>7.3.3 如何传达</p>
<p>7.3.3.1 所有元素都在起作用</p>
<p>7.3.3.2 两个重要的元素</p>
<p>7.3.3.2.1 口号</p>
<p>7.3.3.2.1.1 位置：靠近网站ID</p>
<p>7.3.3.2.1.2 内容：一条精练的短句，刻画了整个企业 ?</p>
<p>总结它是做什么的，什么让它如此卓越</p>
<p>7.3.3.2.1.3 注意</p>
<p>7.3.3.2.1.3.1 口号要清楚、言之有物</p>
<p>7.3.3.2.1.3.2 不要含混不清、笼统</p>
<p>7.3.3.2.1.3.3 长度适中</p>
<p>7.3.3.2.1.3.4 表述网站的特点和显而易见的好处</p>
<p>7.3.3.2.1.3.5 有个性、生动、甚至俏皮</p>
<p>7.3.3.2.2 欢迎广告</p>
<p>7.3.3.2.2.1 网站的简要描述</p>
<p>7.3.3.3 指导原则</p>
<p>7.3.3.3.1 需要多大空间就使用多大空间，别吝啬</p>
<p>7.3.3.3.2 但也不要使用过多空间，描述就简短</p>
<p>7.3.3.3.3 不要把使命陈述当欢迎广告</p>
<p>7.3.3.3.3.1 如，不要使用“XX公司在XX领域提供世界一流的解决方案”</p>
<p>7.3.3.3.4 最重要的是进行测试</p>
<p>7.3.3.3.4.1 将主页给公司外的人看</p>
<p>7.3.3.4 主页导航可以和其他页面不一样?</p>
<p>当然，更重要的是要基本一致</p>
<p>7.3.3.4.1 用于标识的空间更多</p>
<p>7.3.3.4.1.1 因为主页的网站ID可能比其他页面大?</p>
<p>也就带来更多的空间给导航部件</p>
<p>7.3.3.4.2 主页可以增加栏目介绍</p>
<p>7.3.3.4.3 方向可以不同</p>
<p>7.3.3.5 谨慎使用下拉框</p>
<p>7.3.3.5.1 不是很突出、不容易被立马找到</p>
<p>7.3.3.5.2 不容易扫描</p>
<p>7.3.3.5.3 不容易使用，尤其是条目多的时候</p>
<p>7.3.4 书中示例；几个网站好的、差的地方，作者的改进版本</p>
<ol>
<li>第8章 农场主和牧牛人应该是朋友</li>
</ol>
<p>8.1 问题来源</p>
<p>8.1.1 Web开发团队在可用性问题的决策方面，通常并不成功</p>
<p>8.1.2 以不同成员对于是否使用“下拉框”的讨论为例</p>
<p>8.2 问题表现</p>
<p>8.2.1 信仰大战</p>
<p>8.2.1.1 通常为了某些问题的最佳方案</p>
<p>8.2.1.2 无休止</p>
<p>8.2.1.3 讨论者有各自的观点（信仰）</p>
<p>8.2.1.4 很少能因为讨论而改变别人的观点</p>
<p>8.2.1.5 很少能得出有效的结论</p>
<p>8.3 危害</p>
<p>8.3.1 浪费时间</p>
<p>8.3.2 气氛紧张、影响团队合作</p>
<p>8.4 原因</p>
<p>8.4.1 个人喜好</p>
<p>8.4.1.1 对网站我们都有自己喜欢的、不喜欢的</p>
<p>8.4.1.2 讨论时通常会夹杂着自己的喜好</p>
<p>8.4.1.3 经常认为整体Web用户和我们一样</p>
<p>8.4.2 职位情绪</p>
<p>8.4.2.1 项目经理</p>
<p>8.4.2.1.1 通常喜欢：快点得出结论</p>
<p>8.4.2.2 设计师</p>
<p>8.4.2.2.1 通常喜欢：视觉上看起来有趣的网站</p>
<p>8.4.2.3 工程师</p>
<p>8.4.2.3.1 通常喜欢：功能又多又酷的网站</p>
<p>8.4.2.4 业务人员</p>
<p>8.4.2.4.1 通常喜欢：方便推销的网站</p>
<p>8.4.3 文化冲突</p>
<p>8.4.3.1 市场文化</p>
<p>8.4.3.1.1 来自：上层管理、市场、业务拓展</p>
<p>8.4.3.1.2 关注：有助于吸引风投、用户、战略合作伙伴、赢利</p>
<p>8.4.3.2 工程师文化</p>
<p>8.4.3.2.1 关注：技术实现</p>
<p>8.4.4 普通用户的神话</p>
<p>8.4.4.1 神话：存在普通用户/典型用户</p>
<p>8.4.4.1.1 非黑即白</p>
<p>8.4.4.1.2 简单的使用普通用户的“正确答案”</p>
<p>8.4.4.2 实际上</p>
<p>8.4.4.2.1 所有的Web用户都是独一无二的</p>
<p>8.4.4.2.2 每个Web用户都有其特有的使用习惯</p>
<p>8.5 解药</p>
<p>8.5.1 不要问</p>
<p>8.5.1.1 大部分人喜欢下拉框吗？</p>
<p>8.5.2 要问</p>
<p>8.5.2.1 在这个页面，在这样的上下文中，这个下拉框可以为大部分用户提供良好的体验吗？</p>
<p>8.5.3 如何回答</p>
<p>8.5.3.1 测试</p>
<p>8.5.3.1.1 先利用团队的集体技巧、经验、创造力、判断力创建多个版本</p>
<p>8.5.3.1.2 观察用户对其看法和使用的方法</p>
<ol>
<li>第9章 一天10美分的可用性测试</li>
</ol>
<p>9.1 可用性测试的现状</p>
<p>9.1.1 太少了</p>
<p>9.1.2 太迟了</p>
<p>9.1.3 为了错误的理由</p>
<p>9.1.3.1 比如，通常为了确定某个问题的方案而测试?</p>
<p>结果可能发现这个功能根本就不重要</p>
<p>9.2 焦点小组不是可用性测试?</p>
<p>Focus Group is not Usability Testing</p>
<p>9.2.1 焦点小组</p>
<p>9.2.1.1 如何做</p>
<p>9.2.1.1.1 一小组人（通常是5~8人）围坐在桌子旁边，对展示给他们的想法和设计作出反应</p>
<p>9.2.1.1.2 这是一个小组过程，主要价值来自参与人员彼此的反应</p>
<p>9.2.1.2 用途</p>
<p>9.2.1.2.1 快速得到用户的意见和感觉</p>
<p>9.2.1.2.2 抽像地确定你的目标受众想要什么、需要什么、喜欢什么</p>
<p>9.2.1.2.3 测试出网站的理念是否有意义、价值主张是否吸引人</p>
<p>9.2.1.2.4 发现用户对竞争对手的看法</p>
<p>9.2.1.2.5 测试网站功能命名</p>
<p>9.2.1.3 注意</p>
<p>9.2.1.3.1 应该在设计网站之前进行</p>
<p>9.2.2 可用性测试</p>
<p>9.2.2.1 如何做</p>
<p>9.2.2.1.1 一次给一位用户展示一些内容?</p>
<p>（不管之处是网站，还是网站原型，或是一些单个页面的蓝图）?</p>
<p>并且要求用户说出：1，这是什么；2，试着用它来完成一项典型的任务</p>
<p>9.2.2.2 用途</p>
<p>9.2.2.2.1 了解网站的运行状况</p>
<p>9.2.2.2.2 确定如何改进</p>
<p>9.3 可用性测试?</p>
<p>需要知道的</p>
<p>9.3.1 如果要建立优秀的网站，一定要测试</p>
<p>9.3.1.1 自己做的时间长了，会失去判断力</p>
<p>9.3.1.2 不同的人有不同的视角，帮助发现问题</p>
<p>9.3.2 测试一个用户，比不做测试好一倍</p>
<p>9.3.2.1 测试总会有效果</p>
<p>9.3.2.2 测试用户的建议，可能会对产品带来意想不到的好处</p>
<p>9.3.3 早点测试一个用户，好过最后测试50位用户</p>
<p>9.3.3.1 让测试简单，也就更容易推行</p>
<p>9.3.3.2 后期修改的成本很高</p>
<p>9.3.4 人们对招募用户代表的重要性估计过高</p>
<p>9.3.4.1 实际上更重要的是：迟早和经常进行测试</p>
<p>9.3.5 测试并不能直接告诉你答案，而是帮助你判断</p>
<p>9.3.6 是一个迭代的过程</p>
<p>9.3.7 没有什么比现场用户的反应更重要</p>
<p>9.4 简易的可用性测试</p>
<p>9.4.1 复杂的测试模式导致测试被忽略</p>
<p>9.4.1.1 错误辩解</p>
<p>9.4.1.1.1 没有时间</p>
<p>9.4.1.1.2 没有钱</p>
<p>9.4.1.1.3 没有专业知识</p>
<p>9.4.1.1.4 没有可用性实验室</p>
<p>9.4.1.1.5 不知道如何处理测试结果</p>
<p>9.4.2 如何简单测试</p>
<p>9.4.2.1 应该测试多少用户</p>
<p>9.4.2.1.1 每轮测试理想用户数量是三个，最多四个</p>
<p>9.4.2.1.2 第一轮测试，用户发现问题，修改后再进行第二轮；依此类推</p>
<p>9.4.2.2 是否应该产生测试报告</p>
<p>9.4.2.2.1 对开发团队，他们发现、理解问题的能力很强?</p>
<p>但往往没有足够的资源来修正，因此要节约时间关注最严重的问题</p>
<p>9.4.2.2.2 用轻量级方式去和开发团队沟通，例如电话而不是长长的文档?</p>
<p>这样，开发团队既能理解，又节约时间</p>
<p>9.4.2.3 宽松招募，曲线上升</p>
<p>9.4.2.3.1 测试对象并不重要！</p>
<p>9.4.2.3.1.1 不一定必须是准确的目标群体</p>
<p>9.4.2.3.1.2 懂得上网的基本知识就可以了</p>
<p>9.4.2.3.2 利用你能找到的任何人，然后曲线上升</p>
<p>9.4.2.3.3 理由</p>
<p>9.4.2.3.3.1 实际上，我们老师初学者</p>
<p>9.4.2.3.3.2 网站只能被设定的目标群体使用，通常并不是好主意</p>
<p>9.4.2.3.3.3 每个人都喜欢简单、清楚的页面；专家也不例外</p>
<p>9.4.2.3.4 例外</p>
<p>9.4.2.3.4.1 如果网站几乎只由某一类用户使用，那么就招这类用户</p>
<p>9.4.2.3.4.1.1 例如，纯女性网站就可以不招男性用户</p>
<p>9.4.2.3.4.2 如果用户群体有几个明显的阵营，那么每个阵营都要招</p>
<p>9.4.2.3.4.2.1 例如，大学的网站，对老师、学生都要测试</p>
<p>9.4.2.3.4.3 网站面向需要专业知识的用户</p>
<p>9.4.2.3.5 注意</p>
<p>9.4.2.3.5.1 提供合理的激励</p>
<p>9.4.2.3.5.2 邀请要简单</p>
<p>9.4.2.3.5.2.1 例如，“我们需要一些人来看看我们的网站，并给我们一些反馈。?</p>
<p>这很容易，大约花费45分钟到一个小时，而且你将得到XX美元的报酬。”</p>
<p>9.4.2.3.5.3 避免对要测试的网站进行预告的介绍</p>
<p>9.4.2.3.5.4 别不好意思请身边的朋友帮助</p>
<p>9.4.2.4 在哪里测试</p>
<p>9.4.2.4.1 随便一间会议室就可以</p>
<p>9.4.2.4.2 可以考虑屏幕录像、录像等方式</p>
<p>9.4.2.5 谁应该在旁边引导</p>
<p>9.4.2.5.1 几乎所有人</p>
<p>9.4.2.5.2 有耐心、冷静、有同理心、关于、天性公正的人</p>
<p>9.4.2.6 谁应该观察</p>
<p>9.4.2.6.1 鼓励任何人</p>
<p>9.4.2.6.2 说服领导支持测试的好方式：让他参与一次观察</p>
<p>9.4.2.7 什么时候进行测试</p>
<p>9.4.2.7.1 越早越好</p>
<p>9.4.2.7.1.1 概念蓝图都可以</p>
<p>9.4.2.7.2 甚至，开始之前可以先测试同类网站</p>
<p>9.4.2.7.2.1 了解好的、不好的设计</p>
<p>9.4.2.8 测试什么</p>
<p>9.4.2.8.1 理解测试</p>
<p>9.4.2.8.1.1 用户看到网站，能否理解网站的目标、价值主张、组织方式、运行方式</p>
<p>9.4.2.8.2 关键任务测试</p>
<p>9.4.2.8.2.1 让用户完成一些任务，观察他们是如何做的</p>
<p>9.4.2.8.2.2 更好的是：让用户做些有自己选择的任务</p>
<p>9.4.2.8.2.2.1 如，找到你最近想买的一本书，?</p>
<p>或者找到一本20元以下的烹饪书</p>
<p>9.4.2.9 书中有一个测试实例，不错！</p>
<p>9.4.2.10 立即回顾测试结果</p>
<p>9.4.2.10.1 给问题分类，确定哪些要修改</p>
<p>9.4.2.10.2 找出解决的方案，确定下一步</p>
<p>9.4.2.11 常见问题</p>
<p>9.4.2.11.1 用户不清楚概念</p>
<p>9.4.2.11.2 他们找不到自己要找的字眼</p>
<p>9.4.2.11.2.1 可能：组织内容的分类不符合用户习惯</p>
<p>9.4.2.11.2.2 可能：符合习惯，但字眼不是他们的期望</p>
<p>9.4.2.11.3 内容太多了</p>
<p>9.4.2.12 注意</p>
<p>9.4.2.12.1 忽略Kayak（皮划艇）问题</p>
<p>9.4.2.12.1.1 用户偏离主题时能马上发现这一点</p>
<p>9.4.2.12.1.2 能在不需要帮助的情况下回到原来的位置</p>
<p>9.4.2.12.1.3 下次操作能正确进行</p>
<p>9.4.2.12.2 抵制添加的冲动</p>
<p>9.4.2.12.3 不要太看重用户对新功能的要求</p>
<p>9.4.2.12.4 主要寻找重要而、或不费力的收获</p>
<p>9.4.2.12.4.1 从来没想过、却很重要、严重的东西</p>
<p>9.4.2.12.4.2 很容易修改的问题</p>
<p>9.4.2.12.5 改Bug和原有功能的平衡</p>
<p>9.4.2.12.5.1 如果修改某个Bug会带来更严重的Bug，谨慎！</p>
<p>9.4.2.12.5.2 别在泼洗脚小的时候、把小孩也泼出去了</p>
<p>9.4.3 每个月一个上午，就这么多</p>
<ol>
<li>第10章 可用性是基本礼貌</li>
</ol>
<p>10.1 基本要求</p>
<p>10.1.1 我的网站清楚吗？</p>
<p>10.2 高级要求</p>
<p>10.2.1 我的网站值得尊敬吗？</p>
<p>10.2.1.1 做正确的事——为用户考虑周到</p>
<p>10.3 示例</p>
<p>10.3.1 作者希望在航空公司网站上了解到罢工的最新消息?</p>
<p>结果找不到任何相关消息，非常失望</p>
<p>10.4 好感储存器</p>
<p>10.4.1 用户对网站有个好感的初值?</p>
<p>然后根据使用体验增加、或减少</p>
<p>10.4.2 容量特点</p>
<p>10.4.2.1 因人而异</p>
<p>10.4.2.1.1 有人天生猜疑、挑剔</p>
<p>10.4.2.1.2 有人天生有耐心</p>
<p>10.4.2.1.3 关键是：不要对初值期望太高</p>
<p>10.4.2.2 视情况而定</p>
<p>10.4.2.2.1 例如，用户在状态很差的时候来访问网站?</p>
<p>好感初值自然很低</p>
<p>10.4.2.3 可以重新被填满</p>
<p>10.4.2.3.1 差的设计让用户减分?</p>
<p>好的设计对把分数补回来</p>
<p>10.4.2.4 有时候一个错误就能清空它</p>
<p>10.4.2.4.1 例如，一个有大量字段的注册表单</p>
<p>10.4.3 降低好感的几种方式</p>
<p>10.4.3.1 隐藏我想要的信息</p>
<p>10.4.3.1.1 例如，客服电话，因为要收费、有成本</p>
<p>10.4.3.2 没有按照你们的方式行事就惩罚我</p>
<p>10.4.3.2.1 例如，不在银行卡号中加入空格</p>
<p>10.4.3.3 向我询问不必要的信息</p>
<p>10.4.3.3.1 例如，随便哪个网站都要你的身份证号</p>
<p>10.4.3.4 敷衍我，欺骗我</p>
<p>10.4.3.4.1 例如，在客服电话打不通的时候，电话提示音是：你的电话对我们来说非常重要</p>
<p>10.4.3.5 给我设置障碍</p>
<p>10.4.3.5.1 例如，长长的Flash介绍、无聊的产品介绍广告</p>
<p>10.4.3.6 看上去不专业</p>
<p>10.4.4 提高好感的几种方式</p>
<p>10.4.4.1 知道用户在网站上想做什么，并让操作简易</p>
<p>10.4.4.2 尽量减少步骤</p>
<p>10.4.4.3 花点心思做好</p>
<p>10.4.4.3.1 例如，惠普的售后网页</p>
<p>10.4.4.3.1.1 提供的信息准确有用</p>
<p>10.4.4.3.1.2 表达清楚</p>
<p>10.4.4.3.1.3 组织良好</p>
<p>10.4.4.4 告诉用户想知道的</p>
<p>10.4.4.5 知道用户有哪些疑问，并予以解答</p>
<p>10.4.4.5.1 FAQ</p>
<p>10.4.4.5.1.1 是真正的常见问题，而非广告式问题</p>
<p>10.4.4.5.1.2 保持更新</p>
<p>10.4.4.5.1.3 保持坦诚</p>
<p>10.4.4.6 为用户提供协助</p>
<p>10.4.4.6.1 例如，提供友好的打印页面</p>
<p>10.4.4.7 容易从错误中恢复</p>
<p>10.4.4.8 如果不确定，记得道歉</p>
<ol>
<li>第11章 可访问性、级联样式表和你</li>
</ol>
<p>11.1 Accessibility &amp; 508</p>
<p>11.2 可访问性差的原因</p>
<p>11.2.1 网站实际建造者：设计师和开发人员</p>
<p>11.2.1.1 假设所有人都是健全人?</p>
<p>并不理解很多人有访问障碍</p>
<p>11.2.1.2 怀疑增加可访问性能让?</p>
<p>包括正常人在内的所有人受益</p>
<p>11.2.1.3 害怕更大的工作量</p>
<p>11.2.1.4 担心增加可访问性的设计和普通设计很难折衷</p>
<p>11.3 如何做？</p>
<p>11.3.1 经常测试</p>
<p>11.3.2 改正让所有人感到混淆的可用性问题</p>
<p>11.3.2.1 例如，出错时模糊不清的提示</p>
<p>11.3.3 读一篇文章</p>
<p>11.3.3.1 观察16位盲人用户如何使用屏幕门口在不同网站完成许多任务</p>
<p>11.3.3.2 Guidelines for Accessible and Usable Web Sites: ?</p>
<p>Observing Users Who Work With Screen Readers</p>
<p>11.3.3.3 <a href="http://www.redish.net/content/papers/interactions.html" target="_blank" rel="external">http://www.redish.net/content/papers/interactions.html</a></p>
<p>11.3.3.4 重要的结果</p>
<p>11.3.3.4.1 例如：用耳朵扫描：语速很快、仅听一部分就决定是否继续下一个</p>
<p>11.3.4 看一本书</p>
<p>11.3.4.1 Joe Clark</p>
<p>11.3.4.1.1 Building Accessible Websites</p>
<p>11.3.4.2 Jim Thatcher</p>
<p>11.3.4.2.1 Constructing Accessible Websites</p>
<p>11.3.4.3 John Slatin</p>
<p>11.3.4.3.1 Maximum Accessibility: Making Your Web Site More Usable for Everyone</p>
<p>11.3.5 使用级联样式表?</p>
<p>Cascading Style Sheets</p>
<p>11.3.5.1 对格式的控制没有限制</p>
<p>11.3.5.2 灵活性</p>
<p>11.3.5.2.1 一个简单的改动就可以改变整个页面</p>
<p>11.3.5.2.2 例如：允许重新定义文字大小</p>
<p>11.3.5.3 浏览器表现一样</p>
<p>11.3.5.4 序列化内容</p>
<p>11.3.5.4.1 将内容按预设的顺序呈现给有阅读障碍的用户</p>
<p>11.3.6 去摘够得着的果子</p>
<p>11.3.6.1 为每张图片增加alt文本</p>
<p>11.3.6.2 让你的表单配合屏幕阅读器</p>
<p>11.3.6.2.1 使用html的label元素把表单字段和提示文本联系起来</p>
<p>11.3.6.3 每个面最前面增加”跳转到主要内容“的链接</p>
<p>11.3.6.4 让所有人通过键盘就能访问</p>
<p>11.3.6.5 注意：自适应技术对JavaScript支持不是很好</p>
<p>11.4 好的例子</p>
<p>11.4.1 公告板上为纸质文字，其上蒙了一层有机玻璃，玻璃上印着盲文</p>
<ol>
<li>第12章 救命！老板想要我……</li>
</ol>
<p>12.1 两封邮件</p>
<p>12.1.1 要求太多个人数据的危险</p>
<p>12.1.2 过份强调网站花哨的危险</p>
<p>12.2 注意：老板坚持糟糕设计想法的背后，可能是良好的意图?</p>
<p>尝试着理解这一意图，可能更好的解决问题</p>
<ol>
<li>推荐读物</li>
</ol>
<p>13.1 作者认为好的书，应该不都是广告</p>
<p>13.2 Information Architecture for the World Wide Web</p>
<p>13.2.1 透彻的讲解了导航、标签和搜索，极具实用性</p>
<p>13.3 Why We Bug: The Science Shopping</p>
<p>13.3.1 解决这样的问题：创造复杂且引人入胜的环境，让人们寻找所需商品，而且能找到它们</p>
<p>13.4 Sources of Power: How People make Decisions</p>
<p>13.4.1 “我们认为我们是怎么做的”和“我们实际上是怎么做的”之间的区别</p>
<p>13.5 The Practice of Creativity: A Manual for Dynamic Group Problem Solving</p>
<p>13.6 www.useit.com</p>
<p>13.6.1 积极的可用性倡导者</p>
<p>13.7 Homepage Usability: 50 Websites Deconstructed</p>
<p>13.8 Web Application Design Handbook: Best Practices for Web-Based Software</p>
<p>13.8.1 新手的入门指南：大量最佳实践、秘诀、有趣秘诀</p>
<p>13.9 Defensive Design for the Web</p>
<p>13.9.1 如何改进错误消息、帮助、表单和其他危急时刻，充满最佳实践，如何防止用户出错、从错误中恢复</p>
<p>13.10 The Design of Everyday Things</p>
<p>13.10.1 看完，你再也不会用以前的方式看待门把手了</p>
<p>13.11 A Practical Guide to Usability Testing</p>
<p>13.11.1 用户测试指导书籍</p>
<p>13.12 Usability News</p>
<p>13.12.1 <a href="http://psychology.wichita.edu/surl/" target="_blank" rel="external">http://psychology.wichita.edu/surl/</a></p>
<p>13.12.2 <a href="http://webword.com/" target="_blank" rel="external">http://webword.com/</a></p>
<p>13.12.3 <a href="http://usabilityviews.com/" target="_blank" rel="external">http://usabilityviews.com/</a></p>
<p>13.12.4 <a href="http://usability.gov/guidelines/" target="_blank" rel="external">http://usability.gov/guidelines/</a></p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[软件文档之痛]]></title>
      <url>https://atjason.com/218.html</url>
      <content type="html"><![CDATA[<p>关于软件文档的争论从来就没有停止过；最新的状态是：不断有新的争论加入。more</p>
<p><em>*软件文档有哪些？</em></p>
<p>本文的范畴包括：UX交互、需求规格说明、原型…</p>
<p><strong>软件文档有用吗？</strong></p>
<ul>
<li><p>从PM的角度，这是递交必须的形式</p>
</li>
<li><p>从开发人员的角度，项目开始的时候，架构师或者开发人员总是需要需求说明、原型等资料，进行架构、编制代码</p>
</li>
<li><p>从双方的角度，软件文档可以作为沟通工具。包括PM与开发人员的沟通、老员工与新员工的沟通，总是需要有些媒介、平台，这时软件文档可充当双方可共同理解的沟通桥梁</p>
</li>
<li><p>从客户的角度，客户总是喜欢厚厚的文档，尽管他们可能根本就不看</p>
</li>
</ul>
<p><strong>软件文档为什么会有痛？</strong></p>
<ul>
<li>过时、不一</li>
</ul>
<p>这应该是文档最被人诟病的地方。过时、不一致的文档是无效的，因为也就没人看</p>
<p><strong>现状是</strong></p>
<ul>
<li><p>往往项目开始的时候，用文档进行沟通、设计；开发到后期，各种文档就被荒废了</p>
</li>
<li><p>或者反过来，设计、开发的时候根本就没有文档，而是在快结束的时候，根据客户的要求、或者项目组发现需要一个架构图来进行知识传递，从已有代码反过来提取生成文档</p>
</li>
</ul>
<p>未完待续…</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[叫我土憋PM]]></title>
      <url>https://atjason.com/213.html</url>
      <content type="html"><![CDATA[<p>什么是土憋PM？用很土的方法、慢慢憋大的PMmore</p>
<p>获取知识有哪些途径？极端的说，有两种：一种是学院派的系统性教育，如学业有成的海龟；另一种是草根派的自学成才，如八卦新闻中乐见的“农民自造潜水艇”。殊途同归，做到极致，都能做好。</p>
<p>现实的说，极端的情况比较少，大部分是“混合型人才”。我们多多少少都受过系统的教育，又总是自己摸索着，慢慢的也就形成了自己的认知、知识体系。</p>
<p>系统性教育与自学成才，选择哪种更合适呢？这得看情况了。譬如，刚学完计算机网络基础知识，自己制作些泛黑客的网络小工具，就更能体会其中的内涵。再比如，在学一个新概念时，在网络上东找西查了半天，脑子里有零碎的概念，却不能很好的串联起来。这时，找些书籍、系列教程之类的内容，系统性的学习，会更有收获。</p>
<p>经常听到这样的抱怨（包括我自己）：要是有高手能指点一二，自己就能更快的成长，也不会走弯路，也不用这么茫然、疲惫</p>
<p>怎么说呢，真正的高手，可遇不可求；能了解自己的情况、给出指导性建议的高手，就更是凤毛麟角了。现实的说，自己能做的就是广开言路，多多的倾听别人对自己的反馈，从中筛选出有用的，然后自己摸索着改进。</p>
<p>回到标题，自己现在对于PM刚刚入门，这时系统性教育简直就是雪中送炭。不过，限于国内PM体系并不突出，相关的培训教育也不多，这条路就很难走通了。反过来，只能土憋。</p>
<p>最佳实践：</p>
<ul>
<li><p>看书；书籍的系统性强，能提醒自己遗漏的地</p>
</li>
<li><p>网络；网络的时效性强，如订阅牛人的博客、看相关领域的新</p>
</li>
<li><p>积累；看到好的设计、创意，不客气的收藏起来，酝酿</p>
</li>
<li><p>实践；PM最终的落脚点，就是设计出好的产品；从设计搓的产品开始，慢慢实践</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[走出低迷状态]]></title>
      <url>https://atjason.com/206.html</url>
      <content type="html"><![CDATA[<p>前两天一直状态低迷，什么都不想干、干什么都没劲more</p>
<p>本想着趁周末放松下就好了，结果放松都变成放纵了，还是提不起精神</p>
<p>今天周一上班，工作的事情没办法拖，只能硬着头皮做。结果发现一件件事做下来，慢慢积累了一点点成就感，心里也慢慢变得轻松</p>
<p>而且只要做事，就会有收获</p>
<p><strong>最佳实践</strong>：</p>
<ul>
<li><p>状态低迷时，注意休息，但不是过份休</p>
</li>
<li><p>从Todo List中找些小的、不太需要费脑力的事情来</p>
</li>
<li><p>慢慢减轻心里的压力、积累成就感，状态就会一点点恢</p>
</li>
<li><p>或者，走出现在的圈子，体验另一种世界，效果可能更好</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《Do not Make Me Think》读书笔记]]></title>
      <url>https://atjason.com/202.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/0zme1.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/54i9j.jpg" alt=""></a>more</p>
<p><a href="https://ps.toolinbox.net/8douu.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/uy8p4.jpg" alt=""></a></p>
<p><a href="https://ps.toolinbox.net/9ej2u.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/digmo.jpg" alt=""></a></p>
<p><a href="https://ps.toolinbox.net/d7q8g.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/1c8yx.jpg" alt=""></a></p>
<p><a href="https://ps.toolinbox.net/7oyys.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/l0cl1.jpg" alt=""></a></p>
<ol>
<li>第2章 我们实际上是如何使用Web的</li>
</ol>
<p>在设计网页时，我们通常认为用户会仔细阅读网页的布局和内容；事实上，他们通常只会匆匆的扫描网页，找到他们感兴趣的、或者差不多合适的；或者后退。</p>
<p>2.1 事实一：我们不是阅读，而是扫描</p>
<p>2.1.1 我们总是处于忙碌之中</p>
<p>2.1.2 我们知道自己不必阅读所有内容</p>
<p>2.1.2.1 只要扫描出感兴趣、相关的内容即可</p>
<p>2.1.3 我们善于扫描</p>
<p>2.1.3.1 例如生活中扫描报纸、杂志、书籍等</p>
<p>2.2 事实二：我们不作最佳选择，而是满意即可</p>
<p>大多数时间里我们不佳选择最佳选项，而是选择第一个合理的选项，这就是满意策略（Satisfice）。</p>
<p>2.2.1 我们总是处于忙碌之中</p>
<p>2.2.2 如果猜错了，也不会产生什么严重的后果</p>
<p>2.2.3 对选择进行权衡，并不会改善我们的机会</p>
<p>2.2.3.1 权衡，还不如错了后退来得快</p>
<p>2.2.4 猜测更有意思</p>
<p>2.3 事实三：我们不必懂为什么，差不多能用就行</p>
<p>在很大程度上人们一起在使用某些东西，但并不理解它们的运作原理，甚至对它们的工作原理有完全错误的理解。</p>
<p>无论对哪项技术，我们通常不愿意花时间去深究。相反，我们贸然前进、勉强应付，编造出我们自己的、模棱两可的故事，来解释我们的所作所为、以及为什么这样能行得通。</p>
<p>很多人完全不是以设计师设想的方式使用网络和软件，但他们用得很好；例如，人们会在Yahoo的搜索框里输入整个URL地址，进而打开这个网页。</p>
<p>2.3.1 原理对我们来说并不重要</p>
<p>2.3.2 如果发现某个事物能用，我们会一直用它</p>
<ol>
<li>第3章 广告牌设计101法则</li>
</ol>
<p>像高速公路上扫描广告牌一样扫描网页，让网页在扫描的情况下也清晰易懂</p>
<p>3.1 建立清晰的视觉层次</p>
<p>3.1.1 越重要的部分越突出</p>
<p>3.1.1.1 字体更大、更粗</p>
<p>3.1.1.2 颜色更特别</p>
<p>3.1.1.3 旁边有更多空白</p>
<p>3.1.1.4 更接近页面顶部</p>
<p>3.1.2 逻辑上相关的东西，视觉上也相关</p>
<p>3.1.2.1 相近的内容分成一组</p>
<p>3.1.2.2 放在同一个标题之下</p>
<p>3.1.2.3 采用类似的显示样式</p>
<p>3.1.2.4 放在一个定义明确的区域之内</p>
<p>3.1.3 逻辑上包含的部分，视觉上也嵌套</p>
<p>3.1.3.1 如一个分类的标题之下（或者所在区域内）?</p>
<p>都应该是这个标题所包含的内容</p>
<p>3.2 尽量利用习惯用法</p>
<p>3.2.1 让用户熟悉、快速上手，并且自信</p>
<p>3.3 把页面划分成明确定义的区域</p>
<p>3.3.1 如导航区、内容区、友情链接区、等等</p>
<p>3.4 明显标识可以点击的地方</p>
<p>3.5 最大限度的降低干扰</p>
<p>3.5.1 避免让人眼花缭乱</p>
<p>3.5.2 降低背景噪声</p>
<p>3.5.2.1 如将密密菜单中黑色的分隔线，变成灰色、或者虚线</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[形式与意义之辨]]></title>
      <url>https://atjason.com/199.html</url>
      <content type="html"><![CDATA[<p>好深奥的标题</p>
<p>就像是谈恋爱：在对方生日时制作Surprise，是形式；将对方牵肠挂肚，是意义；貌似两个都不能少。more</p>
<p>形式说：没我不行，你们人类总得有个活着的方式</p>
<p>意义说：我才重要，你们人类总得有个活着的奔头；</p>
<p>到底哪个才是真？很难说；就像是今天，我用了大半天的时间整理了《瞬间之美》读书笔记的思维导图，确实太过于形式了，还不如花更多的时间消化其中的意义</p>
<p>可这是第一次用思维导图的方式总结一本书，为以后的读书创造了新的方式；从这个层面上讲，这个形式是必要的、有意义的。</p>
<p>究竟有没有必要区分二者、还是二者本就没有区别？</p>
<p>先在这里留着，慢慢想着…</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《瞬间之美》读书笔记 ~ 思维导图终结版]]></title>
      <url>https://atjason.com/188.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/trkla.jpg" alt="瞬间之美 ~ 读书笔记 ~ 思维导图"></p>
<p>使用思维导图完整记录《瞬间之美》读书笔记，以后有这张图，书就不用再看了！more</p>
<p>完整大图：<a href="https://ps.toolinbox.net/64tyk.jpg" target="_blank" rel="external">猛击此处</a></p>
<p><a href="https://ps.toolinbox.net/64tyk.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/s4oxx.jpg" alt="完整大图"></a></p>
<p>文字版内容：</p>
<ol>
<li>前言</li>
</ol>
<p>1.1 良好的用户体验，全在于那些完美的瞬间</p>
<p>1.2 如何设计完美的瞬间</p>
<p>1.2.1 新的界面设计方法：大声想出来</p>
<p>1.2.1.1 勇敢的做出每一个决定；决不能听天由命</p>
<p>哪怕明知这些决定在以后肯定会改变，不论决定的有效性能持续多长时间，都必须做出决定，使这个设计中所有地方都由决定来设计，而不是听天由命。</p>
<p>1.2.2 以批判的眼光审视用户交互的每一个瞬间</p>
<p>1.2.3 为每个瞬间推荐(总结)出一套最优方案</p>
<ol>
<li>第一部分　指引用户</li>
</ol>
<p>2.1 第1章　令人心动的第一印象</p>
<p>2.1.1 发现页面布局</p>
<p>不是你选择了布局，而是它选择了你。布局是内容组织的必然结果，它往往是自己逐渐成型的。你的工作就是看着自己所想的布局慢慢呈现在面前，就像是不断削切石膏、直至雕塑成型。</p>
<p>2.1.1.1 不断调整</p>
<p>2.1.1.2 遵循一些原则</p>
<p>2.1.1.2.1 用户的视线</p>
<p>2.1.1.2.1.1 浏览网页，趋于从左上角移动到右下角</p>
<p>2.1.1.2.1.1.1 古腾堡图表</p>
<p>2.1.1.2.1.2 对角线平衡</p>
<p>2.1.1.2.1.2.1</p>
<p>2.1.1.2.2 颜色的一致，吸引注意</p>
<p>2.1.1.2.2.1</p>
<p>2.2 第2章　凸显个性/品牌</p>
<p>作者有极简主义个性，并以此来不断演进其主页；我们设计网页时要凸显个性，也可参照其演进过程：我们只需要强调那些已经有的东西，从而形成一种有凝聚力的“品牌”。</p>
<p>我们不知不觉中做的事情，大多是内心自然的流露；点滴汇聚起来，就是个性。</p>
<p>2.2.1 统一风格</p>
<p>2.2.2 重复：强调风格</p>
<p>2.2.3 不断修整</p>
<p>时刻注意网站正在传达什么，并相应做出简单的改动，我们便能够往自己想要的任何方向修塑我们网上的形象。</p>
<p>2.3 第3章　导航之道</p>
<p>2.3.1 用户只是扫描网页，导航要瞬间告诉用户他能做什么</p>
<p>2.3.2 让用户有“指挥”的感觉</p>
<p>2.3.2.1 菜单用动宾</p>
<p>2.3.2.1.1 例如用“定制风格”而非“个性化”</p>
<p>2.3.2.1.2 例如用“Sign in”而非“Login”</p>
<p>2.4 第4章　链接生来不平等</p>
<p>2.4.1 用户仅凭直觉就能自动理解链接顺序的含义，而不需要思考和检验</p>
<p>2.4.1.1</p>
<p>2.4.2 利用环境提示，让用户仅凭直觉就能收到我们想让他收到的信息</p>
<p>2.5 第5章　标签云里抬头看路</p>
<p>2.5.1 案例：程序员提出，用户可能在标签云、标签列表间切换</p>
<p>2.5.2 警惕创新过度</p>
<p>2.5.2.1 检验创新是否有效的唯一标准：是否是用户的真正需求</p>
<p>2.5.3 用户只会在页面上短暂停留；直接、只让他看到他最需要的</p>
<p>2.5.4 用户行为是可以培养的，但成本很高</p>
<ol>
<li>第二部分　学习</li>
</ol>
<p>3.1 第6章　开门见山</p>
<p>3.1.1 压缩、甚至去掉无用信息，例如欢迎辞</p>
<p>3.1.2 直接告诉用户他最需要的信息</p>
<p>3.1.3 激励用户：赶快行动</p>
<p>3.2 第7章　为界面做标记</p>
<p>3.2.1 案例：用户填写表单时，因缺乏足够的背景知识而失败</p>
<p>3.2.2 停止假设用户具有相关背景知识</p>
<p>3.2.3 假设用户一无所知，然后提供足够的信息，让他们理解</p>
<p>3.2.3.1 例如，使用说明性文字、What’s this链接、表意清楚的标记</p>
<p>3.3 第8章　生动传神的视频</p>
<p>3.3.1 视频作用</p>
<p>3.3.1.1 一图胜千言；视频胜过千言万语</p>
<p>3.3.1.2 表述问题</p>
<p>3.3.1.2.1 如软件使用过程中的问题</p>
<p>3.3.1.2.2 Basecamp在新用户登陆的每个空白页面，都提供了截图视频作为使用说明</p>
<p>3.3.1.3 表述想法</p>
<p>3.3.1.3.1 如软件原型设计</p>
<p>3.3.1.3.2 Common Craft Show使用生动活泼的视频，为大众介绍新技术</p>
<p>3.3.2 如何制作视频</p>
<p>3.3.2.1 明确要传达的内容</p>
<p>3.3.2.2 趁手的工具</p>
<ol>
<li>第三部分　搜索</li>
</ol>
<p>4.1 第9章　提出搜索词建议</p>
<p>4.1.1 使用Poka-yoke(防止错误)机制?</p>
<p>使用自动完成输入框</p>
<p>4.1.1.1 好处</p>
<p>4.1.1.1.1 增加用户输入速度</p>
<p>4.1.1.1.2 避免用户打错字</p>
<p>4.1.1.1.3 避免用户创建多条类似记录</p>
<p>4.1.1.2 局限</p>
<p>4.1.1.2.1 用户埋头打字，可能看不到提示框</p>
<p>4.1.1.2.2 用户可能会因为提示框而放弃其原有想法；而原有想法可能更优</p>
<p>4.1.1.2.3 避免立即提示，用户输入3~4个字母后再提示</p>
<p>4.1.1.2.4 很难被视力障碍者使用</p>
<p>4.2 第10章　列出搜索结果</p>
<p>4.2.1 案例：搜索结果分页机制</p>
<p>4.2.2 使用约定俗成的标准，例如Google的分页</p>
<p>4.2.3 提供返回到搜索列表的链接</p>
<p>4.3 第11章　精炼你的搜索</p>
<p>4.3.1 案例：让高级搜索也简洁</p>
<p>4.3.2 高级搜索保留快速搜索时用户填入的内容</p>
<p>4.3.3 高级搜索打开时，禁用快速搜索</p>
<p>4.3.4 递进显示/隐藏高级搜索的更多选项</p>
<p>4.3.5 去掉”Reset”搜索选项</p>
<ol>
<li>第四部分　深入</li>
</ol>
<p>5.1 第12章　视频播放器的标准化</p>
<p>5.1.1 适当大小的按钮、文字</p>
<p>5.1.2 避免加载时自动播放</p>
<p>5.1.3 播放停止时，视频框正中提供大大的播放按钮</p>
<p>5.1.4 点击播放时，不要跳转到新的页面</p>
<p>5.1.5 视频框左上角提供额外信息，如标题、录制时间、作者、等等</p>
<p>5.1.6 显示全长和剩余时长</p>
<p>5.1.7 必要时显示章节</p>
<p>5.1.8 自动路过电视剧开关、结尾</p>
<p>5.1.9 鼠标在时间轴上移动时显示预览</p>
<p>5.2 第13章　巩固你的表单布局</p>
<p>5.2.1 尽量单屏幕显示</p>
<p>5.2.2 单列表单布局</p>
<p>5.2.2.1 标题在填写域上方</p>
<p>5.2.2.2 减少出错</p>
<p>5.2.2.3 但会增加表单高度</p>
<p>5.2.2.3.1 需要更完善的出错提醒机制</p>
<p>5.2.3 优化OK/Cancel组合</p>
<p>5.2.3.1 给予OK更有意义的名字</p>
<p>5.2.3.1.1 如”注册”</p>
<p>5.2.3.2 区分OK、Cancel的重要性</p>
<p>5.2.3.2.1 如“注册”用大按钮，“取消”用小链接</p>
<p>5.2.3.3 左对应</p>
<p>5.2.3.3.1 不然“注册”的大按钮的位置会比较奇怪</p>
<p>5.2.4 表单设计很重要</p>
<p>5.2.4.1 劝说用户填写表单很困难</p>
<p>5.2.4.2 要让用户做事(如注册、购物)，必须要填写表单</p>
<p>5.3 第14章　驾驭wizard向导</p>
<p>5.3.1 建立清晰的预期?</p>
<p>让用户建立信心</p>
<p>5.3.1.1 总共有多少步、当前在哪一步</p>
<p>5.3.1.2 使用可折叠面板控件，在一个垂直页面中显示所有步骤</p>
<p>5.4 第15章　最后的一英里：即时校验</p>
<p>5.4.1 要纠错，也要表扬用户做对的地方</p>
<p>5.4.1.1 例如填对了一个域，就在对边显示绿色的√</p>
<p>5.4.2 不仅告诉他错了，更要提醒他该如何做</p>
<p>5.4.3 及时检测对错</p>
<p>5.4.4 对于数据之类的信息，要根据用户的输入实时更新</p>
<p>5.4.5 总之，让用户在提交表单时很自信，表单都填对了</p>
<p>5.5 第16章　简化长表单</p>
<p>5.5.1 表单首页，使用户相信表单并没有实际的那么复杂</p>
<p>5.5.1.1 可以给予适当的文字提示</p>
<p>5.5.2 使用Wizard拆分长表单</p>
<p>5.5.3 去掉多余、重复的域</p>
<p>5.5.4 简化表单设计</p>
<p>5.5.4.1 例如作者用一个复选框代替多个单选框</p>
<p>5.6 第17章　让他们登录</p>
<p>5.6.1 用户经常因为记不住用户名密码、不能登陆而沮丧</p>
<p>5.6.2 如果允许，记住用户名、甚至密码</p>
<p>5.6.3 如果不用登陆、或者用户不用做任何事情就能自动登陆，更好</p>
<p>5.6.4 获取密码不见得需要跳转到新的页面</p>
<p>5.7 第18章　计算字符数</p>
<p>5.7.1 用户并不专业，需要我们?</p>
<p>在设计上提供帮助，防止用户出错</p>
<p>5.7.1.1 不会玩桌球的人，他们猛击白球，然后期待着花球可以进洞。?</p>
<p>大部分人同样没有电脑技巧，他们上网时也大抵如此。</p>
<p>5.7.2 示例：限制字符数的用户输入</p>
<p>5.7.2.1 在用户输入的同时，告诉他还有多少字符可以输入</p>
<p>5.7.2.2 将提示框放置在输入框上方，方便用户看到</p>
<p>5.7.2.3 在字数即将超限时，突出显示最后输入的字符，提醒用户</p>
<ol>
<li>第五部分　参与</li>
</ol>
<p>6.1 第19章　创建个人资料</p>
<p>6.1.1 用户资料分层</p>
<p>6.1.1.1 用户资料有很多很多，这时需要将用户资料分层。</p>
<p>6.1.1.2 例如，已经工作的人和学生，会自动看到与其身份对应的资料填写页面?</p>
<p>每个人的教育经历、购物经历，又构成了不同维度的信息</p>
<p>6.1.1.3 这样，既降低了用户需要填写信息的总量，并且得到的信息更有效</p>
<p>6.1.2 动态用户资料</p>
<p>6.1.2.1 用户资料不仅包含email地址这类静态信息，还包含最近浏览页面、收藏页面等动态信息</p>
<p>6.1.2.2 动态用户行为记录，真实的反映了用户的喜恶，并成为一种有效的人际交往手段</p>
<p>6.1.2.3 用户会很自然的信任、关注与其兴趣类似的人，在关注其好友的过程中，也在不断的回访网站</p>
<p>6.2 第20章　编辑</p>
<p>6.2.1 多功能症：产品包含过多功能、而导致可用性低下</p>
<p>6.2.2 尽量避免界面跳转（包括弹出层）</p>
<p>6.2.3 示例：网页上的所见即所得编辑器</p>
<p>6.2.3.1 将功能按相关性分组，使用可折叠面板展现</p>
<p>6.2.3.2 只显示相关功能</p>
<p>6.2.3.3 动态显示相关功能</p>
<p>6.2.3.3.1 例如，选择文本时，文本功能面板自动打开</p>
<p>6.2.3.4 只显示相关功能的关键功能</p>
<p>6.2.3.4.1 面板中只包含基础功能，较少使用到的高级功能?</p>
<p>隐藏在可从面板中触发的对话框中</p>
<p>6.3 第21章　开展社交活动</p>
<p>6.3.1 网络上的交友活动很热，但这和现在环境有很大不同?</p>
<p>需要认真考虑；否则可能只是又一个失败</p>
<p>6.3.2 考虑让用户交友的目的</p>
<p>6.3.2.1 鼓励用户阅读其他用户相关的信息？</p>
<p>6.3.2.2 让用户可以为其他用户推荐信息？</p>
<p>6.3.2.3 …</p>
<p>6.3.3 示例：twitter的弱交互：Follow</p>
<p>6.3.3.1 twitter用户可以follow网站上任意其他用户?</p>
<p>从而了解其最新动态</p>
<p>6.4 第22章　显而易见的博客</p>
<p>6.4.1 好的博客应该包含什么</p>
<p>6.4.1.1 吸引人的标题</p>
<p>6.4.1.2 方便用户浏览页面</p>
<p>6.4.1.2.1 例如，在标题下方加入对本篇博客总结性的介绍?</p>
<p>让用户判断是否有必要进行详细阅读</p>
<p>6.4.1.3 更好的鼓励交流</p>
<p>6.4.1.3.1 留言机制</p>
<p>6.4.1.3.1.1 简单的表单能激励用户留言</p>
<p>6.4.1.3.2 TrackBack</p>
<p>6.4.1.3.2.1 日志中的摘录，来自于与日志相关的其他网站</p>
<p>6.4.1.3.2.2 例如：其他网站对本篇博客的介绍、评价</p>
<p>6.4.1.4 诱使人阅读博客上的其他日志</p>
<p>6.4.1.4.1 相关日志</p>
<p>6.4.1.4.2 最受欢迎日志</p>
<p>6.4.1.4.3 日志分类</p>
<p>6.4.1.4.4 前、后一篇日志</p>
<p>6.4.1.4.5 RSS订阅</p>
<p>6.4.1.5 常规内容</p>
<p>6.4.1.5.1 联合作者</p>
<p>6.4.1.5.2 发表日期</p>
<p>6.4.1.5.3 搜索框</p>
<p>6.4.2 作者示例</p>
<p>6.4.2.1</p>
<p>6.5 第23章　邀请讨论</p>
<p>6.5.1 不要控制任何东西</p>
<p>6.5.1.1 留言、评价、论坛回复、任何其他</p>
<p>6.5.1.2 控制会带来严重的负面效果?</p>
<p>让客户觉得你在隐瞒着什么</p>
<p>6.5.1.2.1 例如，用户发表了对产品不好的言论，则被告知需要通过审查?</p>
<p>他会自然的想到，会有其他无数多负面言论被枪毙，问题比现实更严重</p>
<p>6.5.2 建立信任</p>
<p>6.5.2.1 让客户自由言论，表示你信任他们的言论</p>
<p>6.5.2.2 客户会因为你的信任、而用自己的判断自动忽略其他无用的言论</p>
<p>6.5.3 建立粉丝团</p>
<p>6.5.3.1 哪些人？</p>
<p>6.5.3.1.1 抱怨声最大的人</p>
<p>6.5.3.1.2 欢呼声最热烈的人</p>
<p>6.5.3.1.3 有人需要时尽自己最大的可能回答问题的人</p>
<p>6.5.3.1.4 告诉你他们正在想什么的人</p>
<p>6.5.3.1.5 对产品表达意见的人</p>
<p>6.5.3.2 为什么？</p>
<p>6.5.3.2.1 满怀激情的憎恶比毫不关心的冷漠好得多</p>
<p>6.5.3.2.1.1 那些最憎恨你的人，一旦你真正为他们考虑、解决他们的问题?</p>
<p>他们往往会转变成最坚定的拥护者</p>
<p>6.5.3.2.2 重塑客户体验</p>
<p>6.5.3.2.2.1 例如，使用一定的激励手段（如免费T恤、序列号）?</p>
<p>让粉丝团在论坛里解决其他用户的问题</p>
<p>6.5.3.2.2.2 问题被其他用户解决，而不是官方客服解决?</p>
<p>不仅节约成果，而且效果要好得多</p>
<p>6.5.4 建立举办机制</p>
<p>6.5.4.1 总有人作恶</p>
<p>6.5.4.1.1 如广告、恶意中伤、等等</p>
<p>6.5.4.2 让用户举报，既增强他们的主人翁意识，又节约审查成本</p>
<p>6.6 第24章　得到一个好的评分</p>
<p>6.6.1 原则</p>
<p>6.6.1.1 清晰用于效率</p>
<p>6.6.1.2 让每一步都清晰易懂，并且不太复杂</p>
<p>6.6.2 作者的评分示例</p>
<p>6.6.2.1 评分前</p>
<p>6.6.2.1.1</p>
<p>6.6.2.2 评分时</p>
<p>6.6.2.2.1</p>
<p>6.6.2.3 评分后</p>
<p>6.6.2.3.1</p>
<p>6.6.2.4 评分后可修改</p>
<ol>
<li>第六部分　管理信息</li>
</ol>
<p>7.1 第25章　让RSS更有意义</p>
<p>7.1.1 用户不关心技术本身，而是关心自己能得到什么</p>
<p>7.1.1.1 进而，我们推广的不是技术?</p>
<p>而是技术所能带来的好处</p>
<p>7.1.2 降低用户的学习曲线</p>
<p>7.1.2.1 让新技术变得通俗易懂</p>
<p>7.1.2.2 使用可以建立强烈直观印象的词汇可以消除语言障碍</p>
<p>7.1.3 示例：RSS订阅</p>
<p>7.1.3.1 使用图标化的、一键RSS订阅</p>
<p>7.1.3.2 使用“News Reader”之类通俗的名称，而非RSS阅读</p>
<p>7.1.3.3 考虑email订阅</p>
<p>7.1.3.3.1 email依然是网络营销中?</p>
<p>最有效的方式之一</p>
<p>7.2 第26章　自定义标签</p>
<p>7.2.1 标签的优点</p>
<p>7.2.1.1 易于查找</p>
<p>7.2.1.2 组织方式富有弹性</p>
<p>7.2.2 标签的缺点</p>
<p>7.2.2.1 并不是每个用户都了解</p>
<p>7.2.2.2 用户不熟悉其术语、语法</p>
<p>7.2.2.3 相同的概念有多个相似的标签</p>
<p>7.2.2.4 网站对标签搜索的支持强于自然语言</p>
<p>7.2.3 增强标签</p>
<p>7.2.3.1 使用通俗化词汇</p>
<p>7.2.3.1.1 如Label</p>
<p>7.2.3.2 介绍自定义标签Tag</p>
<p>7.2.3.2.1 保证用户才能理解Tag</p>
<p>7.2.3.2.2 作者有介绍的示例文本</p>
<p>7.2.3.3 使用正常语言的语法</p>
<p>7.2.3.3.1 如不使用下划线_</p>
<p>7.2.3.4 用户创建Tag时提出建议</p>
<p>7.2.3.4.1 方法一：使用类似于搜索的“自动完成”</p>
<p>7.2.3.4.2 方法二：用户输入自己的Tag后，跳转到相似的Tag列表?</p>
<p>如果可以继续使用自己的Tag、或者从列表中选择一个</p>
<p>7.2.3.5 支持Tag搜索的同时，增加自然语言的搜索</p>
<p>7.3 第27章　通过拖放来组织信息</p>
<p>7.3.1 交互的三种状态</p>
<p>7.3.1.1 邀请</p>
<p>7.3.1.1.1 告诉用户哪些地方可以拖拽</p>
<p>7.3.1.1.1.1 如，可拖拽的模块左上角加入“Drag”描述</p>
<p>7.3.1.2 操作</p>
<p>7.3.1.2.1 用户拖拽过程中，实时告诉他因为拖放对界面的影响</p>
<p>7.3.1.3 实现</p>
<p>7.3.1.3.1 让用户知道他的交互已经实现了</p>
<p>7.3.1.3.1.1 如，被拖拽的模块被吸附到目的地</p>
<p>7.3.2 注意</p>
<p>7.3.2.1 每一步都应当简单清晰，并给出适当的反馈</p>
<p>7.3.2.2 拖放这种个性化操作是否必要</p>
<p>7.3.2.2.1 必要；如iGoogle，用户定制个性化首页</p>
<p>7.3.2.2.2 不必要；如政府网站，用户可能这辈子只来一次</p>
<p>7.4 第28章　用系统通知来管理中断</p>
<p>7.4.1 产品发生重大变化时，要有计划的让用户逐渐接受?</p>
<p>而不是突然发布、惊吓用户</p>
<p>7.4.1.1 考虑所有与用户沟通的渠道</p>
<p>7.4.1.1.1 email</p>
<p>7.4.1.1.2 站内信</p>
<p>7.4.1.1.3 博客</p>
<p>7.4.1.1.4 新闻</p>
<p>7.4.1.1.5 截屏</p>
<p>7.4.1.1.6 录像</p>
<p>7.4.1.2 确定发布日期</p>
<p>7.4.1.2.1 让用户有所准备</p>
<p>7.4.1.3 灰度测试</p>
<p>7.4.1.3.1 先对积极的用户进行小范围的测试?</p>
<p>根据反馈进行调整、修改Bug</p>
<p>7.4.1.3.1.1 顺便加强积极用户的自豪感?</p>
<p>他们甚至会主动帮你推销新功能</p>
<p>7.4.1.3.2 例如：Google在测试新功能时，通常在顶部有明显的标记?</p>
<p>会有积极的用户去尝鲜</p>
<p>7.4.1.4 邮件通知所有用户</p>
<p>7.4.1.4.1 顺便激活睡眠会员</p>
<p>7.4.1.5 网站首页上方的通告区</p>
<ol>
<li>第七部分　离开</li>
</ol>
<p>我们所有的设计都是让更快、更有效、更自信的完成他们的事情，然后尽快离开网站。</p>
<p>同时，我们又希望用户在网站上逗留更长时间。</p>
<p>这看似矛盾；实际上，留住用户不能靠让用户陷入复杂的交互和让事情变得困难（竭泽而渔），反而应当设计一系列美好的瞬间，让用户感觉良好、从而下次再来。</p>
<p>8.1 第29章　退出</p>
<p>8.1.1 用户与内容限制</p>
<p>8.1.1.1 封闭系统</p>
<p>8.1.1.1.1 除非登陆，否则看不到网站的任何内容</p>
<p>8.1.1.2 开放系统</p>
<p>8.1.1.2.1 即便登出，也能看到网站的部分内容</p>
<p>8.1.2 如果用户登出，就干脆的登出，而不是婆婆妈妈的半登出（依然保留登陆用户的部分信息）</p>
<p>8.1.3 怎样做更好？</p>
<p>8.1.3.1 如Gmail的登陆登出，为同一页面</p>
<p>8.1.3.2 鼓励用户回来，登出时回到登陆页面</p>
<p>8.1.3.3 在其他空白页面中进行行销推广</p>
<p>8.1.3.3.1 用户尚未发现的功能</p>
<p>8.1.3.3.2 引导用户了解新功能</p>
<p>8.1.3.3.3 宣布网站取得的新成就</p>
<p>8.1.3.3.4 影响所有用户群体的新闻</p>
<p>8.2 第30章　抹去睡眠用户身上的尘土</p>
<p>8.2.1 个性化的邮件</p>
<p>8.2.1.1 使用轻松诙谐的语气?</p>
<p>用产品的新功能等内容来激发用户重新回来</p>
<p>8.2.2 调查用户睡眠的原因</p>
<p>8.2.3 对话</p>
<p>8.2.3.1 如组织睡眠用户成立小组，聚焦产品日后的改进</p>
<p>8.2.4 不要做得太过火</p>
<p>8.2.4.1 用户真的没兴趣</p>
<p>8.2.4.2 过足够长的时间后，再去提醒用户</p>
<p>8.3 第31章　由他们去吧</p>
<p>8.3.1 最后一次挽留客户</p>
<p>8.3.2 优雅的失败</p>
<p>8.3.2.1 导出用户的数据</p>
<p>8.3.2.2 用户删除账户后，清空其数据?</p>
<p>而不是偷偷的保留</p>
<ol>
<li>优秀设计的金钥匙</li>
</ol>
<p>9.1 《Design The Obvious》?</p>
<p>Web应用七大原则</p>
<p>9.1.1 只提供用户所需</p>
<p>9.1.2 让初学者尽快转变为中级用户</p>
<p>9.1.3 尽可能地预防错误，即便出错也应友善处理</p>
<p>9.1.4 精简和优化交互与任务流程，让最复杂的软件清晰易懂</p>
<p>9.1.5 为支持特定行为而设计</p>
<p>9.1.6 持续地改进和优化我们的流程与程序</p>
<p>9.1.7 忽略用户的某些要求，坚信自己的理想和洞察力</p>
<p>9.2 设计即传达</p>
<p>9.2.1 向用户传达它们是如何工作的、他们能从中得到什么、为什么它们很重要</p>
<p>9.3 做正确更容易</p>
<p>9.3.1 在程序里只提供必要的，远比将所有能想到的细枝末节加进去要容易</p>
<p>9.4 设计靠自己去领悟</p>
<p>9.4.1 好的设计是一大堆差的设计不断演变进化的结果</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[需求管理介绍]]></title>
      <url>https://atjason.com/175.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/s81lz.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/fh4mk.jpg" alt=""></a></p>
<p>大图：<a href="http://atjason.com/blog/wp-content/uploads/2011/11/Requirement-Big.jpg" title="猛击此处">猛击此处</a></p>
<p>XMind文件：<a href="http://atjason.com/blog/wp-content/uploads/2011/11/%E9%9C%80%E6%B1%82%E7%AE%A1%E7%90%86.zip">需求管理</a></p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[思维导图介绍]]></title>
      <url>https://atjason.com/170.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/atddv.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/kf0f8.jpg" alt=""></a></p>
<p>用图介绍图，呵呵</p>
<p>下载：XMind工程文件：<a href="http://atjason.com/blog/wp-content/uploads/2011/11/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.zip">思维导图</a></p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《瞬间之美》读书笔记（3）]]></title>
      <url>https://atjason.com/162.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/qatfl.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/vyh25.jpg" alt=""></a></p>
<p>在填写表单时，不仅要提醒用户做错的地方，也要表扬其做对的地方。</p>
<p>在填写表单时，如果用户事先不知道总共有多少内容，而是没有希望的在表单海洋中努力填写、甚至越填选项越多时，会严重增加其内心的沮丧感、沉重感；</p>
<p>更好的做法是，事先让他知道总共有多少事情要做（当然是简化后的内容），并且每做一步就告诉他当前的位置、还有多少，让他有全局在握的感觉。more</p>
<p>如果一篇文章看了之后连做笔记的冲动都没有，要么是它太简单、没有什么特别之处，要么是太难了没看懂；总之是对你用处不大。</p>
<p>当然，我现在还没有完善的标准、强大的品鉴能力，一下子判断出一个设计的好坏。不过，毕竟我多少能感觉出哪些设计让自己舒服、哪些会让自己远离，重复这些审美过程，慢慢形成自己的标准、惯用法；然后去和公认的标准去匹配，从而提高自己的认知水平和审美能力。</p>
<p>当人面对生老病死的时候，所有知识、智慧，都是无用的。</p>
<p>当面对一个新领域，要尽量的多尝试、多了解其中的各个领域；做到一定程度，要提醒自己脱离想到哪、做到哪这种低级的、手工作坊式的模式，而要尽量提练出标准化、系统化的做法，或者直接向专家请假；这样下次再碰到类似的事情，可以俨然用专家的方式去搞定。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 瞬间之美 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[越忙越乱的时候，越需要停下来想想]]></title>
      <url>https://atjason.com/155.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/uavrl.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/6c7bx.jpg" alt=""></a></p>
<p>不出意外，今天很忙、也累</p>
<p>操之过急</p>
<p>越想把事情做好、越没有全局了然于胸的时候，越容易操之过急。急，就容易忽略自己的影响力、忽略对方的立场、忽略各种背景因素，没有准备就冒动，适得其反。</p>
<p>下次自己再碰到这种情况，站起来喝杯茶、吃个水果、浇浇小花、和同事聊个天什么的，总之逼迫自己换换脑子；然后复盘，想想自己遗漏了哪些因素，确定接下来要做的1234，如何做。接着嘛，做第1个…</p>
<p>当事情比较多的时候，需要做的是快速处理小的事情，让自己心里感觉轻松些；推迟或者砍掉不重要的事情，接着专注于最重要的Business</p>
<p>要明白，不论自己现在、以后有多强大，总会有很多事情是自己控制不了的。更致命的是，它通常会极大的损耗我们的心力、乃至摧毁我们的信心、热情；如果以后碰到这种事情，我只能再次提醒自己：随它去吧，做自己能改变的事情去。</p>
<p>坚持、专注。就像看书，之前总不想把书来回带，就公司和家里各看不同的书；但这样不好，毕竟业余的精力是有限的，如果还要将其分散到不同的领域，就很难集中精力去思考、实践，效果也会打折扣。现在我上下班总带一本书，啃完一本再啃下一本。</p>
<p>人哪，是需要调节、休息地。晚上看了两集《男人帮》，养了几眼美女，夸张的大笑了几次，脑子不累了！哈哈</p>
<p>明天继续！</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《瞬间之美》读书笔记（2）]]></title>
      <url>https://atjason.com/151.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/d3cj5.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/b0nr4.jpg" alt=""></a></p>
<p>设计，不能只是基于我们一厢情愿的假设。相反，我们要假设用户毫不了解我们的软件，随后给他们足够多的信息以便帮助他们理解。</p>
<p>说明性文本、What’s this链接、表意清楚的标记都可以达到这一目的。more</p>
<p>CommonCraft.com</p>
<ul>
<li><p>Listen and learn how to express in plain Englis</p>
</li>
<li><p>Describe technology for guys who don’t know i</p>
</li>
<li><p>Upload my own video</p>
</li>
</ul>
<p>不被墙的网站都不好意思说自己是好网站</p>
<ul>
<li>DoTheRightThing.com</li>
</ul>
<p>引导广大网民为某种行为打分，用集体的力量去推动好的、压制坏的，从而撬动地球。</p>
<p>用户很难一下子接受大量信息；如果不得不这样做，递进显示。</p>
<p>如果我们做的事情能改进世界，不收钱又怎样？</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《瞬间之美》读书笔记（1）]]></title>
      <url>https://atjason.com/142.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/vdmx7.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/e9gx1.jpg" alt=""></a></p>
<p>网页：为扫描而设计，让用户赶快行动！</p>
<p>用户浏览网页通常是想“做”点什么，而不是“读”点什么。他们通常首先“快速扫描”网站，找到自己能做点什么，并且快速过滤掉那些自己不感兴趣的内容。如果在这个瞬间你没有让他们找到，很显然，他们会马上关闭标签，或者Ctrl+W。</p>
<p>软件（网页等）并不是为了我们能单击那些按钮而存在的，它是为了我们能完成任务而存在的。例如，导航栏不应该是陈列在一排按钮上的一串名词，而可以是动宾词组，帮助我们感觉自己正在做一些事情，让我们找到当司机的感觉；例如“格式”，不如“自定义格式”。</p>
<p>用户浏览网页是，视线往往趋向于从左上角移动到右下角，久而久之就形成了这一习惯。</p>
<p>利用环境提示，让用户仅凭直觉就能收到我们想让他收到的信息。</p>
<p>对用户来说，一个简短的句子远比一大段文字要来得有意义；重要的并不是我们提供的信息量有多大，而是能否提供他们真正需要的信息。</p>
<p>如果用户只能在某个页面短暂停留（通常如此），那么不要出现让他思考才能得出结论的信息，直接告诉他最重要的。</p>
<p>用户可以被培养、教育，但这显然需要巨大成本；例如推广标签云，大的网站可以迫使用户去习惯这种表现形式，而对于博客这种网站来说，大部分浏览者只会短暂地逗留，看一两篇博客就离开，不适合强迫用户学习新潮交互方法。</p>
<p>不是你选择了布局，而是它选择了你。布局是内容组织的必然结果，它往往是自己逐渐成型的。你的工作就是看着自己所想的布局慢慢呈现在面前，就像是不断削切石膏、直至雕塑成型。</p>
<p>警惕：程序员的需求，很可能不是用户真正的需求；程序员可能更偏向于创新，而我们更应该提高产品、服务的品质。</p>
<p>设计是一个永远止境的学习过程，绝不包含任何运气成分（灵感，通常来自多年知识、经验的积累；有人又说到了天赋…）；需要不断地自我检验做事的方式、反思之前的作品，尽可能确保所做的设计正逐步向自己的预期靠拢。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 瞬间之美 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[需求管理培训（2）]]></title>
      <url>https://atjason.com/129.html</url>
      <content type="html"><![CDATA[<p><img src="https://ps.toolinbox.net/ajysr.jpg" alt=""></p>
<p><a href="http://goo.gl/u8VJv" target="_blank" rel="external">http://goo.gl/u8VJv</a></p>
<p>需求收集的途径</p>
<p>– 市场活动</p>
<ul>
<li><p>用户大</p>
</li>
<li><p>专家顾问</p>
</li>
<li><p>高层拜</p>
</li>
<li><p>展</p>
</li>
<li><p>用户探</p>
</li>
<li><p>标杆研</p>
</li>
<li><p>用户访谈</p>
</li>
</ul>
<p>– 销售活动</p>
<ul>
<li><p>产品介绍、投</p>
</li>
<li><p>客户反馈</p>
</li>
</ul>
<p>– 客服活动</p>
<ul>
<li><p>现场问题解</p>
</li>
<li><p>网上设备巡检</p>
</li>
</ul>
<p>– 公开信息</p>
<ul>
<li><p>新闻剪</p>
</li>
<li><p>统计报</p>
</li>
<li><p>订阅的报告</p>
</li>
</ul>
<p>– 商业伙伴</p>
<ul>
<li><p>报告交</p>
</li>
<li><p>竞争者信息</p>
</li>
</ul>
<p>– 专业数据</p>
<p>好需求的标准</p>
<ul>
<li><p>完整</p>
</li>
<li><p>正确</p>
</li>
<li><p>可行</p>
</li>
<li><p>必要</p>
</li>
<li><p>优先</p>
</li>
<li><p>无二义</p>
</li>
<li><p>可验证</p>
</li>
<li><p>无冗余</p>
</li>
</ul>
<p>客户的Wants，不等于客户的Needs；受限于客户的购买力，应该从客户的Wants中筛选出Needs。</p>
<p>需求管理软件：Rational Focal Point - IBM</p>
<p><a href="www.ibm.com/software/awdtools/focalpoint/">www.ibm.com/software/awdtools/focalpoint/</a></p>
<p>戴明环</p>
<p>质量工程都是老板工程</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[需求管理培训（1）]]></title>
      <url>https://atjason.com/122.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/mnl5m.gif" target="_blank" rel="external"><img src="https://ps.toolinbox.net/cu1l9.gif" alt=""></a></p>
<p>今天参加一个需求管理的培训，课间竟然有零食供应，太人性化了！下面是一些笔记：</p>
<p>市场环境的变化：从过去的小批次、大批量，变为大批次、小批量；个性化需求高，应快速研发递交；山寨手机就是典型案例，其本身已经代表了个性化需求；而之前一款山寨机会卖几十万台，现在能卖几万台就不错了，说明个性化需求更突出。</p>
<p>产品需求不同于项目需求。项目需求（如OEM）通常是基于客户要求、市场某些客户的需求定制的，完成既定目标即可，不需要考虑更长远的目标。而产品需求则不同，除了满足当下目标，更应该考虑中长期的发展，建立平台价值。</p>
<p>需求管理关键词：收集、整理、分析、分解、分配、实现、验证、筛选、工具、文档、时间属性…</p>
<p>重用级别越高，难度越大，效益也越大。</p>
<ol>
<li><p>代码</p>
</li>
<li><p>模块</p>
</li>
<li><p>子系统级</p>
</li>
</ol>
<p>系列产品</p>
<p>通常有通用平台、高的子系统级别的复用。这样的开发模式在第一款产品的研发上投入较大，但一旦平台建立起来，后续新产品可高度复用之前产品的子系统，从而加快研发、生产速度。</p>
<p>产业链的高端（如苹果），研发成本高、风险（投资失败率）高，但利润大；</p>
<p>产业链的低端（如富士康），制造成本低、风险（受高端控制）高、利润低；</p>
<p>老客户卖新产品；由于客户关系好，新产品中的错误因素不至于破坏客户关系；</p>
<p>新客户卖老产品；由于老产品稳定可靠，容易赢利新客户而不会有额外的问题；</p>
<p>新需求带来创新；创新就是发现新需求；</p>
<p>需求的积累是广泛、长期的，应持续将收集的需求入库，做产品的时候从中选择相关需求集、确定产品包。</p>
<p>收集需求应该形成制度。例如，华为每次出差的员工在报销之前必须填写至少两条。</p>
<p>行业报告：快速了解某一领域需求的渠道；自己要了解并记录手机、互联网这些相关领域行业报告的获取方式。</p>
<p>模糊带来需求理解的不一致；所以，需求分析要弄清楚模棱两可的地方。</p>
<p>需求分析错误带来的危害，远远大于后期开发错误。</p>
<p>不要被PM的概念所限制，要理解PM背后的意义；太遵循PM的职责范围，反而限制了自己思考、行为能力。有价值就去做，这是更靠谱的准则。</p>
<p>需求分析后的反思：</p>
<ul>
<li><p>是否和目标市场上所有主要类型的客户都交流了</p>
</li>
<li><p>通过捕捉客户的潜在需求，我们能看到产品相关需求之外的需求吗</p>
</li>
<li><p>在实际客户交流中，哪些将成为进行开发活动的优秀参与者</p>
</li>
<li><p>哪些是我们现在知道、而开始是不知道的？我们是否对其感到惊奇</p>
</li>
<li><p>需求调研组织中是否包含那些需要深化理解客户需求的人？</p>
</li>
</ul>
<p>电梯测验：用几句话描述需求、价值</p>
<p>战略、方法论这些东西，一套就够了，多了反而乱；关键在于实践、摸索；有些像武侠小说中各种顶级武功，练好一种就能独步武林。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[今天的事情比较多]]></title>
      <url>https://atjason.com/114.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/497w5.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/js3zf.jpg" alt=""></a></p>
<p>工会中法律组织、Windows8新特性介绍、与德国同事视频会议、讨论新产品特性、团队内协调分配任务、游泳…今天的事情比较多。</p>
<p>不过总体来说对自己的表现还算满意，基本Hold住了；虽然还不是那么入微。一口吃不了胖子，慢慢来。</p>
<p>今天最开心的，是说服德国大PM削减新产品中不必要的特性。虽然达到这一结论不只是我的作用，不过毕竟最终是我推动实现的，感觉还是不错，因为这也是我的意愿、我从PM的角度对产品的理解；能说服别人接受自己的意愿，说得冠冕一点是沟通能力。</p>
<p>另外的收获，是英语的提高。每天要和德国同事沟通，包括视频会议，逼迫自己学习英语。估计半年下来，英语就拿得出口了。</p>
<p>明天参加PM培训！:)</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[开始做PM的事了]]></title>
      <url>https://atjason.com/106.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/jznf8.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/u8qq6.jpg" alt=""></a></p>
<p>做PM的第一件事：做减法，移除鸡肋功能</p>
<p>对于备份这种工具类软件，我目前的观点是：最小交互，尽快让用户完成配置，然后离开；最好能让用户忘记</p>
<p>当然，这是想法，真正做起来，事情还是比较多的；尤其从程序员转过来，几乎是半个新的世界。打交道的人、沟通方式、工作流程、背景知识、能力结构、等等，都是不一样的。</p>
<p>现在看来，自己并没有系统性的准备好；像是一头扎进厚厚的棉花里，东一拳头西一脚的。不过没关系，毕竟事情是相通的，有很多基础的能力是公共的，比如工作优先级管理、时间管理、自控能力、学习能力、等等。慢慢来，总能摸着找到门路，总能慢慢熟练，总能成为高手。</p>
<p>对于进入新领域，充电显得更加重要，目前的打算是：</p>
<ol>
<li><p>速读一本入门书，列出欠缺能力列</p>
</li>
<li><p>结合工作实际，确定Top 1充电对</p>
</li>
<li><p>攻击这一对象，以理论+实践的形</p>
</li>
<li><p>以点带面，逐步完善其他能</p>
</li>
<li><p>找个Big Game玩玩</p>
</li>
</ol>
<p>老话：每天还是要停下来想想；不要原地不动，也不能一直埋头赶路。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[竞争对手情报分析（琐碎版）]]></title>
      <url>https://atjason.com/99.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/horox.png" target="_blank" rel="external"><img src="https://ps.toolinbox.net/q4a5v.png" alt=""></a><strong>对象</strong></p>
<ul>
<li><p>现有的产</p>
</li>
<li><p>各有哪些功能、优缺</p>
</li>
<li><p>市场规模、各占份额，未来发</p>
</li>
<li><p>如何发展起来的（公司组织、投资、人员、上市</p>
</li>
<li><p>用户教育程度</p>
</li>
</ul>
<p><strong>途径</strong></p>
<ul>
<li><p>网</p>
</li>
<li><p>对象官</p>
</li>
<li><p>新闻编</p>
</li>
<li><p>第三方评</p>
</li>
<li><p>试</p>
</li>
<li><p>分析统计数据</p>
</li>
</ul>
<p><strong>目的</strong></p>
<ul>
<li><p>现在有哪些机</p>
</li>
<li><p>未来的需要</p>
</li>
</ul>
<p>注：苹果的PM：不要想对手在做什么，不要想用户在想什么，做现在的设计，就是用户想要的东西。</p>
<p><strong>连续性</strong></p>
<p>从动态、发展中看出之前的规律、未来的趋势</p>
<p><strong>现有资料</strong></p>
<p>对于自己想了解 的内容，肯定有其他人也非常关心；他们很有可能也有些结果、分析输出，捕获这些信息，可以节约自己的时间。</p>
<p>信息永远没有“全”之说。分析竞争对手的信息，目的不是全，而是对自己的目标有帮助。比如目的可以是看市场上有哪些产品，如何选择；可以是看市场是否成熟，未来还有哪些机会；等等。目标不同，所需要做的事情不同、做成的标准也不同。</p>
<p>像信息收集这种性质的工作，可能会有些套路、惯用法，不过它更是一种思考性、创造性的工作。需要的是经验堆积起来的灵感，及至是天赋。</p>
<p><strong>行动</strong></p>
<p>现在马上动手，找出个模拟案例，通过案例的揣摩竞争对手情报分析的方法，提高自己在这方面的能力。</p>
<p>另外可以将成果输出到不同的媒体资源，比如《程序员》；用这些平台作为自己能力的鉴定。另外，在做的过程中可以提高自己的一些能力，比如调查表的制作、使大家配合调查；另外可以扩大自己的影响力。</p>
<p>书只是种触发器，它并不能真的让你学到什么；只是触发你去思考、实践，尤其是当你去体验、实践并有所感悟的时候，你才真的有所收获。当你能看起来自己总结出这些道理、甚至能发明出新的理论时，你就到火候了。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《软件随想录》读书笔记（2）]]></title>
      <url>https://atjason.com/94.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/kxfdq.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/o51z9.jpg" alt=""></a>创办软件公司的真正乐趣就是，创造一些东西，自己参与整个过程，悉心培育，不间断地劳作，不断地投入，看着它成长，看着自己一步步得到报酬。这是世界上最带劲的旅程，充满着难以言表的兴奋、激动、幸福；无论如何，我都不想错过它。</p>
<p>控制的感觉让人们感到开心。</p>
<p>最好的工作条件 -&gt; 最好的程序员 -&gt; 最好的软件 -&gt; 利润</p>
<p>优秀的程序员和普通的程序员，其差别不是20%、30%，而是10倍、100倍、及至天壤之别。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《结网》读书笔记（2）]]></title>
      <url>https://atjason.com/81.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/nwc6n.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/3qb4e.jpg" alt=""></a></p>
<p>0.2.4 把概念变成图纸</p>
<p>网站产品的三类图纸</p>
<ul>
<li><p>网站结构图：描述整个网站的结构，确定网站的模块划分及网页个数</p>
</li>
<li><p>网页蓝图：描述一个网页中所需要包含的基础元素、及其在这个页面中的布局，它会由图形界面设计师最终完善成美观的网页设计图</p>
</li>
<li><p>网页描述表：只包含所需展示的元素及其背后的逻辑，并不包含这些元素在页面中的布局。</p>
</li>
</ul>
<p>MECE原则</p>
<p>MECE（读作：me-see，Mutually Exclusive Collectively Exhaustive），它是由麦肯锡提出的一种整理思路的方法，中文含义是“相互独立，完全穷尽”。繁杂的信息经过MECE原则整理之后，呈现出分类清晰并且穷尽的结果，可以降低理解门槛。</p>
<p>消灭拖延提升效率的方法，就是把任务分解为连续的、在能力范围之内的小任务。细小的粒度，可以让团队和用户更快的看到结果，提升大家的信心。</p>
<p>用户任务的闭环是批一系列帮助用户完成任务的环节。可以使用面向对象、发散思维的方法穷尽所有可能的环节，使之符合MECE原则。然后判断每个环节背后是否有用户真实的需要，从而验证该环节是否为合理、必要的。</p>
<p>如果在产品设计中丢失一些环节，到产品发布的时候才发现，那将会相当的被动。如果在产品设计中多出一些环节，则会造成研发资源的浪费，甚至让用户困惑。</p>
<p>在考虑成本的时候，相关研发相关成本占20%，其余的80%都非研发相关的就好了。剩下的问题是，确诊这80%的非研发成本都在哪里。</p>
<p>把产品的核心概念打印出来、贴在自己每天才能看得到的地方，不断提醒自己应该专注于什么。</p>
<p>研发团队对于产品设计文档的意见：</p>
<ul>
<li><p>保持简</p>
</li>
<li><p>消灭错</p>
</li>
<li><p>别告诉其他人（主要是研发人员）怎么做他们的工</p>
</li>
<li><p>用适当的表述方式展现需</p>
</li>
<li><p>使用肯定的语言</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PM </tag>
            
            <tag> 结网 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《结网》读书笔记（1）]]></title>
      <url>https://atjason.com/78.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/a9arv.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/ax1pi.jpg" alt=""></a>0.2.0 从概念开始</p>
<p>如何创造新概念？把线下搬到线下、把一个领域的概念模仿到另一领域、根据自己的实际需求、等等。</p>
<p>0.2.1 概念2.0</p>
<p>Web 2.0公司的七项核心能力</p>
<ul>
<li><p>服务，而不是打包的软件，技术架构具有高成本效益的可伸缩性</p>
</li>
<li><p>控制独特的、难以再造的数据源，并且用户越多内容越丰富</p>
</li>
<li><p>把用户作为共同开发者来信任</p>
</li>
<li><p>借力于集体智慧</p>
</li>
<li><p>通过用户的自助服务来发挥长尾的力量</p>
</li>
<li><p>超越单一设备层次的软件</p>
</li>
<li><p>轻量级的用户界面、开发模式和商业模式；</p>
</li>
</ul>
<p>0.2.2 过滤</p>
<p>周觉：通过观察来获取信息。</p>
<p>门槛（壁垒）：技术、成本、对特定资源的占有</p>
<ul>
<li><p>商品业：为物品和有形的东西收</p>
</li>
<li><p>服务业：为自己开展的活动收</p>
</li>
<li><p>体验业：为消费者和你在一直的时间收费</p>
</li>
</ul>
<p>考虑如何从农村、小城市获利</p>
<p>0.2.3 获得投资</p>
<p>开一家舒服的小公司，或者做个自由职业者、开发几款能赚小钱的软件，也是件不错的事。</p>
<p>临界量（Critical Mass）</p>
<p>在社会学中有一个概念叫临界量，它是指一个社会系统中，某件事情达到了一定动量，这个运量可以让这件事情自我维持、并推动它进一步成长。例如，通过灌水增加论坛流量、进而带来真正的用户流量，通过名人开博吸引粉丝、进而带来真正的普通用户。</p>
<p>花太多时间在思考上，会导致一些产品决策太慢；其实想不清楚的时候可以先摸索下。</p>
<p>用户的历史行为往往比他当前的意愿更有价值。</p>
]]></content>
      
        <categories>
            
            <category> 读书笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PM </tag>
            
            <tag> 结网 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《软件随想录》读书笔记（1）]]></title>
      <url>https://atjason.com/69.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/cuww6.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/zb1b2.jpg" alt=""></a>1.12 寸土必争</p>
<p>将闹钟的默认时间调为早上7点，而不是半夜12点；这样的改进几乎没有变化，但是，你前进了一点点。</p>
<p>每天前进一小步，将一件东西做得比昨天好一点点。</p>
<p>经过无数次这样的细节改进后，你将产品打磨得越来越光亮；终于有一天，量变引发质变，一款优秀、及至完美的产品诞生。</p>
<p>1.13 大构想的陷阱</p>
<p>就像梦境一样，我们总是认为自己连续的认识事情的全貌，可当你试图重述整个梦境/事情时，你会发现有太多细节你根本就不知道。</p>
<p>1.14 别给用户太多选择</p>
<p>别给用户太多选择，这会让他们感到疲惫，并伤害他们内心的幸福感。</p>
<p>1.15 易用性是不够的</p>
<p>“软件易用性”概念的演变</p>
<p>软件发展的前期，易用性主要是指人机交互过程方面；而随着互联网的发展、移动互联网的兴趣，软件越来越社会化，因此易用性也增加了越来越多方便社会化的成分。比如是否能方便的与云同步、共享给好友、发表评论、等等。</p>
]]></content>
      
        <categories>
            
            <category> PM </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PM </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[复盘]]></title>
      <url>https://atjason.com/65.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/xyydx.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/i4y9l.jpg" alt="复盘"></a></p>
<p>复盘，这一词汇常用于象棋、围棋：比赛结束后，双方棋手把刚才的对局再重复一遍。</p>
<p>下围棋的高手都有复盘的习惯。</p>
<p>在复盘中，双方的思维不断碰撞，不断激发新的方案，新的思路、新的思维、新的理论可能在此萌发。</p>
<p>在复盘中，当某种熟悉的类似的局面出现在你的面前的时候，你往往能够知道如何应对，脑海中会出现好多种应对方法；或者你可以敏锐的感觉到当前所处的状态，从而对下一步的走向作出判断。</p>
<p>事情不顺时，通过复盘，想想当初为什么做这件事、为什么要这样做、有没有其他的办法、有没有遗漏的条件、等等，说不定发现现在的路本来就是死胡同，说不定会发现新的解决办法。</p>
<p>事情结束时，通过复盘，想想一路走来都发生了哪些事情、自己做了什么、最大的收获是什么、最大的意外是怎么处理的、等等，会更加切实的增加经验，下次做类似的事情就可以提高不少的效率。</p>
<p>其实今天做事的时候就碰到了严重的问题，发现之前预想的方案并不能解决原始的问题，那就没有必要花精力去解决当前方案碰到的问题，反而需要通过复盘来找找原始问题的其他解决方案。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[淡定、知足、坦然的心态]]></title>
      <url>https://atjason.com/49.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/wbznb.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/g4rdh.jpg" alt=""></a></p>
<p>今天搬东西，拉货的司机态度很好，让我印象深刻。</p>
<p>他其实不是什么搬家公司，而是自己有辆小货车，平时就在小区门口接生意，主要是搬家之类的。我找车时他就停在路边，地点选的很好，我过去谈好价钱就出发了。一路上闲聊，他让人感觉很随意；心态很好，不觉得自己社会地位有什么低下，没有对生计的抱怨，让人感觉他过得很舒服；靠本事吃饭，踏实、惬意。搬东西时也比较热情，并且没有一般搬家司机那种对楼层、东西多之类的纠结，反而跟我说，其实你这东西不算多；最后价格上也不纠缠。</p>
<p>最后我要了他的名片，下次有事还找他。</p>
<p>对于搬家、拉货这样的行当，能做出服务业的态度，实属不易。我相信他生活不是非常的富足，可他精神上过得很舒服。这样的心态让他生活过得舒服，而且生意也很好做。你想，谁不想跟一个让自己舒服的人打交道？不管这交道指的是搬家、吃饭、游玩，还是工作；而且，这样的情况下，客户其实也不太会跟他纠结十元、五元的零头，说不定下次生意可能还会找他。</p>
<p>淡定、知足、坦然的心态，舒服的工作、生活。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[判断 - 明确 - 坚持]]></title>
      <url>https://atjason.com/40.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/w5gqr.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/yxuev.jpg" alt="判断"></a></p>
<p>这是自己缺乏、一直想有的品质。</p>
<p>判断 - 事情发生后，能马上分析出周围的环境、自己所处的位置、将会发生哪些变化、等等，不至于慌乱、无措，或者是因为决策太慢而贻误时机。</p>
<p>明确 - 判断结束后，要有明确的结论，发生了什么事情、有什么影响、该怎么处理、该放弃哪些东西、等等，有结论才能说明判断是有效的。</p>
<p>坚持 - 虽然事情总在变化、没什么永远是对的，不过在一段时间内、自己判断得出明确的结论后，应该行动、坚持。总是担心变化而不去做，或者做着做着、碰到事情后就马上变化，这样的结果就是忙来忙去一场空。</p>
<p>在生活的细节中锻炼这些品质。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[周末骑行]]></title>
      <url>https://atjason.com/38.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/uz1h6.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/uymax.jpg" alt=""></a></p>
<p>骑车是一直都有、新近才实践的兴趣，每周都会有行动，这周末就约同事去骑车。</p>
<p>早上自己竟然迟到了二十分钟，这几乎是我不能容忍的错误。一是起来晚了，没迟到的意识动作慢了；然后是出门后纠结于天气，于是重新回来加了件衣服；第二次出门，发现没带头盔，于是又折腾了一次。以后要注意了，行动前要先查天气预报（虽然经常不准），根据情况准备衣物；另外是列出物品清单（见附录），这样每次行动前就不用东想西想、出门后发现忘带东西了。</p>
<p>到了公司楼下集合，结果开始下雨，不大不小，却也一直不停。没办法，我们五个人等了近一个小时才出发。既定的路线也被迫修改（其实后来中途路线又改了）。感觉一般来说出去骑车，三人是比较合适的：人少无聊、容易累；人多意见多、不容易统一。路线、目标还是要有的，不然只顾着赶路、一阵埋头苦骑也没太大意思。</p>
<p>路线上倒是有几个意外收获。一是去了滨江的垃圾街；其实就是大学后门的小吃、商业街。起先是原始形态，地上总是有小吃产生的包装袋、纸之类的垃圾，故而得名垃圾街。现在政府出面管理，卫生状况改善了；不过也开始收取摊位费之类的费用，小吃的价格也随之上涨了。</p>
<p>不过小吃还是蛮好吃的，我选的手抓饼、煎豆腐。后来想吃臭豆腐，大家说不干净，所以作罢。其实小吃主要是吃种心情，如果太想着卫生之类的问题，吃着就没有感觉了。</p>
<p>另一个意外收获就是去骑了龙井。一口气骑到了顶上，感觉爽啊！浑身出汗、下车大口喘气，舒畅啊！下坡更惬意，一脚都不蹬、直接溜到底，过瘾！</p>
<p>不过路上右膝盖还是有些不舒服，强度大、或者距离长以后，右膝盖就会有感觉，不感用力蹬了。而且膝盖如果受伤就需要很长的时间来修复，怪不得运动员很多因为膝伤就半年、一年不比赛，想比比不了啊。有空查些相关的资料，好好保护膝盖。</p>
<p>最后看码表，60公里；新车买来后，总共400公里；今年估计破千困难了，周末休闲骑骑算了。</p>
<p>骑行前准备</p>
<p>综合</p>
<p>天气、衣帽、路线、人员</p>
<p>车况</p>
<p>刹车、轮胎气压、变速、前车灯、后车灯、铃铛、润滑油、紧螺丝</p>
<p>附件</p>
<p>骑行服、头盔、眼镜、手套、魔巾、绑带、码表、前包、驮包、修理包</p>
<p>其他</p>
<p>手机电池、食品、水、水果、纸巾</p>
]]></content>
      
        <categories>
            
            <category> 旅行 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[组织里的人]]></title>
      <url>https://atjason.com/31.html</url>
      <content type="html"><![CDATA[<p><a href="https://ps.toolinbox.net/liela.jpg" target="_blank" rel="external"><img src="https://ps.toolinbox.net/vqyya.jpg" alt="组织中的人"></a></p>
<p>有人的地方，就有江湖；</p>
<p>有人的地方，就有政治；</p>
<p>组织里的管理者：</p>
<p>最重要的事：找人</p>
<p>次要的事：管人</p>
<p>再次：做事、或者睡觉</p>
<p>招到不合适的人，管理的成本会急剧增加，甚至让他做还不如你自己做；一般层面上的管理，说的是平衡资源、协调进度之类的；不过实际上，管理者的精力都消耗在刺头、掉队、不合群的人身上。追本溯源，招人最重要。</p>
<p>当然，战略级别的管理，不在此列。</p>
<p>招人，其实离不开另外一个话题：培养人。因为招到合适、优秀的人，简直像中彩票。能带出精干的队伍，绝对是能力；这样的队伍，绝对是利器。</p>
<p>所谓组织、团队，就是人</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[变与守]]></title>
      <url>https://atjason.com/22.html</url>
      <content type="html"><![CDATA[<p>当事情碰到困难时，我们总会想到改变些什么，让事情变得顺利些。这是自然而然的习惯。</p>
<p>不是说这不对，毕竟，穷则思变，说的就是这个道理；只是，不全对</p>
<p>有时，困难确是山穷水复已无路的征兆</p>
<p>有时，困难只是柳岸花明又一村的表象；</p>
<p>事情不顺时</p>
<p>可以马上变，直到搞定</p>
<p>可以再坚持一会，试段时间再说</p>
<p>可以站着不动，想想以后看；</p>
<p>都对，只是风格不同；</p>
<p>说了半天废话；</p>
<p>自己要多变些，多尝试；不然就是秀才造反，三年不成。</p>
]]></content>
      
        <categories>
            
            <category> 北冥 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[建站过程]]></title>
      <url>https://atjason.com/9.html</url>
      <content type="html"><![CDATA[<p>有了在互联网上建个窝的想法后，接下来就是要行动了。</p>
<p>博客系统基本不用想，WordPress，赞一个！</p>
<p>然后是域名和空间。先是尝试了免费的，不过几经折腾后，放弃：</p>
<ul>
<li><p>折腾不起，太花时</p>
</li>
<li><p>速度</p>
</li>
<li><p>不可靠，说不定哪天啥都没</p>
</li>
</ul>
<p>然后就去买域名和空间。国内、国外的一顿找啊，太折腾！最好是有高人指点；而且感觉还是有些贵。后来灵光一闪，在淘宝上买呗！最后百元以下搞定域名、空间（不过时间不长），感觉还是挺满意的:)</p>
<p>期间有个插曲，伟大的墙！实在担心哪天我的窝被墙了，有家不能回…</p>
<p>想域名实在是个费脑力的事；后来想想，空间主要是自用，如果推广还是要靠文章质量、搜索、SNS，直接输入域名的不多，将就算了；</p>
<p>考虑过的域名：</p>
<ul>
<li><p>JasonZone.ne</p>
</li>
<li><p>JasonArea.co</p>
</li>
<li><p>JasonRoom.co</p>
</li>
<li><p>AtJason.co</p>
</li>
<li><p>HiJason.c</p>
</li>
<li><p>InJason.co</p>
</li>
<li><p>SharedJason.co</p>
</li>
<li><p>OpenJason.ne</p>
</li>
<li><p>..</p>
</li>
</ul>
<p>感触：有了想法，立即行动！</p>
<p>不然基本上这个想法就死掉了，再也不会被执行</p>
<p>当然，如果你是CEO、国家主席级别，事情比较多，就让秘书记下来，然后根据优先级排日程…</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在网络上建自己的窝]]></title>
      <url>https://atjason.com/6.html</url>
      <content type="html"><![CDATA[<p>已不知道自己有多少网龄，也许现在谈这个已经很土了；但这仿似一个心结，自己应该在网络上有个落脚的地方；于是，有了这个窝。</p>
<p>在填写网站标题的时候，还不知道要写些什么；自由吧，乱七八糟，什么都往这扔吧！</p>
]]></content>
      
        <categories>
            
            <category> IT </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
