<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jason</title>
  <subtitle>独立开发，自由职业</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://atjason.com/"/>
  <updated>2019-04-06T16:34:12.468Z</updated>
  <id>https://atjason.com/</id>
  
  <author>
    <name>Jason</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0406 - 时间的尺度</title>
    <link href="https://atjason.com/daily/2019-04-06.html"/>
    <id>https://atjason.com/daily/2019-04-06.html</id>
    <published>2019-04-06T14:00:00.000Z</published>
    <updated>2019-04-06T16:34:12.468Z</updated>
    
    <content type="html"><![CDATA[<p>尤努斯，这位被誉为“小额信贷之父”、创办了被称为“穷人银行”的银行，并因此获得 2006 年诺贝尔和平奖。</p>
<p>而十几年过去了，这一模式暴露的问题越来越多，批评的声音自然也变得强烈。</p>
<ul>
<li>比如，贷款利率高达 20% ~ 50%，非但不能减少贫困，还成为穷人的陷阱（点名花呗之类的产品）；</li>
<li>比如，贷款的用途并不是做生意（即使是做生意，什么生意能有 50% 的收益），而是用于生活救急，比如看病；考虑到利率，颇有点饮鸩止渴的感觉；</li>
<li>比如，该银行在中国的复制，商业上失败了：收益远低于运营开销；</li>
</ul>
<p>这里并不是想讨论这一模式的功过得失，而是即使有诺贝尔奖加持的东西，一旦放在时间的长河中，就不一定能经历得起时间的考验。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尤努斯，这位被誉为“小额信贷之父”、创办了被称为“穷人银行”的银行，并因此获得 2006 年诺贝尔和平奖。&lt;/p&gt;
&lt;p&gt;而十几年过去了，这一模式暴露的问题越来越多，批评的声音自然也变得强烈。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比如，贷款利率高达 20% ~ 50%，非但不能减少贫
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0405 - 经济移民</title>
    <link href="https://atjason.com/daily/2019-04-05.html"/>
    <id>https://atjason.com/daily/2019-04-05.html</id>
    <published>2019-04-05T14:00:00.000Z</published>
    <updated>2019-04-05T15:37:28.199Z</updated>
    
    <content type="html"><![CDATA[<p>因为求学、工作，背井离乡。</p>
<p>先是侯鸟，假期、过年时回家。</p>
<p>后来，家里老人来照顾小孩，过年都不一定回家了。</p>
<p>再后来呢？</p>
<p>若是老人不在、房子拆迁，怕是永远也回不去了。</p>
<p>是什么力量在驱动这一切，又让人心甘情愿？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为求学、工作，背井离乡。&lt;/p&gt;
&lt;p&gt;先是侯鸟，假期、过年时回家。&lt;/p&gt;
&lt;p&gt;后来，家里老人来照顾小孩，过年都不一定回家了。&lt;/p&gt;
&lt;p&gt;再后来呢？&lt;/p&gt;
&lt;p&gt;若是老人不在、房子拆迁，怕是永远也回不去了。&lt;/p&gt;
&lt;p&gt;是什么力量在驱动这一切，又让人心甘情愿？
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0404 - 收敛技术栈</title>
    <link href="https://atjason.com/daily/2019-04-04.html"/>
    <id>https://atjason.com/daily/2019-04-04.html</id>
    <published>2019-04-04T14:00:00.000Z</published>
    <updated>2019-04-04T15:14:14.963Z</updated>
    
    <content type="html"><![CDATA[<p>即便号称「全干工程师」，也不可能全都能干；<br>即使全都能干，也不可能全部都精通。</p>
<p>尤其具体到个人，时间精力有限，体力心智最优的时间段也有限，能掌握的东西也有限。在有限这个大提前下，做事情就不能无节制，就要有所取舍。</p>
<p>具体的，比如 A 和 B 两种技术都能解决某问题，那最好只掌握其中一种。把过多的时间花在两种都掌握上，不如去掌握解决另外问题的技术。</p>
<p>怎么才叫掌握呢？一个直白的标准：不用 Google，也能快速可靠地解决具体的问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;即便号称「全干工程师」，也不可能全都能干；&lt;br&gt;即使全都能干，也不可能全部都精通。&lt;/p&gt;
&lt;p&gt;尤其具体到个人，时间精力有限，体力心智最优的时间段也有限，能掌握的东西也有限。在有限这个大提前下，做事情就不能无节制，就要有所取舍。&lt;/p&gt;
&lt;p&gt;具体的，比如 A 和 B 
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0403 - 少留技术债务</title>
    <link href="https://atjason.com/daily/2019-04-03.html"/>
    <id>https://atjason.com/daily/2019-04-03.html</id>
    <published>2019-04-03T14:00:00.000Z</published>
    <updated>2019-04-03T15:39:18.924Z</updated>
    
    <content type="html"><![CDATA[<p>今天迁移服务器，花了比较多时间在一个处于维护状态中的一个功能&amp;服务。现在看来，这就是一种技术债务了。</p>
<p>怎么来的呢？最开始时，这个后端功能是用 Swift 实现的；你没看错，几年前用 Swift 实现后端功能；估计放现在，也没几个人这么干。后来，学 Python，就用 Python 又实现了一遍。再后来，技术栈收敛到 js/node，Python 就又搁着了。于是，迁移时就成了技术债务。</p>
<p>还有个原因，其中使用了 MySQL 数据库。而现在，我又将重心放在了 MongoDB 上，MySQL 就又成包袱了…且，毕竟 MySQL 安装维护啥的，也是成本。最后，我把数据库又转为 SQLite 了。其实，如果当初直接就选择 SQLite，现在也就没太多成本了。</p>
<p>说到这个，就又说起另外一个话题：<strong>对于实际生产，可维护性、低维护成本的技术方案，可能比性能等其他方面更重要</strong>。</p>
<p>要减少技术债务，比较重要的一点，还是 <strong>收敛技术栈</strong>。凡是自己接触的技术，都掌握到熟练的程度。如果是学学的技术，谨慎使用到需要长期维护的项目中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天迁移服务器，花了比较多时间在一个处于维护状态中的一个功能&amp;amp;服务。现在看来，这就是一种技术债务了。&lt;/p&gt;
&lt;p&gt;怎么来的呢？最开始时，这个后端功能是用 Swift 实现的；你没看错，几年前用 Swift 实现后端功能；估计放现在，也没几个人这么干。后来，学 Py
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0402 - 不确定性的魅力</title>
    <link href="https://atjason.com/daily/2019-04-02.html"/>
    <id>https://atjason.com/daily/2019-04-02.html</id>
    <published>2019-04-02T14:00:00.000Z</published>
    <updated>2019-04-02T14:31:24.343Z</updated>
    
    <content type="html"><![CDATA[<p>我们做的很多事，都可以算作在追求确定性。比如，怎么做才能 XXX</p>
<p>而另一方面，不是所有事都有确定性，也不只是确定性才有意义。</p>
<p>比如，出去旅游，如果攻略做的太详细，未免乏味。且如果因为变动而无法照着攻略行动，人会变得焦虑。</p>
<p>比如，看一本不知道结尾的小说，更引人入胜。</p>
<p>比如，一眼望穿的人生，没有吸引力。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们做的很多事，都可以算作在追求确定性。比如，怎么做才能 XXX&lt;/p&gt;
&lt;p&gt;而另一方面，不是所有事都有确定性，也不只是确定性才有意义。&lt;/p&gt;
&lt;p&gt;比如，出去旅游，如果攻略做的太详细，未免乏味。且如果因为变动而无法照着攻略行动，人会变得焦虑。&lt;/p&gt;
&lt;p&gt;比如，看一
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0401 - 文档的命运，就是没人看</title>
    <link href="https://atjason.com/daily/2019-04-01.html"/>
    <id>https://atjason.com/daily/2019-04-01.html</id>
    <published>2019-04-01T14:00:00.000Z</published>
    <updated>2019-04-01T15:35:40.041Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>从用户的角度，应该有看文档的自觉。</li>
<li>从设计者的角度，用户应该开箱即用，无需看文档或少看文档。</li>
</ol>
<p>文档，就像公共场所的消防栓，最好的命运是没人用；退一步，在真要用时，凭直觉和常识就能使用。最差的，才是得严格按照操作说明才能正常使用。</p>
<blockquote>
<p>路透社方面获悉，2018年10月29日坠海的印度尼西亚狮航JT610航班黑匣子录音内容首次公开：在飞机坠毁前，机组人员还在翻操作手册，但最终没有找到解决方案。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;从用户的角度，应该有看文档的自觉。&lt;/li&gt;
&lt;li&gt;从设计者的角度，用户应该开箱即用，无需看文档或少看文档。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文档，就像公共场所的消防栓，最好的命运是没人用；退一步，在真要用时，凭直觉和常识就能使用。最差的，才是得严格按照操作说明才
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0331 - 有钱之后做什么</title>
    <link href="https://atjason.com/daily/2019-03-31.html"/>
    <id>https://atjason.com/daily/2019-03-31.html</id>
    <published>2019-03-31T14:00:00.000Z</published>
    <updated>2019-03-30T23:46:47.587Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个似简实难的问题，不亚于我最想做什么、价值观及存在的意义等这样的神问，只是更具体些。</p>
<p>试着回答这个问题：如果我口袋里「多出」了这么多钱、甚至必需要花掉，我会用来做什么？</p>
<ul>
<li>10 万</li>
<li>100 万</li>
<li>1000 万</li>
<li>1 亿</li>
<li>10 亿</li>
<li>…</li>
</ul>
<p>且不说答案的好坏，当到某个数字，你的回答变得困难、变慢时，这基本上就是你能驾驭的钱了。</p>
<p>说起答案，我想很多人的答案包含这个：<strong>有钱了，自然什么都不干，去周游世界啊</strong>。只是有这么个问题：你周游世界后，除了对当时旅游经济有点贡献，<strong>这个世界有什么改变？如果有我没我一个样，活着也未免无趣了些。</strong></p>
<p>同样是游历，就说人家徐霞客，一生志在四方，历经 30 余年，足迹遍及今 21 个省市自治区，记录观察到的各种现象、人文、地理、动植物等状况，撰成的60万字地理名著《徐霞客游记》</p>
<p>巴菲特说过，<strong>钱是为了让你做想做的事，而不是为了让你无所事事</strong>。</p>
<p>至少，能回答好有钱之后做什么，才更有动力赚钱。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个似简实难的问题，不亚于我最想做什么、价值观及存在的意义等这样的神问，只是更具体些。&lt;/p&gt;
&lt;p&gt;试着回答这个问题：如果我口袋里「多出」了这么多钱、甚至必需要花掉，我会用来做什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10 万&lt;/li&gt;
&lt;li&gt;100 万&lt;/li&gt;
&lt;li&gt;
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0330 - 纸质书的意外进度</title>
    <link href="https://atjason.com/daily/2019-03-30.html"/>
    <id>https://atjason.com/daily/2019-03-30.html</id>
    <published>2019-03-30T14:00:00.000Z</published>
    <updated>2019-03-30T15:32:20.945Z</updated>
    
    <content type="html"><![CDATA[<p>好久没看纸质书，最近买了几本看；意外发现，看纸质书的进度，明显比电子书快。</p>
<p>看纸质书时，是绝对专注的；甚至比 Kindle 还要好一点点，不会被意外的消息打扰。一旦沉浸其中，自然读得就快些。而且，更有继续读下去的冲动。</p>
<p>另外，纸质书的翻页效果、整本书当前读了多少，这种感觉是电子设备无法比拟的，仪式感更强。</p>
<p>当然，这些便利也只是便利。要不要读书，还是得看自己，和便利的关系不大。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好久没看纸质书，最近买了几本看；意外发现，看纸质书的进度，明显比电子书快。&lt;/p&gt;
&lt;p&gt;看纸质书时，是绝对专注的；甚至比 Kindle 还要好一点点，不会被意外的消息打扰。一旦沉浸其中，自然读得就快些。而且，更有继续读下去的冲动。&lt;/p&gt;
&lt;p&gt;另外，纸质书的翻页效果、整
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0329 - 境界要高、格局要大</title>
    <link href="https://atjason.com/daily/2019-03-29.html"/>
    <id>https://atjason.com/daily/2019-03-29.html</id>
    <published>2019-03-29T14:00:00.000Z</published>
    <updated>2019-03-31T15:46:46.396Z</updated>
    
    <content type="html"><![CDATA[<p>这并不是很空洞的东西，是很具体的。</p>
<p>比如，在支付得起正版的前提下，还要费尽心思和时间去钻免费的空子，甚至是盗版，这就是反面例子。且不说这样的做法是否上得了台面，这样的人，难成大事。</p>
<p>对我而言，尽量不去做别人做过的事，要做也做的比别人好；最好是出新，同时也确实能解决用户的问题。目的是成事，不在具体的细节过多纠缠。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这并不是很空洞的东西，是很具体的。&lt;/p&gt;
&lt;p&gt;比如，在支付得起正版的前提下，还要费尽心思和时间去钻免费的空子，甚至是盗版，这就是反面例子。且不说这样的做法是否上得了台面，这样的人，难成大事。&lt;/p&gt;
&lt;p&gt;对我而言，尽量不去做别人做过的事，要做也做的比别人好；最好是出新
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0328 - AWS 的大腿就是粗</title>
    <link href="https://atjason.com/daily/2019-03-28.html"/>
    <id>https://atjason.com/daily/2019-03-28.html</id>
    <published>2019-03-28T14:00:00.000Z</published>
    <updated>2019-03-28T15:19:54.450Z</updated>
    
    <content type="html"><![CDATA[<p>比如，Amazon 邮件服务 (Amazon SES)，在绑定域名后，可以发给任意该域名下邮箱的邮件，比如 xxx@domain.com，这就意味着有无数邮箱了。</p>
<p>更好玩的事，在 SES 收到邮件时，可以触发不同的事件，比如转发到指定邮件。更更好玩的是，可以触发 Lambda 云函数，做指定的事情，比如解析邮件内容，然后根据内容来响应。</p>
<p>无数邮箱 + 解析邮件内容，这二者结合，想象空间太大了。</p>
<p>AWS 的大腿就是粗，以后得多抱抱。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;比如，Amazon 邮件服务 (Amazon SES)，在绑定域名后，可以发给任意该域名下邮箱的邮件，比如 xxx@domain.com，这就意味着有无数邮箱了。&lt;/p&gt;
&lt;p&gt;更好玩的事，在 SES 收到邮件时，可以触发不同的事件，比如转发到指定邮件。更更好玩的是，可以触
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0327 - 时间很快与该不该</title>
    <link href="https://atjason.com/daily/2019-03-27.html"/>
    <id>https://atjason.com/daily/2019-03-27.html</id>
    <published>2019-03-27T14:00:00.000Z</published>
    <updated>2019-03-28T01:13:58.928Z</updated>
    
    <content type="html"><![CDATA[<p>跟我妈聊，她总是说：这一周一周过的真快啊，这就又到周末了。</p>
<p>是啊，时间很快；又比任何人都勤奋，永远在往前走。</p>
<p>与之形成反差的，是现在正在做的事，回报周期那么长、有多少又不确定，还要不要继续做呢？本来就没多少时间了，还要在目前的事情上继续投入吗？时间越快、回报越慢、现实压力越大，这种痛苦与纠结就愈发强烈。</p>
<p>只是，时间的紧张感确实明显加深我们的焦虑，却不应该是影响决策的因素。如果时间的紧张感明显影响到的你的决策，暂时忘记时间这个因素，然后再做决策。</p>
<p><strong>压力，并不是真正的动力；动力在心。</strong></p>
<p>真正做事的时侯，最好能忘记时间的存在，全情投入。事情做的好不好，更多在于自己的努力；深度优秀的人或事，甚至能穿越时间，成为经典。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跟我妈聊，她总是说：这一周一周过的真快啊，这就又到周末了。&lt;/p&gt;
&lt;p&gt;是啊，时间很快；又比任何人都勤奋，永远在往前走。&lt;/p&gt;
&lt;p&gt;与之形成反差的，是现在正在做的事，回报周期那么长、有多少又不确定，还要不要继续做呢？本来就没多少时间了，还要在目前的事情上继续投入吗？时
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0326 - 苹果的「圈留割」</title>
    <link href="https://atjason.com/daily/2019-03-26.html"/>
    <id>https://atjason.com/daily/2019-03-26.html</id>
    <published>2019-03-26T14:00:00.000Z</published>
    <updated>2019-03-26T01:33:10.399Z</updated>
    
    <content type="html"><![CDATA[<p><strong>圈留割：把用户圈进来，想办法把用户留住，然后从用户身上获利。</strong></p>
<p>当然，这是一套比较刻薄的说法，更多是站点商家和商业的角度来看，暂时忽略了给用户提供了更高价值的事实。比如，给用户带来了十分的好处，从中获取一分的利润。这样的利润，再多也不过分。</p>
<p>好了，我们试着把这个逻辑套在苹果身上。没错，就是那个散发光辉的苹果。</p>
<p><strong>先说硬件</strong>。苹果应该是硬件起家、即使现在也是硬件利润最大、却极力撇清给外界这个印象。为什么？因为硬件设计制造周期长、风险大、增长有明显的天花板。硬件增加收入也就两种方式：<strong>提价和销量</strong>。提价就不说了，最近苹果被迫降价销售，说明此路不通。销量方面，总不能人手一部吧？好，就算今年人手一部，明年呢？卖给外星人？单纯的硬件，无法撑起苹果股份不断上涨的期望。</p>
<p><strong>再说 iOS 及 App 生态</strong>。很多人想换 Android 手机却没换，很大的原因就是对 iOS App 的依赖；这是我感觉苹果最有价值的部分。可，这部分也有问题。比如，大家安装新 App 的次数越来越少了，Top 1000 甚至 Top 100 的 App，占据了绝大多数用户的绝大多数时间。还有个问题，就是微信小程序为代表的各种轻应用，事实上扼杀了很多长尾 App，给 App 生态带来直接的威胁。不爽的是，App 带来的收入，开发者竟然拿走大部分、自己只能得到 30%；更可恶的是，微信小程序竟然想绕过自己搞支付，直接攫取这可能的 30% 收入。是可忍，股价不能忍。</p>
<p><strong>再说怎么割</strong>，也就是增加收入。前面说了，硬件是主要的收入来源，却有明显的问题。那怎么办呢？苹果的选择明显是服务。服务主要是指订阅，比如 iCloud、Apple Music、Apple TV 等。既不用给别人分成 30%，又是持续、稳定、可增长的，还能给用户带来价值，怎能不诱人？比如今天的苹果发布会，有媒体标题为：<strong>苹果发布会一款硬件没发：All in服务摆脱「硬件依赖」</strong></p>
<p>最后，看下 <a href="https://www.apple.com/cn/newsroom/2019/01/apple-reports-first-quarter-results/" target="_blank" rel="external">Apple 第一季度业绩</a></p>
<blockquote>
<p>iPhone® 的收入相比去年下降 15%，而其他所有产品和服务的收入则增长了 19%。服务收入…达创纪录的 109 亿美元。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;圈留割：把用户圈进来，想办法把用户留住，然后从用户身上获利。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当然，这是一套比较刻薄的说法，更多是站点商家和商业的角度来看，暂时忽略了给用户提供了更高价值的事实。比如，给用户带来了十分的好处，从中获取一分的利润。这样的利润，再
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0325 - 收敛与简化</title>
    <link href="https://atjason.com/daily/2019-03-25.html"/>
    <id>https://atjason.com/daily/2019-03-25.html</id>
    <published>2019-03-25T14:00:00.000Z</published>
    <updated>2019-03-25T15:45:21.362Z</updated>
    
    <content type="html"><![CDATA[<p>今天花了点时间研究下 Google 关键词排名监控的产品，感觉有好多。如果把他们的功能点取并集，感觉有好多。</p>
<p>而事实上，用户肯定不需要所有功能，我也没时间做那么多。这就需要取舍、简化，只做最必要的功能、用最简洁的形式。开放容易收敛难，这是产品初期不确定性最大、最烧脑的阶段。</p>
<p>而这个问题如果不想清楚，就直接上代码、边实现边改，就会出现做百度时的问题：因为对需求的理解有变动，数据结构和接口变动，这些变动湮没了很多时间。</p>
<p>明天再深度体验几款产品，找出最小功能集（没办法，我不是这个产品的直接用户，只能这样找灵感了…）。同时，初期的数据结构，尽量做的能支撑大部分功能，保留扩展性。争取明晚能正式开始代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天花了点时间研究下 Google 关键词排名监控的产品，感觉有好多。如果把他们的功能点取并集，感觉有好多。&lt;/p&gt;
&lt;p&gt;而事实上，用户肯定不需要所有功能，我也没时间做那么多。这就需要取舍、简化，只做最必要的功能、用最简洁的形式。开放容易收敛难，这是产品初期不确定性最大、
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0324 - 「我竟然忘了这件事」</title>
    <link href="https://atjason.com/daily/2019-03-24.html"/>
    <id>https://atjason.com/daily/2019-03-24.html</id>
    <published>2019-03-24T14:00:00.000Z</published>
    <updated>2019-03-24T14:41:04.955Z</updated>
    
    <content type="html"><![CDATA[<p>是不是时不时就会有这样的情况：一拍大腿，我竟然忘了这件事；要是当初做了某事就好了，现在弥补成本太高了；等等。</p>
<p>我并不是想说用待办事项软件记录下来，也不是想说注意重要而不紧急的事，而是想说，<strong>别让自己 100% 被具体的事务缠住了，至少要让 20% 的自己跳出来，站在更高的角度去审视自己、审视身边人、审视生活</strong>。可以是天马行空，可以是无厘头。即便从效用的角度，如果这时候在某个关键节点投入一点点精力，也好过将来用极大的成本来弥补或补齐。</p>
<p>给生活多一些照顾，生活少给你一些意外。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;是不是时不时就会有这样的情况：一拍大腿，我竟然忘了这件事；要是当初做了某事就好了，现在弥补成本太高了；等等。&lt;/p&gt;
&lt;p&gt;我并不是想说用待办事项软件记录下来，也不是想说注意重要而不紧急的事，而是想说，&lt;strong&gt;别让自己 100% 被具体的事务缠住了，至少要让 20%
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0323 - 多做业务，少造轮子</title>
    <link href="https://atjason.com/daily/2019-03-23.html"/>
    <id>https://atjason.com/daily/2019-03-23.html</id>
    <published>2019-03-23T14:00:00.000Z</published>
    <updated>2019-03-24T00:41:13.706Z</updated>
    
    <content type="html"><![CDATA[<p>昨天折腾了下提交代码后的自动部署，将代码开源到 GitHub 上，也在 V2EX 等渠道介绍。在一些网友评论和我自己思考后，感觉这个事情不太妥：造轮子的味道太重。</p>
<p><strong>决定产品核心竞争力和赢利能力的，在于对业务的把握和实现。</strong>除此之外，其他的都是末端。尤其，在时间精力有限的前提下，<strong>应尽可能把时间精力投入到核心业务上</strong>。任何其他的东西，应尽可能「外包」给成熟的第三方服务。如果投入太多精力去重复造轮子，这就是本末倒置。</p>
<p>PS：<strong>多暴露自己，多和别人交流，是件非常好的事</strong>。别人不经意间的一句话，可能就会为自己提供全新的视角，揭示被自己习惯或忽视的东西。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天折腾了下提交代码后的自动部署，将代码开源到 GitHub 上，也在 V2EX 等渠道介绍。在一些网友评论和我自己思考后，感觉这个事情不太妥：造轮子的味道太重。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;决定产品核心竞争力和赢利能力的，在于对业务的把握和实现。&lt;/strong&gt;除此之
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0322 - 响应 GitHub Webhooks 实现自动部署的 Web 服务</title>
    <link href="https://atjason.com/daily/2019-03-22.html"/>
    <id>https://atjason.com/daily/2019-03-22.html</id>
    <published>2019-03-22T14:00:00.000Z</published>
    <updated>2019-03-22T11:59:18.915Z</updated>
    
    <content type="html"><![CDATA[<p>今天研究并实现一个响应 GitHub Webhooks 实现自动部署的 Web 服务。简单收拾了下代码和文档，<a href="https://github.com/atjason/deploy" target="_blank" rel="external">开源至此</a></p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>这并不是一个 Hello Word 教学示例，而是我自己在用的实际项目。假设你已经知道下列技术或满足其条件：</p>
<ul>
<li>有一台自己的服务器</li>
<li>会配置域名</li>
<li>会配置 nginx 或者其他 Web 服务器，实现 Web 服务至 node 服务的转发</li>
<li>了解 node、koa</li>
<li>了解 Webhooks</li>
<li>了解 SMTP</li>
<li>会编辑 shell 脚本</li>
</ul>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul>
<li><code>node lib/index.js</code> 运行后，在 <code>3030</code> 端口提供可响应 GitHub Webhook 的服务</li>
<li>内部通过 <code>exec</code> 来调用实际工作的 shell 脚本（需要自己编写）</li>
<li>发邮件告知运行结果</li>
</ul>
<h2 id="主要配置"><a href="#主要配置" class="headerlink" title="主要配置"></a>主要配置</h2><p>均位于 <code>config</code> 目录，参照 <code>*_demo.json</code>，添加没有 <code>_demo</code> 的版本</p>
<h3 id="config-json"><a href="#config-json" class="headerlink" title="config.json"></a>config.json</h3><p>可为每个仓库、分支创建对应的配置：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"webhook-test_master"</span>: &#123; <span class="comment">// RepositoryName_BranchName</span></div><div class="line">    <span class="string">"secret"</span>: <span class="string">"GitHub_Webhook_secret"</span>,</div><div class="line">    <span class="string">"cwd"</span>: <span class="string">"/home/jason/testapi/"</span>, <span class="comment">// 脚本执行目录</span></div><div class="line">    <span class="string">"command"</span>: <span class="string">"/bin/bash ./deploy.sh"</span>, <span class="comment">// 真正工作的 shell 脚本</span></div><div class="line">    <span class="string">"env"</span>: &#123; <span class="comment">// 一些环境变量</span></div><div class="line">      <span class="string">"DEBUG"</span>: <span class="string">"s:*"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="security-json"><a href="#security-json" class="headerlink" title="security.json"></a>security.json</h3><p>目前主要存储了 SMTP 配置信息，用于发告知邮件：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"mailConfig"</span>: &#123;</div><div class="line">    <span class="string">"host"</span>: <span class="string">"email-smtp.us-west-2.amazonaws.com"</span>,</div><div class="line">    <span class="string">"port"</span>: <span class="string">"465"</span>,</div><div class="line">    <span class="string">"user"</span>: <span class="string">"user123"</span>,</div><div class="line">    <span class="string">"password"</span>: <span class="string">"password123"</span>,</div><div class="line">    <span class="string">"from"</span>: <span class="string">"from@gmail.com"</span>,</div><div class="line">    <span class="string">"to"</span>: <span class="string">"to@gmail.com"</span></div><div class="line">  &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="琐碎的"><a href="#琐碎的" class="headerlink" title="琐碎的"></a>琐碎的</h2><p>关于 GitHub Webhook，记得生成密码、选择 <code>json</code> 格式。</p>
<p>关于 shell 脚本，可以通过 <code>2&gt;&amp;1</code> 将其中不重要的 warn/error，从 stderr 转到 stdout 中。</p>
<p>关于邮件服务，我开始时用的是阿里云，但出现了提示发送成功、但实际不破功的情况，垃圾箱也没有。后来试了 Amazon SES，目前一切顺利；每天 200 封免费邮件额度。</p>
<p>使用 VSCode 编写调试，<code>.vscode</code> 配置本身也包含在项目中了。</p>
<p>如果你遇到了问题，多问问 Google 和自己；我这边是顺畅运行的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天研究并实现一个响应 GitHub Webhooks 实现自动部署的 Web 服务。简单收拾了下代码和文档，&lt;a href=&quot;https://github.com/atjason/deploy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开源至此&lt;/a
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0321 - 简单折腾了 Docker</title>
    <link href="https://atjason.com/daily/2019-03-21.html"/>
    <id>https://atjason.com/daily/2019-03-21.html</id>
    <published>2019-03-21T14:00:00.000Z</published>
    <updated>2019-03-21T14:55:48.549Z</updated>
    
    <content type="html"><![CDATA[<p>本来要做微信登录，一直被微信审核给卡着，烦；就折腾了 Docker.</p>
<p>目前来看，我对 Docker 的使用还在 Container 级别。比如，需要使用 mongodb；本来是全局安装，测试和生产环境使用相同的 mongo、不同的 db. 有了 Docker 之后，可以运行不同的 mongodb Container，分隔的更彻底些，理论上扩展性也更好些。再加上结果 Docker Volume，可以更好地备份恢复数据。</p>
<p>顺带着还有个好处：临时学习某技术时，不用全局安装其运行环境，而是安装一个 Docker 镜像，在这个沙盒里随意折腾，而不用担心污染电脑主环境。试用后发现不需要，直接删除 images 即可；需要时，才考虑在电脑主环境安装。</p>
<p>进阶的，还没有用于 Images/Stack/Swarm 级别；不过还是跟着官方介绍跑了一遍，大致知道是怎么回事。等将来用的时候，再细细口味。</p>
<p>比如，明天准备搭个 webhook 的响应服务，就可以用上 Docker 来开发和部署。虽然我还是觉得有点不适应，平白多了一些步骤，不过还是硬着头皮上吧，逼自己适应 Docker 的套路。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来要做微信登录，一直被微信审核给卡着，烦；就折腾了 Docker.&lt;/p&gt;
&lt;p&gt;目前来看，我对 Docker 的使用还在 Container 级别。比如，需要使用 mongodb；本来是全局安装，测试和生产环境使用相同的 mongo、不同的 db. 有了 Docker 
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0320 - 学习的两个阶段</title>
    <link href="https://atjason.com/daily/2019-03-20.html"/>
    <id>https://atjason.com/daily/2019-03-20.html</id>
    <published>2019-03-20T14:00:00.000Z</published>
    <updated>2019-03-20T02:29:06.176Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、野蛮学习阶段"><a href="#一、野蛮学习阶段" class="headerlink" title="一、野蛮学习阶段"></a>一、野蛮学习阶段</h2><p>学新东西时，先不要太过在意能否应用到生产中、怎么用。<strong>先把自己完全沉浸到新东西中，用新东西的视角和思维模式来理解一切。</strong><br>打个比方，自己之前擅长用螺丝刀解决一切问题。现在开始学锤子，先不着急和螺丝刀比较，而是认真学习锤子的使用方式，把全世界看成钉子。</p>
<h2 id="二、为我所用阶段"><a href="#二、为我所用阶段" class="headerlink" title="二、为我所用阶段"></a>二、为我所用阶段</h2><p>等到了一定程度，再跳出来，和已有的东西交融。</p>
<p>比如，和螺丝刀相比，锤子在哪些方面更好使；又有哪些局限，还是有螺丝刀更顺手；<br>比如，我目前正在使用的技术和方式，有哪些不足；和新东西相比，互相有哪些优缺点。</p>
<p>既不盲目崇拜新东西、把已有的拍死，也不要过早因为新东西的局限而下结论。</p>
<p><strong>更关键的</strong>，是已经会的、和新学的东西之间，如何交融，如何发挥双方的特长，<strong>如何更新自己的技术树</strong>。该用锤子用锤子，该用螺丝刀则继续使用螺丝刀。</p>
<p><strong>吸星大法</strong>，你怕不怕？</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、野蛮学习阶段&quot;&gt;&lt;a href=&quot;#一、野蛮学习阶段&quot; class=&quot;headerlink&quot; title=&quot;一、野蛮学习阶段&quot;&gt;&lt;/a&gt;一、野蛮学习阶段&lt;/h2&gt;&lt;p&gt;学新东西时，先不要太过在意能否应用到生产中、怎么用。&lt;strong&gt;先把自己完全沉浸到新东西
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0319 - 被微信审核搞得有点烦</title>
    <link href="https://atjason.com/daily/2019-03-19.html"/>
    <id>https://atjason.com/daily/2019-03-19.html</id>
    <published>2019-03-19T14:00:00.000Z</published>
    <updated>2019-03-19T15:22:58.455Z</updated>
    
    <content type="html"><![CDATA[<p>这周本来有几项关键词改进的功能，这些功能都或多或少依赖微信登录。可，在微信开放平台创建应用需要审核。审核也就罢了，等了 2 天，竟然审核没通过，说是提供的材料缺少盖章。</p>
<p>哎，能不能专业点，我用的是个体户资质，本来就没公章，去淘宝买个萝卜章给你盖上啊？被拒后，连个申诉的入口都没有，发邮件也没任何反应，真是相当糟糕的体验。</p>
<p>既影响进度、又影响心情，干脆不搞了，去学 Docker，换个心情。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这周本来有几项关键词改进的功能，这些功能都或多或少依赖微信登录。可，在微信开放平台创建应用需要审核。审核也就罢了，等了 2 天，竟然审核没通过，说是提供的材料缺少盖章。&lt;/p&gt;
&lt;p&gt;哎，能不能专业点，我用的是个体户资质，本来就没公章，去淘宝买个萝卜章给你盖上啊？被拒后，连
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>0318 - 做朋友的需求</title>
    <link href="https://atjason.com/daily/2019-03-18.html"/>
    <id>https://atjason.com/daily/2019-03-18.html</id>
    <published>2019-03-18T14:00:00.000Z</published>
    <updated>2019-03-24T15:19:09.378Z</updated>
    
    <content type="html"><![CDATA[<p>最好的，是做自己的需求，可以 100% 知道要做什么、做成什么样子。</p>
<p>其次，是做朋友的需求，可以随时拉过来问，要做什么、做成什么样子。注意，即使如此，也要保持主动性、有自己的理解判断，不能被带着走。终究，还是要当成自己的需求去做。</p>
<p>关键词排名监控，便是后者。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最好的，是做自己的需求，可以 100% 知道要做什么、做成什么样子。&lt;/p&gt;
&lt;p&gt;其次，是做朋友的需求，可以随时拉过来问，要做什么、做成什么样子。注意，即使如此，也要保持主动性、有自己的理解判断，不能被带着走。终究，还是要当成自己的需求去做。&lt;/p&gt;
&lt;p&gt;关键词排名监控
    
    </summary>
    
      <category term="每天写一点" scheme="https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/"/>
    
    
  </entry>
  
</feed>
